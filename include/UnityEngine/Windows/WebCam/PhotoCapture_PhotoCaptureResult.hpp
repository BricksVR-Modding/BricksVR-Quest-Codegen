// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Windows.WebCam.PhotoCapture
#include "UnityEngine/Windows/WebCam/PhotoCapture.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Windows.WebCam.PhotoCapture/UnityEngine.Windows.WebCam.CaptureResultType
#include "UnityEngine/Windows/WebCam/PhotoCapture_CaptureResultType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Windows::WebCam::PhotoCapture::PhotoCaptureResult, "UnityEngine.Windows.WebCam", "PhotoCapture/PhotoCaptureResult");
// Type namespace: UnityEngine.Windows.WebCam
namespace UnityEngine::Windows::WebCam {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Windows.WebCam.PhotoCapture/UnityEngine.Windows.WebCam.PhotoCaptureResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct PhotoCapture::PhotoCaptureResult/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Windows.WebCam.PhotoCapture/UnityEngine.Windows.WebCam.CaptureResultType resultType
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::Windows::WebCam::PhotoCapture::CaptureResultType resultType;
    // Field size check
    static_assert(sizeof(::UnityEngine::Windows::WebCam::PhotoCapture::CaptureResultType) == 0x4);
    // Padding between fields: resultType and: hResult
    char __padding0[0x4] = {};
    // public System.Int64 hResult
    // Size: 0x8
    // Offset: 0x8
    int64_t hResult;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    public:
    // Creating value type constructor for type: PhotoCaptureResult
    constexpr PhotoCaptureResult(::UnityEngine::Windows::WebCam::PhotoCapture::CaptureResultType resultType_ = {}, int64_t hResult_ = {}) noexcept : resultType{resultType_}, hResult{hResult_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Windows.WebCam.PhotoCapture/UnityEngine.Windows.WebCam.CaptureResultType resultType
    [[deprecated]] ::UnityEngine::Windows::WebCam::PhotoCapture::CaptureResultType& dyn_resultType();
    // Get instance field reference: public System.Int64 hResult
    [[deprecated]] int64_t& dyn_hResult();
  }; // UnityEngine.Windows.WebCam.PhotoCapture/UnityEngine.Windows.WebCam.PhotoCaptureResult
  #pragma pack(pop)
  static check_size<sizeof(PhotoCapture::PhotoCaptureResult), 8 + sizeof(int64_t)> __UnityEngine_Windows_WebCam_PhotoCapture_PhotoCaptureResultSizeCheck;
  static_assert(sizeof(PhotoCapture::PhotoCaptureResult) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
