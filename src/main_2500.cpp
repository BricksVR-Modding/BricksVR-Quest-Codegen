// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.FieldMetadata
#include "System/Diagnostics/Tracing/FieldMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::FieldMetadata::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 nameSize
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::FieldMetadata::dyn_nameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_nameSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.EventFieldTags tags
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventFieldTags& System::Diagnostics::Tracing::FieldMetadata::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventFieldTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] custom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::Tracing::FieldMetadata::dyn_custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_custom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "custom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt16 fixedCount
[[deprecated("Use field access instead!")]] uint16_t& System::Diagnostics::Tracing::FieldMetadata::dyn_fixedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_fixedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedCount"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte inType
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::FieldMetadata::dyn_inType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_inType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte outType
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::FieldMetadata::dyn_outType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::dyn_outType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.FieldMetadata.IncrementStructFieldCount
void System::Diagnostics::Tracing::FieldMetadata::IncrementStructFieldCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::IncrementStructFieldCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementStructFieldCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.FieldMetadata.Encode
void System::Diagnostics::Tracing::FieldMetadata::Encode(ByRef<int> pos, ::ArrayW<uint8_t> metadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::FieldMetadata::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(metadata)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pos), metadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.NameInfo
#include "System/Diagnostics/Tracing/NameInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 lastIdentity
int System::Diagnostics::Tracing::NameInfo::_get_lastIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::_get_lastIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics.Tracing", "NameInfo", "lastIdentity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastIdentity
void System::Diagnostics::Tracing::NameInfo::_set_lastIdentity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::_set_lastIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "NameInfo", "lastIdentity", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::NameInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventTags tags
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTags& System::Diagnostics::Tracing::NameInfo::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 identity
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::NameInfo::dyn_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::dyn_identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Byte[] nameMetadata
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::Tracing::NameInfo::dyn_nameMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::dyn_nameMetadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameMetadata"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo..cctor
void System::Diagnostics::Tracing::NameInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "NameInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.ReserveEventIDsBelow
void System::Diagnostics::Tracing::NameInfo::ReserveEventIDsBelow(int eventId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::ReserveEventIDsBelow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "NameInfo", "ReserveEventIDsBelow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventId);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(::System::Diagnostics::Tracing::NameInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::NameInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Diagnostics::Tracing::EventTags> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::NameInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(::StringW otherName, ::System::Diagnostics::Tracing::EventTags otherTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::NameInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherName), ::il2cpp_utils::ExtractType(otherTags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, otherName, otherTags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.PropertyAnalysis
#include "System/Diagnostics/Tracing/PropertyAnalysis.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldAttribute
#include "System/Diagnostics/Tracing/EventFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::PropertyAnalysis::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::PropertyAnalysis::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Reflection.MethodInfo getterInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Diagnostics::Tracing::PropertyAnalysis::dyn_getterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::PropertyAnalysis::dyn_getterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getterInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.TraceLoggingTypeInfo typeInfo
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::TraceLoggingTypeInfo*& System::Diagnostics::Tracing::PropertyAnalysis::dyn_typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::PropertyAnalysis::dyn_typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInfo"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::TraceLoggingTypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventFieldAttribute fieldAttribute
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventFieldAttribute*& System::Diagnostics::Tracing::PropertyAnalysis::dyn_fieldAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::PropertyAnalysis::dyn_fieldAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldAttribute"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventFieldAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.BooleanTypeInfo
#include "System/Diagnostics/Tracing/BooleanTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.BooleanTypeInfo.WriteData
void System::Diagnostics::Tracing::BooleanTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::BooleanTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::BooleanTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.BooleanTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::BooleanTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::BooleanTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ByteTypeInfo
#include "System/Diagnostics/Tracing/ByteTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.ByteTypeInfo.WriteData
void System::Diagnostics::Tracing::ByteTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ByteTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ByteTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.ByteTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::ByteTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ByteTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SByteTypeInfo
#include "System/Diagnostics/Tracing/SByteTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SByteTypeInfo.WriteData
void System::Diagnostics::Tracing::SByteTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SByteTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::SByteTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.SByteTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SByteTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SByteTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int16TypeInfo
#include "System/Diagnostics/Tracing/Int16TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int16TypeInfo.WriteData
void System::Diagnostics::Tracing::Int16TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int16TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int16TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int16TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int16TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int16TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt16TypeInfo
#include "System/Diagnostics/Tracing/UInt16TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt16TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt16TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt16TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt16TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt16TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt16TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt16TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int32TypeInfo
#include "System/Diagnostics/Tracing/Int32TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int32TypeInfo.WriteData
void System::Diagnostics::Tracing::Int32TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int32TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int32TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int32TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int32TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int32TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt32TypeInfo
#include "System/Diagnostics/Tracing/UInt32TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt32TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt32TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt32TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt32TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt32TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt32TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt32TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int64TypeInfo
#include "System/Diagnostics/Tracing/Int64TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int64TypeInfo.WriteData
void System::Diagnostics::Tracing::Int64TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int64TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int64TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int64TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int64TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int64TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt64TypeInfo
#include "System/Diagnostics/Tracing/UInt64TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt64TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt64TypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt64TypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt64TypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt64TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt64TypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt64TypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.IntPtrTypeInfo
#include "System/Diagnostics/Tracing/IntPtrTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.IntPtrTypeInfo.WriteData
void System::Diagnostics::Tracing::IntPtrTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::IntPtrTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::IntPtrTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.IntPtrTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::IntPtrTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::IntPtrTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UIntPtrTypeInfo
#include "System/Diagnostics/Tracing/UIntPtrTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrTypeInfo.WriteData
void System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::UIntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UIntPtrTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.DoubleTypeInfo
#include "System/Diagnostics/Tracing/DoubleTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DoubleTypeInfo.WriteData
void System::Diagnostics::Tracing::DoubleTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DoubleTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::DoubleTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.DoubleTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DoubleTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DoubleTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SingleTypeInfo
#include "System/Diagnostics/Tracing/SingleTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SingleTypeInfo.WriteData
void System::Diagnostics::Tracing::SingleTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SingleTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::SingleTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.SingleTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SingleTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SingleTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.CharTypeInfo
#include "System/Diagnostics/Tracing/CharTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.CharTypeInfo.WriteData
void System::Diagnostics::Tracing::CharTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::CharTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::CharTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.CharTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::CharTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::CharTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.BooleanArrayTypeInfo
#include "System/Diagnostics/Tracing/BooleanArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.BooleanArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<bool>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::BooleanArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.BooleanArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ByteArrayTypeInfo
#include "System/Diagnostics/Tracing/ByteArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.ByteArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<uint8_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ByteArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.ByteArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SByteArrayTypeInfo
#include "System/Diagnostics/Tracing/SByteArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SByteArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<int8_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::SByteArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.SByteArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int16ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int16ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int16ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<int16_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int16ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int16ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt16ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt16ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt16ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<uint16_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt16ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt16ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int32ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int32ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int32ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<int>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int32ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int32ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt32ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt32ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt32ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<uint>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt32ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt32ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.Int64ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int64ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int64ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<int64_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::Int64ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.Int64ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UInt64ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt64ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt64ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<uint64_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UInt64ArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UInt64ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.IntPtrArrayTypeInfo
#include "System/Diagnostics/Tracing/IntPtrArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.IntPtrArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<::System::IntPtr>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::IntPtrArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.IntPtrArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo
#include "System/Diagnostics/Tracing/UIntPtrArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<::System::UIntPtr>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::UIntPtrArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.CharArrayTypeInfo
#include "System/Diagnostics/Tracing/CharArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.CharArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::CharArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<::Il2CppChar>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::CharArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::CharArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.CharArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::CharArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::CharArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.DoubleArrayTypeInfo
#include "System/Diagnostics/Tracing/DoubleArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DoubleArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<double>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::DoubleArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.DoubleArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SingleArrayTypeInfo
#include "System/Diagnostics/Tracing/SingleArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SingleArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<float>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::SingleArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.SingleArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.StringTypeInfo
#include "System/Diagnostics/Tracing/StringTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.WriteData
void System::Diagnostics::Tracing::StringTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::StringTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::StringTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::StringTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::StringTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.GetData
::Il2CppObject* System::Diagnostics::Tracing::StringTypeInfo::GetData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::StringTypeInfo::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.GuidTypeInfo
#include "System/Diagnostics/Tracing/GuidTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.GuidTypeInfo.WriteData
void System::Diagnostics::Tracing::GuidTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::GuidTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::GuidTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.GuidTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::GuidTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::GuidTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.GuidArrayTypeInfo
#include "System/Diagnostics/Tracing/GuidArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.GuidArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::ArrayW<::System::Guid>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::GuidArrayTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.GuidArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.DateTimeTypeInfo
#include "System/Diagnostics/Tracing/DateTimeTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DateTimeTypeInfo.WriteData
void System::Diagnostics::Tracing::DateTimeTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DateTimeTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::DateTimeTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.DateTimeTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DateTimeTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DateTimeTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo
#include "System/Diagnostics/Tracing/DateTimeOffsetTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo.WriteData
void System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::DateTimeOffsetTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TimeSpanTypeInfo
#include "System/Diagnostics/Tracing/TimeSpanTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.TimeSpanTypeInfo.WriteData
void System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TimeSpanTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.TimeSpanTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.DecimalTypeInfo
#include "System/Diagnostics/Tracing/DecimalTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DecimalTypeInfo.WriteData
void System::Diagnostics::Tracing::DecimalTypeInfo::WriteData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ByRef<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DecimalTypeInfo::WriteData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::DecimalTypeInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, byref(value));
}
// Autogenerated method: System.Diagnostics.Tracing.DecimalTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DecimalTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::DecimalTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Statics
#include "System/Diagnostics/Tracing/Statics.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo`1
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType IntPtrType
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_IntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_get_IntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "IntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType IntPtrType
void System::Diagnostics::Tracing::Statics::_set_IntPtrType(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_set_IntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "IntPtrType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType UIntPtrType
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_UIntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_get_UIntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "UIntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType UIntPtrType
void System::Diagnostics::Tracing::Statics::_set_UIntPtrType(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_set_UIntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "UIntPtrType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType HexIntPtrType
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_HexIntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_get_HexIntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "HexIntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType HexIntPtrType
void System::Diagnostics::Tracing::Statics::_set_HexIntPtrType(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::_set_HexIntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "HexIntPtrType", value));
}
// Autogenerated method: System.Diagnostics.Tracing.Statics..cctor
void System::Diagnostics::Tracing::Statics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.MetadataForString
::ArrayW<uint8_t> System::Diagnostics::Tracing::Statics::MetadataForString(::StringW name, int prefixSize, int suffixSize, int additionalSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::MetadataForString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "MetadataForString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(prefixSize), ::il2cpp_utils::ExtractType(suffixSize), ::il2cpp_utils::ExtractType(additionalSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, prefixSize, suffixSize, additionalSize);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.EncodeTags
void System::Diagnostics::Tracing::Statics::EncodeTags(int tags, ByRef<int> pos, ::ArrayW<uint8_t> metadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::EncodeTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "EncodeTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tags), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(metadata)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tags, byref(pos), metadata);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Combine
uint8_t System::Diagnostics::Tracing::Statics::Combine(int settingValue, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingValue), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settingValue, defaultValue);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Combine
int System::Diagnostics::Tracing::Statics::Combine(int settingValue1, int settingValue2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingValue1), ::il2cpp_utils::ExtractType(settingValue2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settingValue1, settingValue2);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CheckName
void System::Diagnostics::Tracing::Statics::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.ShouldOverrideFieldName
bool System::Diagnostics::Tracing::Statics::ShouldOverrideFieldName(::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::ShouldOverrideFieldName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "ShouldOverrideFieldName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldName);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.MakeDataType
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::MakeDataType(::System::Diagnostics::Tracing::TraceLoggingDataType baseType, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::MakeDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "MakeDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseType, format);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format8(::System::Diagnostics::Tracing::EventFieldFormat format, ::System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Format8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(native)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format16
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format16(::System::Diagnostics::Tracing::EventFieldFormat format, ::System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Format16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(native)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format32
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format32(::System::Diagnostics::Tracing::EventFieldFormat format, ::System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Format32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(native)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format64
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format64(::System::Diagnostics::Tracing::EventFieldFormat format, ::System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::Format64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(native)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.FormatPtr
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::FormatPtr(::System::Diagnostics::Tracing::EventFieldFormat format, ::System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::FormatPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "FormatPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(native)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CreateInstance
::Il2CppObject* System::Diagnostics::Tracing::Statics::CreateInstance(::System::Type* type, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, parameters);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsValueType
bool System::Diagnostics::Tracing::Statics::IsValueType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::IsValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsEnum
bool System::Diagnostics::Tracing::Statics::IsEnum(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::IsEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetProperties
::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>* System::Diagnostics::Tracing::Statics::GetProperties(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetGetMethod
::System::Reflection::MethodInfo* System::Diagnostics::Tracing::Statics::GetGetMethod(::System::Reflection::PropertyInfo* propInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::GetGetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propInfo);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetDeclaredStaticMethod
::System::Reflection::MethodInfo* System::Diagnostics::Tracing::Statics::GetDeclaredStaticMethod(::System::Type* declaringType, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::GetDeclaredStaticMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetDeclaredStaticMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(declaringType), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, declaringType, name);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.HasCustomAttribute
bool System::Diagnostics::Tracing::Statics::HasCustomAttribute(::System::Reflection::PropertyInfo* propInfo, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::HasCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "HasCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propInfo), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propInfo, attributeType);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetGenericArguments
::ArrayW<::System::Type*> System::Diagnostics::Tracing::Statics::GetGenericArguments(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::GetGenericArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.FindEnumerableElementType
::System::Type* System::Diagnostics::Tracing::Statics::FindEnumerableElementType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::FindEnumerableElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "FindEnumerableElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsGenericMatch
bool System::Diagnostics::Tracing::Statics::IsGenericMatch(::System::Type* type, ::Il2CppObject* openType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::IsGenericMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsGenericMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(openType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, openType);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CreateDelegate
::System::Delegate* System::Diagnostics::Tracing::Statics::CreateDelegate(::System::Type* delegateType, ::System::Reflection::MethodInfo* methodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(methodInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, methodInfo);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetTypeInfoInstance
::System::Diagnostics::Tracing::TraceLoggingTypeInfo* System::Diagnostics::Tracing::Statics::GetTypeInfoInstance(::System::Type* dataType, ::System::Collections::Generic::List_1<::System::Type*>* recursionCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::Statics::GetTypeInfoInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetTypeInfoInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(recursionCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataType, recursionCheck);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
::System::Diagnostics::Tracing::TraceLoggingDataCollector* System::Diagnostics::Tracing::TraceLoggingDataCollector::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataCollector*>("System.Diagnostics.Tracing", "TraceLoggingDataCollector", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
void System::Diagnostics::Tracing::TraceLoggingDataCollector::_set_Instance(::System::Diagnostics::Tracing::TraceLoggingDataCollector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataCollector", "Instance", value));
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector..cctor
void System::Diagnostics::Tracing::TraceLoggingDataCollector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "TraceLoggingDataCollector", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.BeginBufferedArray
int System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginBufferedArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.EndBufferedArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray(int bookmark, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBufferedArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bookmark), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bookmark, count);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(::System::UIntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddBinary
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddBinary
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<::System::UIntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingDataType
#include "System/Diagnostics/Tracing/TraceLoggingDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Nil
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Nil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Nil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Nil"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Nil
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Nil(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Nil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Nil", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16String
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16String"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16String
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16String(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsString
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsString
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsString(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int8(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt8(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int16
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int16(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt16
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt16(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int32
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int32(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt32
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt32(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int64
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int64(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt64
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt64(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Float
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Float
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Float(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Double
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Double
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Double(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean32
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean32(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Binary
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Binary
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Binary(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Guid
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Guid
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Guid(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType FileTime
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_FileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_FileTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "FileTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType FileTime
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_FileTime(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_FileTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "FileTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType SystemTime
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_SystemTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_SystemTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "SystemTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType SystemTime
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_SystemTime(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_SystemTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "SystemTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt32
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt32(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt64
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt64(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16String
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16String"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16String
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16String(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsString
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsString
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsString(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Struct
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Struct
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Struct(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char16
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char16(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char8(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean8(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt8
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt8(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt16
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt16(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Xml
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Xml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Xml(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsXml
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsXml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsXml(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Xml
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Xml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Xml(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsXml
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsXml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsXml(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Json
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Json");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Json"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Json
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Json(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Json");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Json", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsJson
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsJson"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsJson
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsJson(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsJson", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Json
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Json");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Json"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Json
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Json(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Json");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Json", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsJson
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsJson"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsJson
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsJson(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsJson", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HResult
::System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_get_HResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HResult"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HResult
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HResult(::System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::_set_HResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HResult", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes
#include "System/Diagnostics/Tracing/EventSource_Sha1ForNonSecretPurposes.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.OverideEventProvider
#include "System/Diagnostics/Tracing/EventSource_OverideEventProvider.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Diagnostics.Tracing.EventCommandEventArgs
#include "System/Diagnostics/Tracing/EventCommandEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventDispatcher
#include "System/Diagnostics/Tracing/EventDispatcher.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Diagnostics.Tracing.EtwSession
#include "System/Diagnostics/Tracing/EtwSession.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.ActivityTracker
#include "System/Diagnostics/Tracing/ActivityTracker.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingEventTypes
#include "System/Diagnostics/Tracing/TraceLoggingEventTypes.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
// Including type: System.Diagnostics.Tracing.NameInfo
#include "System/Diagnostics/Tracing/NameInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventChannel
#include "System/Diagnostics/Tracing/EventChannel.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Diagnostics.Tracing.EventListener
#include "System/Diagnostics/Tracing/EventListener.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Diagnostics.Tracing.EventManifestOptions
#include "System/Diagnostics/Tracing/EventManifestOptions.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventWrittenEventArgs
#include "System/Diagnostics/Tracing/EventWrittenEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventOpcode
#include "System/Diagnostics/Tracing/EventOpcode.hpp"
// Including type: System.Diagnostics.Tracing.EventCommand
#include "System/Diagnostics/Tracing/EventCommand.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Diagnostics.Tracing.ManifestBuilder
#include "System/Diagnostics/Tracing/ManifestBuilder.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventAttribute
#include "System/Diagnostics/Tracing/EventAttribute.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.UInt32 s_currentPid
uint System::Diagnostics::Tracing::EventSource::_get_s_currentPid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_s_currentPid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Diagnostics.Tracing", "EventSource", "s_currentPid"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 s_currentPid
void System::Diagnostics::Tracing::EventSource::_set_s_currentPid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_s_currentPid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "s_currentPid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static System.Action`1<System.Guid> s_activityDying
::System::Action_1<::System::Guid>* System::Diagnostics::Tracing::EventSource::_get_s_activityDying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_s_activityDying");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Guid>*>("System.Diagnostics.Tracing", "EventSource", "s_activityDying"));
}
// Autogenerated static field setter
// Set static field: static System.Action`1<System.Guid> s_activityDying
void System::Diagnostics::Tracing::EventSource::_set_s_activityDying(::System::Action_1<::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_s_activityDying");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "s_activityDying", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::ArrayW<uint8_t> System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
::System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] providerMetadata
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::Tracing::EventSource::dyn_providerMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_providerMetadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "providerMetadata"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSource::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_id
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::dyn_m_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid m_guid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::EventSource::dyn_m_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_guid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventMetadata[] m_eventData
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::Tracing::EventSource::EventMetadata>& System::Diagnostics::Tracing::EventSource::dyn_m_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_eventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventData"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::Tracing::EventSource::EventMetadata>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_rawManifest
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::Tracing::EventSource::dyn_m_rawManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_rawManifest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rawManifest"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.Diagnostics.Tracing.EventCommandEventArgs> m_eventCommandExecuted
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::Diagnostics::Tracing::EventCommandEventArgs*>*& System::Diagnostics::Tracing::EventSource::dyn_m_eventCommandExecuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_eventCommandExecuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventCommandExecuted"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::Diagnostics::Tracing::EventCommandEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventSourceSettings m_config
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSourceSettings& System::Diagnostics::Tracing::EventSource::dyn_m_config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_config"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSourceSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_eventSourceEnabled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventSource::dyn_m_eventSourceEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_eventSourceEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSourceEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventLevel m_level
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::EventSource::dyn_m_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_level"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventKeywords m_matchAnyKeyword
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::EventSource::dyn_m_matchAnyKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_matchAnyKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchAnyKeyword"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventDispatcher m_Dispatchers
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventDispatcher*& System::Diagnostics::Tracing::EventSource::dyn_m_Dispatchers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_Dispatchers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dispatchers"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.OverideEventProvider m_provider
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSource::OverideEventProvider*& System::Diagnostics::Tracing::EventSource::dyn_m_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_provider"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSource::OverideEventProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_completelyInited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventSource::dyn_m_completelyInited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_completelyInited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completelyInited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception m_constructionException
[[deprecated("Use field access instead!")]] ::System::Exception*& System::Diagnostics::Tracing::EventSource::dyn_m_constructionException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_constructionException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_constructionException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_outOfBandMessageCount
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventSource::dyn_m_outOfBandMessageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_outOfBandMessageCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outOfBandMessageCount"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventCommandEventArgs m_deferredCommands
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventCommandEventArgs*& System::Diagnostics::Tracing::EventSource::dyn_m_deferredCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_deferredCommands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deferredCommands"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventCommandEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_traits
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Diagnostics::Tracing::EventSource::dyn_m_traits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_traits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_traits"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.SessionMask m_curLiveSessions
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::SessionMask& System::Diagnostics::Tracing::EventSource::dyn_m_curLiveSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_curLiveSessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_curLiveSessions"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::SessionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EtwSession[] m_etwSessionIdMap
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::Tracing::EtwSession*>& System::Diagnostics::Tracing::EventSource::dyn_m_etwSessionIdMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_etwSessionIdMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_etwSessionIdMap"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::Tracing::EtwSession*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Diagnostics.Tracing.EtwSession> m_legacySessions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EtwSession*>*& System::Diagnostics::Tracing::EventSource::dyn_m_legacySessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_legacySessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_legacySessions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EtwSession*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 m_keywordTriggers
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventSource::dyn_m_keywordTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_keywordTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keywordTriggers"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.SessionMask m_activityFilteringForETWEnabled
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::SessionMask& System::Diagnostics::Tracing::EventSource::dyn_m_activityFilteringForETWEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_activityFilteringForETWEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityFilteringForETWEnabled"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::SessionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.ActivityTracker m_activityTracker
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityTracker*& System::Diagnostics::Tracing::EventSource::dyn_m_activityTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_m_activityTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityTracker"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityTracker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_Name
::StringW System::Diagnostics::Tracing::EventSource::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_Guid
::System::Guid System::Diagnostics::Tracing::EventSource::get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_Guid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Guid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_CurrentThreadActivityId
::System::Guid System::Diagnostics::Tracing::EventSource::get_CurrentThreadActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_CurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_CurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_InternalCurrentThreadActivityId
::System::Guid System::Diagnostics::Tracing::EventSource::get_InternalCurrentThreadActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_InternalCurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_InternalCurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_FallbackActivityId
::System::Guid System::Diagnostics::Tracing::EventSource::get_FallbackActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_FallbackActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_FallbackActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_IsDisposed
bool System::Diagnostics::Tracing::EventSource::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_ThrowOnEventWriteErrors
bool System::Diagnostics::Tracing::EventSource::get_ThrowOnEventWriteErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_ThrowOnEventWriteErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThrowOnEventWriteErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_SelfDescribingEvents
bool System::Diagnostics::Tracing::EventSource::get_SelfDescribingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::get_SelfDescribingEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelfDescribingEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMerge
void System::Diagnostics::Tracing::EventSource::WriteMultiMerge(::StringW eventName, ByRef<::System::Diagnostics::Tracing::EventSourceOptions> options, ::System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, ::System::Guid* activityID, ::System::Guid* childActivityID, ::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteMultiMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMultiMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(eventTypes), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, byref(options), eventTypes, activityID, childActivityID, values);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMergeInner
void System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner(::StringW eventName, ByRef<::System::Diagnostics::Tracing::EventSourceOptions> options, ::System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, ::System::Guid* activityID, ::System::Guid* childActivityID, ::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMultiMergeInner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(eventTypes), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, byref(options), eventTypes, activityID, childActivityID, values);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMerge
void System::Diagnostics::Tracing::EventSource::WriteMultiMerge(::StringW eventName, ByRef<::System::Diagnostics::Tracing::EventSourceOptions> options, ::System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, ::System::Guid* activityID, ::System::Guid* childActivityID, ::System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteMultiMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMultiMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(eventTypes), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, byref(options), eventTypes, activityID, childActivityID, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteCleanup
void System::Diagnostics::Tracing::EventSource::WriteCleanup(::System::Runtime::InteropServices::GCHandle* pPins, int cPins) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pPins), ::il2cpp_utils::ExtractType(cPins)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pPins, cPins);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.InitializeProviderMetadata
void System::Diagnostics::Tracing::EventSource::InitializeProviderMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::InitializeProviderMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeProviderMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddValueToMetaData
int System::Diagnostics::Tracing::EventSource::AddValueToMetaData(::System::Collections::Generic::List_1<uint8_t>* metaData, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AddValueToMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddValueToMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metaData), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, metaData, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.HexDigit
int System::Diagnostics::Tracing::EventSource::HexDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::HexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "HexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateDescriptor
::System::Diagnostics::Tracing::NameInfo* System::Diagnostics::Tracing::EventSource::UpdateDescriptor(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingEventTypes* eventInfo, ByRef<::System::Diagnostics::Tracing::EventSourceOptions> options, ByRef<::System::Diagnostics::Tracing::EventDescriptor> descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::UpdateDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(eventInfo), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::Diagnostics::Tracing::EventDescriptor&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::NameInfo*, false>(this, ___internal__method, name, eventInfo, byref(options), byref(descriptor));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled(::System::Diagnostics::Tracing::EventLevel level, ::System::Diagnostics::Tracing::EventKeywords keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(keywords)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled(::System::Diagnostics::Tracing::EventLevel level, ::System::Diagnostics::Tracing::EventKeywords keywords, ::System::Diagnostics::Tracing::EventChannel channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(keywords), ::il2cpp_utils::ExtractType(channel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, keywords, channel);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetGuid
::System::Guid System::Diagnostics::Tracing::EventSource::GetGuid(::System::Type* eventSourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventSourceType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetName
::StringW System::Diagnostics::Tracing::EventSource::GetName(::System::Type* eventSourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventSourceType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId
void System::Diagnostics::Tracing::EventSource::SetCurrentThreadActivityId(::System::Guid activityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::SetCurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "SetCurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, activityId);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.OnEventCommand
void System::Diagnostics::Tracing::EventSource::OnEventCommand(::System::Diagnostics::Tracing::EventCommandEventArgs* command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::OnEventCommand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventCore
void System::Diagnostics::Tracing::EventSource::WriteEventCore(int eventId, int eventDataCount, ::System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(eventDataCount), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore
void System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityIdCore(int eventId, ::System::Guid* relatedActivityId, int eventDataCount, ::System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityIdCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventWithRelatedActivityIdCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(relatedActivityId), ::il2cpp_utils::ExtractType(eventDataCount), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, relatedActivityId, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventSource*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventSource*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteStringToListener
void System::Diagnostics::Tracing::EventSource::WriteStringToListener(::System::Diagnostics::Tracing::EventListener* listener, ::StringW msg, ::System::Diagnostics::Tracing::SessionMask m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteStringToListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStringToListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener, msg, m);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventRaw
void System::Diagnostics::Tracing::EventSource::WriteEventRaw(::StringW eventName, ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ::System::Guid* activityID, ::System::Guid* relatedActivityID, int dataCount, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(eventDescriptor), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(relatedActivityID), ::il2cpp_utils::ExtractType(dataCount), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, byref(eventDescriptor), activityID, relatedActivityID, dataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Initialize
void System::Diagnostics::Tracing::EventSource::Initialize(::System::Guid eventSourceGuid, ::StringW eventSourceName, ::ArrayW<::StringW> traits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceGuid), ::il2cpp_utils::ExtractType(eventSourceName), ::il2cpp_utils::ExtractType(traits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventSourceGuid, eventSourceName, traits);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetName
::StringW System::Diagnostics::Tracing::EventSource::GetName(::System::Type* eventSourceType, ::System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceType), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventSourceType, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GenerateGuidFromName
::System::Guid System::Diagnostics::Tracing::EventSource::GenerateGuidFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GenerateGuidFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GenerateGuidFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DecodeObject
::Il2CppObject* System::Diagnostics::Tracing::EventSource::DecodeObject(int eventId, int parameterId, ByRef<::System::Diagnostics::Tracing::EventSource::EventData*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::DecodeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(parameterId), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, eventId, parameterId, byref(data));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetDispatcher
::System::Diagnostics::Tracing::EventDispatcher* System::Diagnostics::Tracing::EventSource::GetDispatcher(::System::Diagnostics::Tracing::EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventDispatcher*, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventVarargs
void System::Diagnostics::Tracing::EventSource::WriteEventVarargs(int eventId, ::System::Guid* childActivityID, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventVarargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventVarargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, childActivityID, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SerializeEventArgs
::ArrayW<::Il2CppObject*> System::Diagnostics::Tracing::EventSource::SerializeEventArgs(int eventId, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::SerializeEventArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeEventArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, eventId, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.LogEventArgsMismatches
void System::Diagnostics::Tracing::EventSource::LogEventArgsMismatches(::ArrayW<::System::Reflection::ParameterInfo*> infos, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::LogEventArgsMismatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEventArgsMismatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infos), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infos, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetParamLengthIncludingByteArray
int System::Diagnostics::Tracing::EventSource::GetParamLengthIncludingByteArray(::ArrayW<::System::Reflection::ParameterInfo*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetParamLengthIncludingByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParamLengthIncludingByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteToAllListeners(int eventId, ::System::Guid* childActivityID, int eventDataCount, ::System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteToAllListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToAllListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(eventDataCount), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, childActivityID, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteToAllListeners(int eventId, ::System::Guid* childActivityID, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteToAllListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToAllListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, childActivityID, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DispatchToAllListeners
void System::Diagnostics::Tracing::EventSource::DispatchToAllListeners(int eventId, ::System::Guid* childActivityID, ::System::Diagnostics::Tracing::EventWrittenEventArgs* eventCallbackArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::DispatchToAllListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchToAllListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(eventCallbackArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, childActivityID, eventCallbackArgs);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventString
void System::Diagnostics::Tracing::EventSource::WriteEventString(::System::Diagnostics::Tracing::EventLevel level, int64_t keywords, ::StringW msgString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(keywords), ::il2cpp_utils::ExtractType(msgString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, keywords, msgString);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteStringToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteStringToAllListeners(::StringW eventName, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteStringToAllListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStringToAllListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, msg);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetEtwSessionMask
::System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::EventSource::GetEtwSessionMask(int eventId, ::System::Guid* childActivityID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetEtwSessionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEtwSessionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(childActivityID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::SessionMask, false>(this, ___internal__method, eventId, childActivityID);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabledByDefault
bool System::Diagnostics::Tracing::EventSource::IsEnabledByDefault(int eventNum, bool enable, ::System::Diagnostics::Tracing::EventLevel currentLevel, ::System::Diagnostics::Tracing::EventKeywords currentMatchAnyKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabledByDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabledByDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventNum), ::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(currentLevel), ::il2cpp_utils::ExtractType(currentMatchAnyKeyword)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventNum, enable, currentLevel, currentMatchAnyKeyword);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabledCommon
bool System::Diagnostics::Tracing::EventSource::IsEnabledCommon(bool enabled, ::System::Diagnostics::Tracing::EventLevel currentLevel, ::System::Diagnostics::Tracing::EventKeywords currentMatchAnyKeyword, ::System::Diagnostics::Tracing::EventLevel eventLevel, ::System::Diagnostics::Tracing::EventKeywords eventKeywords, ::System::Diagnostics::Tracing::EventChannel eventChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabledCommon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabledCommon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled), ::il2cpp_utils::ExtractType(currentLevel), ::il2cpp_utils::ExtractType(currentMatchAnyKeyword), ::il2cpp_utils::ExtractType(eventLevel), ::il2cpp_utils::ExtractType(eventKeywords), ::il2cpp_utils::ExtractType(eventChannel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enabled, currentLevel, currentMatchAnyKeyword, eventLevel, eventKeywords, eventChannel);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ThrowEventSourceException
void System::Diagnostics::Tracing::EventSource::ThrowEventSourceException(::StringW eventName, ::System::Exception* innerEx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ThrowEventSourceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowEventSourceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(innerEx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName, innerEx);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ValidateEventOpcodeForTransfer
void System::Diagnostics::Tracing::EventSource::ValidateEventOpcodeForTransfer(ByRef<::System::Diagnostics::Tracing::EventSource::EventMetadata> eventData, ::StringW eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ValidateEventOpcodeForTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEventOpcodeForTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(eventName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(eventData), eventName);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetOpcodeWithDefault
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventSource::GetOpcodeWithDefault(::System::Diagnostics::Tracing::EventOpcode opcode, ::StringW eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetOpcodeWithDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetOpcodeWithDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(eventName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventOpcode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opcode, eventName);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SendCommand
void System::Diagnostics::Tracing::EventSource::SendCommand(::System::Diagnostics::Tracing::EventListener* listener, int perEventSourceSessionId, int etwSessionId, ::System::Diagnostics::Tracing::EventCommand command, bool enable, ::System::Diagnostics::Tracing::EventLevel level, ::System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* commandArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::SendCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(perEventSourceSessionId), ::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(matchAnyKeyword), ::il2cpp_utils::ExtractType(commandArguments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener, perEventSourceSessionId, etwSessionId, command, enable, level, matchAnyKeyword, commandArguments);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DoCommand
void System::Diagnostics::Tracing::EventSource::DoCommand(::System::Diagnostics::Tracing::EventCommandEventArgs* commandArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::DoCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, commandArgs);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateEtwSession
void System::Diagnostics::Tracing::EventSource::UpdateEtwSession(int sessionIdBit, int etwSessionId, bool bEnable, ::StringW activityFilters, bool participateInSampling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::UpdateEtwSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEtwSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionIdBit), ::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(bEnable), ::il2cpp_utils::ExtractType(activityFilters), ::il2cpp_utils::ExtractType(participateInSampling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionIdBit, etwSessionId, bEnable, activityFilters, participateInSampling);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ParseCommandArgs
bool System::Diagnostics::Tracing::EventSource::ParseCommandArgs(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* commandArguments, ByRef<bool> participateInSampling, ByRef<::StringW> activityFilters, ByRef<int> sessionIdBit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ParseCommandArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "ParseCommandArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandArguments), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, commandArguments, byref(participateInSampling), byref(activityFilters), byref(sessionIdBit));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateKwdTriggers
void System::Diagnostics::Tracing::EventSource::UpdateKwdTriggers(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::UpdateKwdTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKwdTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.EnableEventForDispatcher
bool System::Diagnostics::Tracing::EventSource::EnableEventForDispatcher(::System::Diagnostics::Tracing::EventDispatcher* dispatcher, int eventId, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EnableEventForDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEventForDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dispatcher), ::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dispatcher, eventId, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AnyEventEnabled
bool System::Diagnostics::Tracing::EventSource::AnyEventEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AnyEventEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyEventEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.EnsureDescriptorsInitialized
void System::Diagnostics::Tracing::EventSource::EnsureDescriptorsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EnsureDescriptorsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDescriptorsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SendManifest
bool System::Diagnostics::Tracing::EventSource::SendManifest(::ArrayW<uint8_t> rawManifest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::SendManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawManifest)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rawManifest);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetCustomAttributeHelper
::System::Attribute* System::Diagnostics::Tracing::EventSource::GetCustomAttributeHelper(::System::Reflection::MemberInfo* member, ::System::Type* attributeType, ::System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetCustomAttributeHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetCustomAttributeHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, attributeType, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AttributeTypeNamesMatch
bool System::Diagnostics::Tracing::EventSource::AttributeTypeNamesMatch(::System::Type* attributeType, ::System::Type* reflectedAttributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AttributeTypeNamesMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AttributeTypeNamesMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(reflectedAttributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeType, reflectedAttributeType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetEventSourceBaseType
::System::Type* System::Diagnostics::Tracing::EventSource::GetEventSourceBaseType(::System::Type* eventSourceType, bool allowEventSourceOverride, bool reflectionOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetEventSourceBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetEventSourceBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceType), ::il2cpp_utils::ExtractType(allowEventSourceOverride), ::il2cpp_utils::ExtractType(reflectionOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventSourceType, allowEventSourceOverride, reflectionOnly);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.CreateManifestAndDescriptors
::ArrayW<uint8_t> System::Diagnostics::Tracing::EventSource::CreateManifestAndDescriptors(::System::Type* eventSourceType, ::StringW eventSourceDllName, ::System::Diagnostics::Tracing::EventSource* source, ::System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::CreateManifestAndDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "CreateManifestAndDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventSourceType), ::il2cpp_utils::ExtractType(eventSourceDllName), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventSourceType, eventSourceDllName, source, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.RemoveFirstArgIfRelatedActivityId
bool System::Diagnostics::Tracing::EventSource::RemoveFirstArgIfRelatedActivityId(ByRef<::ArrayW<::System::Reflection::ParameterInfo*>> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::RemoveFirstArgIfRelatedActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "RemoveFirstArgIfRelatedActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(args));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddProviderEnumKind
void System::Diagnostics::Tracing::EventSource::AddProviderEnumKind(::System::Diagnostics::Tracing::ManifestBuilder* manifest, ::System::Reflection::FieldInfo* staticField, ::StringW providerEnumKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AddProviderEnumKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddProviderEnumKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manifest), ::il2cpp_utils::ExtractType(staticField), ::il2cpp_utils::ExtractType(providerEnumKind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manifest, staticField, providerEnumKind);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddEventDescriptor
void System::Diagnostics::Tracing::EventSource::AddEventDescriptor(ByRef<::ArrayW<::System::Diagnostics::Tracing::EventSource::EventMetadata>> eventData, ::StringW eventName, ::System::Diagnostics::Tracing::EventAttribute* eventAttribute, ::ArrayW<::System::Reflection::ParameterInfo*> eventParameters, bool hasRelatedActivityID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AddEventDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddEventDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(eventAttribute), ::il2cpp_utils::ExtractType(eventParameters), ::il2cpp_utils::ExtractType(hasRelatedActivityID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventData), eventName, eventAttribute, eventParameters, hasRelatedActivityID);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.TrimEventDescriptors
void System::Diagnostics::Tracing::EventSource::TrimEventDescriptors(ByRef<::ArrayW<::System::Diagnostics::Tracing::EventSource::EventMetadata>> eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::TrimEventDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "TrimEventDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventData));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddListener
void System::Diagnostics::Tracing::EventSource::AddListener(::System::Diagnostics::Tracing::EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DebugCheckEvent
void System::Diagnostics::Tracing::EventSource::DebugCheckEvent(ByRef<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*> eventsByName, ::ArrayW<::System::Diagnostics::Tracing::EventSource::EventMetadata> eventData, ::System::Reflection::MethodInfo* method, ::System::Diagnostics::Tracing::EventAttribute* eventAttribute, ::System::Diagnostics::Tracing::ManifestBuilder* manifest, ::System::Diagnostics::Tracing::EventManifestOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::DebugCheckEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "DebugCheckEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventsByName), ::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(eventAttribute), ::il2cpp_utils::ExtractType(manifest), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventsByName), eventData, method, eventAttribute, manifest, options);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetHelperCallFirstArg
int System::Diagnostics::Tracing::EventSource::GetHelperCallFirstArg(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::GetHelperCallFirstArg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetHelperCallFirstArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ReportOutOfBandMessage
void System::Diagnostics::Tracing::EventSource::ReportOutOfBandMessage(::StringW msg, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ReportOutOfBandMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportOutOfBandMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(flush)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg, flush);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ValidateSettings
::System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSource::ValidateSettings(::System::Diagnostics::Tracing::EventSourceSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ValidateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventSourceSettings, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ReportActivitySamplingInfo
void System::Diagnostics::Tracing::EventSource::ReportActivitySamplingInfo(::System::Diagnostics::Tracing::EventListener* listener, ::System::Diagnostics::Tracing::SessionMask sessions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ReportActivitySamplingInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportActivitySamplingInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(sessions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener, sessions);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::StringW System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 m_Ptr
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Size
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Reserved
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_m_Reserved");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Reserved"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData.get_DataPointer
::System::IntPtr System::Diagnostics::Tracing::EventSource::EventData::get_DataPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::get_DataPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DataPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData.set_DataPointer
void System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_DataPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData.set_Size
void System::Diagnostics::Tracing::EventSource::EventData::set_Size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::set_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.EventData.SetMetadata
void System::Diagnostics::Tracing::EventSource::EventData::SetMetadata(uint8_t* pointer, int size, int reserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::SetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(reserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, size, reserved);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes
#include "System/Diagnostics/Tracing/EventSource_Sha1ForNonSecretPurposes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 length
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] w
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::dyn_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Start
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Append
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Append
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append(::ArrayW<uint8_t> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Finish
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Finish(::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Drain
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Drain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Drain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Drain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Rol1
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol1(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Rol5
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol5(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.Sha1ForNonSecretPurposes.Rol30
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol30(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol30");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol30", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.OverideEventProvider
#include "System/Diagnostics/Tracing/EventSource_OverideEventProvider.hpp"
// Including type: System.Diagnostics.Tracing.ControllerCommand
#include "System/Diagnostics/Tracing/ControllerCommand.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventSource m_eventSource
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSource*& System::Diagnostics::Tracing::EventSource::OverideEventProvider::dyn_m_eventSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::OverideEventProvider::dyn_m_eventSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSource"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/System.Diagnostics.Tracing.OverideEventProvider.OnControllerCommand
void System::Diagnostics::Tracing::EventSource::OverideEventProvider::OnControllerCommand(::System::Diagnostics::Tracing::ControllerCommand command, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* arguments, int perEventSourceSessionId, int etwSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::OverideEventProvider::OnControllerCommand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command, arguments, perEventSourceSessionId, etwSessionId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventTags
#include "System/Diagnostics/Tracing/EventTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventTags None
::System::Diagnostics::Tracing::EventTags System::Diagnostics::Tracing::EventTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventTags>("System.Diagnostics.Tracing", "EventTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventTags None
void System::Diagnostics::Tracing::EventTags::_set_None(::System::Diagnostics::Tracing::EventTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventTags", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventTags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingEventTypes
#include "System/Diagnostics/Tracing/TraceLoggingEventTypes.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.NameInfo
#include "System/Diagnostics/Tracing/NameInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.TraceLoggingTypeInfo[] typeInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*>& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_typeInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_typeInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventTags tags
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTags& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Byte level
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Byte opcode
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opcode"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventKeywords keywords
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keywords"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Byte[] typeMetadata
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_typeMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_typeMetadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeMetadata"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 scratchSize
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_scratchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_scratchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scratchSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 dataCount
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_dataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_dataCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 pinCount
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_pinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_pinCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pinCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.ConcurrentSet`2<System.Collections.Generic.KeyValuePair`2<System.String,System.Diagnostics.Tracing.EventTags>,System.Diagnostics.Tracing.NameInfo> nameInfos
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ConcurrentSet_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Diagnostics::Tracing::EventTags>, ::System::Diagnostics::Tracing::NameInfo*>& System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_nameInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::dyn_nameInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameInfos"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ConcurrentSet_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Diagnostics::Tracing::EventTags>, ::System::Diagnostics::Tracing::NameInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingEventTypes.get_Name
::StringW System::Diagnostics::Tracing::TraceLoggingEventTypes::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingEventTypes.get_Tags
::System::Diagnostics::Tracing::EventTags System::Diagnostics::Tracing::TraceLoggingEventTypes::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::get_Tags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventTags, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingEventTypes.GetNameInfo
::System::Diagnostics::Tracing::NameInfo* System::Diagnostics::Tracing::TraceLoggingEventTypes::GetNameInfo(::StringW name, ::System::Diagnostics::Tracing::EventTags tags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::GetNameInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::NameInfo*, false>(this, ___internal__method, name, tags);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingEventTypes.MakeArray
::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*> System::Diagnostics::Tracing::TraceLoggingEventTypes::MakeArray(::ArrayW<::System::Reflection::ParameterInfo*> paramInfos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::MakeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramInfos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*>, false>(this, ___internal__method, paramInfos);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingEventTypes.MakeArray
::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*> System::Diagnostics::Tracing::TraceLoggingEventTypes::MakeArray(::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingEventTypes::MakeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "TraceLoggingEventTypes", "MakeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::Tracing::TraceLoggingTypeInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector_Impl.hpp"
// Including type: System.Diagnostics.Tracing.FieldMetadata
#include "System/Diagnostics/Tracing/FieldMetadata.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataType
#include "System/Diagnostics/Tracing/TraceLoggingDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl impl
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl*& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.FieldMetadata currentGroup
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::FieldMetadata*& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_currentGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_currentGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGroup"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::FieldMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferedArrayFieldCount
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_bufferedArrayFieldCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_bufferedArrayFieldCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferedArrayFieldCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventFieldTags <Tags>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventFieldTags& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_$Tags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::dyn_$Tags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tags>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventFieldTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.get_Tags
::System::Diagnostics::Tracing::EventFieldTags System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_Tags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventFieldTags, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.set_Tags
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::set_Tags(::System::Diagnostics::Tracing::EventFieldTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::set_Tags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.get_ScratchSize
int System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_ScratchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_ScratchSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScratchSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.get_DataCount
int System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_DataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_DataCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.get_PinCount
int System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_PinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_PinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.get_BeginningBufferedArray
bool System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_BeginningBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_BeginningBufferedArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BeginningBufferedArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.AddGroup
::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::TraceLoggingMetadataCollector*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddScalar(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.AddBinary
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddBinary(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddArray(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.BeginBufferedArray
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::BeginBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::BeginBufferedArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginBufferedArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.EndBufferedArray
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::EndBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::EndBufferedArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBufferedArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.GetMetadata
::ArrayW<uint8_t> System::Diagnostics::Tracing::TraceLoggingMetadataCollector::GetMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector.AddField
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddField(::System::Diagnostics::Tracing::FieldMetadata* fieldMetadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldMetadata)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldMetadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector_Impl.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.FieldMetadata
#include "System/Diagnostics/Tracing/FieldMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.List`1<System.Diagnostics.Tracing.FieldMetadata> fields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::FieldMetadata*>*& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::FieldMetadata*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16 scratchSize
[[deprecated("Use field access instead!")]] int16_t& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_scratchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_scratchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scratchSize"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte dataCount
[[deprecated("Use field access instead!")]] int8_t& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_dataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_dataCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataCount"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte pinCount
[[deprecated("Use field access instead!")]] int8_t& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_pinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_pinCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pinCount"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferNesting
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_bufferNesting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_bufferNesting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferNesting"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean scalar
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_scalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::dyn_scalar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scalar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl.AddScalar
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::AddScalar(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::AddScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl.AddNonscalar
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::AddNonscalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::AddNonscalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNonscalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl.BeginBuffered
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::BeginBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::BeginBuffered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginBuffered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl.EndBuffered
void System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::EndBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::EndBuffered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBuffered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl.Encode
int System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::Encode(::ArrayW<uint8_t> metadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metadata)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, metadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.EventKeywords keywords
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keywords"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.EventLevel level
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.EventOpcode opcode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventOpcode& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opcode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventOpcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Tracing.EventTags tags
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTags& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type dataType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_Name
::StringW System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_Level
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_Opcode
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Opcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventOpcode, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_Keywords
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventKeywords, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_Tags
::System::Diagnostics::Tracing::EventTags System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_Tags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventTags, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.get_DataType
::System::Type* System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::TraceLoggingTypeInfo::WriteMetadata(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::StringW name, ::System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::WriteMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.WriteObjectData
void System::Diagnostics::Tracing::TraceLoggingTypeInfo::WriteObjectData(::System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::WriteObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingTypeInfo.GetData
::Il2CppObject* System::Diagnostics::Tracing::TraceLoggingTypeInfo::GetData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingTypeInfo::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TypeAnalysis
#include "System/Diagnostics/Tracing/TypeAnalysis.hpp"
// Including type: System.Diagnostics.Tracing.PropertyAnalysis
#include "System/Diagnostics/Tracing/PropertyAnalysis.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Diagnostics.Tracing.EventDataAttribute
#include "System/Diagnostics/Tracing/EventDataAttribute.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.PropertyAnalysis[] properties
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::Tracing::PropertyAnalysis*>& System::Diagnostics::Tracing::TypeAnalysis::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::Tracing::PropertyAnalysis*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::TypeAnalysis::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventKeywords keywords
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::TypeAnalysis::dyn_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keywords"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventLevel level
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::TypeAnalysis::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventOpcode opcode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventOpcode& System::Diagnostics::Tracing::TypeAnalysis::dyn_opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opcode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventOpcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventTags tags
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTags& System::Diagnostics::Tracing::TypeAnalysis::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TypeAnalysis::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ActivityTracker
#include "System/Diagnostics/Tracing/ActivityTracker.hpp"
// Including type: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo
#include "System/Diagnostics/Tracing/ActivityTracker_ActivityInfo.hpp"
// Including type: System.Threading.AsyncLocal`1
#include "System/Threading/AsyncLocal_1.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Diagnostics.Tracing.EventActivityOptions
#include "System/Diagnostics/Tracing/EventActivityOptions.hpp"
// Including type: System.Threading.AsyncLocalValueChangedArgs`1
#include "System/Threading/AsyncLocalValueChangedArgs_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Tracing.ActivityTracker s_activityTrackerInstance
::System::Diagnostics::Tracing::ActivityTracker* System::Diagnostics::Tracing::ActivityTracker::_get_s_activityTrackerInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::_get_s_activityTrackerInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ActivityTracker*>("System.Diagnostics.Tracing", "ActivityTracker", "s_activityTrackerInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Tracing.ActivityTracker s_activityTrackerInstance
void System::Diagnostics::Tracing::ActivityTracker::_set_s_activityTrackerInstance(::System::Diagnostics::Tracing::ActivityTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::_set_s_activityTrackerInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ActivityTracker", "s_activityTrackerInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 m_nextId
int64_t System::Diagnostics::Tracing::ActivityTracker::_get_m_nextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::_get_m_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics.Tracing", "ActivityTracker", "m_nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 m_nextId
void System::Diagnostics::Tracing::ActivityTracker::_set_m_nextId(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::_set_m_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ActivityTracker", "m_nextId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AsyncLocal`1<System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo> m_current
[[deprecated("Use field access instead!")]] ::System::Threading::AsyncLocal_1<::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*>*& System::Diagnostics::Tracing::ActivityTracker::dyn_m_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::dyn_m_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_current"))->offset;
  return *reinterpret_cast<::System::Threading::AsyncLocal_1<::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_checkedForEnable
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::ActivityTracker::dyn_m_checkedForEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::dyn_m_checkedForEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_checkedForEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.get_Instance
::System::Diagnostics::Tracing::ActivityTracker* System::Diagnostics::Tracing::ActivityTracker::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::ActivityTracker*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker..cctor
void System::Diagnostics::Tracing::ActivityTracker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.OnStart
void System::Diagnostics::Tracing::ActivityTracker::OnStart(::StringW providerName, ::StringW activityName, int task, ByRef<::System::Guid> activityId, ByRef<::System::Guid> relatedActivityId, ::System::Diagnostics::Tracing::EventActivityOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::OnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerName), ::il2cpp_utils::ExtractType(activityName), ::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(activityId), ::il2cpp_utils::ExtractType(relatedActivityId), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, providerName, activityName, task, byref(activityId), byref(relatedActivityId), options);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.OnStop
void System::Diagnostics::Tracing::ActivityTracker::OnStop(::StringW providerName, ::StringW activityName, int task, ByRef<::System::Guid> activityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::OnStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerName), ::il2cpp_utils::ExtractType(activityName), ::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(activityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, providerName, activityName, task, byref(activityId));
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.Enable
void System::Diagnostics::Tracing::ActivityTracker::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.FindActiveActivity
::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* System::Diagnostics::Tracing::ActivityTracker::FindActiveActivity(::StringW name, ::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* startLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::FindActiveActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindActiveActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(startLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*, false>(this, ___internal__method, name, startLocation);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.NormalizeActivityName
::StringW System::Diagnostics::Tracing::ActivityTracker::NormalizeActivityName(::StringW providerName, ::StringW activityName, int task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::NormalizeActivityName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeActivityName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerName), ::il2cpp_utils::ExtractType(activityName), ::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, providerName, activityName, task);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker.ActivityChanging
void System::Diagnostics::Tracing::ActivityTracker::ActivityChanging(::System::Threading::AsyncLocalValueChangedArgs_1<::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivityChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo
#include "System/Diagnostics/Tracing/ActivityTracker_ActivityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 m_uniqueId
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_uniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_uniqueId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uniqueId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Guid m_guid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_guid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_activityPathGuidOffset
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_activityPathGuidOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_activityPathGuidOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityPathGuidOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_level
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_level"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventActivityOptions m_eventOptions
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventActivityOptions& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_eventOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_eventOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventOptions"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventActivityOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 m_lastChildID
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_lastChildID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_lastChildID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastChildID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_stopped
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_stopped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stopped"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo m_creator
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_creator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_creator"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Guid m_activityIdToRestore
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_activityIdToRestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::dyn_m_activityIdToRestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityIdToRestore"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.get_ActivityId
::System::Guid System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::get_ActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::get_ActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.Path
::StringW System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::Path(::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* activityInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker/ActivityInfo", "Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activityInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, activityInfo);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.LiveActivities
::StringW System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::LiveActivities(::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::LiveActivities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker/ActivityInfo", "LiveActivities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.CanBeOrphan
bool System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CanBeOrphan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CanBeOrphan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeOrphan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.CreateActivityPathGuid
void System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CreateActivityPathGuid(ByRef<::System::Guid> idRet, ByRef<int> activityPathGuidOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CreateActivityPathGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateActivityPathGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(idRet), byref(activityPathGuidOffset));
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.CreateOverflowGuid
void System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CreateOverflowGuid(::System::Guid* outPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::CreateOverflowGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOverflowGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outPtr);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.AddIdToGuid
int System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::AddIdToGuid(::System::Guid* outPtr, int whereToAddId, uint id, bool overflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::AddIdToGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker/ActivityInfo", "AddIdToGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPtr), ::il2cpp_utils::ExtractType(whereToAddId), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(overflow)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outPtr, whereToAddId, id, overflow);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.WriteNibble
void System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::WriteNibble(ByRef<uint8_t*> ptr, uint8_t* endPtr, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::WriteNibble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityTracker/ActivityInfo", "WriteNibble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(endPtr), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ptr), endPtr, value);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityTracker/System.Diagnostics.Tracing.ActivityInfo.ToString
::StringW System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityTracker::ActivityInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TplEtwProvider
#include "System/Diagnostics/Tracing/TplEtwProvider.hpp"
// Including type: System.Diagnostics.Tracing.TplEtwProvider/System.Diagnostics.Tracing.Keywords
#include "System/Diagnostics/Tracing/TplEtwProvider_Keywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TplEtwProvider Log
::System::Diagnostics::Tracing::TplEtwProvider* System::Diagnostics::Tracing::TplEtwProvider::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::TplEtwProvider*>("System.Diagnostics.Tracing", "TplEtwProvider", "Log"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TplEtwProvider Log
void System::Diagnostics::Tracing::TplEtwProvider::_set_Log(::System::Diagnostics::Tracing::TplEtwProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TplEtwProvider", "Log", value));
}
// Autogenerated method: System.Diagnostics.Tracing.TplEtwProvider.get_Debug
bool System::Diagnostics::Tracing::TplEtwProvider::get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::get_Debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TplEtwProvider.DebugFacilityMessage
void System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage(::StringW Facility, ::StringW Message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugFacilityMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Facility), ::il2cpp_utils::ExtractType(Message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Facility, Message);
}
// Autogenerated method: System.Diagnostics.Tracing.TplEtwProvider.DebugFacilityMessage1
void System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage1(::StringW Facility, ::StringW Message, ::StringW Arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugFacilityMessage1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Facility), ::il2cpp_utils::ExtractType(Message), ::il2cpp_utils::ExtractType(Arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Facility, Message, Arg);
}
// Autogenerated method: System.Diagnostics.Tracing.TplEtwProvider.SetActivityId
void System::Diagnostics::Tracing::TplEtwProvider::SetActivityId(::System::Guid Id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::SetActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Id);
}
// Autogenerated method: System.Diagnostics.Tracing.TplEtwProvider..cctor
void System::Diagnostics::Tracing::TplEtwProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "TplEtwProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TplEtwProvider/System.Diagnostics.Tracing.Keywords
#include "System/Diagnostics/Tracing/TplEtwProvider_Keywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords Debug
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::TplEtwProvider::Keywords::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::Keywords::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "TplEtwProvider/Keywords", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords Debug
void System::Diagnostics::Tracing::TplEtwProvider::Keywords::_set_Debug(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::Keywords::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TplEtwProvider/Keywords", "Debug", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventActivityOptions
#include "System/Diagnostics/Tracing/EventActivityOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventActivityOptions None
::System::Diagnostics::Tracing::EventActivityOptions System::Diagnostics::Tracing::EventActivityOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventActivityOptions>("System.Diagnostics.Tracing", "EventActivityOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventActivityOptions None
void System::Diagnostics::Tracing::EventActivityOptions::_set_None(::System::Diagnostics::Tracing::EventActivityOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventActivityOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventActivityOptions Disable
::System::Diagnostics::Tracing::EventActivityOptions System::Diagnostics::Tracing::EventActivityOptions::_get_Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_get_Disable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventActivityOptions>("System.Diagnostics.Tracing", "EventActivityOptions", "Disable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventActivityOptions Disable
void System::Diagnostics::Tracing::EventActivityOptions::_set_Disable(::System::Diagnostics::Tracing::EventActivityOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_set_Disable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventActivityOptions", "Disable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventActivityOptions Recursive
::System::Diagnostics::Tracing::EventActivityOptions System::Diagnostics::Tracing::EventActivityOptions::_get_Recursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_get_Recursive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventActivityOptions>("System.Diagnostics.Tracing", "EventActivityOptions", "Recursive"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventActivityOptions Recursive
void System::Diagnostics::Tracing::EventActivityOptions::_set_Recursive(::System::Diagnostics::Tracing::EventActivityOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_set_Recursive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventActivityOptions", "Recursive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventActivityOptions Detachable
::System::Diagnostics::Tracing::EventActivityOptions System::Diagnostics::Tracing::EventActivityOptions::_get_Detachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_get_Detachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventActivityOptions>("System.Diagnostics.Tracing", "EventActivityOptions", "Detachable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventActivityOptions Detachable
void System::Diagnostics::Tracing::EventActivityOptions::_set_Detachable(::System::Diagnostics::Tracing::EventActivityOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::_set_Detachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventActivityOptions", "Detachable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventActivityOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventActivityOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventDescriptor
#include "System/Diagnostics/Tracing/EventDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_traceloggingId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventDescriptor::dyn_m_traceloggingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_traceloggingId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_traceloggingId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_id
[[deprecated("Use field access instead!")]] uint16_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_id"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_version
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_channel
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_channel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_channel"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_level
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_level"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_opcode
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_opcode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_opcode"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_task
[[deprecated("Use field access instead!")]] uint16_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_task");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_keywords
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventDescriptor::dyn_m_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::dyn_m_keywords");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keywords"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_EventId
int System::Diagnostics::Tracing::EventDescriptor::get_EventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_EventId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EventId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Version
uint8_t System::Diagnostics::Tracing::EventDescriptor::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Channel
uint8_t System::Diagnostics::Tracing::EventDescriptor::get_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Channel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Channel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Level
uint8_t System::Diagnostics::Tracing::EventDescriptor::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Opcode
uint8_t System::Diagnostics::Tracing::EventDescriptor::get_Opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Opcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Opcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Task
int System::Diagnostics::Tracing::EventDescriptor::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.get_Keywords
int64_t System::Diagnostics::Tracing::EventDescriptor::get_Keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::get_Keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor..ctor
System::Diagnostics::Tracing::EventDescriptor::EventDescriptor(int traceloggingId, uint8_t level, uint8_t opcode, int64_t keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceloggingId), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(keywords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, traceloggingId, level, opcode, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor..ctor
System::Diagnostics::Tracing::EventDescriptor::EventDescriptor(int id, uint8_t version, uint8_t channel, uint8_t level, uint8_t opcode, int task, int64_t keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(keywords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, version, channel, level, opcode, task, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.Equals
bool System::Diagnostics::Tracing::EventDescriptor::Equals(::System::Diagnostics::Tracing::EventDescriptor other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.Equals
bool System::Diagnostics::Tracing::EventDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDescriptor.GetHashCode
int System::Diagnostics::Tracing::EventDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ControllerCommand
#include "System/Diagnostics/Tracing/ControllerCommand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.ControllerCommand Update
::System::Diagnostics::Tracing::ControllerCommand System::Diagnostics::Tracing::ControllerCommand::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ControllerCommand>("System.Diagnostics.Tracing", "ControllerCommand", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.ControllerCommand Update
void System::Diagnostics::Tracing::ControllerCommand::_set_Update(::System::Diagnostics::Tracing::ControllerCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ControllerCommand", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.ControllerCommand SendManifest
::System::Diagnostics::Tracing::ControllerCommand System::Diagnostics::Tracing::ControllerCommand::_get_SendManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_get_SendManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ControllerCommand>("System.Diagnostics.Tracing", "ControllerCommand", "SendManifest"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.ControllerCommand SendManifest
void System::Diagnostics::Tracing::ControllerCommand::_set_SendManifest(::System::Diagnostics::Tracing::ControllerCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_set_SendManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ControllerCommand", "SendManifest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.ControllerCommand Enable
::System::Diagnostics::Tracing::ControllerCommand System::Diagnostics::Tracing::ControllerCommand::_get_Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_get_Enable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ControllerCommand>("System.Diagnostics.Tracing", "ControllerCommand", "Enable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.ControllerCommand Enable
void System::Diagnostics::Tracing::ControllerCommand::_set_Enable(::System::Diagnostics::Tracing::ControllerCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_set_Enable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ControllerCommand", "Enable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.ControllerCommand Disable
::System::Diagnostics::Tracing::ControllerCommand System::Diagnostics::Tracing::ControllerCommand::_get_Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_get_Disable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ControllerCommand>("System.Diagnostics.Tracing", "ControllerCommand", "Disable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.ControllerCommand Disable
void System::Diagnostics::Tracing::ControllerCommand::_set_Disable(::System::Diagnostics::Tracing::ControllerCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::_set_Disable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ControllerCommand", "Disable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ControllerCommand::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ControllerCommand::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventProvider
#include "System/Diagnostics/Tracing/EventProvider.hpp"
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.MonoPInvokeCallbackAttribute
#include "System/Diagnostics/Tracing/EventProvider_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.<>c__DisplayClass44_0
#include "System/Diagnostics/Tracing/EventProvider_--c__DisplayClass44_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.ControllerCommand
#include "System/Diagnostics/Tracing/ControllerCommand.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.EventData
#include "System/Diagnostics/Tracing/EventProvider_EventData.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EtwEnableCallback
#include "Microsoft/Win32/UnsafeNativeMethods_ManifestEtw_EtwEnableCallback.hpp"
// Including type: Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EVENT_INFO_CLASS
#include "Microsoft/Win32/UnsafeNativeMethods_ManifestEtw_EVENT_INFO_CLASS.hpp"
// Including type: Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EVENT_FILTER_DESCRIPTOR
#include "Microsoft/Win32/UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean m_setInformationMissing
bool System::Diagnostics::Tracing::EventProvider::_get_m_setInformationMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_get_m_setInformationMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics.Tracing", "EventProvider", "m_setInformationMissing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean m_setInformationMissing
void System::Diagnostics::Tracing::EventProvider::_set_m_setInformationMissing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_set_m_setInformationMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider", "m_setInformationMissing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode s_returnCode
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::_get_s_returnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_get_s_returnCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider", "s_returnCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode s_returnCode
void System::Diagnostics::Tracing::EventProvider::_set_s_returnCode(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_set_s_returnCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider", "s_returnCode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32[] nibblebits
::ArrayW<int> System::Diagnostics::Tracing::EventProvider::_get_nibblebits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_get_nibblebits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Diagnostics.Tracing", "EventProvider", "nibblebits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] nibblebits
void System::Diagnostics::Tracing::EventProvider::_set_nibblebits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::_set_nibblebits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider", "nibblebits", value));
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EtwEnableCallback m_etwCallback
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EtwEnableCallback*& System::Diagnostics::Tracing::EventProvider::dyn_m_etwCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_etwCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_etwCallback"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EtwEnableCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle m_thisGCHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& System::Diagnostics::Tracing::EventProvider::dyn_m_thisGCHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_thisGCHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thisGCHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_regHandle
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventProvider::dyn_m_regHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_regHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_regHandle"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_level
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventProvider::dyn_m_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_level"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_anyKeywordMask
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventProvider::dyn_m_anyKeywordMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_anyKeywordMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_anyKeywordMask"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_allKeywordMask
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventProvider::dyn_m_allKeywordMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_allKeywordMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allKeywordMask"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.SessionInfo> m_liveSessions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>*& System::Diagnostics::Tracing::EventProvider::dyn_m_liveSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_liveSessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_liveSessions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enabled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventProvider::dyn_m_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid m_providerId
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::EventProvider::dyn_m_providerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_providerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_providerId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventProvider::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.get_Level
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventProvider::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.get_MatchAnyKeyword
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventProvider::get_MatchAnyKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::get_MatchAnyKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchAnyKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventKeywords, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider..cctor
void System::Diagnostics::Tracing::EventProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.Register
void System::Diagnostics::Tracing::EventProvider::Register(::System::Guid providerGuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerGuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, providerGuid);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.SetInformation
int System::Diagnostics::Tracing::EventProvider::SetInformation(::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_INFO_CLASS eventInfoClass, void* data, int dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::SetInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventInfoClass), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, eventInfoClass, data, dataSize);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.Dispose
void System::Diagnostics::Tracing::EventProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.Dispose
void System::Diagnostics::Tracing::EventProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventProvider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.Deregister
void System::Diagnostics::Tracing::EventProvider::Deregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::Deregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.EtwEnableCallBack
void System::Diagnostics::Tracing::EventProvider::EtwEnableCallBack(ByRef<::System::Guid> sourceId, ByRef<int> controlCode, ByRef<uint8_t> setLevel, ByRef<int64_t> anyKeyword, ByRef<int64_t> allKeyword, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_FILTER_DESCRIPTOR*> filterData, ByRef<void*> callbackContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::EtwEnableCallBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "EtwEnableCallBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceId), ::il2cpp_utils::ExtractType(controlCode), ::il2cpp_utils::ExtractType(setLevel), ::il2cpp_utils::ExtractType(anyKeyword), ::il2cpp_utils::ExtractType(allKeyword), ::il2cpp_utils::ExtractType(filterData), ::il2cpp_utils::ExtractType(callbackContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourceId), byref(controlCode), byref(setLevel), byref(anyKeyword), byref(allKeyword), byref(filterData), byref(callbackContext));
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.EtwEnableCallBackImpl
void System::Diagnostics::Tracing::EventProvider::EtwEnableCallBackImpl(ByRef<int> controlCode, ByRef<uint8_t> setLevel, ByRef<int64_t> anyKeyword, ByRef<int64_t> allKeyword, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_FILTER_DESCRIPTOR*> filterData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::EtwEnableCallBackImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EtwEnableCallBackImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlCode), ::il2cpp_utils::ExtractType(setLevel), ::il2cpp_utils::ExtractType(anyKeyword), ::il2cpp_utils::ExtractType(allKeyword), ::il2cpp_utils::ExtractType(filterData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(controlCode), byref(setLevel), byref(anyKeyword), byref(allKeyword), byref(filterData));
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.OnControllerCommand
void System::Diagnostics::Tracing::EventProvider::OnControllerCommand(::System::Diagnostics::Tracing::ControllerCommand command, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* arguments, int sessionId, int etwSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::OnControllerCommand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command, arguments, sessionId, etwSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.FindNull
int System::Diagnostics::Tracing::EventProvider::FindNull(::ArrayW<uint8_t> buffer, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::FindNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "FindNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, idx);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.GetSessions
::System::Collections::Generic::List_1<::System::Tuple_2<::System::Diagnostics::Tracing::EventProvider::SessionInfo, bool>*>* System::Diagnostics::Tracing::EventProvider::GetSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Tuple_2<::System::Diagnostics::Tracing::EventProvider::SessionInfo, bool>*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.GetSessionInfoCallback
void System::Diagnostics::Tracing::EventProvider::GetSessionInfoCallback(int etwSessionId, int64_t matchAllKeywords, ByRef<::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>*> sessionList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::GetSessionInfoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "GetSessionInfoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(matchAllKeywords), ::il2cpp_utils::ExtractType(sessionList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, etwSessionId, matchAllKeywords, byref(sessionList));
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.GetSessionInfo
void System::Diagnostics::Tracing::EventProvider::GetSessionInfo(::System::Action_2<int, int64_t>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::GetSessionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSessionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.IndexOfSessionInList
int System::Diagnostics::Tracing::EventProvider::IndexOfSessionInList(::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>* sessions, int etwSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::IndexOfSessionInList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "IndexOfSessionInList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessions), ::il2cpp_utils::ExtractType(etwSessionId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessions, etwSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.GetDataFromController
bool System::Diagnostics::Tracing::EventProvider::GetDataFromController(int etwSessionId, ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_FILTER_DESCRIPTOR* filterData, ByRef<::System::Diagnostics::Tracing::ControllerCommand> command, ByRef<::ArrayW<uint8_t>> data, ByRef<int> dataStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::GetDataFromController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(filterData), ::il2cpp_utils::ExtractIndependentType<::System::Diagnostics::Tracing::ControllerCommand&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, etwSessionId, filterData, byref(command), byref(data), byref(dataStart));
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.IsEnabled
bool System::Diagnostics::Tracing::EventProvider::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.IsEnabled
bool System::Diagnostics::Tracing::EventProvider::IsEnabled(uint8_t level, int64_t keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(keywords)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.GetLastWriteEventError
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::GetLastWriteEventError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::GetLastWriteEventError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "GetLastWriteEventError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.SetLastError
void System::Diagnostics::Tracing::EventProvider::SetLastError(int error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::SetLastError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "SetLastError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.EncodeObject
::Il2CppObject* System::Diagnostics::Tracing::EventProvider::EncodeObject(ByRef<::Il2CppObject*> data, ByRef<::System::Diagnostics::Tracing::EventProvider_EventData*> dataDescriptor, ByRef<uint8_t*> dataBuffer, ByRef<uint> totalEventSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::EncodeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "EncodeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataDescriptor), ::il2cpp_utils::ExtractType(dataBuffer), ::il2cpp_utils::ExtractType(totalEventSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(data), byref(dataDescriptor), byref(dataBuffer), byref(totalEventSize));
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.WriteEvent
bool System::Diagnostics::Tracing::EventProvider::WriteEvent(ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ::System::Guid* activityID, ::System::Guid* childActivityID, ::ArrayW<::Il2CppObject*> eventPayload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDescriptor), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(eventPayload)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(eventDescriptor), activityID, childActivityID, eventPayload);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.WriteEvent
bool System::Diagnostics::Tracing::EventProvider::WriteEvent(ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ::System::Guid* activityID, ::System::Guid* childActivityID, int dataCount, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDescriptor), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(dataCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(eventDescriptor), activityID, childActivityID, dataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.WriteEventRaw
bool System::Diagnostics::Tracing::EventProvider::WriteEventRaw(ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ::System::Guid* activityID, ::System::Guid* relatedActivityID, int dataCount, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDescriptor), ::il2cpp_utils::ExtractType(activityID), ::il2cpp_utils::ExtractType(relatedActivityID), ::il2cpp_utils::ExtractType(dataCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(eventDescriptor), activityID, relatedActivityID, dataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.EventUnregister
uint System::Diagnostics::Tracing::EventProvider::EventUnregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::EventUnregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EventUnregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.bitcount
int System::Diagnostics::Tracing::EventProvider::bitcount(uint n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::bitcount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "bitcount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.bitindex
int System::Diagnostics::Tracing::EventProvider::bitindex(uint n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::bitindex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventProvider", "bitindex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider.Finalize
void System::Diagnostics::Tracing::EventProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.SessionInfo
#include "System/Diagnostics/Tracing/EventProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 sessionIdBit
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventProvider::SessionInfo::dyn_sessionIdBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::SessionInfo::dyn_sessionIdBit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionIdBit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 etwSessionId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventProvider::SessionInfo::dyn_etwSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::SessionInfo::dyn_etwSessionId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "etwSessionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.SessionInfo..ctor
// ABORTED elsewhere.  System::Diagnostics::Tracing::EventProvider::SessionInfo::SessionInfo(int sessionIdBit_, int etwSessionId_)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode
#include "System/Diagnostics/Tracing/EventProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NoError
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NoError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NoError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NoError"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NoError
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NoError(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NoError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NoError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NoFreeBuffers
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NoFreeBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NoFreeBuffers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NoFreeBuffers"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NoFreeBuffers
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NoFreeBuffers(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NoFreeBuffers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NoFreeBuffers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode EventTooBig
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_EventTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_EventTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "EventTooBig"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode EventTooBig
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_EventTooBig(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_EventTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "EventTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NullInput
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NullInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_NullInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NullInput"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode NullInput
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NullInput(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_NullInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "NullInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode TooManyArgs
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_TooManyArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_TooManyArgs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "TooManyArgs"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode TooManyArgs
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_TooManyArgs(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_TooManyArgs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "TooManyArgs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode Other
::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode>("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.WriteEventErrorCode Other
void System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_Other(::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventProvider/WriteEventErrorCode", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::WriteEventErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.MonoPInvokeCallbackAttribute
#include "System/Diagnostics/Tracing/EventProvider_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.<>c__DisplayClass44_0
#include "System/Diagnostics/Tracing/EventProvider_--c__DisplayClass44_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.SessionInfo> liveSessionList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>*& System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0::dyn_liveSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0::dyn_liveSessionList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "liveSessionList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Diagnostics::Tracing::EventProvider::SessionInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.<>c__DisplayClass44_0.<GetSessions>b__0
void System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0::$GetSessions$b__0(int etwSessionId, int64_t matchAllKeywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0::<GetSessions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSessions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(matchAllKeywords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, etwSessionId, matchAllKeywords);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceSettings
#include "System/Diagnostics/Tracing/EventSourceSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventSourceSettings Default
::System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSourceSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventSourceSettings>("System.Diagnostics.Tracing", "EventSourceSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventSourceSettings Default
void System::Diagnostics::Tracing::EventSourceSettings::_set_Default(::System::Diagnostics::Tracing::EventSourceSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSourceSettings", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventSourceSettings ThrowOnEventWriteErrors
::System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSourceSettings::_get_ThrowOnEventWriteErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_get_ThrowOnEventWriteErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventSourceSettings>("System.Diagnostics.Tracing", "EventSourceSettings", "ThrowOnEventWriteErrors"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventSourceSettings ThrowOnEventWriteErrors
void System::Diagnostics::Tracing::EventSourceSettings::_set_ThrowOnEventWriteErrors(::System::Diagnostics::Tracing::EventSourceSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_set_ThrowOnEventWriteErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSourceSettings", "ThrowOnEventWriteErrors", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventSourceSettings EtwManifestEventFormat
::System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSourceSettings::_get_EtwManifestEventFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_get_EtwManifestEventFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventSourceSettings>("System.Diagnostics.Tracing", "EventSourceSettings", "EtwManifestEventFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventSourceSettings EtwManifestEventFormat
void System::Diagnostics::Tracing::EventSourceSettings::_set_EtwManifestEventFormat(::System::Diagnostics::Tracing::EventSourceSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_set_EtwManifestEventFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSourceSettings", "EtwManifestEventFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventSourceSettings EtwSelfDescribingEventFormat
::System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSourceSettings::_get_EtwSelfDescribingEventFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_get_EtwSelfDescribingEventFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventSourceSettings>("System.Diagnostics.Tracing", "EventSourceSettings", "EtwSelfDescribingEventFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventSourceSettings EtwSelfDescribingEventFormat
void System::Diagnostics::Tracing::EventSourceSettings::_set_EtwSelfDescribingEventFormat(::System::Diagnostics::Tracing::EventSourceSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::_set_EtwSelfDescribingEventFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSourceSettings", "EtwSelfDescribingEventFormat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSourceSettings::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceSettings::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventListener
#include "System/Diagnostics/Tracing/EventListener.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Diagnostics.Tracing.EventSourceCreatedEventArgs
#include "System/Diagnostics/Tracing/EventSourceCreatedEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventWrittenEventArgs
#include "System/Diagnostics/Tracing/EventWrittenEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter
#include "System/Diagnostics/Tracing/ActivityFilter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_EventSourceCreatedLock
::Il2CppObject* System::Diagnostics::Tracing::EventListener::_get_s_EventSourceCreatedLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_get_s_EventSourceCreatedLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Diagnostics.Tracing", "EventListener", "s_EventSourceCreatedLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_EventSourceCreatedLock
void System::Diagnostics::Tracing::EventListener::_set_s_EventSourceCreatedLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_set_s_EventSourceCreatedLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventListener", "s_EventSourceCreatedLock", value));
}
// Autogenerated static field getter
// Get static field: static System.Diagnostics.Tracing.EventListener s_Listeners
::System::Diagnostics::Tracing::EventListener* System::Diagnostics::Tracing::EventListener::_get_s_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_get_s_Listeners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventListener*>("System.Diagnostics.Tracing", "EventListener", "s_Listeners"));
}
// Autogenerated static field setter
// Set static field: static System.Diagnostics.Tracing.EventListener s_Listeners
void System::Diagnostics::Tracing::EventListener::_set_s_Listeners(::System::Diagnostics::Tracing::EventListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_set_s_Listeners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventListener", "s_Listeners", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<System.WeakReference> s_EventSources
::System::Collections::Generic::List_1<::System::WeakReference*>* System::Diagnostics::Tracing::EventListener::_get_s_EventSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_get_s_EventSources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::WeakReference*>*>("System.Diagnostics.Tracing", "EventListener", "s_EventSources"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<System.WeakReference> s_EventSources
void System::Diagnostics::Tracing::EventListener::_set_s_EventSources(::System::Collections::Generic::List_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_set_s_EventSources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventListener", "s_EventSources", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_CreatingListener
bool System::Diagnostics::Tracing::EventListener::_get_s_CreatingListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_get_s_CreatingListener");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics.Tracing", "EventListener", "s_CreatingListener"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_CreatingListener
void System::Diagnostics::Tracing::EventListener::_set_s_CreatingListener(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_set_s_CreatingListener");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventListener", "s_CreatingListener", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_EventSourceShutdownRegistered
bool System::Diagnostics::Tracing::EventListener::_get_s_EventSourceShutdownRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_get_s_EventSourceShutdownRegistered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics.Tracing", "EventListener", "s_EventSourceShutdownRegistered"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_EventSourceShutdownRegistered
void System::Diagnostics::Tracing::EventListener::_set_s_EventSourceShutdownRegistered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::_set_s_EventSourceShutdownRegistered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventListener", "s_EventSourceShutdownRegistered", value));
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.Diagnostics.Tracing.EventSourceCreatedEventArgs> _EventSourceCreated
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::Diagnostics::Tracing::EventSourceCreatedEventArgs*>*& System::Diagnostics::Tracing::EventListener::dyn__EventSourceCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::dyn__EventSourceCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EventSourceCreated"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::Diagnostics::Tracing::EventSourceCreatedEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.Diagnostics.Tracing.EventWrittenEventArgs> EventWritten
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::Diagnostics::Tracing::EventWrittenEventArgs*>*& System::Diagnostics::Tracing::EventListener::dyn_EventWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::dyn_EventWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventWritten"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::Diagnostics::Tracing::EventWrittenEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventListener m_Next
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventListener*& System::Diagnostics::Tracing::EventListener::dyn_m_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::dyn_m_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Next"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.ActivityFilter m_activityFilter
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::EventListener::dyn_m_activityFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::dyn_m_activityFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityFilter"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener.get_EventListenersLock
::Il2CppObject* System::Diagnostics::Tracing::EventListener::get_EventListenersLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::get_EventListenersLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventListener", "get_EventListenersLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener..cctor
void System::Diagnostics::Tracing::EventListener::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventListener", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated
void System::Diagnostics::Tracing::EventListener::OnEventSourceCreated(::System::Diagnostics::Tracing::EventSource* eventSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::OnEventSourceCreated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventSource);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener.OnEventWritten
void System::Diagnostics::Tracing::EventListener::OnEventWritten(::System::Diagnostics::Tracing::EventWrittenEventArgs* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::OnEventWritten");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventListener*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener.AddEventSource
void System::Diagnostics::Tracing::EventListener::AddEventSource(::System::Diagnostics::Tracing::EventSource* newEventSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::AddEventSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventListener", "AddEventSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newEventSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newEventSource);
}
// Autogenerated method: System.Diagnostics.Tracing.EventListener.DisposeOnShutdown
void System::Diagnostics::Tracing::EventListener::DisposeOnShutdown(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventListener::DisposeOnShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventListener", "DisposeOnShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventCommandEventArgs
#include "System/Diagnostics/Tracing/EventCommandEventArgs.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Diagnostics.Tracing.EventDispatcher
#include "System/Diagnostics/Tracing/EventDispatcher.hpp"
// Including type: System.Diagnostics.Tracing.EventListener
#include "System/Diagnostics/Tracing/EventListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventCommand <Command>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventCommand& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_$Command$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_$Command$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Command>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventCommand*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,System.String> <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventSource eventSource
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSource*& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_eventSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_eventSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSource"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventDispatcher dispatcher
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventDispatcher*& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_dispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_dispatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispatcher"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventListener listener
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventListener*& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listener"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 perEventSourceSessionId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_perEventSourceSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_perEventSourceSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perEventSourceSessionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 etwSessionId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_etwSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_etwSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "etwSessionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean enable
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_enable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventLevel level
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventKeywords matchAnyKeyword
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_matchAnyKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_matchAnyKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchAnyKeyword"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventCommandEventArgs nextCommand
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventCommandEventArgs*& System::Diagnostics::Tracing::EventCommandEventArgs::dyn_nextCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::dyn_nextCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextCommand"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventCommandEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventCommandEventArgs.get_Command
::System::Diagnostics::Tracing::EventCommand System::Diagnostics::Tracing::EventCommandEventArgs::get_Command() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::get_Command");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Command", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventCommand, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventCommandEventArgs.set_Command
void System::Diagnostics::Tracing::EventCommandEventArgs::set_Command(::System::Diagnostics::Tracing::EventCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::set_Command");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Command", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventCommandEventArgs.get_Arguments
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Diagnostics::Tracing::EventCommandEventArgs::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventCommandEventArgs.set_Arguments
void System::Diagnostics::Tracing::EventCommandEventArgs::set_Arguments(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommandEventArgs::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceCreatedEventArgs
#include "System/Diagnostics/Tracing/EventSourceCreatedEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventSource <EventSource>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSource*& System::Diagnostics::Tracing::EventSourceCreatedEventArgs::dyn_$EventSource$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceCreatedEventArgs::dyn_$EventSource$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EventSource>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceCreatedEventArgs.set_EventSource
void System::Diagnostics::Tracing::EventSourceCreatedEventArgs::set_EventSource(::System::Diagnostics::Tracing::EventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceCreatedEventArgs::set_EventSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventWrittenEventArgs
#include "System/Diagnostics/Tracing/EventWrittenEventArgs.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EventId>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$EventId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$EventId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EventId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid <RelatedActivityId>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$RelatedActivityId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$RelatedActivityId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RelatedActivityId>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Object> <Payload>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Il2CppObject*>*& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$Payload$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_$Payload$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Payload>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_message
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_eventName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_eventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_eventName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventSource m_eventSource
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventSource*& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_eventSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_eventSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSource"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.String> m_payloadNames
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*& System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_payloadNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::dyn_m_payloadNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_payloadNames"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_EventName
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_EventName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_EventName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_EventId
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_EventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_EventId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_RelatedActivityId
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_RelatedActivityId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_RelatedActivityId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RelatedActivityId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_Payload
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_Payload(::System::Collections::ObjectModel::ReadOnlyCollection_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_Payload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Payload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_PayloadNames
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_PayloadNames(::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_PayloadNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PayloadNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventWrittenEventArgs.set_Message
void System::Diagnostics::Tracing::EventWrittenEventArgs::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventWrittenEventArgs::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceAttribute
#include "System/Diagnostics/Tracing/EventSourceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Guid>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Guid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Guid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Guid>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <LocalizationResources>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSourceAttribute::dyn_$LocalizationResources$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::dyn_$LocalizationResources$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalizationResources>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.get_Name
::StringW System::Diagnostics::Tracing::EventSourceAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.set_Name
void System::Diagnostics::Tracing::EventSourceAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.get_Guid
::StringW System::Diagnostics::Tracing::EventSourceAttribute::get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::get_Guid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Guid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.set_Guid
void System::Diagnostics::Tracing::EventSourceAttribute::set_Guid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::set_Guid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Guid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.get_LocalizationResources
::StringW System::Diagnostics::Tracing::EventSourceAttribute::get_LocalizationResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::get_LocalizationResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalizationResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventAttribute
#include "System/Diagnostics/Tracing/EventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EventId>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventAttribute::dyn_$EventId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$EventId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EventId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventLevel <Level>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::EventAttribute::dyn_$Level$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Level>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventKeywords <Keywords>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::EventAttribute::dyn_$Keywords$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Keywords$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Keywords>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventTask <Task>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTask& System::Diagnostics::Tracing::EventAttribute::dyn_$Task$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Task$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Task>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <Version>k__BackingField
[[deprecated("Use field access instead!")]] uint8_t& System::Diagnostics::Tracing::EventAttribute::dyn_$Version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Version>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventAttribute::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventTags <Tags>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventTags& System::Diagnostics::Tracing::EventAttribute::dyn_$Tags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Tags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tags>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventActivityOptions <ActivityOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventActivityOptions& System::Diagnostics::Tracing::EventAttribute::dyn_$ActivityOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$ActivityOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ActivityOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventActivityOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventOpcode m_opcode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventOpcode& System::Diagnostics::Tracing::EventAttribute::dyn_m_opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_m_opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_opcode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventOpcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_opcodeSet
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventAttribute::dyn_m_opcodeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_m_opcodeSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_opcodeSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_EventId
int System::Diagnostics::Tracing::EventAttribute::get_EventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_EventId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_EventId
void System::Diagnostics::Tracing::EventAttribute::set_EventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_EventId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Level
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventAttribute::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Level
void System::Diagnostics::Tracing::EventAttribute::set_Level(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Keywords
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventAttribute::get_Keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventKeywords, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Opcode
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventAttribute::get_Opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Opcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventOpcode, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Opcode
void System::Diagnostics::Tracing::EventAttribute::set_Opcode(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Opcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Opcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_IsOpcodeSet
bool System::Diagnostics::Tracing::EventAttribute::get_IsOpcodeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_IsOpcodeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpcodeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Task
::System::Diagnostics::Tracing::EventTask System::Diagnostics::Tracing::EventAttribute::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventTask, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Task
void System::Diagnostics::Tracing::EventAttribute::set_Task(::System::Diagnostics::Tracing::EventTask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Version
uint8_t System::Diagnostics::Tracing::EventAttribute::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Message
::StringW System::Diagnostics::Tracing::EventAttribute::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Message
void System::Diagnostics::Tracing::EventAttribute::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_Tags
::System::Diagnostics::Tracing::EventTags System::Diagnostics::Tracing::EventAttribute::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_Tags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventTags, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.get_ActivityOptions
::System::Diagnostics::Tracing::EventActivityOptions System::Diagnostics::Tracing::EventAttribute::get_ActivityOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::get_ActivityOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivityOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EventActivityOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_ActivityOptions
void System::Diagnostics::Tracing::EventAttribute::set_ActivityOptions(::System::Diagnostics::Tracing::EventActivityOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_ActivityOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ActivityOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.NonEventAttribute
#include "System/Diagnostics/Tracing/NonEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventCommand
#include "System/Diagnostics/Tracing/EventCommand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventCommand Update
::System::Diagnostics::Tracing::EventCommand System::Diagnostics::Tracing::EventCommand::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventCommand>("System.Diagnostics.Tracing", "EventCommand", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventCommand Update
void System::Diagnostics::Tracing::EventCommand::_set_Update(::System::Diagnostics::Tracing::EventCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventCommand", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventCommand SendManifest
::System::Diagnostics::Tracing::EventCommand System::Diagnostics::Tracing::EventCommand::_get_SendManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_get_SendManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventCommand>("System.Diagnostics.Tracing", "EventCommand", "SendManifest"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventCommand SendManifest
void System::Diagnostics::Tracing::EventCommand::_set_SendManifest(::System::Diagnostics::Tracing::EventCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_set_SendManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventCommand", "SendManifest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventCommand Enable
::System::Diagnostics::Tracing::EventCommand System::Diagnostics::Tracing::EventCommand::_get_Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_get_Enable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventCommand>("System.Diagnostics.Tracing", "EventCommand", "Enable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventCommand Enable
void System::Diagnostics::Tracing::EventCommand::_set_Enable(::System::Diagnostics::Tracing::EventCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_set_Enable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventCommand", "Enable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventCommand Disable
::System::Diagnostics::Tracing::EventCommand System::Diagnostics::Tracing::EventCommand::_get_Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_get_Disable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventCommand>("System.Diagnostics.Tracing", "EventCommand", "Disable"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventCommand Disable
void System::Diagnostics::Tracing::EventCommand::_set_Disable(::System::Diagnostics::Tracing::EventCommand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::_set_Disable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventCommand", "Disable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventCommand::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventCommand::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ActivityFilter
#include "System/Diagnostics/Tracing/ActivityFilter.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7
#include "System/Diagnostics/Tracing/ActivityFilter_-GetFilterAsTuple-d__7.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass11_0
#include "System/Diagnostics/Tracing/ActivityFilter_--c__DisplayClass11_0.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass13_0
#include "System/Diagnostics/Tracing/ActivityFilter_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Concurrent.ConcurrentDictionary`2<System.Guid,System.Int32> m_activeActivities
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, int>*& System::Diagnostics::Tracing::ActivityFilter::dyn_m_activeActivities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_activeActivities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activeActivities"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Concurrent.ConcurrentDictionary`2<System.Guid,System.Tuple`2<System.Guid,System.Int32>> m_rootActiveActivities
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, ::System::Tuple_2<::System::Guid, int>*>*& System::Diagnostics::Tracing::ActivityFilter::dyn_m_rootActiveActivities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_rootActiveActivities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rootActiveActivities"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, ::System::Tuple_2<::System::Guid, int>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid m_providerGuid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::ActivityFilter::dyn_m_providerGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_providerGuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_providerGuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_eventId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::dyn_m_eventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_eventId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_samplingFreq
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::dyn_m_samplingFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_samplingFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_samplingFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_curSampleCount
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::dyn_m_curSampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_curSampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_curSampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_perEventSourceSessionId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::dyn_m_perEventSourceSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_perEventSourceSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_perEventSourceSessionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.ActivityFilter m_next
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::ActivityFilter::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Guid> m_myActivityDelegate
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Guid>*& System::Diagnostics::Tracing::ActivityFilter::dyn_m_myActivityDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::dyn_m_myActivityDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myActivityDelegate"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Guid>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.DisableFilter
void System::Diagnostics::Tracing::ActivityFilter::DisableFilter(ByRef<::System::Diagnostics::Tracing::ActivityFilter*> filterList, ::System::Diagnostics::Tracing::EventSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::DisableFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "DisableFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(filterList), source);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.UpdateFilter
void System::Diagnostics::Tracing::ActivityFilter::UpdateFilter(ByRef<::System::Diagnostics::Tracing::ActivityFilter*> filterList, ::System::Diagnostics::Tracing::EventSource* source, int perEventSourceSessionId, ::StringW startEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::UpdateFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "UpdateFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(perEventSourceSessionId), ::il2cpp_utils::ExtractType(startEvents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(filterList), source, perEventSourceSessionId, startEvents);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.PassesActivityFilter
bool System::Diagnostics::Tracing::ActivityFilter::PassesActivityFilter(::System::Diagnostics::Tracing::ActivityFilter* filterList, ::System::Guid* childActivityID, bool triggeringEvent, ::System::Diagnostics::Tracing::EventSource* source, int eventId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::PassesActivityFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "PassesActivityFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList), ::il2cpp_utils::ExtractType(childActivityID), ::il2cpp_utils::ExtractType(triggeringEvent), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filterList, childActivityID, triggeringEvent, source, eventId);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.FlowActivityIfNeeded
void System::Diagnostics::Tracing::ActivityFilter::FlowActivityIfNeeded(::System::Diagnostics::Tracing::ActivityFilter* filterList, ::System::Guid* currentActivityId, ::System::Guid* childActivityID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::FlowActivityIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "FlowActivityIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList), ::il2cpp_utils::ExtractType(currentActivityId), ::il2cpp_utils::ExtractType(childActivityID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filterList, currentActivityId, childActivityID);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.UpdateKwdTriggers
void System::Diagnostics::Tracing::ActivityFilter::UpdateKwdTriggers(::System::Diagnostics::Tracing::ActivityFilter* activityFilter, ::System::Guid sourceGuid, ::System::Diagnostics::Tracing::EventSource* source, ::System::Diagnostics::Tracing::EventKeywords sessKeywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::UpdateKwdTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "UpdateKwdTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activityFilter), ::il2cpp_utils::ExtractType(sourceGuid), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sessKeywords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, activityFilter, sourceGuid, source, sessKeywords);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.GetFilterAsTuple
::System::Collections::Generic::IEnumerable_1<::System::Tuple_2<int, int>*>* System::Diagnostics::Tracing::ActivityFilter::GetFilterAsTuple(::System::Guid sourceGuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::GetFilterAsTuple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilterAsTuple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceGuid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Tuple_2<int, int>*>*, false>(this, ___internal__method, sourceGuid);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.Dispose
void System::Diagnostics::Tracing::ActivityFilter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.EnsureActivityCleanupDelegate
void System::Diagnostics::Tracing::ActivityFilter::EnsureActivityCleanupDelegate(::System::Diagnostics::Tracing::ActivityFilter* filterList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::EnsureActivityCleanupDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "EnsureActivityCleanupDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filterList);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.GetActivityDyingDelegate
::System::Action_1<::System::Guid>* System::Diagnostics::Tracing::ActivityFilter::GetActivityDyingDelegate(::System::Diagnostics::Tracing::ActivityFilter* filterList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::GetActivityDyingDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "GetActivityDyingDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::System::Guid>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filterList);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.EnableFilter
bool System::Diagnostics::Tracing::ActivityFilter::EnableFilter(ByRef<::System::Diagnostics::Tracing::ActivityFilter*> filterList, ::System::Diagnostics::Tracing::EventSource* source, int perEventSourceSessionId, int eventId, int samplingFreq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::EnableFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "EnableFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(perEventSourceSessionId), ::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(samplingFreq)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(filterList), source, perEventSourceSessionId, eventId, samplingFreq);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.TrimActiveActivityStore
void System::Diagnostics::Tracing::ActivityFilter::TrimActiveActivityStore(::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, int>* activities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::TrimActiveActivityStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "TrimActiveActivityStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, activities);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter.GetActiveActivities
::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, int>* System::Diagnostics::Tracing::ActivityFilter::GetActiveActivities(::System::Diagnostics::Tracing::ActivityFilter* filterList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::GetActiveActivities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "ActivityFilter", "GetActiveActivities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Guid, int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filterList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7
#include "System/Diagnostics/Tracing/ActivityFilter_-GetFilterAsTuple-d__7.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Tuple`2<System.Int32,System.Int32> <>2__current
[[deprecated("Use field access instead!")]] ::System::Tuple_2<int, int>*& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Tuple_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Tracing.ActivityFilter <>4__this
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid sourceGuid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_sourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_sourceGuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceGuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Guid <>3__sourceGuid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$3__sourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$$3__sourceGuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__sourceGuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.ActivityFilter <af>5__1
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$af$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::dyn_$af$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<af>5__1"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.Collections.Generic.IEnumerator<System.Tuple<System.Int32,System.Int32>>.get_Current
::System::Tuple_2<int, int>* System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_Collections_Generic_IEnumerator$System_Tuple$System_Int32_System_Int32$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.Collections.Generic.IEnumerator<System.Tuple<System.Int32,System.Int32>>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<int, int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.IDisposable.Dispose
void System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.MoveNext
bool System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.Collections.IEnumerator.Reset
void System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.Collections.Generic.IEnumerable<System.Tuple<System.Int32,System.Int32>>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Tuple_2<int, int>*>* System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_Collections_Generic_IEnumerable$System_Tuple$System_Int32_System_Int32$$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.Collections.Generic.IEnumerable<System.Tuple<System.Int32,System.Int32>>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Tuple_2<int, int>*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<GetFilterAsTuple>d__7.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::ActivityFilter::$GetFilterAsTuple$d__7*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass11_0
#include "System/Diagnostics/Tracing/ActivityFilter_--c__DisplayClass11_0.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Tracing.ActivityFilter filterList
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass11_0::dyn_filterList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass11_0::dyn_filterList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterList"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass11_0.<GetActivityDyingDelegate>b__0
void System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass11_0::$GetActivityDyingDelegate$b__0(::System::Guid oldActivity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass11_0::<GetActivityDyingDelegate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetActivityDyingDelegate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldActivity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldActivity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass13_0
#include "System/Diagnostics/Tracing/ActivityFilter_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tickNow
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::dyn_tickNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::dyn_tickNow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tickNow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass13_0.<TrimActiveActivityStore>b__0
int System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::$TrimActiveActivityStore$b__0(::System::Collections::Generic::KeyValuePair_2<::System::Guid, int> x, ::System::Collections::Generic::KeyValuePair_2<::System::Guid, int> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::<TrimActiveActivityStore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TrimActiveActivityStore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EtwSession
#include "System/Diagnostics/Tracing/EtwSession.hpp"
// Including type: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c__DisplayClass1_0
#include "System/Diagnostics/Tracing/EtwSession_--c__DisplayClass1_0.hpp"
// Including type: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c
#include "System/Diagnostics/Tracing/EtwSession_--c.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter
#include "System/Diagnostics/Tracing/ActivityFilter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> s_etwSessions
::System::Collections::Generic::List_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>* System::Diagnostics::Tracing::EtwSession::_get_s_etwSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::_get_s_etwSessions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>*>("System.Diagnostics.Tracing", "EtwSession", "s_etwSessions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> s_etwSessions
void System::Diagnostics::Tracing::EtwSession::_set_s_etwSessions(::System::Collections::Generic::List_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::_set_s_etwSessions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EtwSession", "s_etwSessions", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 m_etwSessionId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EtwSession::dyn_m_etwSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::dyn_m_etwSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_etwSessionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Tracing.ActivityFilter m_activityFilter
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::ActivityFilter*& System::Diagnostics::Tracing::EtwSession::dyn_m_activityFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::dyn_m_activityFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityFilter"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::ActivityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession..cctor
void System::Diagnostics::Tracing::EtwSession::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EtwSession", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession.GetEtwSession
::System::Diagnostics::Tracing::EtwSession* System::Diagnostics::Tracing::EtwSession::GetEtwSession(int etwSessionId, bool bCreateIfNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::GetEtwSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EtwSession", "GetEtwSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(etwSessionId), ::il2cpp_utils::ExtractType(bCreateIfNeeded)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::EtwSession*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, etwSessionId, bCreateIfNeeded);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession.RemoveEtwSession
void System::Diagnostics::Tracing::EtwSession::RemoveEtwSession(::System::Diagnostics::Tracing::EtwSession* etwSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::RemoveEtwSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EtwSession", "RemoveEtwSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(etwSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, etwSession);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession.TrimGlobalList
void System::Diagnostics::Tracing::EtwSession::TrimGlobalList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::TrimGlobalList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EtwSession", "TrimGlobalList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c__DisplayClass1_0
#include "System/Diagnostics/Tracing/EtwSession_--c__DisplayClass1_0.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Tracing.EtwSession etwSession
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EtwSession*& System::Diagnostics::Tracing::EtwSession::$$c__DisplayClass1_0::dyn_etwSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c__DisplayClass1_0::dyn_etwSession");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "etwSession"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EtwSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c__DisplayClass1_0.<RemoveEtwSession>b__0
bool System::Diagnostics::Tracing::EtwSession::$$c__DisplayClass1_0::$RemoveEtwSession$b__0(::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>* wrEtwSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c__DisplayClass1_0::<RemoveEtwSession>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveEtwSession>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrEtwSession)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wrEtwSession);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c
#include "System/Diagnostics/Tracing/EtwSession_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c <>9
::System::Diagnostics::Tracing::EtwSession::$$c* System::Diagnostics::Tracing::EtwSession::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EtwSession::$$c*>("System.Diagnostics.Tracing", "EtwSession/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c <>9
void System::Diagnostics::Tracing::EtwSession::$$c::_set_$$9(::System::Diagnostics::Tracing::EtwSession::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EtwSession/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> <>9__2_0
::System::Predicate_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>* System::Diagnostics::Tracing::EtwSession::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>*>("System.Diagnostics.Tracing", "EtwSession/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> <>9__2_0
void System::Diagnostics::Tracing::EtwSession::$$c::_set_$$9__2_0(::System::Predicate_1<::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EtwSession/<>c", "<>9__2_0", value)));
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c..cctor
void System::Diagnostics::Tracing::EtwSession::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EtwSession/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EtwSession/System.Diagnostics.Tracing.<>c.<TrimGlobalList>b__2_0
bool System::Diagnostics::Tracing::EtwSession::$$c::$TrimGlobalList$b__2_0(::System::WeakReference_1<::System::Diagnostics::Tracing::EtwSession*>* wrEtwSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EtwSession::$$c::<TrimGlobalList>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TrimGlobalList>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrEtwSession)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wrEtwSession);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SessionMask
#include "System/Diagnostics/Tracing/SessionMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_mask
[[deprecated("Use field access instead!")]] uint& System::Diagnostics::Tracing::SessionMask::dyn_m_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::dyn_m_mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mask"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.get_All
::System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::get_All");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", "get_All", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.get_Item
bool System::Diagnostics::Tracing::SessionMask::get_Item(int perEventSourceSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perEventSourceSessionId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, perEventSourceSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.set_Item
void System::Diagnostics::Tracing::SessionMask::set_Item(int perEventSourceSessionId, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perEventSourceSessionId), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, perEventSourceSessionId, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask..ctor
// ABORTED elsewhere.  System::Diagnostics::Tracing::SessionMask::SessionMask(uint mask)
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.IsEqualOrSupersetOf
bool System::Diagnostics::Tracing::SessionMask::IsEqualOrSupersetOf(::System::Diagnostics::Tracing::SessionMask m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::IsEqualOrSupersetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsEqualOrSupersetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.FromId
::System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::FromId(int perEventSourceSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::FromId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", "FromId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perEventSourceSessionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perEventSourceSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.ToEventKeywords
uint64_t System::Diagnostics::Tracing::SessionMask::ToEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::ToEventKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.FromEventKeywords
::System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::FromEventKeywords(uint64_t m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::FromEventKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", "FromEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.op_Explicit
System::Diagnostics::Tracing::SessionMask::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::SessionMask::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.op_Explicit
// ABORTED elsewhere.  System::Diagnostics::Tracing::SessionMask::operator uint()
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventDispatcher
#include "System/Diagnostics/Tracing/EventDispatcher.hpp"
// Including type: System.Diagnostics.Tracing.EventListener
#include "System/Diagnostics/Tracing/EventListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Diagnostics.Tracing.EventListener m_Listener
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventListener*& System::Diagnostics::Tracing::EventDispatcher::dyn_m_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDispatcher::dyn_m_Listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Listener"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean[] m_EventEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::Diagnostics::Tracing::EventDispatcher::dyn_m_EventEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDispatcher::dyn_m_EventEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_activityFilteringEnabled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Tracing::EventDispatcher::dyn_m_activityFilteringEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDispatcher::dyn_m_activityFilteringEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activityFilteringEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.Tracing.EventDispatcher m_Next
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventDispatcher*& System::Diagnostics::Tracing::EventDispatcher::dyn_m_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventDispatcher::dyn_m_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Next"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventManifestOptions
#include "System/Diagnostics/Tracing/EventManifestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventManifestOptions None
::System::Diagnostics::Tracing::EventManifestOptions System::Diagnostics::Tracing::EventManifestOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventManifestOptions>("System.Diagnostics.Tracing", "EventManifestOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventManifestOptions None
void System::Diagnostics::Tracing::EventManifestOptions::_set_None(::System::Diagnostics::Tracing::EventManifestOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventManifestOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventManifestOptions Strict
::System::Diagnostics::Tracing::EventManifestOptions System::Diagnostics::Tracing::EventManifestOptions::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventManifestOptions>("System.Diagnostics.Tracing", "EventManifestOptions", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventManifestOptions Strict
void System::Diagnostics::Tracing::EventManifestOptions::_set_Strict(::System::Diagnostics::Tracing::EventManifestOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventManifestOptions", "Strict", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventManifestOptions AllCultures
::System::Diagnostics::Tracing::EventManifestOptions System::Diagnostics::Tracing::EventManifestOptions::_get_AllCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_get_AllCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventManifestOptions>("System.Diagnostics.Tracing", "EventManifestOptions", "AllCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventManifestOptions AllCultures
void System::Diagnostics::Tracing::EventManifestOptions::_set_AllCultures(::System::Diagnostics::Tracing::EventManifestOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_set_AllCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventManifestOptions", "AllCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventManifestOptions OnlyIfNeededForRegistration
::System::Diagnostics::Tracing::EventManifestOptions System::Diagnostics::Tracing::EventManifestOptions::_get_OnlyIfNeededForRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_get_OnlyIfNeededForRegistration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventManifestOptions>("System.Diagnostics.Tracing", "EventManifestOptions", "OnlyIfNeededForRegistration"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventManifestOptions OnlyIfNeededForRegistration
void System::Diagnostics::Tracing::EventManifestOptions::_set_OnlyIfNeededForRegistration(::System::Diagnostics::Tracing::EventManifestOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_set_OnlyIfNeededForRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventManifestOptions", "OnlyIfNeededForRegistration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventManifestOptions AllowEventSourceOverride
::System::Diagnostics::Tracing::EventManifestOptions System::Diagnostics::Tracing::EventManifestOptions::_get_AllowEventSourceOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_get_AllowEventSourceOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventManifestOptions>("System.Diagnostics.Tracing", "EventManifestOptions", "AllowEventSourceOverride"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventManifestOptions AllowEventSourceOverride
void System::Diagnostics::Tracing::EventManifestOptions::_set_AllowEventSourceOverride(::System::Diagnostics::Tracing::EventManifestOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::_set_AllowEventSourceOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventManifestOptions", "AllowEventSourceOverride", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventManifestOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventManifestOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
