// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder
#include "GlobalNamespace/DebugUIBuilder.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_CENTER
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_CENTER"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_CENTER
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_CENTER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_RIGHT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_RIGHT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_LEFT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_LEFT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_LEFT", value));
}
// Autogenerated static field getter
// Get static field: static public DebugUIBuilder instance
::GlobalNamespace::DebugUIBuilder* GlobalNamespace::DebugUIBuilder::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DebugUIBuilder*>("", "DebugUIBuilder", "instance"));
}
// Autogenerated static field setter
// Set static field: static public DebugUIBuilder instance
void GlobalNamespace::DebugUIBuilder::_set_instance(::GlobalNamespace::DebugUIBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single elementSpacing
float GlobalNamespace::DebugUIBuilder::_get_elementSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_elementSpacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "elementSpacing"));
}
// Autogenerated static field setter
// Set static field: static private System.Single elementSpacing
void GlobalNamespace::DebugUIBuilder::_set_elementSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_elementSpacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "elementSpacing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginH
float GlobalNamespace::DebugUIBuilder::_get_marginH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginH
void GlobalNamespace::DebugUIBuilder::_set_marginH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginV
float GlobalNamespace::DebugUIBuilder::_get_marginV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginV"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginV
void GlobalNamespace::DebugUIBuilder::_set_marginV(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginV", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform buttonPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform labelPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_labelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_labelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "labelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform sliderPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform dividerPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dividerPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform togglePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_togglePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_togglePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "togglePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform radioPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_radioPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject uiHelpersToInstantiate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiHelpersToInstantiate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] targetContentPanels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetContentPanels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] reEnable
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GlobalNamespace::DebugUIBuilder::dyn_reEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_reEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reEnable"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toEnable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toEnable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toDisable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDisable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] insertPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& GlobalNamespace::DebugUIBuilder::dyn_insertPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RectTransform>[] insertedElements
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>& GlobalNamespace::DebugUIBuilder::dyn_insertedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertedElements"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 menuOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::DebugUIBuilder::dyn_menuOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_menuOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig rig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::DebugUIBuilder::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UI.ToggleGroup> radioGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>*& GlobalNamespace::DebugUIBuilder::dyn_radioGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer lp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer*& GlobalNamespace::DebugUIBuilder::dyn_lp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lr
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::DebugUIBuilder::dyn_lr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lr"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LaserPointer/LaserBeamBehavior laserBeamBehavior
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder.Awake
void GlobalNamespace::DebugUIBuilder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Show
void GlobalNamespace::DebugUIBuilder::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Hide
void GlobalNamespace::DebugUIBuilder::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Relayout
void GlobalNamespace::DebugUIBuilder::Relayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Relayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Relayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.AddRect
void GlobalNamespace::DebugUIBuilder::AddRect(::UnityEngine::RectTransform* r, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(targetCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddButton
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddButton(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnClick* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddLabel
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddLabel(::StringW label, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddSlider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddSlider(::StringW label, float min, float max, ::GlobalNamespace::DebugUIBuilder::OnSlider* onValueChanged, bool wholeNumbersOnly, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(wholeNumbersOnly), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, min, max, onValueChanged, wholeNumbersOnly, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddDivider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddDivider(int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddDivider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDivider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, bool defaultValue, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, defaultValue, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddRadio
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddRadio(::StringW label, ::StringW group, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRadio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRadio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, group, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.ToggleLaserPointer
void GlobalNamespace::DebugUIBuilder::ToggleLaserPointer(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ToggleLaserPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleLaserPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnClick.Invoke
void GlobalNamespace::DebugUIBuilder::OnClick::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/OnClick.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnClick.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.Invoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke(::UnityEngine::UI::Toggle* t, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, t, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnSlider.Invoke
void GlobalNamespace::DebugUIBuilder::OnSlider::Invoke(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: DebugUIBuilder/OnSlider.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke(float f, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, f, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnSlider.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/ActiveUpdate.Invoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.EndInvoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnClick handler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnClick*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnClick**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass35_0.<AddButton>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::$AddButton$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::<AddButton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddButton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnSlider onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnSlider*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass37_0.<AddSlider>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::$AddSlider$b__0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::<AddSlider>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSlider>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass39_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass40_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange handler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle tb
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass41_0.<AddRadio>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::$AddRadio$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::<AddRadio>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddRadio>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandedInputSelector
#include "GlobalNamespace/HandedInputSelector.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig m_CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::HandedInputSelector::dyn_m_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.OVRInputModule m_InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::HandedInputSelector::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandedInputSelector.Start
void GlobalNamespace::HandedInputSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.Update
void GlobalNamespace::HandedInputSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.SetActiveController
void GlobalNamespace::HandedInputSelector::SetActiveController(::GlobalNamespace::OVRInput::Controller c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::SetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer
#include "GlobalNamespace/LaserPointer.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cursorVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LaserPointer::dyn_cursorVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_cursorVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cursorVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LaserPointer::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer/LaserBeamBehavior _laserBeamBehavior
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::LaserPointer::dyn__laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _forward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__forward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hitTarget
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LaserPointer::dyn__hitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__hitTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::LaserPointer::dyn_lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LaserPointer.get_laserBeamBehavior
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::get_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::get_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LaserPointer::LaserBeamBehavior, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.set_laserBeamBehavior
void GlobalNamespace::LaserPointer::set_laserBeamBehavior(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::set_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LaserPointer.Awake
void GlobalNamespace::LaserPointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.Start
void GlobalNamespace::LaserPointer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.LateUpdate
void GlobalNamespace::LaserPointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.UpdateLaserBeam
void GlobalNamespace::LaserPointer::UpdateLaserBeam(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::UpdateLaserBeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLaserBeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: LaserPointer.OnDisable
void GlobalNamespace::LaserPointer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusLost
void GlobalNamespace::LaserPointer::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusAcquired
void GlobalNamespace::LaserPointer::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnDestroy
void GlobalNamespace::LaserPointer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.SetCursorStartDest
void GlobalNamespace::LaserPointer::SetCursorStartDest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 dest, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated method: LaserPointer.SetCursorRay
void GlobalNamespace::LaserPointer::SetCursorRay(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer/LaserBeamBehavior
#include "GlobalNamespace/LaserPointer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior On
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "On"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior On
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "On", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior Off
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "Off"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior Off
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoundsLockedObject
#include "GlobalNamespace/BoundsLockedObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_initialOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BoundsLockedObject::dyn_m_initialOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_initialOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_initialOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig m_playerOrigin
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::BoundsLockedObject::dyn_m_playerOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_playerOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerOrigin"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GuardianBoundaryEnforcer m_enforcer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GuardianBoundaryEnforcer*& GlobalNamespace::BoundsLockedObject::dyn_m_enforcer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_enforcer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enforcer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GuardianBoundaryEnforcer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Bounds> m_bounds
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Bounds>& GlobalNamespace::BoundsLockedObject::dyn_m_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bounds"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Bounds>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoundsLockedObject.Start
void GlobalNamespace::BoundsLockedObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoundsLockedObject.RefreshDisplay
void GlobalNamespace::BoundsLockedObject::RefreshDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::RefreshDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuardianBoundaryDisplay
#include "GlobalNamespace/GuardianBoundaryDisplay.hpp"
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GuardianBoundaryEnforcer m_enforcer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GuardianBoundaryEnforcer*& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_enforcer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_enforcer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enforcer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GuardianBoundaryEnforcer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRBoundary/BoundaryType m_boundaryType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBoundary::BoundaryType& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_boundaryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_boundaryType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_boundaryType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoundary::BoundaryType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_errorDisplay
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_errorDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_errorDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_errorDisplay"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GuardianBoundaryDisplay.Start
void GlobalNamespace::GuardianBoundaryDisplay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryDisplay.RefreshDisplay
void GlobalNamespace::GuardianBoundaryDisplay::RefreshDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::RefreshDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action TrackingChanged
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GuardianBoundaryEnforcer::dyn_TrackingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_TrackingChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_AllowRecenter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_AllowRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_AllowRecenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowRecenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig m_mainCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_originalTrackerOrientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_originalTrackerOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_originalTrackerOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalTrackerOrientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_framecount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_framecount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_framecount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_framecount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_orientToOriginalForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_orientToOriginalForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_orientToOriginalForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_orientToOriginalForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GuardianBoundaryEnforcer.get_OrientToOriginalForward
::UnityEngine::Quaternion GlobalNamespace::GuardianBoundaryEnforcer::get_OrientToOriginalForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::get_OrientToOriginalForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OrientToOriginalForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.add_TrackingChanged
void GlobalNamespace::GuardianBoundaryEnforcer::add_TrackingChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::add_TrackingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TrackingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuardianBoundaryEnforcer.remove_TrackingChanged
void GlobalNamespace::GuardianBoundaryEnforcer::remove_TrackingChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::remove_TrackingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TrackingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuardianBoundaryEnforcer.Start
void GlobalNamespace::GuardianBoundaryEnforcer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.Update
void GlobalNamespace::GuardianBoundaryEnforcer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.Recentered
void GlobalNamespace::GuardianBoundaryEnforcer::Recentered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Recentered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recentered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CharacterCameraConstraint
#include "GlobalNamespace/CharacterCameraConstraint.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableCollision
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CharacterCameraConstraint::dyn_EnableCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_EnableCollision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableCollision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask CollideLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollideLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxFade
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_MaxFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_MaxFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FadeMinDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_FadeMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_FadeMinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeMinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PreferredHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_PreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_PreferredHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreferredHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FadeMaxDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_FadeMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_FadeMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _cameraUpdateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::CharacterCameraConstraint::dyn__cameraUpdateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__cameraUpdateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraUpdateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _preCharacterMovementAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::CharacterCameraConstraint::dyn__preCharacterMovementAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__preCharacterMovementAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preCharacterMovementAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CapsuleCollider _character
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::CharacterCameraConstraint::dyn__character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_character"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleCapsuleWithStickMovement _simplePlayerController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simplePlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CharacterCameraConstraint.Awake
void GlobalNamespace::CharacterCameraConstraint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.Start
void GlobalNamespace::CharacterCameraConstraint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnEnable
void GlobalNamespace::CharacterCameraConstraint::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnDisable
void GlobalNamespace::CharacterCameraConstraint::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.CameraUpdate
void GlobalNamespace::CharacterCameraConstraint::CameraUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::CameraUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::LocomotionController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider CharacterController
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::LocomotionController::dyn_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleCapsuleWithStickMovement PlayerController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::LocomotionController::dyn_PlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_PlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionController.Start
void GlobalNamespace::LocomotionController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPreTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPostTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPreTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPostTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport/States <CurrentState>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportAimHandler AimHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportAimHandler*& GlobalNamespace::LocomotionTeleport::dyn_AimHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportAimHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportDestination TeleportDestinationPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TeleportDestinationLayer
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> UpdateTeleportDestination
[[deprecated("Use field access instead!")]] ::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTeleportDestination"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler InputHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::LocomotionTeleport::dyn_InputHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_InputHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/TeleportIntentions CurrentIntention
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::TeleportIntentions& GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentIntention"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::TeleportIntentions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPreTeleportRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPreTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTransitioning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTransitioning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPostTeleportRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPostTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TeleportDestination _teleportDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn__teleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn__teleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_teleportDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionController <LocomotionController>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionController*& GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionController>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/AimCollisionTypes AimCollisionType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimCollisionTypes& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseCharacterCollisionData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseCharacterCollisionData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateReady
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateReady"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LocomotionTeleport/AimData> UpdateAimData
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateAimData"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action ExitStateAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExitStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePreTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePreTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateTeleporting
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateTeleporting"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePostTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePostTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion> Teleported
[[deprecated("Use field access instead!")]] ::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>*& GlobalNamespace::LocomotionTeleport::dyn_Teleported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_Teleported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teleported"))->offset;
  return *reinterpret_cast<::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport.get_CurrentState
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::States, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_CurrentState
void GlobalNamespace::LocomotionTeleport::set_CurrentState(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.get_DestinationRotation
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::get_DestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_DestinationRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestinationRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.get_LocomotionController
::GlobalNamespace::LocomotionController* GlobalNamespace::LocomotionTeleport::get_LocomotionController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionController*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_LocomotionController
void GlobalNamespace::LocomotionTeleport::set_LocomotionController(::GlobalNamespace::LocomotionController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateReady
void GlobalNamespace::LocomotionTeleport::add_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateReady
void GlobalNamespace::LocomotionTeleport::remove_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateAimData
void GlobalNamespace::LocomotionTeleport::add_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateAimData
void GlobalNamespace::LocomotionTeleport::remove_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_ExitStateAim
void GlobalNamespace::LocomotionTeleport::add_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_ExitStateAim
void GlobalNamespace::LocomotionTeleport::remove_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_Teleported
void GlobalNamespace::LocomotionTeleport::add_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_Teleported
void GlobalNamespace::LocomotionTeleport::remove_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.EnableMovement
void GlobalNamespace::LocomotionTeleport::EnableMovement(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.EnableRotation
void GlobalNamespace::LocomotionTeleport::EnableRotation(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.OnUpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValidDestination), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(landingRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated method: LocomotionTeleport.AimCollisionTest
bool GlobalNamespace::LocomotionTeleport::AimCollisionTest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::LayerMask aimCollisionLayerMask, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimCollisionTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(aimCollisionLayerMask), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, aimCollisionLayerMask, byref(hitInfo));
}
// Autogenerated method: LocomotionTeleport.LogState
void GlobalNamespace::LocomotionTeleport::LogState(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::LogState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LocomotionTeleport.CreateNewTeleportDestination
void GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DeactivateDestination
void GlobalNamespace::LocomotionTeleport::DeactivateDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DeactivateDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.RecycleTeleportDestination
void GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination(::GlobalNamespace::TeleportDestination* oldDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecycleTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDestination);
}
// Autogenerated method: LocomotionTeleport.EnableMotion
void GlobalNamespace::LocomotionTeleport::EnableMotion(bool enableLinear, bool enableRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableLinear), ::il2cpp_utils::ExtractType(enableRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableLinear, enableRotation);
}
// Autogenerated method: LocomotionTeleport.Awake
void GlobalNamespace::LocomotionTeleport::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnEnable
void GlobalNamespace::LocomotionTeleport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnDisable
void GlobalNamespace::LocomotionTeleport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.ReadyStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadyStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnUpdateAimData
void GlobalNamespace::LocomotionTeleport::OnUpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: LocomotionTeleport.AimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::AimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.CancelAimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.PreTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.CancelTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.TeleportingStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportingStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.PostTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DoTeleport
void GlobalNamespace::LocomotionTeleport::DoTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetCharacterPosition
::UnityEngine::Vector3 GlobalNamespace::LocomotionTeleport::GetCharacterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetHeadRotationY
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::GetHeadRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetHeadRotationY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeadRotationY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DoWarp
void GlobalNamespace::LocomotionTeleport::DoWarp(::UnityEngine::Vector3 startPos, float positionPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(positionPercent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPos, positionPercent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/States
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Ready
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Ready
void GlobalNamespace::LocomotionTeleport::States::_set_Ready(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Aim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Aim
void GlobalNamespace::LocomotionTeleport::States::_set_Aim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelAim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelAim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelAim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelAim
void GlobalNamespace::LocomotionTeleport::States::_set_CancelAim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelAim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelAim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PreTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PreTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Teleporting
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Teleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Teleporting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Teleporting"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Teleporting
void GlobalNamespace::LocomotionTeleport::States::_set_Teleporting(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Teleporting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Teleporting", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PostTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PostTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PostTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PostTeleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::States::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions None
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "None"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions None
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Aim
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Aim
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Teleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Teleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Teleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Teleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimCollisionTypes
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Point
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Point"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Point
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Sphere
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Sphere
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Capsule
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Capsule
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Capsule", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RaycastHit TargetHitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TargetValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Vector3> Destination
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> <Points>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Points>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/AimData.get_Points
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::LocomotionTeleport::AimData::get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::get_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/AimData.set_Points
void GlobalNamespace::LocomotionTeleport::AimData::set_Points(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::set_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport/AimData.Reset
void GlobalNamespace::LocomotionTeleport::AimData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.MoveNext
bool GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.MoveNext
bool GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.MoveNext
bool GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLinearMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLinearMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HMDRotatesPlayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HMDRotatesPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotationEitherThumbstick
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationEitherThumbstick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ReadyToSnapTurn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReadyToSnapTurn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action CameraUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreCharacterMove
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreCharacterMove"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Awake
void GlobalNamespace::SimpleCapsuleWithStickMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Start
void GlobalNamespace::SimpleCapsuleWithStickMovement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.FixedUpdate
void GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.RotatePlayerToHMD
void GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotatePlayerToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.StickMovement
void GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StickMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.SnapTurn
void GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportAimHandler.GetPoints
void GlobalNamespace::TeleportAimHandler::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: TeleportAimHandler.OnEnable
void GlobalNamespace::TeleportAimHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimHandler.OnDisable
void GlobalNamespace::TeleportAimHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerLaser
#include "GlobalNamespace/TeleportAimHandlerLaser.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerLaser::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerLaser.GetPoints
void GlobalNamespace::TeleportAimHandlerLaser::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerParabolic
#include "GlobalNamespace/TeleportAimHandlerParabolic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimumElevation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumElevation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Gravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerParabolic.GetPoints
void GlobalNamespace::TeleportAimHandlerParabolic::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimVisualLaser
#include "GlobalNamespace/TeleportAimVisualLaser.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer LaserPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaserPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _enterAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _exitAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _linePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimVisualLaser.EnterAimState
void GlobalNamespace::TeleportAimVisualLaser::EnterAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::EnterAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.ExitAimState
void GlobalNamespace::TeleportAimVisualLaser::ExitAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::ExitAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.Awake
void GlobalNamespace::TeleportAimVisualLaser::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.UpdateAimData
void GlobalNamespace::TeleportAimVisualLaser::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: TeleportAimVisualLaser.AddEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.RemoveEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsValidDestination>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsValidDestination>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform PositionIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_PositionIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_PositionIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OrientationIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_OrientationIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_OrientationIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion LandingRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportDestination::dyn_LandingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LandingRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LandingRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport LocomotionTeleport
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocomotionTeleport"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/States TeleportState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::TeleportDestination::dyn_TeleportState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_TeleportState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> _updateTeleportDestinationAction
[[deprecated("Use field access instead!")]] ::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateTeleportDestinationAction"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TeleportDestination> Deactivated
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::TeleportDestination*>*& GlobalNamespace::TeleportDestination::dyn_Deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_Deactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deactivated"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::TeleportDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportDestination.get_IsValidDestination
bool GlobalNamespace::TeleportDestination::get_IsValidDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::get_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.set_IsValidDestination
void GlobalNamespace::TeleportDestination::set_IsValidDestination(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::set_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.add_Deactivated
void GlobalNamespace::TeleportDestination::add_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::add_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.remove_Deactivated
void GlobalNamespace::TeleportDestination::remove_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::remove_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnEnable
void GlobalNamespace::TeleportDestination::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.TryDisableEventHandlers
void GlobalNamespace::TeleportDestination::TryDisableEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::TryDisableEventHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisableEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDisable
void GlobalNamespace::TeleportDestination::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDeactivated
void GlobalNamespace::TeleportDestination::OnDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.Recycle
void GlobalNamespace::TeleportDestination::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.UpdateTeleportDestination
void GlobalNamespace::TeleportDestination::UpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportDestination*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startReadyAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startReadyAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startReadyAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startReadyAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler.TeleportReadyCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportReadyCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.TeleportAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandler::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetAimData
void GlobalNamespace::TeleportInputHandler::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_0
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_1
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.AddEventHandlers
void GlobalNamespace::TeleportInputHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.RemoveEventHandlers
void GlobalNamespace::TeleportInputHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerHMD
#include "GlobalNamespace/TeleportInputHandlerHMD.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <Pointer>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pointer>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton AimButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton TeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FastTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerHMD.get_Pointer
::UnityEngine::Transform* GlobalNamespace::TeleportInputHandlerHMD::get_Pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::get_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.set_Pointer
void GlobalNamespace::TeleportInputHandlerHMD::set_Pointer(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::set_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportInputHandlerHMD.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerHMD::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.GetAimData
void GlobalNamespace::TeleportInputHandlerHMD::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/InputModes InputMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::InputModes& GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::InputModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawButton[] _rawButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawButton>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawButton>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawTouch[] _rawTouch
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawTouch>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawTouch"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawTouch>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller AimingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller InitiatingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitiatingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/AimCapTouchButtons CapacitiveAimAndTeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons& GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacitiveAimAndTeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ThumbstickTeleportThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThumbstickTeleportThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerTouch.Start
void GlobalNamespace::TeleportInputHandlerTouch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerTouch::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetAimData
void GlobalNamespace::TeleportInputHandlerTouch::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/InputModes
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/AimCapTouchButtons
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _updateOrientationAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateOrientationAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportOrientationHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler.UpdateAimData
void GlobalNamespace::TeleportOrientationHandler::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: TeleportOrientationHandler.UpdateOrientationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOrientationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.GetLandingOrientation
::UnityEngine::Quaternion GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation(::GlobalNamespace::TeleportOrientationHandler::OrientationModes mode, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLandingOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, mode, rotation);
}
// Autogenerated method: TeleportOrientationHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportOrientationHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.AddEventHandlers
void GlobalNamespace::TeleportOrientationHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.RemoveEventHandlers
void GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "HeadRelative"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "HeadRelative", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler360
#include "GlobalNamespace/TeleportOrientationHandler360.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportOrientationHandler360.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler360.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerHMD
#include "GlobalNamespace/TeleportOrientationHandlerHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UpdateOrientationDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateOrientationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceMaxRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceMaxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerHMD.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerHMD.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerThumbstick
#include "GlobalNamespace/TeleportOrientationHandlerThumbstick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller Thumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotateStickThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotateStickThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _currentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _lastValidDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValidDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportPoint
#include "GlobalNamespace/TeleportPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single dimmingSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_dimmingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_dimmingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dimmingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fullIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_fullIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_fullIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lowIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lowIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lowIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform destTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportPoint::dyn_destTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_destTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastLookAtTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lastLookAtTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lastLookAtTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLookAtTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportPoint.Start
void GlobalNamespace::TeleportPoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.GetDestTransform
::UnityEngine::Transform* GlobalNamespace::TeleportPoint::GetDestTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::GetDestTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.Update
void GlobalNamespace::TeleportPoint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.OnLookAt
void GlobalNamespace::TeleportPoint::OnLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::OnLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportSupport
#include "GlobalNamespace/TeleportSupport.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport <LocomotionTeleport>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionTeleport>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportSupport::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportSupport.get_LocomotionTeleport
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::TeleportSupport::get_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::get_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.set_LocomotionTeleport
void GlobalNamespace::TeleportSupport::set_LocomotionTeleport(::GlobalNamespace::LocomotionTeleport* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::set_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportSupport.OnEnable
void GlobalNamespace::TeleportSupport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.OnDisable
void GlobalNamespace::TeleportSupport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.LogEventHandler
void GlobalNamespace::TeleportSupport::LogEventHandler(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::LogEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: TeleportSupport.AddEventHandlers
void GlobalNamespace::TeleportSupport::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.RemoveEventHandlers
void GlobalNamespace::TeleportSupport::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ERROR_MARGIN
float GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TeleportTargetHandler", "ERROR_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ERROR_MARGIN
void GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportTargetHandler", "ERROR_MARGIN", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask AimCollisionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportTargetHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportTargetHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _aimPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::TeleportTargetHandler::dyn__aimPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__aimPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aimPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler.TargetAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ResetAimData
void GlobalNamespace::TeleportTargetHandler::ResetAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ResetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandler::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandler.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandler::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated method: TeleportTargetHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportTargetHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.AddEventHandlers
void GlobalNamespace::TeleportTargetHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.RemoveEventHandlers
void GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTargetHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTargetHandler*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTargetHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNavMesh
#include "GlobalNamespace/TeleportTargetHandlerNavMesh.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NavMeshAreaMask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NavMeshAreaMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath _path
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshPath*& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.Awake
void GlobalNamespace::TeleportTargetHandlerNavMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.OnDrawGizmos
void GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNode
#include "GlobalNamespace/TeleportTargetHandlerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single LOSOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOSOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask TeleportLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNode.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerPhysical
#include "GlobalNamespace/TeleportTargetHandlerPhysical.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTargetHandlerPhysical.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransition.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.AddEventHandlers
void GlobalNamespace::TeleportTransition::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.RemoveEventHandlers
void GlobalNamespace::TeleportTransition::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionBlink
#include "GlobalNamespace/TeleportTransitionBlink.hpp"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve FadeLevels
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeLevels"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink.BlinkCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionBlink <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionBlink*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionBlink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <teleportTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleportTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <teleported>5__4
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleported>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.MoveNext
bool GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionInstant
#include "GlobalNamespace/TeleportTransitionInstant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransitionInstant.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionWarp
#include "GlobalNamespace/TeleportTransitionWarp.hpp"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve PositionLerp
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp.DoWarp
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionWarp::DoWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionWarp <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionWarp*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionWarp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <startPosition>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.MoveNext
bool GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer
#include "GlobalNamespace/NativeVideoPlayer.hpp"
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _Activity
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_Activity"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _Activity
void GlobalNamespace::NativeVideoPlayer::_set__Activity(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_Activity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_VideoPlayerClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
void GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_VideoPlayerClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.jvalue[] EmptyParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_EmptyParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_EmptyParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "EmptyParams"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.jvalue[] EmptyParams
void GlobalNamespace::NativeVideoPlayer::_set_EmptyParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_EmptyParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "EmptyParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getIsPlayingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getIsPlayingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getIsPlayingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getIsPlayingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getCurrentPlaybackStateMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getCurrentPlaybackStateMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getDurationMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getDurationMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getDurationMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getDurationMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackPositionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr playVideoMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "playVideoMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr playVideoMethodId
void GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] playVideoParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_playVideoParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "playVideoParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] playVideoParams
void GlobalNamespace::NativeVideoPlayer::_set_playVideoParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr stopMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_stopMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_stopMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "stopMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr stopMethodId
void GlobalNamespace::NativeVideoPlayer::_set_stopMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_stopMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "stopMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr resumeMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "resumeMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr resumeMethodId
void GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "resumeMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr pauseMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "pauseMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr pauseMethodId
void GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "pauseMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackSpeedMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackSpeedMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackSpeedMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackSpeedParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setLoopingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setLoopingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setLoopingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setLoopingParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setLoopingParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setLoopingParams
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setListenerRotationQuaternionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setListenerRotationQuaternionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setListenerRotationQuaternionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionParams", value));
}
// Autogenerated method: NativeVideoPlayer.get_VideoPlayerClass
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoPlayerClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Activity
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Activity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Activity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsAvailable
bool GlobalNamespace::NativeVideoPlayer::get_IsAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsPlaying
bool GlobalNamespace::NativeVideoPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_CurrentPlaybackState
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_CurrentPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NativeVideoPlayer::PlabackState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Duration
int64_t GlobalNamespace::NativeVideoPlayer::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_PlaybackPosition
int64_t GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.set_PlaybackPosition
void GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: NativeVideoPlayer..cctor
void GlobalNamespace::NativeVideoPlayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.PlayVideo
void GlobalNamespace::NativeVideoPlayer::PlayVideo(::StringW path, ::StringW drmLicenseUrl, ::System::IntPtr surfaceObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlayVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "PlayVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(drmLicenseUrl), ::il2cpp_utils::ExtractType(surfaceObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, drmLicenseUrl, surfaceObj);
}
// Autogenerated method: NativeVideoPlayer.Stop
void GlobalNamespace::NativeVideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Play
void GlobalNamespace::NativeVideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Pause
void GlobalNamespace::NativeVideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.SetPlaybackSpeed
void GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, speed);
}
// Autogenerated method: NativeVideoPlayer.SetLooping
void GlobalNamespace::NativeVideoPlayer::SetLooping(bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(looping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, looping);
}
// Autogenerated method: NativeVideoPlayer.SetListenerRotation
void GlobalNamespace::NativeVideoPlayer::SetListenerRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetListenerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetListenerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Idle
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Idle
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Preparing
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Preparing"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Preparing
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Preparing", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Buffering
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Buffering"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Buffering
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Buffering", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ready
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ready
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ended
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ended"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ended
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ended", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action onButtonDown
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ButtonDownListener::dyn_onButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::dyn_onButtonDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onButtonDown"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ButtonDownListener.add_onButtonDown
void GlobalNamespace::ButtonDownListener::add_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::add_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.remove_onButtonDown
void GlobalNamespace::ButtonDownListener::remove_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::remove_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.OnPointerDown
void GlobalNamespace::ButtonDownListener::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ButtonDownListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MediaPlayerImage/ButtonType m_ButtonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage::ButtonType& GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaPlayerImage.get_buttonType
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::get_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::get_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MediaPlayerImage::ButtonType, false>(this, ___internal__method);
}
// Autogenerated method: MediaPlayerImage.set_buttonType
void GlobalNamespace::MediaPlayerImage::set_buttonType(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::set_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MediaPlayerImage.OnPopulateMesh
void GlobalNamespace::MediaPlayerImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Image*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage/ButtonType
#include "GlobalNamespace/MediaPlayerImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Play
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Play"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Play
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Play", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Pause
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Pause"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Pause
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Pause", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType FastForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "FastForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType FastForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "FastForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Rewind
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Rewind"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Rewind
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Rewind", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipBack
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipBack"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipBack
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipBack", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Stop
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Stop
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Stop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean videoPausedBeforeAppPause
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPausedBeforeAppPause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer videoPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer*& GlobalNamespace::MoviePlayerSample::dyn_videoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::MoviePlayerSample::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer mediaRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlaying>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlaying>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Duration>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Duration>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <PlaybackPosition>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture copyTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MoviePlayerSample::dyn_copyTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_copyTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material externalTex2DMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalTex2DMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MovieName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_MovieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_MovieName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MovieName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DrmLicenseUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrmLicenseUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LoopVideo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_LoopVideo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_LoopVideo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopVideo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoShape Shape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn_Shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Shape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoStereo Stereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Stereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_DisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoShape _LastShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoStereo _LastStereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn__LastStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastStereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastStereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LastDisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample.get_IsPlaying
bool GlobalNamespace::MoviePlayerSample::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_IsPlaying
void GlobalNamespace::MoviePlayerSample::set_IsPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_Duration
int64_t GlobalNamespace::MoviePlayerSample::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_Duration
void GlobalNamespace::MoviePlayerSample::set_Duration(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_PlaybackPosition
int64_t GlobalNamespace::MoviePlayerSample::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_PlaybackPosition
void GlobalNamespace::MoviePlayerSample::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.Awake
void GlobalNamespace::MoviePlayerSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.IsLocalVideo
bool GlobalNamespace::MoviePlayerSample::IsLocalVideo(::StringW movieName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::IsLocalVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(movieName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, movieName);
}
// Autogenerated method: MoviePlayerSample.UpdateShapeAndStereo
void GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShapeAndStereo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Start
::System::Collections::IEnumerator* GlobalNamespace::MoviePlayerSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play(::StringW moviePath, ::StringW drmLicencesUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moviePath), ::il2cpp_utils::ExtractType(drmLicencesUrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moviePath, drmLicencesUrl);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Pause
void GlobalNamespace::MoviePlayerSample::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SeekTo
void GlobalNamespace::MoviePlayerSample::SeekTo(int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SeekTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: MoviePlayerSample.Update
void GlobalNamespace::MoviePlayerSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SetPlaybackSpeed
void GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: MoviePlayerSample.Stop
void GlobalNamespace::MoviePlayerSample::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.OnApplicationPause
void GlobalNamespace::MoviePlayerSample::OnApplicationPause(bool appWasPaused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appWasPaused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appWasPaused);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoShape
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _360
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_360"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _360
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__360(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_360", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _180
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_180"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _180
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__180(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_180", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape Quad
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape Quad
void GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "Quad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoStereo
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo Mono
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo Mono
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo TopBottom
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "TopBottom"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo TopBottom
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "TopBottom", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo LeftRight
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo LeftRight
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "LeftRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.IDisposable.Dispose
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.MoveNext
bool GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String moviePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moviePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String drmLicencesUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drmLicencesUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<>c__DisplayClass33_0.<Play>b__0
void GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::$Play$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::<Play>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Play>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample Player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSampleControls::dyn_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRInputModule InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRGazePointer GazePointer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGazePointer*& GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazePointer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGazePointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener PlayPause
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage PlayPauseImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPauseImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider ProgressBar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressBar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener FastForward
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForward"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage FastForwardImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForwardImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener Rewind
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rewind"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage RewindImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RewindImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeoutTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeoutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastButtonTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastButtonTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didSeek
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didSeek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _seekPreviousPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seekPreviousPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _rewindStartPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rewindStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSampleControls/PlaybackState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSampleControls::PlaybackState& GlobalNamespace::MoviePlayerSampleControls::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSampleControls.Start
void GlobalNamespace::MoviePlayerSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnPlayPauseClicked
void GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayPauseClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnFastForwardClicked
void GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFastForwardClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnRewindClicked
void GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRewindClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnSeekBarMoved
void GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSeekBarMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSampleControls.Seek
void GlobalNamespace::MoviePlayerSampleControls::Seek(int64_t pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: MoviePlayerSampleControls.Update
void GlobalNamespace::MoviePlayerSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.SetVisible
void GlobalNamespace::MoviePlayerSampleControls::SetVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls/PlaybackState
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Playing
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Playing
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Paused
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Paused
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Rewinding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Rewinding", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator
#include "GlobalNamespace/OVROverlayMeshGenerator.hpp"
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] BottomLeft
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] BottomLeft
void GlobalNamespace::OVROverlayMeshGenerator::_set_BottomLeft(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] RightVector
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_RightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_RightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "RightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] RightVector
void GlobalNamespace::OVROverlayMeshGenerator::_set_RightVector(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_RightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "RightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] UpVector
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_UpVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_UpVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "UpVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] UpVector
void GlobalNamespace::OVROverlayMeshGenerator::_set_UpVector(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_UpVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "UpVector", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _Mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> _Verts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Verts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> _UV
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__UV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UV"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _Tris
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Tris"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay _Overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _MeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshCollider _MeshCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _CameraRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CameraRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _Transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay/OverlayShape _LastShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayShape& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastRectLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastRectRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRectRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _Awake
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlayMeshGenerator::dyn__Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Awake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Awake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlayMeshGenerator..cctor
void GlobalNamespace::OVROverlayMeshGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.Awake
void GlobalNamespace::OVROverlayMeshGenerator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.GetBoundingRect
::UnityEngine::Rect GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect(::UnityEngine::Rect a, ::UnityEngine::Rect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoundingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, a, b);
}
// Autogenerated method: OVROverlayMeshGenerator.Update
void GlobalNamespace::OVROverlayMeshGenerator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.UpdateMesh
void GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh(::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shape, position, rotation, scale, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.GenerateMesh
void GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uvs, ::System::Collections::Generic::List_1<int>* tris, ::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GenerateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uvs, tris, shape, position, rotation, scale, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV(float theta, float phi, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert(float theta, float phi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildSphere
void GlobalNamespace::OVROverlayMeshGenerator::BuildSphere(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, float worldScale, int latitudes, int longitudes, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(latitudes), ::il2cpp_utils::ExtractType(longitudes), ::il2cpp_utils::ExtractType(expand_coef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, position, rotation, scale, rect, worldScale, latitudes, longitudes, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, ::UnityEngine::Vector2 sideUV, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideUV), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideUV, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, ::UnityEngine::Vector2 sideUV, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideUV), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideUV, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildCube
void GlobalNamespace::OVROverlayMeshGenerator::BuildCube(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, float worldScale, int subQuads, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(subQuads), ::il2cpp_utils::ExtractType(expand_coef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, position, rotation, scale, worldScale, subQuads, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildQuad
void GlobalNamespace::OVROverlayMeshGenerator::BuildQuad(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildHemicylinder
void GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, int longitudes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildHemicylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(longitudes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, scale, rect, longitudes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Right
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Right
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Left
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Left
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Top
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Top"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Top
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Bottom
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Bottom
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Front
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Front"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Front
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Front", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Back
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Back
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace COUNT
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace COUNT
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VectorUtil
#include "GlobalNamespace/VectorUtil.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VectorUtil.ToVector
::UnityEngine::Vector4 GlobalNamespace::VectorUtil::ToVector(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VectorUtil::ToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VectorUtil", "ToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColorGrabbable
#include "OculusSampleFramework/ColorGrabbable.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_GRAB
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_GRAB
void OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
void OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::ColorGrabbable::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] m_meshRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highlight
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ColorGrabbable::dyn_m_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_highlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.get_Highlight
bool OculusSampleFramework::ColorGrabbable::get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::get_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.set_Highlight
void OculusSampleFramework::ColorGrabbable::set_Highlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::set_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable..cctor
void OculusSampleFramework::ColorGrabbable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "ColorGrabbable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.UpdateColor
void OculusSampleFramework::ColorGrabbable::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.Awake
void OculusSampleFramework::ColorGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.SetColor
void OculusSampleFramework::ColorGrabbable::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabBegin
void OculusSampleFramework::ColorGrabbable::GrabBegin(::GlobalNamespace::OVRGrabber* hand, ::UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabEnd
void OculusSampleFramework::ColorGrabbable::GrabEnd(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String m_materialColorField
[[deprecated("Use field access instead!")]] ::StringW& OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialColorField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair m_crosshair
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshair"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabManager m_crosshairManager
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabManager*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshairManager"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& OculusSampleFramework::DistanceGrabbable::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_mpb
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& OculusSampleFramework::DistanceGrabbable::dyn_m_mpb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_mpb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mpb"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_inRange
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_inRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_inRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_targeted
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_targeted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targeted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_InRange
bool OculusSampleFramework::DistanceGrabbable::get_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_InRange
void OculusSampleFramework::DistanceGrabbable::set_InRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_Targeted
bool OculusSampleFramework::DistanceGrabbable::get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_Targeted
void OculusSampleFramework::DistanceGrabbable::set_Targeted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.RefreshCrosshair
void OculusSampleFramework::DistanceGrabbable::RefreshCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::RefreshCrosshair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCrosshair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.SetColor
void OculusSampleFramework::DistanceGrabbable::SetColor(::UnityEngine::Color focusColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusColor);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.ClearColor
void OculusSampleFramework::DistanceGrabbable::ClearColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::ClearColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.Start
void OculusSampleFramework::DistanceGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color m_focusColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::DistanceGrabber::dyn_m_focusColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_focusColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_focusColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_spherecastRadius
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_noSnapThreshhold
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_noSnapThreshhold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_preventGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preventGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullVelocity
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullMaxRotationRate
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullMaxRotationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_movingObjectToHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movingObjectToHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxGrabDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxGrabDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_grabObjectsInLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabObjectsInLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_obstructionLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_obstructionLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber m_otherHand
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabber*& OculusSampleFramework::DistanceGrabber::dyn_m_otherHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_otherHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_otherHand"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.DistanceGrabbable m_target
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabbable*& OculusSampleFramework::DistanceGrabber::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_targetCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabber::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.set_UseSpherecast
void OculusSampleFramework::DistanceGrabber::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.HitInfoToGrabbable
::OculusSampleFramework::DistanceGrabbable* OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable(::UnityEngine::RaycastHit hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "DistanceGrabber", "HitInfoToGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::DistanceGrabbable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitInfo);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTarget
bool OculusSampleFramework::DistanceGrabber::FindTarget(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTargetWithSpherecast
bool OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetWithSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Start
void OculusSampleFramework::DistanceGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Update
void OculusSampleFramework::DistanceGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabBegin
void OculusSampleFramework::DistanceGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.MoveGrabbedObject
void OculusSampleFramework::DistanceGrabber::MoveGrabbedObject(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabVolumeEnable
void OculusSampleFramework::DistanceGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.OffhandGrabbed
void OculusSampleFramework::DistanceGrabber::OffhandGrabbed(::GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_grabVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::GrabManager::dyn_m_grabVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_m_grabVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorInRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorInRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorHighlighted
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorHighlighted"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerEnter
void OculusSampleFramework::GrabManager::OnTriggerEnter(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerExit
void OculusSampleFramework::GrabManager::OnTriggerExit(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState m_state
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair::CrosshairState& OculusSampleFramework::GrabbableCrosshair::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair::CrosshairState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_centerEyeAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_centerEyeAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_targetedCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetedCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_enabledCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabledCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Start
void OculusSampleFramework::GrabbableCrosshair::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.SetState
void OculusSampleFramework::GrabbableCrosshair::SetState(::OculusSampleFramework::GrabbableCrosshair::CrosshairState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Update
void OculusSampleFramework::GrabbableCrosshair::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Disabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Disabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Enabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Enabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Targeted
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Targeted
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PauseOnInputLoss
#include "OculusSampleFramework/PauseOnInputLoss.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.Start
void OculusSampleFramework::PauseOnInputLoss::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusLost
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusAcquired
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolTags ToolTags
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolTags& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToolTags"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<OculusSampleFramework.ColliderZone> CollidersTouchingUs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidersTouchingUs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.ColliderZone> _elementsToCleanUp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsToCleanUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnDisable
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.Update
void OculusSampleFramework::BoneCapsuleTriggerLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerEnter
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerExit
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.CleanUpDeadColliders
void OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpDeadColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ENTRY_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ENTRY_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PERP_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PERP_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _proximityZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__proximityZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__proximityZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _contactZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__contactZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _actionZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__actionZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__actionZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest[] _contactTests
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>& OculusSampleFramework::ButtonController::dyn__contactTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactTests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactTests"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonPlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _makeSureToolIsOnPositiveSide
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeSureToolIsOnPositiveSide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localButtonDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::ButtonController::dyn__localButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__localButtonDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localButtonDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableToolTags[] _allValidToolsTags
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::InteractableToolTags>& OculusSampleFramework::ButtonController::dyn__allValidToolsTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allValidToolsTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allValidToolsTags"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::InteractableToolTags>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _toolTagsMask
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::dyn__toolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolTagsMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolTagsMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableState _currentButtonState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::ButtonController::dyn__currentButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__currentButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentButtonState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.InteractableTool,OculusSampleFramework.InteractableState> _toolToState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>*& OculusSampleFramework::ButtonController::dyn__toolToState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolToState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolToState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_LocalButtonDirection
::UnityEngine::Vector3 OculusSampleFramework::ButtonController::get_LocalButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_LocalButtonDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalButtonDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.CallEventsOnOldDepth
void OculusSampleFramework::ButtonController::CallEventsOnOldDepth(::OculusSampleFramework::InteractableCollisionDepth oldDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::CallEventsOnOldDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallEventsOnOldDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.CallEventsOnNewDepth
void OculusSampleFramework::ButtonController::CallEventsOnNewDepth(::OculusSampleFramework::InteractableCollisionDepth newDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::CallEventsOnNewDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallEventsOnNewDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.SustainEventsOnDepth
void OculusSampleFramework::ButtonController::SustainEventsOnDepth(::OculusSampleFramework::InteractableCollisionDepth depth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::SustainEventsOnDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SustainEventsOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.IsValidContact
bool OculusSampleFramework::ButtonController::IsValidContact(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::IsValidContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassEntryTest
bool OculusSampleFramework::ButtonController::PassEntryTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassEntryTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassEntryTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassPerpTest
bool OculusSampleFramework::ButtonController::PassPerpTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassPerpTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassPerpTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_ValidToolTagsMask
int OculusSampleFramework::ButtonController::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.Awake
void OculusSampleFramework::ButtonController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.UpdateCollisionDepth
void OculusSampleFramework::ButtonController::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth collisionDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, collisionDepth, collidingTool);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest
#include "OculusSampleFramework/ButtonController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest PerpenTest
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest PerpenTest
void OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest BackwardsPress
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest BackwardsPress
void OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::ContactTest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonTriggerZone
#include "OculusSampleFramework/ButtonTriggerZone.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _parentInteractableObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentInteractableObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable <ParentInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ButtonTriggerZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_Collider
void OculusSampleFramework::ButtonTriggerZone::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_ParentInteractable
void OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable(::OculusSampleFramework::Interactable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.Awake
void OculusSampleFramework::ButtonTriggerZone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.ColliderZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ColliderZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ColliderZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ColliderZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZone Collider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::ColliderZoneArgs::dyn_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Collider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single FrameTime
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractionType InteractionT
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractionType& OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractionT"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Enter
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Enter"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Enter
void OculusSampleFramework::InteractionType::_set_Enter(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Enter", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Stay
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Stay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Stay
void OculusSampleFramework::InteractionType::_set_Stay(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Stay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Exit
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Exit
void OculusSampleFramework::InteractionType::_set_Exit(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Exit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SKELETON_VISUALIZER_NAME
::StringW OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SKELETON_VISUALIZER_NAME
void OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager*>("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
void OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode VisualMode
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager::HandsVisualMode& OculusSampleFramework::HandsManager::dyn_VisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_VisualMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisualMode"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager::HandsVisualMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] _hand
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRHand*>& OculusSampleFramework::HandsManager::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] _handSkeleton
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeleton*>& OculusSampleFramework::HandsManager::dyn__handSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeleton"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer[] _handSkeletonRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>& OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh[] _handMesh
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMesh*>& OculusSampleFramework::HandsManager::dyn__handMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMesh"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer[] _handMeshRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMeshRenderer*>& OculusSampleFramework::HandsManager::dyn__handMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMeshRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _leftMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__leftMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _rightMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__rightMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentHandAlpha
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::HandsManager::dyn__currentHandAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__currentHandAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHandAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HandAlphaId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::dyn_HandAlphaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_HandAlphaId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandAlphaId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHand
void OculusSampleFramework::HandsManager::set_RightHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_RightHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeleton
void OculusSampleFramework::HandsManager::set_RightHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_RightHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMesh
void OculusSampleFramework::HandsManager::set_RightHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_RightHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMeshRenderer
void OculusSampleFramework::HandsManager::set_RightHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHand
void OculusSampleFramework::HandsManager::set_LeftHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_LeftHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeleton
void OculusSampleFramework::HandsManager::set_LeftHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_LeftHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMesh
void OculusSampleFramework::HandsManager::set_LeftHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMeshRenderer
void OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_Instance
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::HandsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_Instance
void OculusSampleFramework::HandsManager::set_Instance(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Awake
void OculusSampleFramework::HandsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Update
void OculusSampleFramework::HandsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.FindSkeletonVisualGameObjects
::System::Collections::IEnumerator* OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSkeletonVisualGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SwitchVisualization
void OculusSampleFramework::HandsManager::SwitchVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SetToCurrentVisualMode
void OculusSampleFramework::HandsManager::SetToCurrentVisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SetToCurrentVisualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCurrentVisualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.GetCapsulesPerBone
::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>* OculusSampleFramework::HandsManager::GetCapsulesPerBone(::GlobalNamespace::OVRSkeleton* skeleton, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::GetCapsulesPerBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "GetCapsulesPerBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeleton, boneId);
}
// Autogenerated method: OculusSampleFramework.HandsManager.IsInitialized
bool OculusSampleFramework::HandsManager::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode
#include "OculusSampleFramework/HandsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Mesh
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Mesh
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Skeleton
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Skeleton
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Both
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Both
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.IDisposable.Dispose
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.MoveNext
bool OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.Reset
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _proximityZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__proximityZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__proximityZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _contactZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__contactZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__contactZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _actionZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__actionZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__actionZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ProximityZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ProximityZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ProximityZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProximityZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ContactZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ContactZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ContactZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContactZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ActionZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ActionZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ActionZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActionZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent InteractableStateChanged
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable::InteractableStateArgsEvent*& OculusSampleFramework::Interactable::dyn_InteractableStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_InteractableStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableStateChanged"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable::InteractableStateArgsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ProximityCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ProximityCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ProximityCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProximityCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ContactCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ContactCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ContactCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContactCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ActionCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ActionCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ActionCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActionCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ValidToolTagsMask
int OculusSampleFramework::Interactable::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ProximityZoneEvent
void OculusSampleFramework::Interactable::add_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ProximityZoneEvent
void OculusSampleFramework::Interactable::remove_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ContactZoneEvent
void OculusSampleFramework::Interactable::add_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ContactZoneEvent
void OculusSampleFramework::Interactable::remove_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ActionZoneEvent
void OculusSampleFramework::Interactable::add_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ActionZoneEvent
void OculusSampleFramework::Interactable::remove_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnProximityZoneEvent
void OculusSampleFramework::Interactable::OnProximityZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnProximityZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnContactZoneEvent
void OculusSampleFramework::Interactable::OnContactZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnContactZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnActionZoneEvent
void OculusSampleFramework::Interactable::OnActionZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnActionZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.UpdateCollisionDepth
void OculusSampleFramework::Interactable::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth collisionDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, collisionDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.Interactable.Awake
void OculusSampleFramework::Interactable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnDestroy
void OculusSampleFramework::Interactable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth None
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth None
void OculusSampleFramework::InteractableCollisionDepth::_set_None(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Proximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Proximity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Proximity"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
void OculusSampleFramework::InteractableCollisionDepth::_set_Proximity(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Proximity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Proximity", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
void OculusSampleFramework::InteractableCollisionDepth::_set_Contact(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Action
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Action
void OculusSampleFramework::InteractableCollisionDepth::_set_Action(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableCollisionDepth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableState
#include "OculusSampleFramework/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState Default
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState Default
void OculusSampleFramework::InteractableState::_set_Default(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ProximityState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ProximityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ProximityState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ProximityState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ProximityState
void OculusSampleFramework::InteractableState::_set_ProximityState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ProximityState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ProximityState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ContactState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ContactState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ContactState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ContactState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ContactState
void OculusSampleFramework::InteractableState::_set_ContactState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ContactState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ContactState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ActionState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ActionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ActionState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ActionState
void OculusSampleFramework::InteractableState::_set_ActionState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ActionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ActionState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.Interactable Interactable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::InteractableStateArgs::dyn_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool Tool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableStateArgs::dyn_Tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState OldInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OldInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState NewInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZoneArgs ColliderArgs
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZoneArgs*& OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderArgs"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZoneArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
