// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.MonoEventInfo
#include "System/Reflection/MonoEventInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.MonoEvent
#include "System/Reflection/MonoEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type declaring_type
::System::Type*& System::Reflection::MonoEventInfo::dyn_declaring_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_declaring_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaring_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type reflected_type
::System::Type*& System::Reflection::MonoEventInfo::dyn_reflected_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_reflected_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reflected_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& System::Reflection::MonoEventInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo add_method
::System::Reflection::MethodInfo*& System::Reflection::MonoEventInfo::dyn_add_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_add_method");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "add_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo remove_method
::System::Reflection::MethodInfo*& System::Reflection::MonoEventInfo::dyn_remove_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_remove_method");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remove_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo raise_method
::System::Reflection::MethodInfo*& System::Reflection::MonoEventInfo::dyn_raise_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_raise_method");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raise_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.EventAttributes attrs
::System::Reflection::EventAttributes& System::Reflection::MonoEventInfo::dyn_attrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_attrs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrs"))->offset;
  return *reinterpret_cast<::System::Reflection::EventAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo[] other_methods
::ArrayW<::System::Reflection::MethodInfo*>& System::Reflection::MonoEventInfo::dyn_other_methods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::dyn_other_methods");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other_methods"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::MethodInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoEventInfo.get_event_info
void System::Reflection::MonoEventInfo::get_event_info(::System::Reflection::MonoEvent* ev, ByRef<::System::Reflection::MonoEventInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::get_event_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoEventInfo", "get_event_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ev), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MonoEventInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ev, byref(info));
}
// Autogenerated method: System.Reflection.MonoEventInfo.GetEventInfo
::System::Reflection::MonoEventInfo System::Reflection::MonoEventInfo::GetEventInfo(::System::Reflection::MonoEvent* ev) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEventInfo::GetEventInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoEventInfo", "GetEventInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ev)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MonoEventInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ev);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimeEventInfo
#include "System/Reflection/RuntimeEventInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RuntimeEventInfo.get_BindingFlags
::System::Reflection::BindingFlags System::Reflection::RuntimeEventInfo::get_BindingFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::get_BindingFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeEventInfo.get_ReflectedTypeInternal
::System::RuntimeType* System::Reflection::RuntimeEventInfo::get_ReflectedTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::get_ReflectedTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeEventInfo.GetDeclaringTypeInternal
::System::RuntimeType* System::Reflection::RuntimeEventInfo::GetDeclaringTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::GetDeclaringTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeclaringTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeEventInfo.GetRuntimeModule
::System::Reflection::RuntimeModule* System::Reflection::RuntimeEventInfo::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeEventInfo.GetObjectData
void System::Reflection::RuntimeEventInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.RuntimeEventInfo.get_Module
::System::Reflection::Module* System::Reflection::RuntimeEventInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeEventInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoEvent
#include "System/Reflection/MonoEvent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr klass
::System::IntPtr& System::Reflection::MonoEvent::dyn_klass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::dyn_klass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "klass"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr handle
::System::IntPtr& System::Reflection::MonoEvent::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoEvent.get_DeclaringType
::System::Type* System::Reflection::MonoEvent::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoEvent.get_ReflectedType
::System::Type* System::Reflection::MonoEvent::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoEvent.get_Name
::StringW System::Reflection::MonoEvent::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoEvent.GetAddMethod
::System::Reflection::MethodInfo* System::Reflection::MonoEvent::GetAddMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetAddMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAddMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoEvent.GetRaiseMethod
::System::Reflection::MethodInfo* System::Reflection::MonoEvent::GetRaiseMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetRaiseMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRaiseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoEvent.GetRemoveMethod
::System::Reflection::MethodInfo* System::Reflection::MonoEvent::GetRemoveMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetRemoveMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoveMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoEvent.ToString
::StringW System::Reflection::MonoEvent::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoEvent.IsDefined
bool System::Reflection::MonoEvent::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoEvent.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoEvent::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MonoEvent.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoEvent::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoEvent.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::Reflection::MonoEvent::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoEvent::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RuntimeFieldInfo.get_BindingFlags
::System::Reflection::BindingFlags System::Reflection::RuntimeFieldInfo::get_BindingFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::get_BindingFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeFieldInfo.get_ReflectedTypeInternal
::System::RuntimeType* System::Reflection::RuntimeFieldInfo::get_ReflectedTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::get_ReflectedTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeFieldInfo.GetDeclaringTypeInternal
::System::RuntimeType* System::Reflection::RuntimeFieldInfo::GetDeclaringTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::GetDeclaringTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeclaringTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeFieldInfo.GetRuntimeModule
::System::Reflection::RuntimeModule* System::Reflection::RuntimeFieldInfo::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeFieldInfo.GetObjectData
void System::Reflection::RuntimeFieldInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.RuntimeFieldInfo.get_Module
::System::Reflection::Module* System::Reflection::RuntimeFieldInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeFieldInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.RtFieldInfo
#include "System/Reflection/RtFieldInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.TypedReference
#include "System/TypedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RtFieldInfo.UnsafeGetValue
::Il2CppObject* System::Reflection::RtFieldInfo::UnsafeGetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RtFieldInfo::UnsafeGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.RtFieldInfo.CheckConsistency
void System::Reflection::RtFieldInfo::CheckConsistency(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RtFieldInfo::CheckConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Reflection.RtFieldInfo.UnsafeSetValue
void System::Reflection::RtFieldInfo::UnsafeSetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RtFieldInfo::UnsafeSetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeSetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, culture);
}
// Autogenerated method: System.Reflection.RtFieldInfo.SetValueDirect
void System::Reflection::RtFieldInfo::SetValueDirect(::System::TypedReference obj, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RtFieldInfo::SetValueDirect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoField
#include "System/Reflection/MonoField.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr klass
::System::IntPtr& System::Reflection::MonoField::dyn_klass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::dyn_klass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "klass"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.RuntimeFieldHandle fhandle
::System::RuntimeFieldHandle& System::Reflection::MonoField::dyn_fhandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::dyn_fhandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fhandle"))->offset;
  return *reinterpret_cast<::System::RuntimeFieldHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Reflection::MonoField::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
::System::Type*& System::Reflection::MonoField::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.FieldAttributes attrs
::System::Reflection::FieldAttributes& System::Reflection::MonoField::dyn_attrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::dyn_attrs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrs"))->offset;
  return *reinterpret_cast<::System::Reflection::FieldAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoField.ResolveType
::System::Type* System::Reflection::MonoField::ResolveType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::ResolveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.GetParentType
::System::Type* System::Reflection::MonoField::GetParentType(bool declaring) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetParentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(declaring)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, declaring);
}
// Autogenerated method: System.Reflection.MonoField.GetValueInternal
::Il2CppObject* System::Reflection::MonoField::GetValueInternal(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.MonoField.SetValueInternal
void System::Reflection::MonoField::SetValueInternal(::System::Reflection::FieldInfo* fi, ::Il2CppObject* obj, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::SetValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoField", "SetValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fi), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fi, obj, value);
}
// Autogenerated method: System.Reflection.MonoField.CheckGeneric
void System::Reflection::MonoField::CheckGeneric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::CheckGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_Attributes
::System::Reflection::FieldAttributes System::Reflection::MonoField::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_FieldHandle
::System::RuntimeFieldHandle System::Reflection::MonoField::get_FieldHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_FieldHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeFieldHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_FieldType
::System::Type* System::Reflection::MonoField::get_FieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_FieldType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_ReflectedType
::System::Type* System::Reflection::MonoField::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_DeclaringType
::System::Type* System::Reflection::MonoField::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.get_Name
::StringW System::Reflection::MonoField::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.IsDefined
bool System::Reflection::MonoField::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoField.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoField::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MonoField.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoField::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoField.GetFieldOffset
int System::Reflection::MonoField::GetFieldOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetFieldOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.GetValue
::Il2CppObject* System::Reflection::MonoField::GetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.MonoField.ToString
::StringW System::Reflection::MonoField::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.SetValue
void System::Reflection::MonoField::SetValue(::Il2CppObject* obj, ::Il2CppObject* val, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, val, invokeAttr, binder, culture);
}
// Autogenerated method: System.Reflection.MonoField.GetRawConstantValue
::Il2CppObject* System::Reflection::MonoField::GetRawConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetRawConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoField.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::Reflection::MonoField::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoField::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.MonoMethodInfo
#include "System/Reflection/MonoMethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type parent
::System::Type*& System::Reflection::MonoMethodInfo::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::dyn_parent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type ret
::System::Type*& System::Reflection::MonoMethodInfo::dyn_ret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::dyn_ret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ret"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Reflection.MethodAttributes attrs
::System::Reflection::MethodAttributes& System::Reflection::MonoMethodInfo::dyn_attrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::dyn_attrs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrs"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Reflection.MethodImplAttributes iattrs
::System::Reflection::MethodImplAttributes& System::Reflection::MonoMethodInfo::dyn_iattrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::dyn_iattrs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iattrs"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodImplAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.CallingConventions callconv
::System::Reflection::CallingConventions& System::Reflection::MonoMethodInfo::dyn_callconv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::dyn_callconv");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callconv"))->offset;
  return *reinterpret_cast<::System::Reflection::CallingConventions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.get_method_info
void System::Reflection::MonoMethodInfo::get_method_info(::System::IntPtr handle, ByRef<::System::Reflection::MonoMethodInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::get_method_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "get_method_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MonoMethodInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(info));
}
// Autogenerated method: System.Reflection.MonoMethodInfo.get_method_attributes
int System::Reflection::MonoMethodInfo::get_method_attributes(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::get_method_attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "get_method_attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetMethodInfo
::System::Reflection::MonoMethodInfo System::Reflection::MonoMethodInfo::GetMethodInfo(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MonoMethodInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetDeclaringType
::System::Type* System::Reflection::MonoMethodInfo::GetDeclaringType(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetDeclaringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetDeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetReturnType
::System::Type* System::Reflection::MonoMethodInfo::GetReturnType(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetReturnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetAttributes
::System::Reflection::MethodAttributes System::Reflection::MonoMethodInfo::GetAttributes(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetCallingConvention
::System::Reflection::CallingConventions System::Reflection::MonoMethodInfo::GetCallingConvention(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetCallingConvention");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetCallingConvention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::CallingConventions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::MonoMethodInfo::GetMethodImplementationFlags(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetMethodImplementationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.get_parameter_info
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoMethodInfo::get_parameter_info(::System::IntPtr handle, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::get_parameter_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "get_parameter_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, member);
}
// Autogenerated method: System.Reflection.MonoMethodInfo.GetParametersInfo
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoMethodInfo::GetParametersInfo(::System::IntPtr handle, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethodInfo::GetParametersInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethodInfo", "GetParametersInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, member);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RuntimeMethodInfo.get_BindingFlags
::System::Reflection::BindingFlags System::Reflection::RuntimeMethodInfo::get_BindingFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::get_BindingFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.get_ReflectedTypeInternal
::System::RuntimeType* System::Reflection::RuntimeMethodInfo::get_ReflectedTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::get_ReflectedTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.GetRuntimeModule
::System::Reflection::RuntimeModule* System::Reflection::RuntimeMethodInfo::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.GetObjectData
void System::Reflection::RuntimeMethodInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.SerializationToString
::StringW System::Reflection::RuntimeMethodInfo::SerializationToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::SerializationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.get_Module
::System::Reflection::Module* System::Reflection::RuntimeMethodInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.FormatNameAndSig
::StringW System::Reflection::RuntimeMethodInfo::FormatNameAndSig(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::FormatNameAndSig");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatNameAndSig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.Reflection.RuntimeMethodInfo.ToString
::StringW System::Reflection::RuntimeMethodInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeMethodInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoMethod
#include "System/Reflection/MonoMethod.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.PInvokeAttributes
#include "System/Reflection/PInvokeAttributes.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr mhandle
::System::IntPtr& System::Reflection::MonoMethod::dyn_mhandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::dyn_mhandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mhandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Reflection::MonoMethod::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type reftype
::System::Type*& System::Reflection::MonoMethod::dyn_reftype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::dyn_reftype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reftype"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoMethod.get_name
::StringW System::Reflection::MonoMethod::get_name(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethod", "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_base_method
::System::Reflection::MonoMethod* System::Reflection::MonoMethod::get_base_method(::System::Reflection::MonoMethod* method, bool definition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_base_method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethod", "get_base_method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(definition)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MonoMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, definition);
}
// Autogenerated method: System.Reflection.MonoMethod.InternalInvoke
::Il2CppObject* System::Reflection::MonoMethod::InternalInvoke(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> parameters, ByRef<::System::Exception*> exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::InternalInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractIndependentType<::System::Exception*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, parameters, byref(exc));
}
// Autogenerated method: System.Reflection.MonoMethod.ConvertValues
void System::Reflection::MonoMethod::ConvertValues(::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterInfo*> pinfo, ::System::Globalization::CultureInfo* culture, ::System::Reflection::BindingFlags invokeAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::ConvertValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethod", "ConvertValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(pinfo), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(invokeAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binder, args, pinfo, culture, invokeAttr);
}
// Autogenerated method: System.Reflection.MonoMethod.GetPInvoke
void System::Reflection::MonoMethod::GetPInvoke(ByRef<::System::Reflection::PInvokeAttributes> flags, ByRef<::StringW> entryPoint, ByRef<::StringW> dllName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetPInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Reflection::PInvokeAttributes&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(flags), byref(entryPoint), byref(dllName));
}
// Autogenerated method: System.Reflection.MonoMethod.GetPseudoCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoMethod::GetPseudoCustomAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetPseudoCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPseudoCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.MakeGenericMethod_impl
::System::Reflection::MethodInfo* System::Reflection::MonoMethod::MakeGenericMethod_impl(::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::MakeGenericMethod_impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod_impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, types);
}
// Autogenerated method: System.Reflection.MonoMethod.GetGenericMethodDefinition_impl
::System::Reflection::MethodInfo* System::Reflection::MonoMethod::GetGenericMethodDefinition_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetGenericMethodDefinition_impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericMethodDefinition_impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_core_clr_security_level
int System::Reflection::MonoMethod::get_core_clr_security_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_core_clr_security_level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoMethod", "get_core_clr_security_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_ReturnType
::System::Type* System::Reflection::MonoMethod::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::MonoMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::MonoMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_CallingConvention
::System::Reflection::CallingConventions System::Reflection::MonoMethod::get_CallingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_CallingConvention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallingConvention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::CallingConventions, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_ReflectedType
::System::Type* System::Reflection::MonoMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_DeclaringType
::System::Type* System::Reflection::MonoMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_Name
::StringW System::Reflection::MonoMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_IsGenericMethodDefinition
bool System::Reflection::MonoMethod::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_IsGenericMethod
bool System::Reflection::MonoMethod::get_IsGenericMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_IsGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_ContainsGenericParameters
bool System::Reflection::MonoMethod::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.get_IsSecurityCritical
bool System::Reflection::MonoMethod::get_IsSecurityCritical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::get_IsSecurityCritical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecurityCritical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetBaseMethod
::System::Reflection::MethodInfo* System::Reflection::MonoMethod::GetBaseMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetBaseMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::MonoMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetParametersInternal
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoMethod::GetParametersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetParametersInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetParametersCount
int System::Reflection::MonoMethod::GetParametersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetParametersCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.Invoke
::Il2CppObject* System::Reflection::MonoMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.MonoMethod.IsDefined
bool System::Reflection::MonoMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MonoMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoMethod.MakeGenericMethod
::System::Reflection::MethodInfo* System::Reflection::MonoMethod::MakeGenericMethod(::ArrayW<::System::Type*> methodInstantiation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodInstantiation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, methodInstantiation);
}
// Autogenerated method: System.Reflection.MonoMethod.GetGenericArguments
::ArrayW<::System::Type*> System::Reflection::MonoMethod::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetGenericMethodDefinition
::System::Reflection::MethodInfo* System::Reflection::MonoMethod::GetGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoMethod.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::Reflection::MonoMethod::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoMethod::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.get_BindingFlags
::System::Reflection::BindingFlags System::Reflection::RuntimeConstructorInfo::get_BindingFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::get_BindingFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.get_ReflectedTypeInternal
::System::RuntimeType* System::Reflection::RuntimeConstructorInfo::get_ReflectedTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::get_ReflectedTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.GetRuntimeModule
::System::Reflection::RuntimeModule* System::Reflection::RuntimeConstructorInfo::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.GetObjectData
void System::Reflection::RuntimeConstructorInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.SerializationToString
::StringW System::Reflection::RuntimeConstructorInfo::SerializationToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::SerializationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.SerializationInvoke
void System::Reflection::RuntimeConstructorInfo::SerializationInvoke(::Il2CppObject* target, ::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::SerializationInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializationInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, info, context);
}
// Autogenerated method: System.Reflection.RuntimeConstructorInfo.get_Module
::System::Reflection::Module* System::Reflection::RuntimeConstructorInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimeConstructorInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr mhandle
::System::IntPtr& System::Reflection::MonoCMethod::dyn_mhandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::dyn_mhandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mhandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Reflection::MonoCMethod::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type reftype
::System::Type*& System::Reflection::MonoCMethod::dyn_reftype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::dyn_reftype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reftype"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoCMethod.InternalInvoke
::Il2CppObject* System::Reflection::MonoCMethod::InternalInvoke(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> parameters, ByRef<::System::Exception*> exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::InternalInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractIndependentType<::System::Exception*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, parameters, byref(exc));
}
// Autogenerated method: System.Reflection.MonoCMethod.DoInvoke
::Il2CppObject* System::Reflection::MonoCMethod::DoInvoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::DoInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.MonoCMethod.InternalInvoke
::Il2CppObject* System::Reflection::MonoCMethod::InternalInvoke(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::InternalInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, parameters);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_core_clr_security_level
int System::Reflection::MonoCMethod::get_core_clr_security_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_core_clr_security_level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoCMethod", "get_core_clr_security_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::MonoCMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::MonoCMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_CallingConvention
::System::Reflection::CallingConventions System::Reflection::MonoCMethod::get_CallingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_CallingConvention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallingConvention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::CallingConventions, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_ContainsGenericParameters
bool System::Reflection::MonoCMethod::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_ReflectedType
::System::Type* System::Reflection::MonoCMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_DeclaringType
::System::Type* System::Reflection::MonoCMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_Name
::StringW System::Reflection::MonoCMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.get_IsSecurityCritical
bool System::Reflection::MonoCMethod::get_IsSecurityCritical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::get_IsSecurityCritical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecurityCritical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::MonoCMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoCMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetParametersInternal
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoCMethod::GetParametersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetParametersInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetParametersCount
int System::Reflection::MonoCMethod::GetParametersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetParametersCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParametersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.Invoke
::Il2CppObject* System::Reflection::MonoCMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.MonoCMethod.Invoke
::Il2CppObject* System::Reflection::MonoCMethod::Invoke(::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.MonoCMethod.IsDefined
bool System::Reflection::MonoCMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoCMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoCMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoCMethod.ToString
::StringW System::Reflection::MonoCMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoCMethod.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::Reflection::MonoCMethod::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoCMethod::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoModule
#include "System/Reflection/MonoModule.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MonoModule.GetRuntimeAssembly
::System::Reflection::RuntimeAssembly* System::Reflection::MonoModule::GetRuntimeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::GetRuntimeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeAssembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoModule.get_Assembly
::System::Reflection::Assembly* System::Reflection::MonoModule::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoModule.get_ScopeName
::StringW System::Reflection::MonoModule::get_ScopeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::get_ScopeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScopeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoModule.get_ModuleVersionId
::System::Guid System::Reflection::MonoModule::get_ModuleVersionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::get_ModuleVersionId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ModuleVersionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoModule.IsResource
bool System::Reflection::MonoModule::IsResource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::IsResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoModule.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoModule::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoModule.IsDefined
bool System::Reflection::MonoModule::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoModule.GetObjectData
void System::Reflection::MonoModule::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoModule::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimeParameterInfo
#include "System/Reflection/RuntimeParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoParameterInfo
#include "System/Reflection/MonoParameterInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MonoParameterInfo.get_DefaultValue
::Il2CppObject* System::Reflection::MonoParameterInfo::get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoParameterInfo::get_DefaultValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoParameterInfo.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoParameterInfo::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoParameterInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoParameterInfo.IsDefined
bool System::Reflection::MonoParameterInfo::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoParameterInfo::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoPropertyInfo
#include "System/Reflection/MonoPropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.MonoProperty
#include "System/Reflection/MonoProperty.hpp"
// Including type: System.Reflection.PInfo
#include "System/Reflection/PInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type parent
::System::Type*& System::Reflection::MonoPropertyInfo::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_parent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type declaring_type
::System::Type*& System::Reflection::MonoPropertyInfo::dyn_declaring_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_declaring_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaring_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& System::Reflection::MonoPropertyInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo get_method
::System::Reflection::MethodInfo*& System::Reflection::MonoPropertyInfo::dyn_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_get_method");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "get_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo set_method
::System::Reflection::MethodInfo*& System::Reflection::MonoPropertyInfo::dyn_set_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_set_method");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "set_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.PropertyAttributes attrs
::System::Reflection::PropertyAttributes& System::Reflection::MonoPropertyInfo::dyn_attrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::dyn_attrs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrs"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoPropertyInfo.get_property_info
void System::Reflection::MonoPropertyInfo::get_property_info(::System::Reflection::MonoProperty* prop, ByRef<::System::Reflection::MonoPropertyInfo> info, ::System::Reflection::PInfo req_info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::get_property_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoPropertyInfo", "get_property_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(req_info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, byref(info), req_info);
}
// Autogenerated method: System.Reflection.MonoPropertyInfo.GetTypeModifiers
::ArrayW<::System::Type*> System::Reflection::MonoPropertyInfo::GetTypeModifiers(::System::Reflection::MonoProperty* prop, bool optional) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::GetTypeModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoPropertyInfo", "GetTypeModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(optional)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, optional);
}
// Autogenerated method: System.Reflection.MonoPropertyInfo.get_default_value
::Il2CppObject* System::Reflection::MonoPropertyInfo::get_default_value(::System::Reflection::MonoProperty* prop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoPropertyInfo::get_default_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoPropertyInfo", "get_default_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.PInfo
#include "System/Reflection/PInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo Attributes
::System::Reflection::PInfo System::Reflection::PInfo::_get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "Attributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo Attributes
void System::Reflection::PInfo::_set_Attributes(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "Attributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo GetMethod
::System::Reflection::PInfo System::Reflection::PInfo::_get_GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_GetMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "GetMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo GetMethod
void System::Reflection::PInfo::_set_GetMethod(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_GetMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "GetMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo SetMethod
::System::Reflection::PInfo System::Reflection::PInfo::_get_SetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_SetMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "SetMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo SetMethod
void System::Reflection::PInfo::_set_SetMethod(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_SetMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "SetMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo ReflectedType
::System::Reflection::PInfo System::Reflection::PInfo::_get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_ReflectedType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "ReflectedType"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo ReflectedType
void System::Reflection::PInfo::_set_ReflectedType(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_ReflectedType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "ReflectedType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo DeclaringType
::System::Reflection::PInfo System::Reflection::PInfo::_get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_DeclaringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "DeclaringType"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo DeclaringType
void System::Reflection::PInfo::_set_DeclaringType(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_DeclaringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "DeclaringType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Reflection.PInfo Name
::System::Reflection::PInfo System::Reflection::PInfo::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::PInfo>("System.Reflection", "PInfo", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Reflection.PInfo Name
void System::Reflection::PInfo::_set_Name(::System::Reflection::PInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection", "PInfo", "Name", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Reflection::PInfo::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PInfo::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.RuntimePropertyInfo
#include "System/Reflection/RuntimePropertyInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.RuntimePropertyInfo.get_BindingFlags
::System::Reflection::BindingFlags System::Reflection::RuntimePropertyInfo::get_BindingFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::get_BindingFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.get_ReflectedTypeInternal
::System::RuntimeType* System::Reflection::RuntimePropertyInfo::get_ReflectedTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::get_ReflectedTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.GetDeclaringTypeInternal
::System::RuntimeType* System::Reflection::RuntimePropertyInfo::GetDeclaringTypeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::GetDeclaringTypeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeclaringTypeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.GetRuntimeModule
::System::Reflection::RuntimeModule* System::Reflection::RuntimePropertyInfo::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.FormatNameAndSig
::StringW System::Reflection::RuntimePropertyInfo::FormatNameAndSig(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::FormatNameAndSig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatNameAndSig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.GetObjectData
void System::Reflection::RuntimePropertyInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.SerializationToString
::StringW System::Reflection::RuntimePropertyInfo::SerializationToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::SerializationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.get_Module
::System::Reflection::Module* System::Reflection::RuntimePropertyInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.RuntimePropertyInfo.ToString
::StringW System::Reflection::RuntimePropertyInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::RuntimePropertyInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoProperty
#include "System/Reflection/MonoProperty.hpp"
// Including type: System.Reflection.MonoProperty/System.Reflection.GetterAdapter
#include "System/Reflection/MonoProperty_GetterAdapter.hpp"
// Including type: System.Reflection.MonoProperty/System.Reflection.Getter`2
#include "System/Reflection/MonoProperty_Getter_2.hpp"
// Including type: System.Reflection.MonoProperty/System.Reflection.StaticGetter`1
#include "System/Reflection/MonoProperty_StaticGetter_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr klass
::System::IntPtr& System::Reflection::MonoProperty::dyn_klass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::dyn_klass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "klass"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr prop
::System::IntPtr& System::Reflection::MonoProperty::dyn_prop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::dyn_prop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prop"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MonoPropertyInfo info
::System::Reflection::MonoPropertyInfo& System::Reflection::MonoProperty::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::System::Reflection::MonoPropertyInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.PInfo cached
::System::Reflection::PInfo& System::Reflection::MonoProperty::dyn_cached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::dyn_cached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached"))->offset;
  return *reinterpret_cast<::System::Reflection::PInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MonoProperty/System.Reflection.GetterAdapter cached_getter
::System::Reflection::MonoProperty::GetterAdapter*& System::Reflection::MonoProperty::dyn_cached_getter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::dyn_cached_getter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached_getter"))->offset;
  return *reinterpret_cast<::System::Reflection::MonoProperty::GetterAdapter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.MonoProperty.CachePropertyInfo
void System::Reflection::MonoProperty::CachePropertyInfo(::System::Reflection::PInfo flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::CachePropertyInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CachePropertyInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Reflection.MonoProperty.CreateGetterDelegate
::System::Reflection::MonoProperty::GetterAdapter* System::Reflection::MonoProperty::CreateGetterDelegate(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::CreateGetterDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "MonoProperty", "CreateGetterDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MonoProperty::GetterAdapter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_Attributes
::System::Reflection::PropertyAttributes System::Reflection::MonoProperty::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_CanRead
bool System::Reflection::MonoProperty::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_CanWrite
bool System::Reflection::MonoProperty::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_PropertyType
::System::Type* System::Reflection::MonoProperty::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_ReflectedType
::System::Type* System::Reflection::MonoProperty::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_DeclaringType
::System::Type* System::Reflection::MonoProperty::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.get_Name
::StringW System::Reflection::MonoProperty::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.GetAccessors
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::MonoProperty::GetAccessors(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetAccessors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoProperty.GetGetMethod
::System::Reflection::MethodInfo* System::Reflection::MonoProperty::GetGetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoProperty.GetIndexParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::MonoProperty::GetIndexParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetIndexParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.GetSetMethod
::System::Reflection::MethodInfo* System::Reflection::MonoProperty::GetSetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.MonoProperty.GetConstantValue
::Il2CppObject* System::Reflection::MonoProperty::GetConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.GetRawConstantValue
::Il2CppObject* System::Reflection::MonoProperty::GetRawConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetRawConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.IsDefined
bool System::Reflection::MonoProperty::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoProperty.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoProperty::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.MonoProperty.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::MonoProperty::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.MonoProperty.GetValue
::Il2CppObject* System::Reflection::MonoProperty::GetValue(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, index);
}
// Autogenerated method: System.Reflection.MonoProperty.GetValue
::Il2CppObject* System::Reflection::MonoProperty::GetValue(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.MonoProperty.SetValue
void System::Reflection::MonoProperty::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.MonoProperty.GetOptionalCustomModifiers
::ArrayW<::System::Type*> System::Reflection::MonoProperty::GetOptionalCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetOptionalCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptionalCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.GetRequiredCustomModifiers
::ArrayW<::System::Type*> System::Reflection::MonoProperty::GetRequiredCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetRequiredCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.MonoProperty.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::Reflection::MonoProperty::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoProperty/System.Reflection.GetterAdapter
#include "System/Reflection/MonoProperty_GetterAdapter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MonoProperty/System.Reflection.GetterAdapter.Invoke
::Il2CppObject* System::Reflection::MonoProperty::GetterAdapter::Invoke(::Il2CppObject* _this) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetterAdapter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, _this);
}
// Autogenerated method: System.Reflection.MonoProperty/System.Reflection.GetterAdapter.BeginInvoke
::System::IAsyncResult* System::Reflection::MonoProperty::GetterAdapter::BeginInvoke(::Il2CppObject* _this, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetterAdapter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, _this, callback, object);
}
// Autogenerated method: System.Reflection.MonoProperty/System.Reflection.GetterAdapter.EndInvoke
::Il2CppObject* System::Reflection::MonoProperty::GetterAdapter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::MonoProperty::GetterAdapter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Runtime.InteropServices.MarshalAsAttribute
#include "System/Runtime/InteropServices/MarshalAsAttribute.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Type ClassImpl
::System::Type*& System::Reflection::ParameterInfo::dyn_ClassImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_ClassImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClassImpl"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object DefaultValueImpl
::Il2CppObject*& System::Reflection::ParameterInfo::dyn_DefaultValueImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_DefaultValueImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultValueImpl"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Reflection.MemberInfo MemberImpl
::System::Reflection::MemberInfo*& System::Reflection::ParameterInfo::dyn_MemberImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_MemberImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MemberImpl"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String NameImpl
::StringW& System::Reflection::ParameterInfo::dyn_NameImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_NameImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameImpl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 PositionImpl
int& System::Reflection::ParameterInfo::dyn_PositionImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_PositionImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionImpl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Reflection.ParameterAttributes AttrsImpl
::System::Reflection::ParameterAttributes& System::Reflection::ParameterInfo::dyn_AttrsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_AttrsImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttrsImpl"))->offset;
  return *reinterpret_cast<::System::Reflection::ParameterAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.MarshalAsAttribute marshalAs
::System::Runtime::InteropServices::MarshalAsAttribute*& System::Reflection::ParameterInfo::dyn_marshalAs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::dyn_marshalAs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "marshalAs"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::MarshalAsAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_ParameterType
::System::Type* System::Reflection::ParameterInfo::get_ParameterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_ParameterType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_Attributes
::System::Reflection::ParameterAttributes System::Reflection::ParameterInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_IsIn
bool System::Reflection::ParameterInfo::get_IsIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_IsIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_IsOptional
bool System::Reflection::ParameterInfo::get_IsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_IsOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_IsOut
bool System::Reflection::ParameterInfo::get_IsOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_IsOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_IsRetval
bool System::Reflection::ParameterInfo::get_IsRetval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_IsRetval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRetval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_Name
::StringW System::Reflection::ParameterInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_Position
int System::Reflection::ParameterInfo::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.get_DefaultValue
::Il2CppObject* System::Reflection::ParameterInfo::get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::get_DefaultValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.FormatParameters
void System::Reflection::ParameterInfo::FormatParameters(::System::Text::StringBuilder* sb, ::ArrayW<::System::Reflection::ParameterInfo*> p, ::System::Reflection::CallingConventions callingConvention, bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::FormatParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "ParameterInfo", "FormatParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callingConvention), ::il2cpp_utils::ExtractType(serialization)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, p, callingConvention, serialization);
}
// Autogenerated method: System.Reflection.ParameterInfo.GetPseudoCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::ParameterInfo::GetPseudoCustomAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::GetPseudoCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPseudoCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.GetDefaultValueImpl
::Il2CppObject* System::Reflection::ParameterInfo::GetDefaultValueImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::GetDefaultValueImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultValueImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.ParameterInfo.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::ParameterInfo::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.ParameterInfo.GetRealObject
::Il2CppObject* System::Reflection::ParameterInfo::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Reflection.ParameterInfo.IsDefined
bool System::Reflection::ParameterInfo::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.ParameterInfo.New
::System::Reflection::ParameterInfo* System::Reflection::ParameterInfo::New(::System::Reflection::ParameterInfo* pinfo, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::New");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "ParameterInfo", "New", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinfo), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ParameterInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pinfo, member);
}
// Autogenerated method: System.Reflection.ParameterInfo.ToString
::StringW System::Reflection::ParameterInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::ParameterInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.PropertyInfo.get_Attributes
::System::Reflection::PropertyAttributes System::Reflection::PropertyInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_CanRead
bool System::Reflection::PropertyInfo::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_CanWrite
bool System::Reflection::PropertyInfo::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_PropertyType
::System::Type* System::Reflection::PropertyInfo::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetAccessors
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::PropertyInfo::GetAccessors(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetAccessors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetGetMethod
::System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetGetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetIndexParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::PropertyInfo::GetIndexParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetIndexParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetSetMethod
::System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetSetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetValue
::Il2CppObject* System::Reflection::PropertyInfo::GetValue(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, index);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetValue
::Il2CppObject* System::Reflection::PropertyInfo::GetValue(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.PropertyInfo.SetValue
void System::Reflection::PropertyInfo::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::ArrayW<::Il2CppObject*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value, index);
}
// Autogenerated method: System.Reflection.PropertyInfo.SetValue
void System::Reflection::PropertyInfo::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetOptionalCustomModifiers
::ArrayW<::System::Type*> System::Reflection::PropertyInfo::GetOptionalCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetOptionalCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptionalCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetRequiredCustomModifiers
::ArrayW<::System::Type*> System::Reflection::PropertyInfo::GetRequiredCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetRequiredCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.CreateNIE
::System::NotImplementedException* System::Reflection::PropertyInfo::CreateNIE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::CreateNIE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "CreateNIE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::NotImplementedException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetConstantValue
::Il2CppObject* System::Reflection::PropertyInfo::GetConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetRawConstantValue
::Il2CppObject* System::Reflection::PropertyInfo::GetRawConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetRawConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.internal_from_handle_type
::System::Reflection::PropertyInfo* System::Reflection::PropertyInfo::internal_from_handle_type(::System::IntPtr event_handle, ::System::IntPtr type_handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::internal_from_handle_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "internal_from_handle_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event_handle), ::il2cpp_utils::ExtractType(type_handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, event_handle, type_handle);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetPropertyFromHandle
::System::Reflection::PropertyInfo* System::Reflection::PropertyInfo::GetPropertyFromHandle(::Mono::RuntimePropertyHandle handle, ::System::RuntimeTypeHandle reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetPropertyFromHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "GetPropertyFromHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, reflectedType);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_MemberType
::System::Reflection::MemberTypes System::Reflection::PropertyInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.Equals
bool System::Reflection::PropertyInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetHashCode
int System::Reflection::PropertyInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.op_Equality
bool System::Reflection::operator ==(::System::Reflection::PropertyInfo* left, ::System::Reflection::PropertyInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.PropertyInfo.op_Inequality
bool System::Reflection::operator !=(::System::Reflection::PropertyInfo* left, ::System::Reflection::PropertyInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::PropertyInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.StrongNameKeyPair
#include "System/Reflection/StrongNameKeyPair.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _publicKey
::ArrayW<uint8_t>& System::Reflection::StrongNameKeyPair::dyn__publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::dyn__publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keyPairContainer
::StringW& System::Reflection::StrongNameKeyPair::dyn__keyPairContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::dyn__keyPairContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairContainer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keyPairExported
bool& System::Reflection::StrongNameKeyPair::dyn__keyPairExported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::dyn__keyPairExported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairExported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _keyPairArray
::ArrayW<uint8_t>& System::Reflection::StrongNameKeyPair::dyn__keyPairArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::dyn__keyPairArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.StrongNameKeyPair.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Reflection::StrongNameKeyPair::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.StrongNameKeyPair.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Reflection::StrongNameKeyPair::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::StrongNameKeyPair::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.ConstructorBuilder
#include "System/Reflection/Emit/ConstructorBuilder.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::ConstructorBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_DeclaringType
::System::Type* System::Reflection::Emit::ConstructorBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_Name
::StringW System::Reflection::Emit::ConstructorBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::ConstructorBuilder::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_ReflectedType
::System::Type* System::Reflection::Emit::ConstructorBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::ConstructorBuilder::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::ConstructorBuilder::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::ConstructorBuilder::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::ConstructorBuilder::Invoke(::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.IsDefined
bool System::Reflection::Emit::ConstructorBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::ConstructorBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.EnumBuilder
#include "System/Reflection/Emit/EnumBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Assembly
::System::Reflection::Assembly* System::Reflection::Emit::EnumBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_AssemblyQualifiedName
::StringW System::Reflection::Emit::EnumBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_BaseType
::System::Type* System::Reflection::Emit::EnumBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_FullName
::StringW System::Reflection::Emit::EnumBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Module
::System::Reflection::Module* System::Reflection::Emit::EnumBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Name
::StringW System::Reflection::Emit::EnumBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Namespace
::StringW System::Reflection::Emit::EnumBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_UnderlyingSystemType
::System::Type* System::Reflection::Emit::EnumBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetElementType
::System::Type* System::Reflection::Emit::EnumBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
::System::Reflection::TypeAttributes System::Reflection::Emit::EnumBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetConstructorImpl
::System::Reflection::ConstructorInfo* System::Reflection::Emit::EnumBuilder::GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::Reflection::Emit::EnumBuilder::GetConstructors(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::EnumBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::EnumBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetEvent
::System::Reflection::EventInfo* System::Reflection::Emit::EnumBuilder::GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetField
::System::Reflection::FieldInfo* System::Reflection::Emit::EnumBuilder::GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::Reflection::Emit::EnumBuilder::GetFields(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetInterfaces
::ArrayW<::System::Type*> System::Reflection::Emit::EnumBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetMethodImpl
::System::Reflection::MethodInfo* System::Reflection::Emit::EnumBuilder::GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::Emit::EnumBuilder::GetMethods(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetNestedType
::System::Type* System::Reflection::Emit::EnumBuilder::GetNestedType(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetPropertyImpl
::System::Reflection::PropertyInfo* System::Reflection::Emit::EnumBuilder::GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
bool System::Reflection::Emit::EnumBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::EnumBuilder::InvokeMember(::StringW name, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsArrayImpl
bool System::Reflection::Emit::EnumBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsByRefImpl
bool System::Reflection::Emit::EnumBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::EnumBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsDefined
bool System::Reflection::Emit::EnumBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsPointerImpl
bool System::Reflection::Emit::EnumBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::EnumBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::EnumBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.FieldBuilder
#include "System/Reflection/Emit/FieldBuilder.hpp"
// Including type: System.Reflection.FieldAttributes
#include "System/Reflection/FieldAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeFieldHandle
#include "System/RuntimeFieldHandle.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_Attributes
::System::Reflection::FieldAttributes System::Reflection::Emit::FieldBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_DeclaringType
::System::Type* System::Reflection::Emit::FieldBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_FieldType
::System::Type* System::Reflection::Emit::FieldBuilder::get_FieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_FieldType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_Name
::StringW System::Reflection::Emit::FieldBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_FieldHandle
::System::RuntimeFieldHandle System::Reflection::Emit::FieldBuilder::get_FieldHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_FieldHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeFieldHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_ReflectedType
::System::Type* System::Reflection::Emit::FieldBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetValue
::Il2CppObject* System::Reflection::Emit::FieldBuilder::GetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::FieldBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::FieldBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.IsDefined
bool System::Reflection::Emit::FieldBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.SetValue
void System::Reflection::Emit::FieldBuilder::SetValue(::Il2CppObject* obj, ::Il2CppObject* val, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::FieldBuilder::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, val, invokeAttr, binder, culture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.GenericTypeParameterBuilder
#include "System/Reflection/Emit/GenericTypeParameterBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Assembly
::System::Reflection::Assembly* System::Reflection::Emit::GenericTypeParameterBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_AssemblyQualifiedName
::StringW System::Reflection::Emit::GenericTypeParameterBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_BaseType
::System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_FullName
::StringW System::Reflection::Emit::GenericTypeParameterBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Module
::System::Reflection::Module* System::Reflection::Emit::GenericTypeParameterBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Name
::StringW System::Reflection::Emit::GenericTypeParameterBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Namespace
::StringW System::Reflection::Emit::GenericTypeParameterBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_UnderlyingSystemType
::System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
::System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
::System::Reflection::TypeAttributes System::Reflection::Emit::GenericTypeParameterBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl
::System::Reflection::ConstructorInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructors(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent
::System::Reflection::EventInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetField
::System::Reflection::FieldInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetFields(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
::ArrayW<::System::Type*> System::Reflection::Emit::GenericTypeParameterBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl
::System::Reflection::MethodInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetMethods(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType
::System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::GetNestedType(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl
::System::Reflection::PropertyInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::GenericTypeParameterBuilder::InvokeMember(::StringW name, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::GenericTypeParameterBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.MethodBuilder
#include "System/Reflection/Emit/MethodBuilder.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::MethodBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_DeclaringType
::System::Type* System::Reflection::Emit::MethodBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_Name
::StringW System::Reflection::Emit::MethodBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::MethodBuilder::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_ReflectedType
::System::Type* System::Reflection::Emit::MethodBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::MethodBuilder::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::MethodBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::MethodBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::MethodBuilder::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::MethodBuilder::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.IsDefined
bool System::Reflection::Emit::MethodBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::MethodBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.PropertyBuilder
#include "System/Reflection/Emit/PropertyBuilder.hpp"
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_Attributes
::System::Reflection::PropertyAttributes System::Reflection::Emit::PropertyBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_CanRead
bool System::Reflection::Emit::PropertyBuilder::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_CanWrite
bool System::Reflection::Emit::PropertyBuilder::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_DeclaringType
::System::Type* System::Reflection::Emit::PropertyBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_Name
::StringW System::Reflection::Emit::PropertyBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_PropertyType
::System::Type* System::Reflection::Emit::PropertyBuilder::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_ReflectedType
::System::Type* System::Reflection::Emit::PropertyBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::PropertyBuilder::GetIndexParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetIndexParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetAccessors
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::Emit::PropertyBuilder::GetAccessors(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetAccessors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::PropertyBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::PropertyBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetGetMethod
::System::Reflection::MethodInfo* System::Reflection::Emit::PropertyBuilder::GetGetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetSetMethod
::System::Reflection::MethodInfo* System::Reflection::Emit::PropertyBuilder::GetSetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetValue
::Il2CppObject* System::Reflection::Emit::PropertyBuilder::GetValue(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.IsDefined
bool System::Reflection::Emit::PropertyBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.SetValue
void System::Reflection::Emit::PropertyBuilder::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::PropertyBuilder::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, index, culture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.TypeBuilder
#include "System/Reflection/Emit/TypeBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 UnspecifiedTypeSize
int System::Reflection::Emit::TypeBuilder::_get_UnspecifiedTypeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::_get_UnspecifiedTypeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Reflection.Emit", "TypeBuilder", "UnspecifiedTypeSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UnspecifiedTypeSize
void System::Reflection::Emit::TypeBuilder::_set_UnspecifiedTypeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::_set_UnspecifiedTypeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection.Emit", "TypeBuilder", "UnspecifiedTypeSize", value));
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Assembly
::System::Reflection::Assembly* System::Reflection::Emit::TypeBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_AssemblyQualifiedName
::StringW System::Reflection::Emit::TypeBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_BaseType
::System::Type* System::Reflection::Emit::TypeBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_FullName
::StringW System::Reflection::Emit::TypeBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Module
::System::Reflection::Module* System::Reflection::Emit::TypeBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Name
::StringW System::Reflection::Emit::TypeBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Namespace
::StringW System::Reflection::Emit::TypeBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_UnderlyingSystemType
::System::Type* System::Reflection::Emit::TypeBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetElementType
::System::Type* System::Reflection::Emit::TypeBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
::System::Reflection::TypeAttributes System::Reflection::Emit::TypeBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetConstructorImpl
::System::Reflection::ConstructorInfo* System::Reflection::Emit::TypeBuilder::GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::Reflection::Emit::TypeBuilder::GetConstructors(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::TypeBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::TypeBuilder::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetEvent
::System::Reflection::EventInfo* System::Reflection::Emit::TypeBuilder::GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetField
::System::Reflection::FieldInfo* System::Reflection::Emit::TypeBuilder::GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::Reflection::Emit::TypeBuilder::GetFields(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetInterfaces
::ArrayW<::System::Type*> System::Reflection::Emit::TypeBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetMethodImpl
::System::Reflection::MethodInfo* System::Reflection::Emit::TypeBuilder::GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::Reflection::Emit::TypeBuilder::GetMethods(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetNestedType
::System::Type* System::Reflection::Emit::TypeBuilder::GetNestedType(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetPropertyImpl
::System::Reflection::PropertyInfo* System::Reflection::Emit::TypeBuilder::GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
bool System::Reflection::Emit::TypeBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::TypeBuilder::InvokeMember(::StringW name, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsArrayImpl
bool System::Reflection::Emit::TypeBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsByRefImpl
bool System::Reflection::Emit::TypeBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::TypeBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsDefined
bool System::Reflection::Emit::TypeBuilder::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsPointerImpl
bool System::Reflection::Emit::TypeBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::TypeBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.TypeBuilderInstantiation
#include "System/Reflection/Emit/TypeBuilderInstantiation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.TypeBuilderInstantiation.MakeGenericType
::System::Type* System::Reflection::Emit::TypeBuilderInstantiation::MakeGenericType(::System::Type* type, ::ArrayW<::System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::TypeBuilderInstantiation::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection.Emit", "TypeBuilderInstantiation", "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, typeArguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.__Error
#include "System/IO/__Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.__Error.EndOfFile
void System::IO::__Error::EndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::EndOfFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndOfFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.FileNotOpen
void System::IO::__Error::FileNotOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::FileNotOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "FileNotOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.StreamIsClosed
void System::IO::__Error::StreamIsClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::StreamIsClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "StreamIsClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.MemoryStreamNotExpandable
void System::IO::__Error::MemoryStreamNotExpandable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::MemoryStreamNotExpandable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "MemoryStreamNotExpandable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.ReaderClosed
void System::IO::__Error::ReaderClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::ReaderClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "ReaderClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.ReadNotSupported
void System::IO::__Error::ReadNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::ReadNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "ReadNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.WrongAsyncResult
void System::IO::__Error::WrongAsyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WrongAsyncResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WrongAsyncResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.EndReadCalledTwice
void System::IO::__Error::EndReadCalledTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::EndReadCalledTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndReadCalledTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.EndWriteCalledTwice
void System::IO::__Error::EndWriteCalledTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::EndWriteCalledTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndWriteCalledTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.GetDisplayablePath
::StringW System::IO::__Error::GetDisplayablePath(::StringW path, bool isInvalidPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::GetDisplayablePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "GetDisplayablePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isInvalidPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, isInvalidPath);
}
// Autogenerated method: System.IO.__Error.WinIOError
void System::IO::__Error::WinIOError(int errorCode, ::StringW maybeFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WinIOError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WinIOError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(maybeFullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, maybeFullPath);
}
// Autogenerated method: System.IO.__Error.WriteNotSupported
void System::IO::__Error::WriteNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WriteNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WriteNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.WriterClosed
void System::IO::__Error::WriterClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WriterClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WriterClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
::System::IO::Stream*& System::IO::BinaryReader::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_buffer
::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder m_decoder
::System::Text::Decoder*& System::IO::BinaryReader::dyn_m_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_charBytes
::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_charBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_charBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_singleChar
::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_singleChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_singleChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_singleChar"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_charBuffer
::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCharsSize
int& System::IO::BinaryReader::dyn_m_maxCharsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_maxCharsSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCharsSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_2BytesPerChar
bool& System::IO::BinaryReader::dyn_m_2BytesPerChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_2BytesPerChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_2BytesPerChar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isMemoryStream
bool& System::IO::BinaryReader::dyn_m_isMemoryStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_isMemoryStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMemoryStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_leaveOpen
bool& System::IO::BinaryReader::dyn_m_leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryReader.get_BaseStream
::System::IO::Stream* System::IO::BinaryReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Close
void System::IO::BinaryReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadBoolean
bool System::IO::BinaryReader::ReadBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadByte
uint8_t System::IO::BinaryReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSByte
int8_t System::IO::BinaryReader::ReadSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChar
::Il2CppChar System::IO::BinaryReader::ReadChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt16
int16_t System::IO::BinaryReader::ReadInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt16
uint16_t System::IO::BinaryReader::ReadUInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt32
int System::IO::BinaryReader::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt32
uint System::IO::BinaryReader::ReadUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt64
int64_t System::IO::BinaryReader::ReadInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt64
uint64_t System::IO::BinaryReader::ReadUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSingle
float System::IO::BinaryReader::ReadSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDouble
double System::IO::BinaryReader::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDecimal
::System::Decimal System::IO::BinaryReader::ReadDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadString
::StringW System::IO::BinaryReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadChars
int System::IO::BinaryReader::InternalReadChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::InternalReadChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadOneChar
int System::IO::BinaryReader::InternalReadOneChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::InternalReadOneChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadOneChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChars
::ArrayW<::Il2CppChar> System::IO::BinaryReader::ReadChars(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.ReadBytes
::ArrayW<uint8_t> System::IO::BinaryReader::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.FillBuffer
void System::IO::BinaryReader::FillBuffer(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::FillBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: System.IO.BinaryReader.Read7BitEncodedInt
int System::IO::BinaryReader::Read7BitEncodedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.BinaryWriter Null
::System::IO::BinaryWriter* System::IO::BinaryWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::BinaryWriter*>("System.IO", "BinaryWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.BinaryWriter Null
void System::IO::BinaryWriter::_set_Null(::System::IO::BinaryWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "BinaryWriter", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream OutStream
::System::IO::Stream*& System::IO::BinaryWriter::dyn_OutStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn_OutStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
::System::Text::Encoding*& System::IO::BinaryWriter::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder _encoder
::System::Text::Encoder*& System::IO::BinaryWriter::dyn__encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
bool& System::IO::BinaryWriter::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _largeByteBuffer
::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__largeByteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__largeByteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_largeByteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxChars
int& System::IO::BinaryWriter::dyn__maxChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__maxChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryWriter..cctor
void System::IO::BinaryWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "BinaryWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Flush
void System::IO::BinaryWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write7BitEncodedInt
void System::IO::BinaryWriter::Write7BitEncodedInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Directory
#include "System/IO/Directory.hpp"
// Including type: System.IO.Directory/System.IO.SearchData
#include "System/IO/Directory_SearchData.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::StringW> System::IO::Directory::GetFiles(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::StringW> System::IO::Directory::GetFiles(::StringW path, ::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.InternalGetFiles
::ArrayW<::StringW> System::IO::Directory::InternalGetFiles(::StringW path, ::StringW searchPattern, ::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InternalGetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::StringW> System::IO::Directory::GetDirectories(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::StringW> System::IO::Directory::GetDirectories(::StringW path, ::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.InternalGetDirectories
::ArrayW<::StringW> System::IO::Directory::InternalGetDirectories(::StringW path, ::StringW searchPattern, ::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InternalGetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.InternalGetFileDirectoryNames
::ArrayW<::StringW> System::IO::Directory::InternalGetFileDirectoryNames(::StringW path, ::StringW userPathOriginal, ::StringW searchPattern, bool includeFiles, bool includeDirs, ::System::IO::SearchOption searchOption, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InternalGetFileDirectoryNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetFileDirectoryNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(userPathOriginal), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(includeFiles), ::il2cpp_utils::ExtractType(includeDirs), ::il2cpp_utils::ExtractType(searchOption), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, userPathOriginal, searchPattern, includeFiles, includeDirs, searchOption, checkHost);
}
// Autogenerated method: System.IO.Directory.CreateDirectory
::System::IO::DirectoryInfo* System::IO::Directory::CreateDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.CreateDirectoriesInternal
::System::IO::DirectoryInfo* System::IO::Directory::CreateDirectoriesInternal(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::CreateDirectoriesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "CreateDirectoriesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.Delete
void System::IO::Directory::Delete(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.RecursiveDelete
void System::IO::Directory::RecursiveDelete(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::RecursiveDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "RecursiveDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.Delete
void System::IO::Directory::Delete(::StringW path, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, recursive);
}
// Autogenerated method: System.IO.Directory.Exists
bool System::IO::Directory::Exists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetCurrentDirectory
::StringW System::IO::Directory::GetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.InsecureGetCurrentDirectory
::StringW System::IO::Directory::InsecureGetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InsecureGetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InsecureGetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.GetDemandDir
::StringW System::IO::Directory::GetDemandDir(::StringW fullPath, bool thisDirOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetDemandDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDemandDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(thisDirOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, thisDirOnly);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Directory/System.IO.SearchData
#include "System/IO/Directory_SearchData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String fullPath
::StringW& System::IO::Directory::SearchData::dyn_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::SearchData::dyn_fullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String userPath
::StringW& System::IO::Directory::SearchData::dyn_userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::SearchData::dyn_userPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.SearchOption searchOption
::System::IO::SearchOption& System::IO::Directory::SearchData::dyn_searchOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::SearchData::dyn_searchOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchOption"))->offset;
  return *reinterpret_cast<::System::IO::SearchOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.DirectoryNotFoundException
#include "System/IO/DirectoryNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.DriveNotFoundException
#include "System/IO/DriveNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.EndOfStreamException
#include "System/IO/EndOfStreamException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
::StringW& System::IO::FileInfo::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileInfo.Init
void System::IO::FileInfo::Init(::StringW fileName, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(checkHost)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fileName, checkHost);
}
// Autogenerated method: System.IO.FileInfo.GetDisplayPath
::StringW System::IO::FileInfo::GetDisplayPath(::StringW originalPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::GetDisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, originalPath);
}
// Autogenerated method: System.IO.FileInfo.get_Name
::StringW System::IO::FileInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_Exists
bool System::IO::FileInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.ToString
::StringW System::IO::FileInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileLoadException
#include "System/IO/FileLoadException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
::StringW& System::IO::FileLoadException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
::StringW& System::IO::FileLoadException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileLoadException.get_FusionLog
::StringW System::IO::FileLoadException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.SetMessageField
void System::IO::FileLoadException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.FormatFileLoadExceptionMessage
::StringW System::IO::FileLoadException::FormatFileLoadExceptionMessage(::StringW fileName, int hResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::FormatFileLoadExceptionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileLoadException", "FormatFileLoadExceptionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(hResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileName, hResult);
}
// Autogenerated method: System.IO.FileLoadException.get_Message
::StringW System::IO::FileLoadException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.ToString
::StringW System::IO::FileLoadException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.GetObjectData
void System::IO::FileLoadException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileLoadException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileNotFoundException
#include "System/IO/FileNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
::StringW& System::IO::FileNotFoundException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
::StringW& System::IO::FileNotFoundException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileNotFoundException.get_FusionLog
::StringW System::IO::FileNotFoundException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.SetMessageField
void System::IO::FileNotFoundException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.get_Message
::StringW System::IO::FileNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.ToString
::StringW System::IO::FileNotFoundException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.GetObjectData
void System::IO::FileNotFoundException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileNotFoundException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemEnumerableFactory
#include "System/IO/FileSystemEnumerableFactory.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystemEnumerableFactory.CreateFileNameIterator
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::FileSystemEnumerableFactory::CreateFileNameIterator(::StringW path, ::StringW originalUserPath, ::StringW searchPattern, bool includeFiles, bool includeDirs, ::System::IO::SearchOption searchOption, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEnumerableFactory::CreateFileNameIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableFactory", "CreateFileNameIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(originalUserPath), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(includeFiles), ::il2cpp_utils::ExtractType(includeDirs), ::il2cpp_utils::ExtractType(searchOption), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, originalUserPath, searchPattern, includeFiles, includeDirs, searchOption, checkHost);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StringResultHandler
#include "System/IO/StringResultHandler.hpp"
// Including type: System.IO.SearchResult
#include "System/IO/SearchResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _includeFiles
bool& System::IO::StringResultHandler::dyn__includeFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringResultHandler::dyn__includeFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includeFiles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _includeDirs
bool& System::IO::StringResultHandler::dyn__includeDirs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringResultHandler::dyn__includeDirs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includeDirs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringResultHandler.CreateObject
::StringW System::IO::StringResultHandler::CreateObject(::System::IO::SearchResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringResultHandler::CreateObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, result);
}
// Autogenerated method: System.IO.StringResultHandler.IsResultIncluded
bool System::IO::StringResultHandler::IsResultIncluded(::System::IO::SearchResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringResultHandler::IsResultIncluded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsResultIncluded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchResult
#include "System/IO/SearchResult.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String fullPath
::StringW& System::IO::SearchResult::dyn_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchResult::dyn_fullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userPath
::StringW& System::IO::SearchResult::dyn_userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchResult::dyn_userPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA findData
::Microsoft::Win32::Win32Native::WIN32_FIND_DATA*& System::IO::SearchResult::dyn_findData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchResult::dyn_findData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "findData"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::Win32Native::WIN32_FIND_DATA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.SearchResult.get_UserPath
::StringW System::IO::SearchResult::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchResult::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.SearchResult.get_FindData
::Microsoft::Win32::Win32Native::WIN32_FIND_DATA* System::IO::SearchResult::get_FindData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchResult::get_FindData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FindData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::Win32Native::WIN32_FIND_DATA*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemEnumerableHelpers
#include "System/IO/FileSystemEnumerableHelpers.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystemEnumerableHelpers.IsDir
bool System::IO::FileSystemEnumerableHelpers::IsDir(::Microsoft::Win32::Win32Native::WIN32_FIND_DATA* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEnumerableHelpers::IsDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableHelpers", "IsDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: System.IO.FileSystemEnumerableHelpers.IsFile
bool System::IO::FileSystemEnumerableHelpers::IsFile(::Microsoft::Win32::Win32Native::WIN32_FIND_DATA* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEnumerableHelpers::IsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableHelpers", "IsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.MonoIOStat _data
::System::IO::MonoIOStat& System::IO::FileSystemInfo::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::System::IO::MonoIOStat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _dataInitialised
int& System::IO::FileSystemInfo::dyn__dataInitialised() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn__dataInitialised");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataInitialised"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String FullPath
::StringW& System::IO::FileSystemInfo::dyn_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn_FullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String OriginalPath
::StringW& System::IO::FileSystemInfo::dyn_OriginalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn_OriginalPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayPath
::StringW& System::IO::FileSystemInfo::dyn__displayPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn__displayPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileSystemInfo.get_FullName
::StringW System::IO::FileSystemInfo::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Name
::StringW System::IO::FileSystemInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Exists
bool System::IO::FileSystemInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTime
::System::DateTime System::IO::FileSystemInfo::get_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_CreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTimeUtc
::System::DateTime System::IO::FileSystemInfo::get_CreationTimeUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_CreationTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_DisplayPath
::StringW System::IO::FileSystemInfo::get_DisplayPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_DisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.set_DisplayPath
void System::IO::FileSystemInfo::set_DisplayPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::set_DisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemInfo.Refresh
void System::IO::FileSystemInfo::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.GetObjectData
void System::IO::FileSystemInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _maybeFullPath
::StringW& System::IO::IOException::dyn__maybeFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::IOException::dyn__maybeFullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maybeFullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::MemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _origin
int& System::IO::MemoryStream::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
int& System::IO::MemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& System::IO::MemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capacity
int& System::IO::MemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _expandable
bool& System::IO::MemoryStream::dyn__expandable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__expandable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writable
bool& System::IO::MemoryStream::dyn__writable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__writable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exposable
bool& System::IO::MemoryStream::dyn__exposable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__exposable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exposable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
bool& System::IO::MemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
::System::Threading::Tasks::Task_1<int>*& System::IO::MemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.MemoryStream.get_Capacity
int System::IO::MemoryStream::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Capacity
void System::IO::MemoryStream::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.EnsureWriteable
void System::IO::MemoryStream::EnsureWriteable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::EnsureWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.EnsureCapacity
bool System::IO::MemoryStream::EnsureCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.GetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::GetBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalGetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::InternalGetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalGetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalGetPosition
int System::IO::MemoryStream::InternalGetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalReadInt32
int System::IO::MemoryStream::InternalReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalEmulateRead
int System::IO::MemoryStream::InternalEmulateRead(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalEmulateRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalEmulateRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.MemoryStream.ToArray
::ArrayW<uint8_t> System::IO::MemoryStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanRead
bool System::IO::MemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanSeek
bool System::IO::MemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanWrite
bool System::IO::MemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_Length
int64_t System::IO::MemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_Position
int64_t System::IO::MemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Position
void System::IO::MemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.Dispose
void System::IO::MemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.MemoryStream.Flush
void System::IO::MemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.Read
int System::IO::MemoryStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.MemoryStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::MemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.ReadByte
int System::IO::MemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.Seek
int64_t System::IO::MemoryStream::Seek(int64_t offset, ::System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(loc)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.MemoryStream.Write
void System::IO::MemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.MemoryStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::MemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.WriteByte
void System::IO::MemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.PathTooLongException
#include "System/IO/PathTooLongException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.PinnedBufferMemoryStream
#include "System/IO/PinnedBufferMemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _array
::ArrayW<uint8_t>& System::IO::PinnedBufferMemoryStream::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _pinningHandle
::System::Runtime::InteropServices::GCHandle& System::IO::PinnedBufferMemoryStream::dyn__pinningHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::dyn__pinningHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinningHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Finalize
void System::IO::PinnedBufferMemoryStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Dispose
void System::IO::PinnedBufferMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Stream/System.IO.ReadWriteParameters
#include "System/IO/Stream_ReadWriteParameters.hpp"
// Including type: System.IO.Stream/System.IO.ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.IO.Stream/System.IO.NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/System.IO.<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream Null
::System::IO::Stream* System::IO::Stream::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Stream*>("System.IO", "Stream", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream Null
void System::IO::Stream::_set_Null(::System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _DefaultCopyBufferSize
int System::IO::Stream::_get__DefaultCopyBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_get__DefaultCopyBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "Stream", "_DefaultCopyBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _DefaultCopyBufferSize
void System::IO::Stream::_set__DefaultCopyBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_set__DefaultCopyBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "_DefaultCopyBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream/System.IO.ReadWriteTask _activeReadWriteTask
::System::IO::Stream::ReadWriteTask*& System::IO::Stream::dyn__activeReadWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::dyn__activeReadWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeReadWriteTask"))->offset;
  return *reinterpret_cast<::System::IO::Stream::ReadWriteTask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _asyncActiveSemaphore
::System::Threading::SemaphoreSlim*& System::IO::Stream::dyn__asyncActiveSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::dyn__asyncActiveSemaphore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncActiveSemaphore"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream.get_CanRead
bool System::IO::Stream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanSeek
bool System::IO::Stream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanWrite
bool System::IO::Stream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Length
int64_t System::IO::Stream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Position
int64_t System::IO::Stream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.set_Position
void System::IO::Stream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream..cctor
void System::IO::Stream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream.EnsureAsyncActiveSemaphoreInitialized
::System::Threading::SemaphoreSlim* System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureAsyncActiveSemaphoreInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Close
void System::IO::Stream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream.Flush
void System::IO::Stream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.BeginRead
::System::IAsyncResult* System::IO::Stream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginReadInternal
::System::IAsyncResult* System::IO::Stream::BeginReadInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously);
}
// Autogenerated method: System.IO.Stream.EndRead
int System::IO::Stream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginEndReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::BeginEndReadAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginEndReadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.BeginWrite
::System::IAsyncResult* System::IO::Stream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginWriteInternal
::System::IAsyncResult* System::IO::Stream::BeginWriteInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginWriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTaskWhenReady
void System::IO::Stream::RunReadWriteTaskWhenReady(::System::Threading::Tasks::Task* asyncWaiter, ::System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::RunReadWriteTaskWhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTaskWhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncWaiter), ::il2cpp_utils::ExtractType(readWriteTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncWaiter, readWriteTask);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTask
void System::IO::Stream::RunReadWriteTask(::System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::RunReadWriteTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readWriteTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readWriteTask);
}
// Autogenerated method: System.IO.Stream.EndWrite
void System::IO::Stream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginEndWriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::BeginEndWriteAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginEndWriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndWriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.Seek
int64_t System::IO::Stream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Stream.Read
int System::IO::Stream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.Stream.ReadByte
int System::IO::Stream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Write
void System::IO::Stream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.WriteByte
void System::IO::Stream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.BlockingBeginRead
::System::IAsyncResult* System::IO::Stream::BlockingBeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingBeginRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndRead
int System::IO::Stream::BlockingEndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingEndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.BlockingBeginWrite
::System::IAsyncResult* System::IO::Stream::BlockingBeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingBeginWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndWrite
void System::IO::Stream::BlockingEndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingEndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
::System::Threading::ContextCallback* System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
void System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isRead
bool& System::IO::Stream::ReadWriteTask::dyn__isRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__isRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _stream
::System::IO::Stream*& System::IO::Stream::ReadWriteTask::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::Stream::ReadWriteTask::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _offset
int& System::IO::Stream::ReadWriteTask::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _count
int& System::IO::Stream::ReadWriteTask::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _callback
::System::AsyncCallback*& System::IO::Stream::ReadWriteTask::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _context
::System::Threading::ExecutionContext*& System::IO::Stream::ReadWriteTask::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.ClearBeginState
void System::IO::Stream::ReadWriteTask::ClearBeginState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::ClearBeginState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBeginState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.InvokeAsyncCallback
void System::IO::Stream::ReadWriteTask::InvokeAsyncCallback(::Il2CppObject* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::InvokeAsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/ReadWriteTask", "InvokeAsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, completedTask);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::IO::Stream::ReadWriteTask::System_Threading_Tasks_ITaskCompletionAction_Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::System.Threading.Tasks.ITaskCompletionAction.Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.Tasks.ITaskCompletionAction.Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::_get_s_nullReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::_get_s_nullReadTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<int>*>("System.IO", "Stream/NullStream", "s_nullReadTask"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
void System::IO::Stream::NullStream::_set_s_nullReadTask(::System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::_set_s_nullReadTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/NullStream", "s_nullReadTask", value));
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanRead
bool System::IO::Stream::NullStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanWrite
bool System::IO::Stream::NullStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanSeek
bool System::IO::Stream::NullStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_Length
int64_t System::IO::Stream::NullStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_Position
int64_t System::IO::Stream::NullStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.set_Position
void System::IO::Stream::NullStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Dispose
void System::IO::Stream::NullStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Flush
void System::IO::Stream::NullStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.BeginRead
::System::IAsyncResult* System::IO::Stream::NullStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.EndRead
int System::IO::Stream::NullStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.BeginWrite
::System::IAsyncResult* System::IO::Stream::NullStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.EndWrite
void System::IO::Stream::NullStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Read
int System::IO::Stream::NullStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.ReadByte
int System::IO::Stream::NullStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Write
void System::IO::Stream::NullStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::NullStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.WriteByte
void System::IO::Stream::NullStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Seek
int64_t System::IO::Stream::NullStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _stateObject
::Il2CppObject*& System::IO::Stream::SynchronousAsyncResult::dyn__stateObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__stateObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isWrite
bool& System::IO::Stream::SynchronousAsyncResult::dyn__isWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__isWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _waitHandle
::System::Threading::ManualResetEvent*& System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo _exceptionInfo
::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _endXxxCalled
bool& System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endXxxCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesRead
int& System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_AsyncState
::Il2CppObject* System::IO::Stream::SynchronousAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_CompletedSynchronously
bool System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.ThrowIfError
void System::IO::Stream::SynchronousAsyncResult::ThrowIfError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::ThrowIfError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.EndRead
int System::IO::Stream::SynchronousAsyncResult::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::EndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.EndWrite
void System::IO::Stream::SynchronousAsyncResult::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::EndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c <>9
::System::IO::Stream::SynchronousAsyncResult::$$c* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Stream::SynchronousAsyncResult::$$c*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c <>9
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9(::System::IO::Stream::SynchronousAsyncResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
::System::Func_1<::System::Threading::ManualResetEvent*>* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Threading::ManualResetEvent*>*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0(::System::Func_1<::System::Threading::ManualResetEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0", value)));
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c..cctor
void System::IO::Stream::SynchronousAsyncResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c.<get_AsyncWaitHandle>b__12_0
::System::Threading::ManualResetEvent* System::IO::Stream::SynchronousAsyncResult::$$c::$get_AsyncWaitHandle$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::<get_AsyncWaitHandle>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AsyncWaitHandle>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ManualResetEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/System.IO.<>c <>9
::System::IO::Stream::$$c* System::IO::Stream::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Stream::$$c*>("System.IO", "Stream/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/System.IO.<>c <>9
void System::IO::Stream::$$c::_set_$$9(::System::IO::Stream::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
::System::Func_1<::System::Threading::SemaphoreSlim*>* System::IO::Stream::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Threading::SemaphoreSlim*>*>("System.IO", "Stream/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
void System::IO::Stream::$$c::_set_$$9__4_0(::System::Func_1<::System::Threading::SemaphoreSlim*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__39_0
::System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__39_0
void System::IO::Stream::$$c::_set_$$9__39_0(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__39_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__43_0
::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__43_0
void System::IO::Stream::$$c::_set_$$9__43_0(::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__43_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__43_1
::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>* System::IO::Stream::$$c::_get_$$9__43_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__43_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>*>("System.IO", "Stream/<>c", "<>9__43_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__43_1
void System::IO::Stream::$$c::_set_$$9__43_1(::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__43_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__43_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__46_0
::System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__46_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__46_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__46_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__46_0
void System::IO::Stream::$$c::_set_$$9__46_0(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__46_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__46_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__47_0
::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>* System::IO::Stream::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>*>("System.IO", "Stream/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__47_0
void System::IO::Stream::$$c::_set_$$9__47_0(::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__47_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__53_0
::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__53_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__53_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__53_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__53_0
void System::IO::Stream::$$c::_set_$$9__53_0(::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__53_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__53_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__53_1
::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>* System::IO::Stream::$$c::_get_$$9__53_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__53_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>*>("System.IO", "Stream/<>c", "<>9__53_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__53_1
void System::IO::Stream::$$c::_set_$$9__53_1(::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__53_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__53_1", value)));
}
// Autogenerated method: System.IO.Stream/System.IO.<>c..cctor
void System::IO::Stream::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<EnsureAsyncActiveSemaphoreInitialized>b__4_0
::System::Threading::SemaphoreSlim* System::IO::Stream::$$c::$EnsureAsyncActiveSemaphoreInitialized$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<EnsureAsyncActiveSemaphoreInitialized>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EnsureAsyncActiveSemaphoreInitialized>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginReadInternal>b__39_0
int System::IO::Stream::$$c::$BeginReadInternal$b__39_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginReadInternal>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginReadInternal>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndReadAsync>b__43_0
::System::IAsyncResult* System::IO::Stream::$$c::$BeginEndReadAsync$b__43_0(::System::IO::Stream* stream, ::System::IO::Stream::ReadWriteParameters args, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndReadAsync>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndReadAsync>b__43_1
int System::IO::Stream::$$c::$BeginEndReadAsync$b__43_1(::System::IO::Stream* stream, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndReadAsync>b__43_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__43_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginWriteInternal>b__46_0
int System::IO::Stream::$$c::$BeginWriteInternal$b__46_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginWriteInternal>b__46_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginWriteInternal>b__46_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<RunReadWriteTaskWhenReady>b__47_0
void System::IO::Stream::$$c::$RunReadWriteTaskWhenReady$b__47_0(::System::Threading::Tasks::Task* t, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<RunReadWriteTaskWhenReady>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunReadWriteTaskWhenReady>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndWriteAsync>b__53_0
::System::IAsyncResult* System::IO::Stream::$$c::$BeginEndWriteAsync$b__53_0(::System::IO::Stream* stream, ::System::IO::Stream::ReadWriteParameters args, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndWriteAsync>b__53_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__53_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndWriteAsync>b__53_1
::System::Threading::Tasks::VoidTaskResult System::IO::Stream::$$c::$BeginEndWriteAsync$b__53_1(::System::IO::Stream* stream, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndWriteAsync>b__53_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__53_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::VoidTaskResult, false>(this, ___internal__method, stream, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamReader/System.IO.NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamReader Null
::System::IO::StreamReader* System::IO::StreamReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::StreamReader*>("System.IO", "StreamReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamReader Null
void System::IO::StreamReader::_set_Null(::System::IO::StreamReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamReader", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
::System::IO::Stream*& System::IO::StreamReader::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
::System::Text::Encoding*& System::IO::StreamReader::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder decoder
::System::Text::Decoder*& System::IO::StreamReader::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
::ArrayW<uint8_t>& System::IO::StreamReader::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
::ArrayW<::Il2CppChar>& System::IO::StreamReader::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _preamble
::ArrayW<uint8_t>& System::IO::StreamReader::dyn__preamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__preamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preamble"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charPos
int& System::IO::StreamReader::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charLen
int& System::IO::StreamReader::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteLen
int& System::IO::StreamReader::dyn_byteLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_byteLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bytePos
int& System::IO::StreamReader::dyn_bytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn_bytePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCharsPerBuffer
int& System::IO::StreamReader::dyn__maxCharsPerBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__maxCharsPerBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCharsPerBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _detectEncoding
bool& System::IO::StreamReader::dyn__detectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__detectEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detectEncoding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkPreamble
bool& System::IO::StreamReader::dyn__checkPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__checkPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
bool& System::IO::StreamReader::dyn__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__isBlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _closable
bool& System::IO::StreamReader::dyn__closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncReadTask
::System::Threading::Tasks::Task*& System::IO::StreamReader::dyn__asyncReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__asyncReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamReader.get_DefaultBufferSize
int System::IO::StreamReader::get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_DefaultBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", "get_DefaultBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_LeaveOpen
bool System::IO::StreamReader::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_EndOfStream
bool System::IO::StreamReader::get_EndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_EndOfStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.CheckAsyncTaskInProgress
void System::IO::StreamReader::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(::System::IO::Stream* stream, ::System::Text::Encoding* encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(detectEncodingFromByteOrderMarks), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(leaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, encoding, detectEncodingFromByteOrderMarks, bufferSize, leaveOpen);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.IO.StreamReader.DataAvailable
bool System::IO::StreamReader::DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::DataAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.CompressBuffer
void System::IO::StreamReader::CompressBuffer(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.StreamReader.DetectEncoding
void System::IO::StreamReader::DetectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::DetectEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.IsPreamble
bool System::IO::StreamReader::IsPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::IsPreamble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer(::ArrayW<::Il2CppChar> userBuffer, int userOffset, int desiredChars, ByRef<bool> readToUserBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer), ::il2cpp_utils::ExtractType(userOffset), ::il2cpp_utils::ExtractType(desiredChars), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, userBuffer, userOffset, desiredChars, byref(readToUserBuffer));
}
// Autogenerated method: System.IO.StreamReader..cctor
void System::IO::StreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Dispose
void System::IO::StreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader.Peek
int System::IO::StreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.StreamReader.ReadToEnd
::StringW System::IO::StreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadLine
::StringW System::IO::StreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StreamReader/System.IO.NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Dispose
void System::IO::StreamReader::NullStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Peek
int System::IO::StreamReader::NullStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadLine
::StringW System::IO::StreamReader::NullStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadToEnd
::StringW System::IO::StreamReader::NullStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadBuffer
int System::IO::StreamReader::NullStreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamWriter Null
::System::IO::StreamWriter* System::IO::StreamWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::StreamWriter*>("System.IO", "StreamWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamWriter Null
void System::IO::StreamWriter::_set_Null(::System::IO::StreamWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding _UTF8NoBOM
::System::Text::Encoding* System::IO::StreamWriter::_get__UTF8NoBOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_get__UTF8NoBOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.IO", "StreamWriter", "_UTF8NoBOM"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding _UTF8NoBOM
void System::IO::StreamWriter::_set__UTF8NoBOM(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_set__UTF8NoBOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamWriter", "_UTF8NoBOM", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
::System::IO::Stream*& System::IO::StreamWriter::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
::System::Text::Encoding*& System::IO::StreamWriter::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder encoder
::System::Text::Encoder*& System::IO::StreamWriter::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
::ArrayW<uint8_t>& System::IO::StreamWriter::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
::ArrayW<::Il2CppChar>& System::IO::StreamWriter::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charPos
int& System::IO::StreamWriter::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charLen
int& System::IO::StreamWriter::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoFlush
bool& System::IO::StreamWriter::dyn_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_autoFlush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveWrittenPreamble
bool& System::IO::StreamWriter::dyn_haveWrittenPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_haveWrittenPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWrittenPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closable
bool& System::IO::StreamWriter::dyn_closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn_closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncWriteTask
::System::Threading::Tasks::Task*& System::IO::StreamWriter::dyn__asyncWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__asyncWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncWriteTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter.get_UTF8NoBOM
::System::Text::Encoding* System::IO::StreamWriter::get_UTF8NoBOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_UTF8NoBOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "get_UTF8NoBOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.set_AutoFlush
void System::IO::StreamWriter::set_AutoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::set_AutoFlush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.get_LeaveOpen
bool System::IO::StreamWriter::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.CheckAsyncTaskInProgress
void System::IO::StreamWriter::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Init
void System::IO::StreamWriter::Init(::System::IO::Stream* streamArg, ::System::Text::Encoding* encodingArg, int bufferSize, bool shouldLeaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streamArg), ::il2cpp_utils::ExtractType(encodingArg), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(shouldLeaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streamArg, encodingArg, bufferSize, shouldLeaveOpen);
}
// Autogenerated method: System.IO.StreamWriter.CreateFile
::System::IO::Stream* System::IO::StreamWriter::CreateFile(::StringW path, bool append, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::CreateFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "CreateFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(append), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, append, checkHost);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush(bool flushStream, bool flushEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flushStream), ::il2cpp_utils::ExtractType(flushEncoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flushStream, flushEncoder);
}
// Autogenerated method: System.IO.StreamWriter..cctor
void System::IO::StreamWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Dispose
void System::IO::StreamWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StringReader
#include "System/IO/StringReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _s
::StringW& System::IO::StringReader::dyn__s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
int& System::IO::StringReader::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& System::IO::StringReader::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringReader.Dispose
void System::IO::StringReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringReader.Peek
int System::IO::StringReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.StringReader.ReadToEnd
::StringW System::IO::StringReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.ReadLine
::StringW System::IO::StringReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _sb
::System::Text::StringBuilder*& System::IO::StringWriter::dyn__sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::dyn__sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
bool& System::IO::StringWriter::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringWriter.Dispose
void System::IO::StringWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.ToString
::StringW System::IO::StringWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.IO.TextReader/System.IO.NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
// Including type: System.IO.TextReader/System.IO.SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
// Including type: System.IO.TextReader/System.IO.<>c
#include "System/IO/TextReader_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
::System::Func_2<::Il2CppObject*, ::StringW>* System::IO::TextReader::_get__ReadLineDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_get__ReadLineDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.IO", "TextReader", "_ReadLineDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
void System::IO::TextReader::_set__ReadLineDelegate(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_set__ReadLineDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadLineDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
::System::Func_2<::Il2CppObject*, int>* System::IO::TextReader::_get__ReadDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_get__ReadDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, int>*>("System.IO", "TextReader", "_ReadDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
void System::IO::TextReader::_set__ReadDelegate(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_set__ReadDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader Null
::System::IO::TextReader* System::IO::TextReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextReader*>("System.IO", "TextReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader Null
void System::IO::TextReader::_set_Null(::System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "Null", value));
}
// Autogenerated method: System.IO.TextReader..cctor
void System::IO::TextReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader.Peek
int System::IO::TextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.TextReader.ReadToEnd
::StringW System::IO::TextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.ReadLine
::StringW System::IO::TextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Synchronized
::System::IO::TextReader* System::IO::TextReader::Synchronized(::System::IO::TextReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.TextReader/System.IO.NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextReader/System.IO.NullTextReader.Read
int System::IO::TextReader::NullTextReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::NullTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/System.IO.NullTextReader.ReadLine
::StringW System::IO::TextReader::NullTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::NullTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.TextReader/System.IO.SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.TextReader _in
::System::IO::TextReader*& System::IO::TextReader::SyncTextReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Dispose
void System::IO::TextReader::SyncTextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Peek
int System::IO::TextReader::SyncTextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.ReadLine
::StringW System::IO::TextReader::SyncTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.ReadToEnd
::StringW System::IO::TextReader::SyncTextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/System.IO.<>c
#include "System/IO/TextReader_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader/System.IO.<>c <>9
::System::IO::TextReader::$$c* System::IO::TextReader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::TextReader::$$c*>("System.IO", "TextReader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader/System.IO.<>c <>9
void System::IO::TextReader::$$c::_set_$$9(::System::IO::TextReader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextReader/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c..cctor
void System::IO::TextReader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c.<.cctor>b__22_0
::StringW System::IO::TextReader::$$c::$_cctor$b__22_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::$$c::<.cctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c.<.cctor>b__22_1
int System::IO::TextReader::$$c::$_cctor$b__22_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::$$c::<.cctor>b__22_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.<>c
#include "System/IO/TextWriter_--c.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Null
::System::IO::TextWriter* System::IO::TextWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("System.IO", "TextWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Null
void System::IO::TextWriter::_set_Null(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharDelegate
void System::IO::TextWriter::_set__WriteCharDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteStringDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteStringDelegate
void System::IO::TextWriter::_set__WriteStringDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteCharArrayRangeDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteLineCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
void System::IO::TextWriter::_set__WriteLineCharDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteLineCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteLineStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
void System::IO::TextWriter::_set__WriteLineStringDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteLineStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _FlushDelegate
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__FlushDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get__FlushDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_FlushDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _FlushDelegate
void System::IO::TextWriter::_set__FlushDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set__FlushDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_FlushDelegate", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] CoreNewLine
::ArrayW<::Il2CppChar>& System::IO::TextWriter::dyn_CoreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::dyn_CoreNewLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IFormatProvider InternalFormatProvider
::System::IFormatProvider*& System::IO::TextWriter::dyn_InternalFormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::dyn_InternalFormatProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalFormatProvider"))->offset;
  return *reinterpret_cast<::System::IFormatProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter.get_InitialNewLine
::StringW System::IO::TextWriter::get_InitialNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::get_InitialNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", "get_InitialNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_FormatProvider
::System::IFormatProvider* System::IO::TextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter..cctor
void System::IO::TextWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Flush
void System::IO::TextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Synchronized
::System::IO::TextWriter* System::IO::TextWriter::Synchronized(::System::IO::TextWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0, arg1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.TextWriter/System.IO.NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/System.IO.SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter _out
::System::IO::TextWriter*& System::IO::TextWriter::SyncTextWriter::dyn__out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::dyn__out");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_out"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.get_FormatProvider
::System::IFormatProvider* System::IO::TextWriter::SyncTextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Dispose
void System::IO::TextWriter::SyncTextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Flush
void System::IO::TextWriter::SyncTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0, arg1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/System.IO.<>c
#include "System/IO/TextWriter_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter/System.IO.<>c <>9
::System::IO::TextWriter::$$c* System::IO::TextWriter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::TextWriter::$$c*>("System.IO", "TextWriter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter/System.IO.<>c <>9
void System::IO::TextWriter::$$c::_set_$$9(::System::IO::TextWriter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c..cctor
void System::IO::TextWriter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_0
void System::IO::TextWriter::$$c::$_cctor$b__73_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_1
void System::IO::TextWriter::$$c::$_cctor$b__73_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_2
void System::IO::TextWriter::$$c::$_cctor$b__73_2(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_3
void System::IO::TextWriter::$$c::$_cctor$b__73_3(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_4
void System::IO::TextWriter::$$c::$_cctor$b__73_4(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_5
void System::IO::TextWriter::$$c::$_cctor$b__73_5(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_6
void System::IO::TextWriter::$$c::$_cctor$b__73_6(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<.cctor>b__73_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.SafeBuffer _buffer
::System::Runtime::InteropServices::SafeBuffer*& System::IO::UnmanagedMemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::SafeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _mem
uint8_t*& System::IO::UnmanagedMemoryStream::dyn__mem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__mem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mem"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _length
int64_t& System::IO::UnmanagedMemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _capacity
int64_t& System::IO::UnmanagedMemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
int64_t& System::IO::UnmanagedMemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offset
int64_t& System::IO::UnmanagedMemoryStream::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess _access
::System::IO::FileAccess& System::IO::UnmanagedMemoryStream::dyn__access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_access"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isOpen
bool& System::IO::UnmanagedMemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
::System::Threading::Tasks::Task_1<int>*& System::IO::UnmanagedMemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_PositionPointer
uint8_t* System::IO::UnmanagedMemoryStream::get_PositionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_PositionPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Initialize
void System::IO::UnmanagedMemoryStream::Initialize(uint8_t* pointer, int64_t length, int64_t capacity, ::System::IO::FileAccess access, bool skipSecurityCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(skipSecurityCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, length, capacity, access, skipSecurityCheck);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanRead
bool System::IO::UnmanagedMemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanSeek
bool System::IO::UnmanagedMemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanWrite
bool System::IO::UnmanagedMemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Length
int64_t System::IO::UnmanagedMemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Position
int64_t System::IO::UnmanagedMemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.set_Position
void System::IO::UnmanagedMemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Dispose
void System::IO::UnmanagedMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Flush
void System::IO::UnmanagedMemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Read
int System::IO::UnmanagedMemoryStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::UnmanagedMemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadByte
int System::IO::UnmanagedMemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Seek
int64_t System::IO::UnmanagedMemoryStream::Seek(int64_t offset, ::System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(loc)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Write
void System::IO::UnmanagedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::UnmanagedMemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteByte
void System::IO::UnmanagedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.PathInternal
#include "System/IO/PathInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.PathInternal.IsPartiallyQualified
bool System::IO::PathInternal::IsPartiallyQualified(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::IsPartiallyQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsPartiallyQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.HasIllegalCharacters
bool System::IO::PathInternal::HasIllegalCharacters(::StringW path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::HasIllegalCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "HasIllegalCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(checkAdditional)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String current
::StringW& System::IO::DirectoryInfo::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String parent
::StringW& System::IO::DirectoryInfo::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Parent
::System::IO::DirectoryInfo* System::IO::DirectoryInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Initialize
void System::IO::DirectoryInfo::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Create
void System::IO::DirectoryInfo::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetFiles
::ArrayW<::System::IO::FileInfo*> System::IO::DirectoryInfo::GetFiles(::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::FileInfo*>, false>(this, ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::ArrayW<::System::IO::DirectoryInfo*> System::IO::DirectoryInfo::GetDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::DirectoryInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::ArrayW<::System::IO::DirectoryInfo*> System::IO::DirectoryInfo::GetDirectories(::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::DirectoryInfo*>, false>(this, ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.DirectoryInfo.CheckPath
void System::IO::DirectoryInfo::CheckPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::CheckPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Exists
bool System::IO::DirectoryInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Name
::StringW System::IO::DirectoryInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.ToString
::StringW System::IO::DirectoryInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.File
#include "System/IO/File.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.File.Create
::System::IO::FileStream* System::IO::File::Create(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
::System::IO::FileStream* System::IO::File::Create(::StringW path, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, bufferSize);
}
// Autogenerated method: System.IO.File.Delete
void System::IO::File::Delete(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Exists
bool System::IO::File::Exists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.OpenRead
::System::IO::FileStream* System::IO::File::OpenRead(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::OpenRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.WriteAllBytes
void System::IO::File::WriteAllBytes(::StringW path, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::WriteAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, bytes);
}
// Autogenerated method: System.IO.File.FillAttributeInfo
int System::IO::File::FillAttributeInfo(::StringW path, ByRef<::System::IO::MonoIOStat> data, bool tryagain, bool returnErrorOnNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::FillAttributeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "FillAttributeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(tryagain), ::il2cpp_utils::ExtractType(returnErrorOnNotFound)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(data), tryagain, returnErrorOnNotFound);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Read
::System::IO::FileAccess System::IO::FileAccess::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAccess>("System.IO", "FileAccess", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Read
void System::IO::FileAccess::_set_Read(::System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Write
::System::IO::FileAccess System::IO::FileAccess::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAccess>("System.IO", "FileAccess", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Write
void System::IO::FileAccess::_set_Write(::System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess ReadWrite
::System::IO::FileAccess System::IO::FileAccess::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAccess>("System.IO", "FileAccess", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess ReadWrite
void System::IO::FileAccess::_set_ReadWrite(::System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "ReadWrite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileAccess::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAccess::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Archive
::System::IO::FileAttributes System::IO::FileAttributes::_get_Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Archive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Archive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Archive
void System::IO::FileAttributes::_set_Archive(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Archive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Archive", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Compressed
::System::IO::FileAttributes System::IO::FileAttributes::_get_Compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Compressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Compressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Compressed
void System::IO::FileAttributes::_set_Compressed(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Compressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Compressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Device
::System::IO::FileAttributes System::IO::FileAttributes::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Device"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Device
void System::IO::FileAttributes::_set_Device(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Directory
::System::IO::FileAttributes System::IO::FileAttributes::_get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Directory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Directory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Directory
void System::IO::FileAttributes::_set_Directory(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Directory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Directory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Encrypted
::System::IO::FileAttributes System::IO::FileAttributes::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Encrypted
void System::IO::FileAttributes::_set_Encrypted(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Hidden
::System::IO::FileAttributes System::IO::FileAttributes::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Hidden
void System::IO::FileAttributes::_set_Hidden(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Normal
::System::IO::FileAttributes System::IO::FileAttributes::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Normal
void System::IO::FileAttributes::_set_Normal(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NotContentIndexed
::System::IO::FileAttributes System::IO::FileAttributes::_get_NotContentIndexed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_NotContentIndexed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "NotContentIndexed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NotContentIndexed
void System::IO::FileAttributes::_set_NotContentIndexed(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_NotContentIndexed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NotContentIndexed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Offline
::System::IO::FileAttributes System::IO::FileAttributes::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Offline
void System::IO::FileAttributes::_set_Offline(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReadOnly
::System::IO::FileAttributes System::IO::FileAttributes::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReadOnly
void System::IO::FileAttributes::_set_ReadOnly(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReparsePoint
::System::IO::FileAttributes System::IO::FileAttributes::_get_ReparsePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_ReparsePoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "ReparsePoint"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReparsePoint
void System::IO::FileAttributes::_set_ReparsePoint(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_ReparsePoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReparsePoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes SparseFile
::System::IO::FileAttributes System::IO::FileAttributes::_get_SparseFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_SparseFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "SparseFile"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes SparseFile
void System::IO::FileAttributes::_set_SparseFile(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_SparseFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "SparseFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes System
::System::IO::FileAttributes System::IO::FileAttributes::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes System
void System::IO::FileAttributes::_set_System(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Temporary
::System::IO::FileAttributes System::IO::FileAttributes::_get_Temporary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Temporary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Temporary"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Temporary
void System::IO::FileAttributes::_set_Temporary(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Temporary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Temporary", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes IntegrityStream
::System::IO::FileAttributes System::IO::FileAttributes::_get_IntegrityStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_IntegrityStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "IntegrityStream"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes IntegrityStream
void System::IO::FileAttributes::_set_IntegrityStream(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_IntegrityStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "IntegrityStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NoScrubData
::System::IO::FileAttributes System::IO::FileAttributes::_get_NoScrubData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_NoScrubData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "NoScrubData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NoScrubData
void System::IO::FileAttributes::_set_NoScrubData(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_NoScrubData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NoScrubData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode CreateNew
::System::IO::FileMode System::IO::FileMode::_get_CreateNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_CreateNew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "CreateNew"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode CreateNew
void System::IO::FileMode::_set_CreateNew(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_CreateNew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "CreateNew", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Create
::System::IO::FileMode System::IO::FileMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Create
void System::IO::FileMode::_set_Create(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Open
::System::IO::FileMode System::IO::FileMode::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "Open"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Open
void System::IO::FileMode::_set_Open(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode OpenOrCreate
::System::IO::FileMode System::IO::FileMode::_get_OpenOrCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_OpenOrCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "OpenOrCreate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode OpenOrCreate
void System::IO::FileMode::_set_OpenOrCreate(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_OpenOrCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "OpenOrCreate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Truncate
::System::IO::FileMode System::IO::FileMode::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Truncate
void System::IO::FileMode::_set_Truncate(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Append
::System::IO::FileMode System::IO::FileMode::_get_Append() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_get_Append");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileMode>("System.IO", "FileMode", "Append"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Append
void System::IO::FileMode::_set_Append(::System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::_set_Append");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Append", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions None
::System::IO::FileOptions System::IO::FileOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions None
void System::IO::FileOptions::_set_None(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Encrypted
::System::IO::FileOptions System::IO::FileOptions::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Encrypted
void System::IO::FileOptions::_set_Encrypted(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions DeleteOnClose
::System::IO::FileOptions System::IO::FileOptions::_get_DeleteOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_DeleteOnClose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "DeleteOnClose"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions DeleteOnClose
void System::IO::FileOptions::_set_DeleteOnClose(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_DeleteOnClose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "DeleteOnClose", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions SequentialScan
::System::IO::FileOptions System::IO::FileOptions::_get_SequentialScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_SequentialScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "SequentialScan"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions SequentialScan
void System::IO::FileOptions::_set_SequentialScan(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_SequentialScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "SequentialScan", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions RandomAccess
::System::IO::FileOptions System::IO::FileOptions::_get_RandomAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_RandomAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "RandomAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions RandomAccess
void System::IO::FileOptions::_set_RandomAccess(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_RandomAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "RandomAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Asynchronous
::System::IO::FileOptions System::IO::FileOptions::_get_Asynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_Asynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "Asynchronous"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Asynchronous
void System::IO::FileOptions::_set_Asynchronous(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_Asynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Asynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions WriteThrough
::System::IO::FileOptions System::IO::FileOptions::_get_WriteThrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_get_WriteThrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileOptions>("System.IO", "FileOptions", "WriteThrough"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions WriteThrough
void System::IO::FileOptions::_set_WriteThrough(::System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::_set_WriteThrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "WriteThrough", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare None
::System::IO::FileShare System::IO::FileShare::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare None
void System::IO::FileShare::_set_None(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Read
::System::IO::FileShare System::IO::FileShare::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Read
void System::IO::FileShare::_set_Read(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Write
::System::IO::FileShare System::IO::FileShare::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Write
void System::IO::FileShare::_set_Write(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare ReadWrite
::System::IO::FileShare System::IO::FileShare::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare ReadWrite
void System::IO::FileShare::_set_ReadWrite(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Delete
::System::IO::FileShare System::IO::FileShare::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Delete
void System::IO::FileShare::_set_Delete(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Inheritable
::System::IO::FileShare System::IO::FileShare::_get_Inheritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Inheritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Inheritable"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Inheritable
void System::IO::FileShare::_set_Inheritable(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Inheritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Inheritable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileShare::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileStream/System.IO.ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IO.FileStream/System.IO.WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultBufferSize
int System::IO::FileStream::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "FileStream", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultBufferSize
void System::IO::FileStream::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] buf_recycle
::ArrayW<uint8_t> System::IO::FileStream::_get_buf_recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_buf_recycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO", "FileStream", "buf_recycle"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] buf_recycle
void System::IO::FileStream::_set_buf_recycle(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_buf_recycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object buf_recycle_lock
::Il2CppObject* System::IO::FileStream::_get_buf_recycle_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_buf_recycle_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.IO", "FileStream", "buf_recycle_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object buf_recycle_lock
void System::IO::FileStream::_set_buf_recycle_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_buf_recycle_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle_lock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buf
::ArrayW<uint8_t>& System::IO::FileStream::dyn_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::IO::FileStream::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeFileHandle safeHandle
::Microsoft::Win32::SafeHandles::SafeFileHandle*& System::IO::FileStream::dyn_safeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_safeHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safeHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeFileHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExposed
bool& System::IO::FileStream::dyn_isExposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_isExposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 append_startpos
int64_t& System::IO::FileStream::dyn_append_startpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_append_startpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "append_startpos"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess access
::System::IO::FileAccess& System::IO::FileStream::dyn_access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "access"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean owner
bool& System::IO::FileStream::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean async
bool& System::IO::FileStream::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canseek
bool& System::IO::FileStream::dyn_canseek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_canseek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canseek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anonymous
bool& System::IO::FileStream::dyn_anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_anonymous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anonymous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buf_dirty
bool& System::IO::FileStream::dyn_buf_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_size
int& System::IO::FileStream::dyn_buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_length
int& System::IO::FileStream::dyn_buf_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_offset
int& System::IO::FileStream::dyn_buf_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buf_start
int64_t& System::IO::FileStream::dyn_buf_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_start"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStream.Init
void System::IO::FileStream::Init(::Microsoft::Win32::SafeHandles::SafeFileHandle* safeHandle, ::System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(ownsHandle), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(isAsync), ::il2cpp_utils::ExtractType(isConsoleWrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, safeHandle, access, ownsHandle, bufferSize, isAsync, isConsoleWrapper);
}
// Autogenerated method: System.IO.FileStream.ExposeHandle
void System::IO::FileStream::ExposeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ExposeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExposeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadInternal
int System::IO::FileStream::ReadInternal(::ArrayW<uint8_t> dest, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteInternal
void System::IO::FileStream::WriteInternal(::ArrayW<uint8_t> src, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, offset, count);
}
// Autogenerated method: System.IO.FileStream.ReadSegment
int System::IO::FileStream::ReadSegment(::ArrayW<uint8_t> dest, int dest_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, dest_offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteSegment
int System::IO::FileStream::WriteSegment(::ArrayW<uint8_t> src, int src_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, src, src_offset, count);
}
// Autogenerated method: System.IO.FileStream.FlushBuffer
void System::IO::FileStream::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::FlushBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.FlushBufferIfDirty
void System::IO::FileStream::FlushBufferIfDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::FlushBufferIfDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBufferIfDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.RefillBuffer
void System::IO::FileStream::RefillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::RefillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadData
int System::IO::FileStream::ReadData(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> buf, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, safeHandle, buf, offset, count);
}
// Autogenerated method: System.IO.FileStream.InitBuffer
void System::IO::FileStream::InitBuffer(int size, bool isZeroSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isZeroSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size, isZeroSize);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::StringW System::IO::FileStream::GetSecureFileName(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filename);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::StringW System::IO::FileStream::GetSecureFileName(::StringW filename, bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(full)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filename, full);
}
// Autogenerated method: System.IO.FileStream.get_CanRead
bool System::IO::FileStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanWrite
bool System::IO::FileStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanSeek
bool System::IO::FileStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Length
int64_t System::IO::FileStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Position
int64_t System::IO::FileStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.set_Position
void System::IO::FileStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream..cctor
void System::IO::FileStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadByte
int System::IO::FileStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.WriteByte
void System::IO::FileStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Read
int System::IO::FileStream::Read(ByRef<::ArrayW<uint8_t>> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(array), offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginRead
::System::IAsyncResult* System::IO::FileStream::BeginRead(::ArrayW<uint8_t> array, int offset, int numBytes, ::System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(numBytes), ::il2cpp_utils::ExtractType(userCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndRead
int System::IO::FileStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Write
void System::IO::FileStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginWrite
::System::IAsyncResult* System::IO::FileStream::BeginWrite(::ArrayW<uint8_t> array, int offset, int numBytes, ::System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(numBytes), ::il2cpp_utils::ExtractType(userCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndWrite
void System::IO::FileStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Seek
int64_t System::IO::FileStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.FileStream.Flush
void System::IO::FileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Finalize
void System::IO::FileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Dispose
void System::IO::FileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.FileStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::FileStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::FileStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/System.IO.ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.Invoke
int System::IO::FileStream::ReadDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.BeginInvoke
::System::IAsyncResult* System::IO::FileStream::ReadDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.EndInvoke
int System::IO::FileStream::ReadDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/System.IO.WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.Invoke
void System::IO::FileStream::WriteDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.BeginInvoke
::System::IAsyncResult* System::IO::FileStream::WriteDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.EndInvoke
void System::IO::FileStream::WriteDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStreamAsyncResult
#include "System/IO/FileStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object state
::Il2CppObject*& System::IO::FileStreamAsyncResult::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wh
::System::Threading::ManualResetEvent*& System::IO::FileStreamAsyncResult::dyn_wh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_wh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wh"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback cb
::System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_cb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cb"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completedSynch
bool& System::IO::FileStreamAsyncResult::dyn_completedSynch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_completedSynch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completedSynch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
int& System::IO::FileStreamAsyncResult::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OriginalCount
int& System::IO::FileStreamAsyncResult::dyn_OriginalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_OriginalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BytesRead
int& System::IO::FileStreamAsyncResult::dyn_BytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_BytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback realcb
::System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_realcb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_realcb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realcb"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncState
::Il2CppObject* System::IO::FileStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_CompletedSynchronously
bool System::IO::FileStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.CBWrapper
void System::IO::FileStreamAsyncResult::CBWrapper(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::CBWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStreamAsyncResult", "CBWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ares);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Unknown
::System::IO::MonoFileType System::IO::MonoFileType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Unknown
void System::IO::MonoFileType::_set_Unknown(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Disk
::System::IO::MonoFileType System::IO::MonoFileType::_get_Disk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Disk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Disk"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Disk
void System::IO::MonoFileType::_set_Disk(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Disk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Disk", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Char
::System::IO::MonoFileType System::IO::MonoFileType::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Char
void System::IO::MonoFileType::_set_Char(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Pipe
::System::IO::MonoFileType System::IO::MonoFileType::_get_Pipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Pipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Pipe
void System::IO::MonoFileType::_set_Pipe(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Pipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Remote
::System::IO::MonoFileType System::IO::MonoFileType::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Remote
void System::IO::MonoFileType::_set_Remote(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Remote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::MonoFileType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIO
#include "System/IO/MonoIO.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr InvalidHandle
::System::IntPtr System::IO::MonoIO::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.IO", "MonoIO", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr InvalidHandle
void System::IO::MonoIO::_set_InvalidHandle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dump_handles
bool System::IO::MonoIO::_get_dump_handles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_get_dump_handles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "MonoIO", "dump_handles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dump_handles
void System::IO::MonoIO::_set_dump_handles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_set_dump_handles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "dump_handles", value));
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleOutput
::System::IntPtr System::IO::MonoIO::get_ConsoleOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleInput
::System::IntPtr System::IO::MonoIO::get_ConsoleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleError
::System::IntPtr System::IO::MonoIO::get_ConsoleError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_VolumeSeparatorChar
::Il2CppChar System::IO::MonoIO::get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_VolumeSeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_VolumeSeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_DirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_DirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_DirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_AltDirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_AltDirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_AltDirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_PathSeparator
::Il2CppChar System::IO::MonoIO::get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_PathSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_PathSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO..cctor
void System::IO::MonoIO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.GetException
::System::Exception* System::IO::MonoIO::GetException(::System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.GetException
::System::Exception* System::IO::MonoIO::GetException(::StringW path, ::System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppChar* path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppChar* path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetCurrentDirectory
::StringW System::IO::MonoIO::GetCurrentDirectory(ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppChar* path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
::System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppChar* path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
::System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
::System::IO::MonoFileType System::IO::MonoIO::GetFileType(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MonoFileType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
::System::IO::MonoFileType System::IO::MonoIO::GetFileType(::System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MonoFileType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
::System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppChar* pathWithPattern, ByRef<::StringW> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathWithPattern), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pathWithPattern, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
::System::IntPtr System::IO::MonoIO::FindFirstFile(::StringW pathWithPattern, ByRef<::StringW> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathWithPattern), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pathWithPattern, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindNextFile
bool System::IO::MonoIO::FindNextFile(::System::IntPtr hnd, ByRef<::StringW> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::FindNextFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindNextFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hnd), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hnd, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindCloseFile
bool System::IO::MonoIO::FindCloseFile(::System::IntPtr hnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::FindCloseFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindCloseFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hnd);
}
// Autogenerated method: System.IO.MonoIO.ExistsFile
bool System::IO::MonoIO::ExistsFile(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::ExistsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ExistsDirectory
bool System::IO::MonoIO::ExistsDirectory(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::ExistsDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ExistsSymlink
bool System::IO::MonoIO::ExistsSymlink(::StringW path, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::ExistsSymlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsSymlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppChar* path, ByRef<::System::IO::MonoIOStat> stat, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOStat&>(), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(stat), byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::StringW path, ByRef<::System::IO::MonoIOStat> stat, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOStat&>(), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(stat), byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
::System::IntPtr System::IO::MonoIO::Open(::Il2CppChar* filename, ::System::IO::FileMode mode, ::System::IO::FileAccess access, ::System::IO::FileShare share, ::System::IO::FileOptions options, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
::System::IntPtr System::IO::MonoIO::Open(::StringW filename, ::System::IO::FileMode mode, ::System::IO::FileAccess access, ::System::IO::FileShare share, ::System::IO::FileOptions options, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Close
bool System::IO::MonoIO::Close(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(::System::IntPtr handle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(::System::IntPtr handle, ByRef<::ArrayW<uint8_t>> src, int src_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(src), src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> src, int src_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, src, src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(::System::IntPtr handle, int64_t offset, ::System::IO::SeekOrigin origin, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(::System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t offset, ::System::IO::SeekOrigin origin, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(::System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DumpHandles
void System::IO::MonoIO::DumpHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::DumpHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DumpHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.RemapPath
bool System::IO::MonoIO::RemapPath(::StringW path, ByRef<::StringW> newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::RemapPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemapPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(newPath));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SUCCESS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SUCCESS
void System::IO::MonoIOError::_set_ERROR_SUCCESS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
void System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
void System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
void System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
void System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
void System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
void System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_READY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NOT_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_READY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_READY
void System::IO::MonoIOError::_set_ERROR_NOT_READY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NOT_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_READY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_WRITE_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_WRITE_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_WRITE_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
void System::IO::MonoIOError::_set_ERROR_WRITE_FAULT(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_WRITE_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_WRITE_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_READ_FAULT
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_READ_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_READ_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_READ_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_READ_FAULT
void System::IO::MonoIOError::_set_ERROR_READ_FAULT(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_READ_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_READ_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_GEN_FAILURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_GEN_FAILURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_GEN_FAILURE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
void System::IO::MonoIOError::_set_ERROR_GEN_FAILURE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_GEN_FAILURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_GEN_FAILURE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
void System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
void System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
void System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILE_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
void System::IO::MonoIOError::_set_ERROR_FILE_EXISTS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILE_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
void System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
void System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
void System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
void System::IO::MonoIOError::_set_ERROR_INVALID_NAME(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
void System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
void System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
void System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIRECTORY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIRECTORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_DIRECTORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIRECTORY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIRECTORY
void System::IO::MonoIOError::_set_ERROR_DIRECTORY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_DIRECTORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIRECTORY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
void System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::MonoIOError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Path
#include "System/IO/Path.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0x6CDF8C
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] InvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_InvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_InvalidPathChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "InvalidPathChars"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] InvalidPathChars
void System::IO::Path::_set_InvalidPathChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_InvalidPathChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "InvalidPathChars", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char AltDirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_AltDirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "AltDirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char AltDirectorySeparatorChar
void System::IO::Path::_set_AltDirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_AltDirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "AltDirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char DirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_DirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "DirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char DirectorySeparatorChar
void System::IO::Path::_set_DirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_DirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char PathSeparator
::Il2CppChar System::IO::Path::_get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_PathSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "PathSeparator"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char PathSeparator
void System::IO::Path::_set_PathSeparator(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_PathSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparator", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DirectorySeparatorStr
::StringW System::IO::Path::_get_DirectorySeparatorStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_DirectorySeparatorStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.IO", "Path", "DirectorySeparatorStr"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DirectorySeparatorStr
void System::IO::Path::_set_DirectorySeparatorStr(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_DirectorySeparatorStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorStr", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char VolumeSeparatorChar
::Il2CppChar System::IO::Path::_get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_VolumeSeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "VolumeSeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char VolumeSeparatorChar
void System::IO::Path::_set_VolumeSeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_VolumeSeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "VolumeSeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PathSeparatorChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_PathSeparatorChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_PathSeparatorChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "PathSeparatorChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PathSeparatorChars
void System::IO::Path::_set_PathSeparatorChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_PathSeparatorChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparatorChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean dirEqualsVolume
bool System::IO::Path::_get_dirEqualsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_dirEqualsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "Path", "dirEqualsVolume"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean dirEqualsVolume
void System::IO::Path::_set_dirEqualsVolume(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_dirEqualsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "dirEqualsVolume", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsWindows
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_trimEndCharsWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsWindows"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsWindows
void System::IO::Path::_set_trimEndCharsWindows(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_trimEndCharsWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsWindows", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsUnix
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_trimEndCharsUnix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsUnix"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsUnix
void System::IO::Path::_set_trimEndCharsUnix(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_trimEndCharsUnix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsUnix", value));
}
// Autogenerated method: System.IO.Path.get_DirectorySeparatorCharAsString
::StringW System::IO::Path::get_DirectorySeparatorCharAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::get_DirectorySeparatorCharAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "get_DirectorySeparatorCharAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.get_TrimEndChars
::ArrayW<::Il2CppChar> System::IO::Path::get_TrimEndChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::get_TrimEndChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "get_TrimEndChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path..cctor
void System::IO::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.ChangeExtension
::StringW System::IO::Path::ChangeExtension(::StringW path, ::StringW extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::ChangeExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "ChangeExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, extension);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::StringW path1, ::StringW path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated method: System.IO.Path.CleanPath
::StringW System::IO::Path::CleanPath(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CleanPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CleanPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.IO.Path.GetDirectoryName
::StringW System::IO::Path::GetDirectoryName(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetDirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetDirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetExtension
::StringW System::IO::Path::GetExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileName
::StringW System::IO::Path::GetFileName(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileNameWithoutExtension
::StringW System::IO::Path::GetFileNameWithoutExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFileNameWithoutExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileNameWithoutExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPath
::StringW System::IO::Path::GetFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathInternal
::StringW System::IO::Path::GetFullPathInternal(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathName
int System::IO::Path::GetFullPathName(::StringW path, int numBufferChars, ::System::Text::StringBuilder* buffer, ByRef<::System::IntPtr> lpFilePartOrNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(numBufferChars), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(lpFilePartOrNull)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, numBufferChars, buffer, byref(lpFilePartOrNull));
}
// Autogenerated method: System.IO.Path.GetFullPathName
::StringW System::IO::Path::GetFullPathName(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.WindowsDriveAdjustment
::StringW System::IO::Path::WindowsDriveAdjustment(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::WindowsDriveAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "WindowsDriveAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.InsecureGetFullPath
::StringW System::IO::Path::InsecureGetFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::InsecureGetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "InsecureGetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsDirectorySeparator
bool System::IO::Path::IsDirectorySeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::IsDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.IO.Path.GetPathRoot
::StringW System::IO::Path::GetPathRoot(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetPathRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetPathRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsPathRooted
bool System::IO::Path::IsPathRooted(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::IsPathRooted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsPathRooted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetInvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::GetInvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidPathChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.findExtension
int System::IO::Path::findExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::findExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "findExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetServerAndShare
::StringW System::IO::Path::GetServerAndShare(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetServerAndShare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetServerAndShare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.SameRoot
bool System::IO::Path::SameRoot(::StringW root, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::SameRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "SameRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root, path);
}
// Autogenerated method: System.IO.Path.CanonicalizePath
::StringW System::IO::Path::CanonicalizePath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CanonicalizePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CanonicalizePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::ArrayW<::StringW> paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paths)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paths);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::StringW path1, ::StringW path2, ::StringW path3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2), ::il2cpp_utils::ExtractType(path3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2, path3);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::StringW path, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, parameterName);
}
// Autogenerated method: System.IO.Path.CheckSearchPattern
void System::IO::Path::CheckSearchPattern(::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CheckSearchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CheckSearchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.Path.CheckInvalidPathChars
void System::IO::Path::CheckInvalidPathChars(::StringW path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CheckInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CheckInvalidPathChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(checkAdditional)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated method: System.IO.Path.InternalCombine
::StringW System::IO::Path::InternalCombine(::StringW path1, ::StringW path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::InternalCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "InternalCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption TopDirectoryOnly
::System::IO::SearchOption System::IO::SearchOption::_get_TopDirectoryOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_get_TopDirectoryOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchOption>("System.IO", "SearchOption", "TopDirectoryOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption TopDirectoryOnly
void System::IO::SearchOption::_set_TopDirectoryOnly(::System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_set_TopDirectoryOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "TopDirectoryOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption AllDirectories
::System::IO::SearchOption System::IO::SearchOption::_get_AllDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_get_AllDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchOption>("System.IO", "SearchOption", "AllDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption AllDirectories
void System::IO::SearchOption::_set_AllDirectories(::System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_set_AllDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "AllDirectories", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::SearchOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Begin
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_Begin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Begin"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Begin
void System::IO::SeekOrigin::_set_Begin(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_Begin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Begin", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Current
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_Current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Current"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Current
void System::IO::SeekOrigin::_set_Current(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_Current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Current", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin End
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin End
void System::IO::SeekOrigin::_set_End(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::SeekOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.UnexceptionalStreamReader
#include "System/IO/UnexceptionalStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean[] newline
::ArrayW<bool> System::IO::UnexceptionalStreamReader::_get_newline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_get_newline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.IO", "UnexceptionalStreamReader", "newline"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean[] newline
void System::IO::UnexceptionalStreamReader::_set_newline(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_set_newline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newline", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newlineChar
::Il2CppChar System::IO::UnexceptionalStreamReader::_get_newlineChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_get_newlineChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "UnexceptionalStreamReader", "newlineChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newlineChar
void System::IO::UnexceptionalStreamReader::_set_newlineChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_set_newlineChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newlineChar", value));
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.CheckEOL
bool System::IO::UnexceptionalStreamReader::CheckEOL(::Il2CppChar current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::CheckEOL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEOL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, current);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader..cctor
void System::IO::UnexceptionalStreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "UnexceptionalStreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Peek
int System::IO::UnexceptionalStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest_buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest_buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(dest_buffer), index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadLine
::StringW System::IO::UnexceptionalStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadToEnd
::StringW System::IO::UnexceptionalStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.UnexceptionalStreamWriter
#include "System/IO/UnexceptionalStreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Flush
void System::IO::UnexceptionalStreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.CStreamReader
#include "System/IO/CStreamReader.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
::System::TermInfoDriver*& System::IO::CStreamReader::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<::System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamReader.Peek
int System::IO::CStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(dest), index, count);
}
// Autogenerated method: System.IO.CStreamReader.ReadLine
::StringW System::IO::CStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.ReadToEnd
::StringW System::IO::CStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.CStreamWriter
#include "System/IO/CStreamWriter.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
::System::TermInfoDriver*& System::IO::CStreamWriter::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<::System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteString
void System::IO::CStreamWriter::InternalWriteString(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChar
void System::IO::CStreamWriter::InternalWriteChar(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChars
void System::IO::CStreamWriter::InternalWriteChars(::ArrayW<::Il2CppChar> buffer, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, n);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CharUnicodeInfo
#include "System/Globalization/CharUnicodeInfo.hpp"
// Including type: System.Globalization.CharUnicodeInfo/System.Globalization.Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pCategoryLevel1Index
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pCategoryLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pCategoriesValue
::ArrayW<uint8_t> System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pCategoriesValue
void System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pNumericLevel1Index
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pNumericLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pNumericValues
::ArrayW<uint8_t> System::Globalization::CharUnicodeInfo::_get_s_pNumericValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_get_s_pNumericValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Globalization", "CharUnicodeInfo", "s_pNumericValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pNumericValues
void System::Globalization::CharUnicodeInfo::_set_s_pNumericValues(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_set_s_pNumericValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pDigitValues
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pDigitValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_get_s_pDigitValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pDigitValues"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pDigitValues
void System::Globalization::CharUnicodeInfo::_set_s_pDigitValues(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::_set_s_pDigitValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pDigitValues", value));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo..cctor
void System::Globalization::CharUnicodeInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::StringW s, int index, ByRef<int> charLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index, byref(charLength));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetCategoryValue
uint8_t System::Globalization::CharUnicodeInfo::InternalGetCategoryValue(int ch, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetCategoryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetCategoryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, offset);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::StringW value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::StringW str, int index, ByRef<int> charLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, index, byref(charLength));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CharUnicodeInfo/System.Globalization.Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CharUnicodeInfo/System.Globalization.Debug.Assert
void System::Globalization::CharUnicodeInfo::Debug::Assert_(bool condition, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::Debug::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo/Debug", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMillisecond
int64_t System::Globalization::Calendar::_get_TicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMillisecond
void System::Globalization::Calendar::_set_TicksPerMillisecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerSecond
int64_t System::Globalization::Calendar::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerSecond
void System::Globalization::Calendar::_set_TicksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMinute
int64_t System::Globalization::Calendar::_get_TicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMinute
void System::Globalization::Calendar::_set_TicksPerMinute(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerHour
int64_t System::Globalization::Calendar::_get_TicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerHour
void System::Globalization::Calendar::_set_TicksPerHour(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerDay
int64_t System::Globalization::Calendar::_get_TicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerDay
void System::Globalization::Calendar::_set_TicksPerDay(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerSecond
int System::Globalization::Calendar::_get_MillisPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerSecond
void System::Globalization::Calendar::_set_MillisPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerMinute
int System::Globalization::Calendar::_get_MillisPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerMinute
void System::Globalization::Calendar::_set_MillisPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerHour
int System::Globalization::Calendar::_get_MillisPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerHour
void System::Globalization::Calendar::_set_MillisPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerDay
int System::Globalization::Calendar::_get_MillisPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerDay
void System::Globalization::Calendar::_set_MillisPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPerYear
int System::Globalization::Calendar::_get_DaysPerYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPerYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPerYear
void System::Globalization::Calendar::_set_DaysPerYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPerYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer4Years
int System::Globalization::Calendar::_get_DaysPer4Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer4Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer4Years
void System::Globalization::Calendar::_set_DaysPer4Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer4Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer100Years
int System::Globalization::Calendar::_get_DaysPer100Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer100Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer100Years
void System::Globalization::Calendar::_set_DaysPer100Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer100Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer400Years
int System::Globalization::Calendar::_get_DaysPer400Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer400Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer400Years
void System::Globalization::Calendar::_set_DaysPer400Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer400Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo10000
int System::Globalization::Calendar::_get_DaysTo10000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysTo10000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo10000
void System::Globalization::Calendar::_set_DaysTo10000(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysTo10000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxMillis
int64_t System::Globalization::Calendar::_get_MaxMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MaxMillis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxMillis
void System::Globalization::Calendar::_set_MaxMillis(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MaxMillis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN
int System::Globalization::Calendar::_get_CAL_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN
void System::Globalization::Calendar::_set_CAL_GREGORIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_US
int System::Globalization::Calendar::_get_CAL_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_US
void System::Globalization::Calendar::_set_CAL_GREGORIAN_US(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPAN
int System::Globalization::Calendar::_get_CAL_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPAN
void System::Globalization::Calendar::_set_CAL_JAPAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWAN
int System::Globalization::Calendar::_get_CAL_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWAN
void System::Globalization::Calendar::_set_CAL_TAIWAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREA
int System::Globalization::Calendar::_get_CAL_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREA
void System::Globalization::Calendar::_set_CAL_KOREA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HIJRI
int System::Globalization::Calendar::_get_CAL_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HIJRI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HIJRI
void System::Globalization::Calendar::_set_CAL_HIJRI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_THAI
int System::Globalization::Calendar::_get_CAL_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_THAI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_THAI
void System::Globalization::Calendar::_set_CAL_THAI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_THAI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HEBREW
int System::Globalization::Calendar::_get_CAL_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HEBREW"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HEBREW
void System::Globalization::Calendar::_set_CAL_HEBREW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ARABIC
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ARABIC
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JULIAN
int System::Globalization::Calendar::_get_CAL_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JULIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JULIAN
void System::Globalization::Calendar::_set_CAL_JULIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPANESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPANESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_CHINESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_CHINESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_SAKA
int System::Globalization::Calendar::_get_CAL_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_SAKA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_SAKA
void System::Globalization::Calendar::_set_CAL_SAKA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_SAKA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_CHN
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_CHN
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_KOR
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_KOR
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_PERSIAN
int System::Globalization::Calendar::_get_CAL_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_PERSIAN
void System::Globalization::Calendar::_set_CAL_PERSIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_UMALQURA
int System::Globalization::Calendar::_get_CAL_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_UMALQURA
void System::Globalization::Calendar::_set_CAL_UMALQURA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CurrentEra
int System::Globalization::Calendar::_get_CurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CurrentEra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CurrentEra"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CurrentEra
void System::Globalization::Calendar::_set_CurrentEra(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CurrentEra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CurrentEra", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_currentEraValue
int& System::Globalization::Calendar::dyn_m_currentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_m_currentEraValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentEraValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
bool& System::Globalization::Calendar::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 twoDigitYearMax
int& System::Globalization::Calendar::dyn_twoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_twoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Calendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::Calendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::Calendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_ID
int System::Globalization::Calendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_BaseCalendarID
int System::Globalization::Calendar::get_BaseCalendarID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_BaseCalendarID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseCalendarID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_CurrentEraValue
int System::Globalization::Calendar::get_CurrentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_CurrentEraValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentEraValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_Eras
::ArrayW<int> System::Globalization::Calendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_TwoDigitYearMax
int System::Globalization::Calendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.Clone
::Il2CppObject* System::Globalization::Calendar::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.SetReadOnlyState
void System::Globalization::Calendar::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfMonth
int System::Globalization::Calendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::Calendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDaysInMonth
int System::Globalization::Calendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.GetEra
int System::Globalization::Calendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetEra");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonth
int System::Globalization::Calendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonthsInYear
int System::Globalization::Calendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.GetYear
int System::Globalization::Calendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.ToDateTime
::System::DateTime System::Globalization::Calendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.Calendar.TryToDateTime
bool System::Globalization::Calendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::TryToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, byref(result));
}
// Autogenerated method: System.Globalization.Calendar.IsValidYear
bool System::Globalization::Calendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidMonth
bool System::Globalization::Calendar::IsValidMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidDay
bool System::Globalization::Calendar::IsValidDay(int year, int month, int day, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidDay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, era);
}
// Autogenerated method: System.Globalization.Calendar.ToFourDigitYear
int System::Globalization::Calendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.GetSystemTwoDigitYearSetting
int System::Globalization::Calendar::GetSystemTwoDigitYearSetting(int CalID, int defaultYearValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetSystemTwoDigitYearSetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "GetSystemTwoDigitYearSetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(CalID), ::il2cpp_utils::ExtractType(defaultYearValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, CalID, defaultYearValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MAX_CALENDARS
int System::Globalization::CalendarData::_get_MAX_CALENDARS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_MAX_CALENDARS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CalendarData", "MAX_CALENDARS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MAX_CALENDARS
void System::Globalization::CalendarData::_set_MAX_CALENDARS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_MAX_CALENDARS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "MAX_CALENDARS", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CalendarData Invariant
::System::Globalization::CalendarData* System::Globalization::CalendarData::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarData*>("System.Globalization", "CalendarData", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CalendarData Invariant
void System::Globalization::CalendarData::_set_Invariant(::System::Globalization::CalendarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "Invariant", value));
}
// Autogenerated instance field getter
// Get instance field: System.String sNativeName
::StringW& System::Globalization::CalendarData::dyn_sNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_sNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sNativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saShortDates
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saShortDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saShortDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortDates"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saYearMonths
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saYearMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saYearMonths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saYearMonths"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLongDates
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saLongDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saLongDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongDates"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String sMonthDay
::StringW& System::Globalization::CalendarData::dyn_sMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_sMonthDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sMonthDay"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saEraNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEraNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEnglishEraNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saDayNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevDayNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saSuperShortDayNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saSuperShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saSuperShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saSuperShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthGenitiveNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthGenitiveNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLeapYearMonthNames
::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saLeapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLeapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iTwoDigitYearMax
int& System::Globalization::CalendarData::dyn_iTwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_iTwoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iTwoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iCurrentEra
int& System::Globalization::CalendarData::dyn_iCurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_iCurrentEra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCurrentEra"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean bUseUserOverrides
bool& System::Globalization::CalendarData::dyn_bUseUserOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_bUseUserOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseUserOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CalendarData..cctor
void System::Globalization::CalendarData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeEraNames
void System::Globalization::CalendarData::InitializeEraNames(::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::InitializeEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeAbbreviatedEraNames
void System::Globalization::CalendarData::InitializeAbbreviatedEraNames(::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::InitializeAbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.GetCalendarData
::System::Globalization::CalendarData* System::Globalization::CalendarData::GetCalendarData(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::GetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CalendarData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.CalendarIdToCultureName
::StringW System::Globalization::CalendarData::CalendarIdToCultureName(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::CalendarIdToCultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "CalendarIdToCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetTwoDigitYearMax
int System::Globalization::CalendarData::nativeGetTwoDigitYearMax(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::nativeGetTwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetTwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetCalendarData
bool System::Globalization::CalendarData::nativeGetCalendarData(::System::Globalization::CalendarData* data, ::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::nativeGetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.fill_calendar_data
bool System::Globalization::CalendarData::fill_calendar_data(::StringW localeName, int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::fill_calendar_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_calendar_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(datetimeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localeName, datetimeIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions None
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions None
void System::Globalization::CompareOptions::_set_None(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreCase
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreCase
void System::Globalization::CompareOptions::_set_IgnoreCase(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreNonSpace
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreNonSpace
void System::Globalization::CompareOptions::_set_IgnoreNonSpace(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreSymbols
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreSymbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreSymbols");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreSymbols"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreSymbols
void System::Globalization::CompareOptions::_set_IgnoreSymbols(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreSymbols");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreSymbols", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreKanaType
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreKanaType
void System::Globalization::CompareOptions::_set_IgnoreKanaType(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreWidth
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreWidth
void System::Globalization::CompareOptions::_set_IgnoreWidth(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_OrdinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "OrdinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
void System::Globalization::CompareOptions::_set_OrdinalIgnoreCase(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_OrdinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "OrdinalIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions StringSort
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_StringSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_StringSort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "StringSort"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions StringSort
void System::Globalization::CompareOptions::_set_StringSort(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_StringSort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "StringSort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions Ordinal
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_Ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "Ordinal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions Ordinal
void System::Globalization::CompareOptions::_set_Ordinal(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_Ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "Ordinal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::CompareOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.SortVersion
#include "System/Globalization/SortVersion.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNORECASE
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNORECASE
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORECASE
int System::Globalization::CompareInfo::_get_NORM_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORECASE
void System::Globalization::CompareInfo::_set_NORM_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREKANATYPE
int System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREKANATYPE
void System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORENONSPACE
int System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORENONSPACE
void System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORESYMBOLS
int System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORESYMBOLS
void System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREWIDTH
int System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREWIDTH
void System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_STRINGSORT
int System::Globalization::CompareInfo::_get_SORT_STRINGSORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_SORT_STRINGSORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_STRINGSORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_STRINGSORT
void System::Globalization::CompareInfo::_set_SORT_STRINGSORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_SORT_STRINGSORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_STRINGSORT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
int System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
void System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NORM_LINGUISTIC_CASING
int System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NORM_LINGUISTIC_CASING
void System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
int System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
void System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_WHIDBEY
int System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_WHIDBEY
void System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_V4
int System::Globalization::CompareInfo::_get_SORT_VERSION_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_SORT_VERSION_V4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_V4"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_V4
void System::Globalization::CompareInfo::_set_SORT_VERSION_V4(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_SORT_VERSION_V4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_V4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
::System::Collections::Generic::Dictionary_2<::StringW, ::Mono::Globalization::Unicode::SimpleCollator*>* System::Globalization::CompareInfo::_get_collators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_collators");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Mono::Globalization::Unicode::SimpleCollator*>*>("System.Globalization", "CompareInfo", "collators")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
void System::Globalization::CompareInfo::_set_collators(::System::Collections::Generic::Dictionary_2<::StringW, ::Mono::Globalization::Unicode::SimpleCollator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_collators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "collators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollation
bool System::Globalization::CompareInfo::_get_managedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_managedCollation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollation"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollation
void System::Globalization::CompareInfo::_set_managedCollation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_managedCollation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollationChecked
bool System::Globalization::CompareInfo::_get_managedCollationChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_managedCollationChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollationChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollationChecked
void System::Globalization::CompareInfo::_set_managedCollationChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_managedCollationChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollationChecked", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
::StringW& System::Globalization::CompareInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_sortName
::StringW& System::Globalization::CompareInfo::dyn_m_sortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_m_sortName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sortName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 win32LCID
int& System::Globalization::CompareInfo::dyn_win32LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_win32LCID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win32LCID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 culture
int& System::Globalization::CompareInfo::dyn_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "culture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.SortVersion m_SortVersion
::System::Globalization::SortVersion*& System::Globalization::CompareInfo::dyn_m_SortVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_m_SortVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortVersion"))->offset;
  return *reinterpret_cast<::System::Globalization::SortVersion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Globalization.Unicode.SimpleCollator collator
::Mono::Globalization::Unicode::SimpleCollator*& System::Globalization::CompareInfo::dyn_collator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_collator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collator"))->offset;
  return *reinterpret_cast<::Mono::Globalization::Unicode::SimpleCollator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CompareInfo.get_Name
::StringW System::Globalization::CompareInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.get_UseManagedCollation
bool System::Globalization::CompareInfo::get_UseManagedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::get_UseManagedCollation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "get_UseManagedCollation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCompareInfo
::System::Globalization::CompareInfo* System::Globalization::CompareInfo::GetCompareInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetCompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "GetCompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserializing
void System::Globalization::CompareInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnSerializing
void System::Globalization::CompareInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, ::StringW string2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, ::StringW string2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, offset1, length1, string2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOrdinal
int System::Globalization::CompareInfo::CompareOrdinal(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, string1, offset1, length1, string2, offset2, length2);
}
// Autogenerated method: System.Globalization.CompareInfo.IsPrefix
bool System::Globalization::CompareInfo::IsPrefix(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsSuffix
bool System::Globalization::CompareInfo::IsSuffix(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsSuffix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOf
int System::Globalization::CompareInfo::LastIndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetSortKey
::System::Globalization::SortKey* System::Globalization::CompareInfo::GetSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetSortKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKey
::System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CreateSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(forceRandomizedHashing), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, options, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCollator
::Mono::Globalization::Unicode::SimpleCollator* System::Globalization::CompareInfo::GetCollator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetCollator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::SimpleCollator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKeyCore
::System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKeyCore(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CreateSortKeyCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKeyCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_switch
int System::Globalization::CompareInfo::internal_index_switch(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_switch
int System::Globalization::CompareInfo::internal_compare_switch(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_managed
int System::Globalization::CompareInfo::internal_compare_managed(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_managed
int System::Globalization::CompareInfo::internal_index_managed(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.assign_sortkey
void System::Globalization::CompareInfo::assign_sortkey(::Il2CppObject* key, ::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::assign_sortkey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "assign_sortkey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare
int System::Globalization::CompareInfo::internal_compare(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index
int System::Globalization::CompareInfo::internal_index(::StringW source, int sindex, int count, ::StringW value, ::System::Globalization::CompareOptions options, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, sindex, count, value, options, first);
}
// Autogenerated method: System.Globalization.CompareInfo.Equals
bool System::Globalization::CompareInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCode
int System::Globalization::CompareInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.ToString
::StringW System::Globalization::CompareInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureNotFoundException
#include "System/Globalization/CultureNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_invalidCultureName
::StringW& System::Globalization::CultureNotFoundException::dyn_m_invalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::dyn_m_invalidCultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invalidCultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> m_invalidCultureId
::System::Nullable_1<int>& System::Globalization::CultureNotFoundException::dyn_m_invalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::dyn_m_invalidCultureId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invalidCultureId"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureId
::System::Nullable_1<int> System::Globalization::CultureNotFoundException::get_InvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_InvalidCultureId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvalidCultureId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureName
::StringW System::Globalization::CultureNotFoundException::get_InvalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_InvalidCultureName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvalidCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_DefaultMessage
::StringW System::Globalization::CultureNotFoundException::get_DefaultMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_DefaultMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureNotFoundException", "get_DefaultMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_FormatedInvalidCultureId
::StringW System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatedInvalidCultureId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_Message
::StringW System::Globalization::CultureNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.GetObjectData
void System::Globalization::CultureNotFoundException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Regular
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Regular
void System::Globalization::MonthNameStyles::_set_Regular(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Genitive
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Genitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_Genitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Genitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Genitive
void System::Globalization::MonthNameStyles::_set_Genitive(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_Genitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Genitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles LeapYear
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_LeapYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_LeapYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "LeapYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles LeapYear
void System::Globalization::MonthNameStyles::_set_LeapYear(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_LeapYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "LeapYear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::MonthNameStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatFlags
#include "System/Globalization/DateTimeFormatFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags None
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags None
void System::Globalization::DateTimeFormatFlags::_set_None(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
void System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
void System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
void System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
void System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
void System::Globalization::DateTimeFormatFlags::_set_NotInitialized(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "NotInitialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::DateTimeFormatFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
void System::Globalization::DateTimeFormatInfo::_set_invariantInfo(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.String rfc1123Pattern
::StringW System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static System.String rfc1123Pattern
void System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String sortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String sortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String universalSortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String universalSortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
int System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
void System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean preferExistingTokens
bool System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean preferExistingTokens
void System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens", value));
}
// [OptionalFieldAttribute] Offset: 0x6CE494
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_calendarNativeNames
::System::Collections::Hashtable* System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_calendarNativeNames
void System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
::System::Globalization::DateTimeStyles System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
void System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOKEN_HASH_SIZE
int System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOKEN_HASH_SIZE
void System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SECOND_PRIME
int System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SECOND_PRIME
void System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String dateSeparatorOrTimeZoneOffset
::StringW System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.String dateSeparatorOrTimeZoneOffset
void System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantDateSeparator
::StringW System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantDateSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantTimeSeparator
::StringW System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantTimeSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorablePeriod
::StringW System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorablePeriod
void System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorableComma
::StringW System::Globalization::DateTimeFormatInfo::_get_IgnorableComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_IgnorableComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "IgnorableComma"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorableComma
void System::Globalization::DateTimeFormatInfo::_set_IgnorableComma(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_IgnorableComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorableComma", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKYearSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKYearSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMonthSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKDaySuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKDaySuff
void System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanYearSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanYearSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMonthSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanDaySuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanDaySuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanHourSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMinuteSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanSecondSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKHourSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String ChineseHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String ChineseHourSuff
void System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMinuteSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKSecondSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String LocalTimeMark
::StringW System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static System.String LocalTimeMark
void System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanLangName
void System::Globalization::DateTimeFormatInfo::_set_KoreanLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String JapaneseLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String JapaneseLangName
void System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String EnglishLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_EnglishLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_EnglishLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "EnglishLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String EnglishLangName
void System::Globalization::DateTimeFormatInfo::_set_EnglishLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_EnglishLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "EnglishLangName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureData m_cultureData
::System::Globalization::CultureData*& System::Globalization::DateTimeFormatInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_name
::StringW& System::Globalization::DateTimeFormatInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_langName
::StringW& System::Globalization::DateTimeFormatInfo::dyn_m_langName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_langName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_langName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
::System::Globalization::CompareInfo*& System::Globalization::DateTimeFormatInfo::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo m_cultureInfo
::System::Globalization::CultureInfo*& System::Globalization::DateTimeFormatInfo::dyn_m_cultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_cultureInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String amDesignator
::StringW& System::Globalization::DateTimeFormatInfo::dyn_amDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_amDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amDesignator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String pmDesignator
::StringW& System::Globalization::DateTimeFormatInfo::dyn_pmDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_pmDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pmDesignator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String dateSeparator
::StringW& System::Globalization::DateTimeFormatInfo::dyn_dateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dateSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String generalShortTimePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalShortTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String generalLongTimePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalLongTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String timeSeparator
::StringW& System::Globalization::DateTimeFormatInfo::dyn_timeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_timeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String monthDayPattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthDayPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String dateTimeOffsetPattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeOffsetPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar calendar
::System::Globalization::Calendar*& System::Globalization::DateTimeFormatInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 firstDayOfWeek
int& System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 calendarWeekRule
int& System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarWeekRule"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String fullDateTimePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullDateTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] abbreviatedDayNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_superShortDayNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_superShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] dayNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_dayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] abbreviatedMonthNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] monthNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_monthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_monthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] genitiveMonthNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "genitiveMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_genitiveAbbreviatedMonthNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_genitiveAbbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] leapYearMonthNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String longDatePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_longDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_longDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longDatePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String shortDatePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortDatePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String yearMonthPattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yearMonthPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String longTimePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_longTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_longTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String shortTimePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allYearMonthPatterns
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allYearMonthPatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allShortDatePatterns
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allLongDatePatterns
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allShortTimePatterns
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allLongTimePatterns
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_eraNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_eraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_eraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_abbrevEraNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_abbrevEnglishEraNames
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] optionalCalendars
::ArrayW<int>& System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optionalCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isReadOnly
bool& System::Globalization::DateTimeFormatInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.DateTimeFormatFlags formatFlags
::System::Globalization::DateTimeFormatFlags& System::Globalization::DateTimeFormatInfo::dyn_formatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_formatFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formatFlags"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 CultureID
int& System::Globalization::DateTimeFormatInfo::dyn_CultureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_CultureID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CultureID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useUserOverride
bool& System::Globalization::DateTimeFormatInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bUseCalendarInfo
bool& System::Globalization::DateTimeFormatInfo::dyn_bUseCalendarInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_bUseCalendarInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseCalendarInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nDataItem
int& System::Globalization::DateTimeFormatInfo::dyn_nDataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_nDataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nDataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isDefaultCalendar
bool& System::Globalization::DateTimeFormatInfo::dyn_m_isDefaultCalendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_isDefaultCalendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultCalendar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_dateWords
::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_dateWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_dateWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateWords"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullTimeSpanPositivePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullTimeSpanPositivePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullTimeSpanNegativePattern
::StringW& System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullTimeSpanNegativePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TokenHashValue[] m_dtfiTokenHash
::ArrayW<::System::Globalization::TokenHashValue*>& System::Globalization::DateTimeFormatInfo::dyn_m_dtfiTokenHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_dtfiTokenHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dtfiTokenHash"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::TokenHashValue*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CultureName
::StringW System::Globalization::DateTimeFormatInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Culture
::System::Globalization::CultureInfo* System::Globalization::DateTimeFormatInfo::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LanguageName
::StringW System::Globalization::DateTimeFormatInfo::get_LanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_InvariantInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CurrentInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AMDesignator
::StringW System::Globalization::DateTimeFormatInfo::get_AMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Calendar
::System::Globalization::Calendar* System::Globalization::DateTimeFormatInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_Calendar
void System::Globalization::DateTimeFormatInfo::set_Calendar(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_OptionalCalendars
::ArrayW<int> System::Globalization::DateTimeFormatInfo::get_OptionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_OptionalCalendars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OptionalCalendars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_EraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEnglishEraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateSeparator
::StringW System::Globalization::DateTimeFormatInfo::get_DateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongDatePattern
::StringW System::Globalization::DateTimeFormatInfo::get_LongDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongDatePattern
void System::Globalization::DateTimeFormatInfo::set_LongDatePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_LongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongTimePattern
void System::Globalization::DateTimeFormatInfo::set_LongTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthDayPattern
::StringW System::Globalization::DateTimeFormatInfo::get_MonthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_MonthDayPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthDayPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_PMDesignator
::StringW System::Globalization::DateTimeFormatInfo::get_PMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_PMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_RFC1123Pattern
::StringW System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RFC1123Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortDatePattern
::StringW System::Globalization::DateTimeFormatInfo::get_ShortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortDatePattern
void System::Globalization::DateTimeFormatInfo::set_ShortDatePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShortDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_ShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortTimePattern
void System::Globalization::DateTimeFormatInfo::set_ShortTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_SortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralShortTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralLongTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralLongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateTimeOffsetPattern
::StringW System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeOffsetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_TimeSeparator
::StringW System::Globalization::DateTimeFormatInfo::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UniversalSortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UniversalSortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_YearMonthPattern
::StringW System::Globalization::DateTimeFormatInfo::get_YearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_YearMonthPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_YearMonthPattern
void System::Globalization::DateTimeFormatInfo::set_YearMonthPattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_YearMonthPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedDayNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DayNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_DayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_MonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInMonthNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInDayNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllYearMonthPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedYearMonthPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_IsReadOnly
bool System::Globalization::DateTimeFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanPositivePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanNegativePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CompareInfo
::System::Globalization::CompareInfo* System::Globalization::DateTimeFormatInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FormatFlags
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatInfo::get_FormatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FormatFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasForceTwoDigitYears
bool System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasForceTwoDigitYears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo..cctor
void System::Globalization::DateTimeFormatInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitPreferExistingTokens
bool System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "InitPreferExistingTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedDayOfWeekNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetDayOfWeekNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties
void System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties(::System::Globalization::CultureData* cultureData, int calendarID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeOverridableProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureData), ::il2cpp_utils::ExtractType(calendarID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cultureData, calendarID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnDeserialized
void System::Globalization::DateTimeFormatInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnSerializing
void System::Globalization::DateTimeFormatInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetInstance
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetInstance(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetFormat
::Il2CppObject* System::Globalization::DateTimeFormatInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Clone
::Il2CppObject* System::Globalization::DateTimeFormatInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetEraName
::StringW System::Globalization::DateTimeFormatInfo::GetEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthName
::StringW System::Globalization::DateTimeFormatInfo::internalGetMonthName(int month, ::System::Globalization::MonthNameStyles style, bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(abbreviated)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month, style, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetGenitiveMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames(bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(abbreviated)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetLeapYearMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetLeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName(::System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetCombinedPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetCombinedPatterns(::ArrayW<::StringW> patterns1, ::ArrayW<::StringW> patterns2, ::StringW connectString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetCombinedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetCombinedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns1), ::il2cpp_utils::ExtractType(patterns2), ::il2cpp_utils::ExtractType(connectString)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, patterns1, patterns2, connectString);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns(::Il2CppChar format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllDateTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetDayName
::StringW System::Globalization::DateTimeFormatInfo::GetDayName(::System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMonthName
::StringW System::Globalization::DateTimeFormatInfo::GetMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMergedPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetMergedPatterns(::ArrayW<::StringW> patterns, ::StringW defaultPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetMergedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetMergedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns), ::il2cpp_utils::ExtractType(defaultPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, patterns, defaultPattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.YearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::YearMonthAdjustment(ByRef<int> year, ByRef<int> month, bool parsedMonthName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::YearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(parsedMonthName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(year), byref(month), parsedMonthName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetJapaneseCalendarDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetJapaneseCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetTaiwanCalendarDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetTaiwanCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ClearTokenHashTable
void System::Globalization::DateTimeFormatInfo::ClearTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::ClearTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.CreateTokenHashTable
::ArrayW<::System::Globalization::TokenHashValue*> System::Globalization::DateTimeFormatInfo::CreateTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::CreateTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::TokenHashValue*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.AddMonthNames
void System::Globalization::DateTimeFormatInfo::AddMonthNames(::ArrayW<::System::Globalization::TokenHashValue*> temp, ::StringW monthPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::AddMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(temp), ::il2cpp_utils::ExtractType(monthPostfix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, temp, monthPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.TryParseHebrewNumber
bool System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber(ByRef<::System::__DTString> str, ByRef<bool> badFormat, ByRef<int> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "TryParseHebrewNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(badFormat), byref(number));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsHebrewChar
bool System::Globalization::DateTimeFormatInfo::IsHebrewChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::IsHebrewChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "IsHebrewChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Tokenize
bool System::Globalization::DateTimeFormatInfo::Tokenize(::System::TokenType TokenMask, ByRef<::System::TokenType> tokenType, ByRef<int> tokenValue, ByRef<::System::__DTString> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::Tokenize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tokenize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(TokenMask), ::il2cpp_utils::ExtractIndependentType<::System::TokenType&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, TokenMask, byref(tokenType), byref(tokenValue), byref(str));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertAtCurrentHashNode
void System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode(::ArrayW<::System::Globalization::TokenHashValue*> hashTable, ::StringW str, ::Il2CppChar ch, ::System::TokenType tokenType, int tokenValue, int pos, int hashcode, int hashProbe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAtCurrentHashNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(hashcode), ::il2cpp_utils::ExtractType(hashProbe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashTable, str, ch, tokenType, tokenValue, pos, hashcode, hashProbe);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertHash
void System::Globalization::DateTimeFormatInfo::InsertHash(::ArrayW<::System::Globalization::TokenHashValue*> hashTable, ::StringW str, ::System::TokenType tokenType, int tokenValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InsertHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashTable, str, tokenType, tokenValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String tokenString
::StringW& System::Globalization::TokenHashValue::dyn_tokenString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TokenHashValue::dyn_tokenString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.TokenType tokenType
::System::TokenType& System::Globalization::TokenHashValue::dyn_tokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TokenHashValue::dyn_tokenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenType"))->offset;
  return *reinterpret_cast<::System::TokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tokenValue
int& System::Globalization::TokenHashValue::dyn_tokenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TokenHashValue::dyn_tokenValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS None
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS None
void System::Globalization::FORMATFLAGS::_set_None(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
void System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
void System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseHebrewParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseHebrewParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseHebrewParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
void System::Globalization::FORMATFLAGS::_set_UseHebrewParsing(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseHebrewParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseHebrewParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
void System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::FORMATFLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarId
#include "System/Globalization/CalendarId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN
void System::Globalization::CalendarId::_set_GREGORIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_US
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_US
void System::Globalization::CalendarId::_set_GREGORIAN_US(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPAN
void System::Globalization::CalendarId::_set_JAPAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWAN
void System::Globalization::CalendarId::_set_TAIWAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREA
void System::Globalization::CalendarId::_set_KOREA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HIJRI
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HIJRI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HIJRI
void System::Globalization::CalendarId::_set_HIJRI(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId THAI
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "THAI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId THAI
void System::Globalization::CalendarId::_set_THAI(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "THAI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HEBREW
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HEBREW"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HEBREW
void System::Globalization::CalendarId::_set_HEBREW(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
void System::Globalization::CalendarId::_set_GREGORIAN_ARABIC(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JULIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JULIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JULIAN
void System::Globalization::CalendarId::_set_JULIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
void System::Globalization::CalendarId::_set_JAPANESELUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
void System::Globalization::CalendarId::_set_CHINESELUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId SAKA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "SAKA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId SAKA
void System::Globalization::CalendarId::_set_SAKA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "SAKA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
void System::Globalization::CalendarId::_set_LUNAR_ETO_CHN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
void System::Globalization::CalendarId::_set_LUNAR_ETO_KOR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
void System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
void System::Globalization::CalendarId::_set_KOREANLUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
void System::Globalization::CalendarId::_set_TAIWANLUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId PERSIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId PERSIAN
void System::Globalization::CalendarId::_set_PERSIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId UMALQURA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId UMALQURA
void System::Globalization::CalendarId::_set_UMALQURA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LAST_CALENDAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LAST_CALENDAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LAST_CALENDAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LAST_CALENDAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LAST_CALENDAR
void System::Globalization::CalendarId::_set_LAST_CALENDAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LAST_CALENDAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LAST_CALENDAR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
uint16_t& System::Globalization::CalendarId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfoScanner
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
void System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> m_dateWords
::System::Collections::Generic::List_1<::StringW>*& System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateWords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern m_ymdFlags
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern& System::Globalization::DateTimeFormatInfoScanner::dyn_m_ymdFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::dyn_m_ymdFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ymdFlags"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.get_KnownWords
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Globalization::DateTimeFormatInfoScanner::get_KnownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::get_KnownWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "get_KnownWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter
int System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter(::StringW pattern, int currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "SkipWhiteSpacesAndNonLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(currentIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, currentIndex);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWordOrPostfix
void System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix(::StringW formatPostfix, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWordOrPostfix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatPostfix), ::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, formatPostfix, str);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWords
int System::Globalization::DateTimeFormatInfoScanner::AddDateWords(::StringW pattern, int index, ::StringW formatPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddDateWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(formatPostfix)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pattern, index, formatPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanRepeatChar
int System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar(::StringW pattern, ::Il2CppChar ch, int index, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ScanRepeatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, ch, index, byref(count));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddIgnorableSymbols
void System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIgnorableSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanDateWord
void System::Globalization::DateTimeFormatInfoScanner::ScanDateWord(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ScanDateWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDateWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetDateWordsOfDTFI
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI(::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDateWordsOfDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagGenitiveMonth
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth(::ArrayW<::StringW> monthNames, ::ArrayW<::StringW> genitveMonthNames, ::ArrayW<::StringW> abbrevMonthNames, ::ArrayW<::StringW> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagGenitiveMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInMonthNames
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames(::ArrayW<::StringW> monthNames, ::ArrayW<::StringW> genitveMonthNames, ::ArrayW<::StringW> abbrevMonthNames, ::ArrayW<::StringW> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInDayNames
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames(::ArrayW<::StringW> dayNames, ::ArrayW<::StringW> abbrevDayNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayNames), ::il2cpp_utils::ExtractType(abbrevDayNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dayNames, abbrevDayNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseHebrewCalendar
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseHebrewCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.EqualStringArrays
bool System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays(::ArrayW<::StringW> array1, ::ArrayW<::StringW> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "EqualStringArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsHaveSpace
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsHaveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsBeginWithDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern None
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern None
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundYearPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundYearPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundMonthPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundMonthPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundDayPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundDayPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundYMDPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern FoundYMDPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles None
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles None
void System::Globalization::DateTimeStyles::_set_None(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
void System::Globalization::DateTimeStyles::_set_AllowLeadingWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
void System::Globalization::DateTimeStyles::_set_AllowTrailingWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowInnerWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowInnerWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowInnerWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
void System::Globalization::DateTimeStyles::_set_AllowInnerWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowInnerWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowInnerWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
void System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
void System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AdjustToUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AdjustToUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AdjustToUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
void System::Globalization::DateTimeStyles::_set_AdjustToUniversal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AdjustToUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AdjustToUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeLocal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AssumeLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeLocal
void System::Globalization::DateTimeStyles::_set_AssumeLocal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AssumeLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeUniversal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AssumeUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeUniversal
void System::Globalization::DateTimeStyles::_set_AssumeUniversal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AssumeUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles RoundtripKind
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles RoundtripKind
void System::Globalization::DateTimeStyles::_set_RoundtripKind(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::DateTimeStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendar
#include "System/Globalization/GregorianCalendar.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::ArrayW<int> System::Globalization::GregorianCalendar::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendar", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendar::_set_DaysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::ArrayW<int> System::Globalization::GregorianCalendar::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendar", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendar::_set_DaysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::GregorianCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.Calendar s_defaultInstance
void System::Globalization::GregorianCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "s_defaultInstance", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarTypes m_type
::System::Globalization::GregorianCalendarTypes& System::Globalization::GregorianCalendar::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.GregorianCalendar..cctor
void System::Globalization::GregorianCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.OnDeserialized
void System::Globalization::GregorianCalendar::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::GregorianCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDatePart
int System::Globalization::GregorianCalendar::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDatePart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(part)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::GregorianCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::GregorianCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_ID
int System::Globalization::GregorianCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_Eras
::ArrayW<int> System::Globalization::GregorianCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_TwoDigitYearMax
int System::Globalization::GregorianCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfMonth
int System::Globalization::GregorianCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::GregorianCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInMonth
int System::Globalization::GregorianCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetEra
int System::Globalization::GregorianCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonth
int System::Globalization::GregorianCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonthsInYear
int System::Globalization::GregorianCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetYear
int System::Globalization::GregorianCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.IsLeapYear
bool System::Globalization::GregorianCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToDateTime
::System::DateTime System::Globalization::GregorianCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.TryToDateTime
bool System::Globalization::GregorianCalendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::TryToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, byref(result));
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToFourDigitYear
int System::Globalization::GregorianCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 era
int& System::Globalization::EraInfo::dyn_era() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_era");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "era"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 ticks
int64_t& System::Globalization::EraInfo::dyn_ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_ticks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ticks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 yearOffset
int& System::Globalization::EraInfo::dyn_yearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_yearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yearOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 minEraYear
int& System::Globalization::EraInfo::dyn_minEraYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_minEraYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minEraYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 maxEraYear
int& System::Globalization::EraInfo::dyn_maxEraYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_maxEraYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxEraYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String eraName
::StringW& System::Globalization::EraInfo::dyn_eraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_eraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String abbrevEraName
::StringW& System::Globalization::EraInfo::dyn_abbrevEraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_abbrevEraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbrevEraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String englishEraName
::StringW& System::Globalization::EraInfo::dyn_englishEraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_englishEraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishEraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::ArrayW<int> System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::ArrayW<int> System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_maxYear
int& System::Globalization::GregorianCalendarHelper::dyn_m_maxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_maxYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_minYear
int& System::Globalization::GregorianCalendarHelper::dyn_m_minYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_minYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar m_Cal
::System::Globalization::Calendar*& System::Globalization::GregorianCalendarHelper::dyn_m_Cal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_Cal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cal"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.EraInfo[] m_EraInfo
::ArrayW<::System::Globalization::EraInfo*>& System::Globalization::GregorianCalendarHelper::dyn_m_EraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_EraInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EraInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::EraInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] m_eras
::ArrayW<int>& System::Globalization::GregorianCalendarHelper::dyn_m_eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_eras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eras"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime m_minDate
::System::DateTime& System::Globalization::GregorianCalendarHelper::dyn_m_minDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_minDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_MaxYear
int System::Globalization::GregorianCalendarHelper::get_MaxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::get_MaxYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_Eras
::ArrayW<int> System::Globalization::GregorianCalendarHelper::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::get_Eras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper..cctor
void System::Globalization::GregorianCalendarHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetGregorianYear
int System::Globalization::GregorianCalendarHelper::GetGregorianYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetGregorianYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGregorianYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsValidYear
bool System::Globalization::GregorianCalendarHelper::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::IsValidYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDatePart
int System::Globalization::GregorianCalendarHelper::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDatePart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(part)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetAbsoluteDate
int64_t System::Globalization::GregorianCalendarHelper::GetAbsoluteDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetAbsoluteDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "GetAbsoluteDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.DateToTicks
int64_t System::Globalization::GregorianCalendarHelper::DateToTicks(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::DateToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "DateToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.TimeToTicks
int64_t System::Globalization::GregorianCalendarHelper::TimeToTicks(int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "TimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.CheckTicksRange
void System::Globalization::GregorianCalendarHelper::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTicksRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfMonth
int System::Globalization::GregorianCalendarHelper::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfWeek
::System::DayOfWeek System::Globalization::GregorianCalendarHelper::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDaysInMonth
int System::Globalization::GregorianCalendarHelper::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetEra
int System::Globalization::GregorianCalendarHelper::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetEra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonth
int System::Globalization::GregorianCalendarHelper::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonthsInYear
int System::Globalization::GregorianCalendarHelper::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetYear
int System::Globalization::GregorianCalendarHelper::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsLeapYear
bool System::Globalization::GregorianCalendarHelper::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.ToDateTime
::System::DateTime System::Globalization::GregorianCalendarHelper::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendarTypes
#include "System/Globalization/GregorianCalendarTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Localized
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_Localized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Localized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Localized
void System::Globalization::GregorianCalendarTypes::_set_Localized(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_Localized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Localized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes USEnglish
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_USEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_USEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "USEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes USEnglish
void System::Globalization::GregorianCalendarTypes::_set_USEnglish(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_USEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "USEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
void System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Arabic
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Arabic
void System::Globalization::GregorianCalendarTypes::_set_Arabic(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::GregorianCalendarTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.HebrewNumber/System.Globalization.HS state
::System::Globalization::HebrewNumber::HS& System::Globalization::HebrewNumberParsingContext::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::dyn_state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Globalization::HebrewNumber::HS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 result
int& System::Globalization::HebrewNumberParsingContext::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::dyn_result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.HebrewNumberParsingContext..ctor
System::Globalization::HebrewNumberParsingContext::HebrewNumberParsingContext(int result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
void System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_ContinueParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_ContinueParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "ContinueParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
void System::Globalization::HebrewNumberParsingState::_set_ContinueParsing(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_ContinueParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "ContinueParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::HebrewNumberParsingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber
#include "System/Globalization/HebrewNumber.hpp"
// Including type: System.Globalization.HebrewNumber/System.Globalization.HebrewToken
#include "System/Globalization/HebrewNumber_HebrewToken.hpp"
// Including type: System.Globalization.HebrewNumber/System.Globalization.HebrewValue
#include "System/Globalization/HebrewNumber_HebrewValue.hpp"
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.HebrewNumber/System.Globalization.HebrewValue[] HebrewValues
::ArrayW<::System::Globalization::HebrewNumber::HebrewValue*> System::Globalization::HebrewNumber::_get_HebrewValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_HebrewValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::HebrewNumber::HebrewValue*>>("System.Globalization", "HebrewNumber", "HebrewValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.HebrewNumber/System.Globalization.HebrewValue[] HebrewValues
void System::Globalization::HebrewNumber::_set_HebrewValues(::ArrayW<::System::Globalization::HebrewNumber::HebrewValue*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_HebrewValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "HebrewValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char maxHebrewNumberCh
::Il2CppChar System::Globalization::HebrewNumber::_get_maxHebrewNumberCh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_maxHebrewNumberCh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Globalization", "HebrewNumber", "maxHebrewNumberCh"));
}
// Autogenerated static field setter
// Set static field: static private System.Char maxHebrewNumberCh
void System::Globalization::HebrewNumber::_set_maxHebrewNumberCh(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_maxHebrewNumberCh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "maxHebrewNumberCh", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.HebrewNumber/System.Globalization.HS[][] NumberPasingState
::ArrayW<::ArrayW<::System::Globalization::HebrewNumber::HS>> System::Globalization::HebrewNumber::_get_NumberPasingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_NumberPasingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::System::Globalization::HebrewNumber::HS>>>("System.Globalization", "HebrewNumber", "NumberPasingState"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.HebrewNumber/System.Globalization.HS[][] NumberPasingState
void System::Globalization::HebrewNumber::_set_NumberPasingState(::ArrayW<::ArrayW<::System::Globalization::HebrewNumber::HS>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_NumberPasingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "NumberPasingState", value));
}
// Autogenerated method: System.Globalization.HebrewNumber..cctor
void System::Globalization::HebrewNumber::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.HebrewNumber.ToString
::StringW System::Globalization::HebrewNumber::ToString(int Number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Number)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Number);
}
// Autogenerated method: System.Globalization.HebrewNumber.ParseByChar
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumber::ParseByChar(::Il2CppChar ch, ByRef<::System::Globalization::HebrewNumberParsingContext> context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::ParseByChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ParseByChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::HebrewNumberParsingState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, byref(context));
}
// Autogenerated method: System.Globalization.HebrewNumber.IsDigit
bool System::Globalization::HebrewNumber::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/System.Globalization.HebrewToken
#include "System/Globalization/HebrewNumber_HebrewToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Invalid
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Invalid
void System::Globalization::HebrewNumber::HebrewToken::_set_Invalid(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit400
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit400
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit400(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit200_300
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit200_300
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit100
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit100
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit100(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit10
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit10"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit10
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit10(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit10", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit1
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit1"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit1
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit1(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit6_7
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit6_7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit7
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit7(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit9
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken Digit9
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit9(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken SingleQuote
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken SingleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken DoubleQuote
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HebrewToken DoubleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::HebrewNumber::HebrewToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/System.Globalization.HebrewValue
#include "System/Globalization/HebrewNumber_HebrewValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.HebrewNumber/System.Globalization.HebrewToken token
::System::Globalization::HebrewNumber::HebrewToken& System::Globalization::HebrewNumber::HebrewValue::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewValue::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Globalization::HebrewNumber::HebrewToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 value
int& System::Globalization::HebrewNumber::HebrewValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/System.Globalization.HS
#include "System/Globalization/HebrewNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS _err
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get__err() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get__err");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "_err"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS _err
void System::Globalization::HebrewNumber::HS::_set__err(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set__err");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "_err", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS Start
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS Start
void System::Globalization::HebrewNumber::HS::_set_Start(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400
void System::Globalization::HebrewNumber::HS::_set_S400(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400
void System::Globalization::HebrewNumber::HS::_set_S400_400(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X00
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X00
void System::Globalization::HebrewNumber::HS::_set_S400_X00(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00_DQ
void System::Globalization::HebrewNumber::HS::_set_X00_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X00_X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X00_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_X00_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X00_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X00_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X0_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X0_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X0_DQ
void System::Globalization::HebrewNumber::HS::_set_X0_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X0_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X
void System::Globalization::HebrewNumber::HS::_set_X(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X0
void System::Globalization::HebrewNumber::HS::_set_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00
void System::Globalization::HebrewNumber::HS::_set_X00(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_400_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400_100
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400_100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S400_400_100
void System::Globalization::HebrewNumber::HS::_set_S400_400_100(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400_100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S9
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S9
void System::Globalization::HebrewNumber::HS::_set_S9(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00_S9
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS X00_S9
void System::Globalization::HebrewNumber::HS::_set_X00_S9(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S9_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S9_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS S9_DQ
void System::Globalization::HebrewNumber::HS::_set_S9_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S9_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/System.Globalization.HS END
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "END"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/System.Globalization.HS END
void System::Globalization::HebrewNumber::HS::_set_END(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "END", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::HebrewNumber::HS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.JapaneseCalendar
#include "System/Globalization/JapaneseCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
::System::DateTime System::Globalization::JapaneseCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "JapaneseCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::JapaneseCalendar::_set_calendarMinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] japaneseEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::_get_japaneseEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_japaneseEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::EraInfo*>>("System.Globalization", "JapaneseCalendar", "japaneseEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] japaneseEraInfo
void System::Globalization::JapaneseCalendar::_set_japaneseEraInfo(::ArrayW<::System::Globalization::EraInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_japaneseEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "japaneseEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::JapaneseCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::JapaneseCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "s_defaultInstance", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarHelper helper
::System::Globalization::GregorianCalendarHelper*& System::Globalization::JapaneseCalendar::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.JapaneseCalendar..cctor
void System::Globalization::JapaneseCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::GetEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetEraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetEraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::EraInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetErasFromRegistry
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::GetErasFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetErasFromRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetErasFromRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::EraInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::JapaneseCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EraNames
::ArrayW<::StringW> System::Globalization::JapaneseCalendar::EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.AbbrevEraNames
::ArrayW<::StringW> System::Globalization::JapaneseCalendar::AbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EnglishEraNames
::ArrayW<::StringW> System::Globalization::JapaneseCalendar::EnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::EnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::JapaneseCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_ID
int System::Globalization::JapaneseCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_Eras
::ArrayW<int> System::Globalization::JapaneseCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_TwoDigitYearMax
int System::Globalization::JapaneseCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInMonth
int System::Globalization::JapaneseCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfMonth
int System::Globalization::JapaneseCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::JapaneseCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonthsInYear
int System::Globalization::JapaneseCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEra
int System::Globalization::JapaneseCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonth
int System::Globalization::JapaneseCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetYear
int System::Globalization::JapaneseCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsLeapYear
bool System::Globalization::JapaneseCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToDateTime
::System::DateTime System::Globalization::JapaneseCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToFourDigitYear
int System::Globalization::JapaneseCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsValidYear
bool System::Globalization::JapaneseCalendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::IsValidYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberFormatInfo invariantInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("System.Globalization", "NumberFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberFormatInfo invariantInfo
void System::Globalization::NumberFormatInfo::_set_invariantInfo(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberStyles InvalidNumberStyles
::System::Globalization::NumberStyles System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberStyles InvalidNumberStyles
void System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] numberGroupSizes
::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_numberGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] currencyGroupSizes
::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_currencyGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] percentGroupSizes
::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_percentGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String positiveSign
::StringW& System::Globalization::NumberFormatInfo::dyn_positiveSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_positiveSign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positiveSign"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String negativeSign
::StringW& System::Globalization::NumberFormatInfo::dyn_negativeSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_negativeSign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negativeSign"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String numberDecimalSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_numberDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String numberGroupSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_numberGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencyGroupSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_currencyGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencyDecimalSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_currencyDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencySymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_currencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String ansiCurrencySymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_ansiCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_ansiCurrencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ansiCurrencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String nanSymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_nanSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_nanSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nanSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String positiveInfinitySymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_positiveInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_positiveInfinitySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positiveInfinitySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String negativeInfinitySymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_negativeInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_negativeInfinitySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negativeInfinitySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentDecimalSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_percentDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentGroupSeparator
::StringW& System::Globalization::NumberFormatInfo::dyn_percentGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentSymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_percentSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String perMilleSymbol
::StringW& System::Globalization::NumberFormatInfo::dyn_perMilleSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_perMilleSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perMilleSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] nativeDigits
::ArrayW<::StringW>& System::Globalization::NumberFormatInfo::dyn_nativeDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_nativeDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeDigits"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_dataItem
int& System::Globalization::NumberFormatInfo::dyn_m_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 numberDecimalDigits
int& System::Globalization::NumberFormatInfo::dyn_numberDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyDecimalDigits
int& System::Globalization::NumberFormatInfo::dyn_currencyDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyPositivePattern
int& System::Globalization::NumberFormatInfo::dyn_currencyPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyPositivePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyNegativePattern
int& System::Globalization::NumberFormatInfo::dyn_currencyNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 numberNegativePattern
int& System::Globalization::NumberFormatInfo::dyn_numberNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentPositivePattern
int& System::Globalization::NumberFormatInfo::dyn_percentPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentPositivePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentNegativePattern
int& System::Globalization::NumberFormatInfo::dyn_percentNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentDecimalDigits
int& System::Globalization::NumberFormatInfo::dyn_percentDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 digitSubstitution
int& System::Globalization::NumberFormatInfo::dyn_digitSubstitution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_digitSubstitution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digitSubstitution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isReadOnly
bool& System::Globalization::NumberFormatInfo::dyn_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_useUserOverride
bool& System::Globalization::NumberFormatInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInvariant
bool& System::Globalization::NumberFormatInfo::dyn_m_isInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_isInvariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInvariant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean validForParseAsNumber
bool& System::Globalization::NumberFormatInfo::dyn_validForParseAsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_validForParseAsNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validForParseAsNumber"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean validForParseAsCurrency
bool& System::Globalization::NumberFormatInfo::dyn_validForParseAsCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_validForParseAsCurrency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validForParseAsCurrency"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_InvariantInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalDigits
int System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_IsReadOnly
bool System::Globalization::NumberFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_NumberGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_PercentGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencySymbol
::StringW System::Globalization::NumberFormatInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrentInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NaNSymbol
::StringW System::Globalization::NumberFormatInfo::get_NaNSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NaNSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NaNSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyNegativePattern
int System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberNegativePattern
int System::Globalization::NumberFormatInfo::get_NumberNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentPositivePattern
int System::Globalization::NumberFormatInfo::get_PercentPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentNegativePattern
int System::Globalization::NumberFormatInfo::get_PercentNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeInfinitySymbol
::StringW System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NegativeInfinitySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeSign
::StringW System::Globalization::NumberFormatInfo::get_NegativeSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NegativeSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NegativeSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalDigits
int System::Globalization::NumberFormatInfo::get_NumberDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_NumberGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyPositivePattern
int System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveInfinitySymbol
::StringW System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositiveInfinitySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveSign
::StringW System::Globalization::NumberFormatInfo::get_PositiveSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PositiveSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositiveSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalDigits
int System::Globalization::NumberFormatInfo::get_PercentDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_PercentGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentSymbol
::StringW System::Globalization::NumberFormatInfo::get_PercentSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PerMilleSymbol
::StringW System::Globalization::NumberFormatInfo::get_PerMilleSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PerMilleSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PerMilleSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnSerializing
void System::Globalization::NumberFormatInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserializing
void System::Globalization::NumberFormatInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserialized
void System::Globalization::NumberFormatInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetInstance
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::GetInstance(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, formatProvider);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.Clone
::Il2CppObject* System::Globalization::NumberFormatInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetFormat
::Il2CppObject* System::Globalization::NumberFormatInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ReadOnly
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::ReadOnly(::System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleInteger
void System::Globalization::NumberFormatInfo::ValidateParseStyleInteger(::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleFloatingPoint
void System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint(::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleFloatingPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles None
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles None
void System::Globalization::NumberStyles::_set_None(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingWhite
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingWhite
void System::Globalization::NumberStyles::_set_AllowLeadingWhite(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingWhite
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingWhite
void System::Globalization::NumberStyles::_set_AllowTrailingWhite(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingSign
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowLeadingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingSign
void System::Globalization::NumberStyles::_set_AllowLeadingSign(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowLeadingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingSign
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowTrailingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingSign
void System::Globalization::NumberStyles::_set_AllowTrailingSign(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowTrailingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowParentheses
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowParentheses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowParentheses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowParentheses"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowParentheses
void System::Globalization::NumberStyles::_set_AllowParentheses(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowParentheses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowParentheses", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowDecimalPoint
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowDecimalPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowDecimalPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowDecimalPoint"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowDecimalPoint
void System::Globalization::NumberStyles::_set_AllowDecimalPoint(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowDecimalPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowDecimalPoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowThousands
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowThousands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowThousands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowThousands"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowThousands
void System::Globalization::NumberStyles::_set_AllowThousands(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowThousands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowThousands", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowExponent
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowExponent"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowExponent
void System::Globalization::NumberStyles::_set_AllowExponent(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowExponent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowCurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowCurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
void System::Globalization::NumberStyles::_set_AllowCurrencySymbol(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowCurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowCurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowHexSpecifier
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowHexSpecifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowHexSpecifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowHexSpecifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowHexSpecifier
void System::Globalization::NumberStyles::_set_AllowHexSpecifier(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowHexSpecifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowHexSpecifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Integer
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Integer
void System::Globalization::NumberStyles::_set_Integer(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles HexNumber
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_HexNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_HexNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "HexNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles HexNumber
void System::Globalization::NumberStyles::_set_HexNumber(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_HexNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "HexNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Number
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Number"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Number
void System::Globalization::NumberStyles::_set_Number(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Float
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Float
void System::Globalization::NumberStyles::_set_Float(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Currency
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Currency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Currency"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Currency
void System::Globalization::NumberStyles::_set_Currency(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Currency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Currency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Any
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Any
void System::Globalization::NumberStyles::_set_Any(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::NumberStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TaiwanCalendar
#include "System/Globalization/TaiwanCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] taiwanEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::TaiwanCalendar::_get_taiwanEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_taiwanEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::EraInfo*>>("System.Globalization", "TaiwanCalendar", "taiwanEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] taiwanEraInfo
void System::Globalization::TaiwanCalendar::_set_taiwanEraInfo(::ArrayW<::System::Globalization::EraInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_taiwanEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "taiwanEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::TaiwanCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "TaiwanCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::TaiwanCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "s_defaultInstance", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
::System::DateTime System::Globalization::TaiwanCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "TaiwanCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::TaiwanCalendar::_set_calendarMinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "calendarMinValue", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarHelper helper
::System::Globalization::GregorianCalendarHelper*& System::Globalization::TaiwanCalendar::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TaiwanCalendar..cctor
void System::Globalization::TaiwanCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::TaiwanCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::TaiwanCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_ID
int System::Globalization::TaiwanCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_Eras
::ArrayW<int> System::Globalization::TaiwanCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_TwoDigitYearMax
int System::Globalization::TaiwanCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDaysInMonth
int System::Globalization::TaiwanCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfMonth
int System::Globalization::TaiwanCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::TaiwanCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonthsInYear
int System::Globalization::TaiwanCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetEra
int System::Globalization::TaiwanCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonth
int System::Globalization::TaiwanCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetYear
int System::Globalization::TaiwanCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.IsLeapYear
bool System::Globalization::TaiwanCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToDateTime
::System::DateTime System::Globalization::TaiwanCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToFourDigitYear
int System::Globalization::TaiwanCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.TextInfo s_Invariant
::System::Globalization::TextInfo* System::Globalization::TextInfo::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TextInfo*>("System.Globalization", "TextInfo", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.TextInfo s_Invariant
void System::Globalization::TextInfo::_set_s_Invariant(::System::Globalization::TextInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "s_Invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 wordSeparatorMask
int System::Globalization::TextInfo::_get_wordSeparatorMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_get_wordSeparatorMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "TextInfo", "wordSeparatorMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 wordSeparatorMask
void System::Globalization::TextInfo::_set_wordSeparatorMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_set_wordSeparatorMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "wordSeparatorMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_listSeparator
::StringW& System::Globalization::TextInfo::dyn_m_listSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_listSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_listSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
bool& System::Globalization::TextInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_cultureName
::StringW& System::Globalization::TextInfo::dyn_m_cultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_cultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureData m_cultureData
::System::Globalization::CultureData*& System::Globalization::TextInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_textInfoName
::StringW& System::Globalization::TextInfo::dyn_m_textInfoName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_textInfoName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textInfoName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> m_IsAsciiCasingSameAsInvariant
::System::Nullable_1<bool>& System::Globalization::TextInfo::dyn_m_IsAsciiCasingSameAsInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_IsAsciiCasingSameAsInvariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsAsciiCasingSameAsInvariant"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String customCultureName
::StringW& System::Globalization::TextInfo::dyn_customCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_customCultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customCultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_nDataItem
int& System::Globalization::TextInfo::dyn_m_nDataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_nDataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nDataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_useUserOverride
bool& System::Globalization::TextInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_win32LangID
int& System::Globalization::TextInfo::dyn_m_win32LangID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_win32LangID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_win32LangID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TextInfo.get_Invariant
::System::Globalization::TextInfo* System::Globalization::TextInfo::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.get_CultureName
::StringW System::Globalization::TextInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.get_IsAsciiCasingSameAsInvariant
bool System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAsciiCasingSameAsInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserializing
void System::Globalization::TextInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnSerializing
void System::Globalization::TextInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCodeOrdinalIgnoreCase
int System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "GetHashCodeOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCodeOrdinalIgnoreCase
int System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase(::StringW s, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetHashCodeOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "GetHashCodeOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(forceRandomizedHashing), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.TextInfo.CompareOrdinalIgnoreCase
int System::Globalization::TextInfo::CompareOrdinalIgnoreCase(::StringW str1, ::StringW str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::CompareOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, str2);
}
// Autogenerated method: System.Globalization.TextInfo.CompareOrdinalIgnoreCaseEx
int System::Globalization::TextInfo::CompareOrdinalIgnoreCaseEx(::StringW strA, int indexA, ::StringW strB, int indexB, int lengthA, int lengthB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::CompareOrdinalIgnoreCaseEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "CompareOrdinalIgnoreCaseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(lengthA), ::il2cpp_utils::ExtractType(lengthB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, lengthA, lengthB);
}
// Autogenerated method: System.Globalization.TextInfo.IndexOfStringOrdinalIgnoreCase
int System::Globalization::TextInfo::IndexOfStringOrdinalIgnoreCase(::StringW source, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IndexOfStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IndexOfStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count);
}
// Autogenerated method: System.Globalization.TextInfo.LastIndexOfStringOrdinalIgnoreCase
int System::Globalization::TextInfo::LastIndexOfStringOrdinalIgnoreCase(::StringW source, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::LastIndexOfStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "LastIndexOfStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count);
}
// Autogenerated method: System.Globalization.TextInfo.Clone
::Il2CppObject* System::Globalization::TextInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.SetReadOnlyState
void System::Globalization::TextInfo::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::Il2CppChar System::Globalization::TextInfo::ToLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLower");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::StringW System::Globalization::TextInfo::ToLower(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLower");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToLowerAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToLowerAsciiInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::Il2CppChar System::Globalization::TextInfo::ToUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpper");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::StringW System::Globalization::TextInfo::ToUpper(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpper");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToUpperAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToUpperAsciiInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.IsAscii
bool System::Globalization::TextInfo::IsAscii(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToTitleCase
::StringW System::Globalization::TextInfo::ToTitleCase(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToTitleCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToTitleCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.AddNonLetter
int System::Globalization::TextInfo::AddNonLetter(ByRef<::System::Text::StringBuilder*> result, ByRef<::StringW> input, int inputIndex, int charLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::AddNonLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "AddNonLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(charLen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(input), inputIndex, charLen);
}
// Autogenerated method: System.Globalization.TextInfo.AddTitlecaseLetter
int System::Globalization::TextInfo::AddTitlecaseLetter(ByRef<::System::Text::StringBuilder*> result, ByRef<::StringW> input, int inputIndex, int charLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::AddTitlecaseLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTitlecaseLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(charLen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(result), byref(input), inputIndex, charLen);
}
// Autogenerated method: System.Globalization.TextInfo.IsWordSeparator
bool System::Globalization::TextInfo::IsWordSeparator(::System::Globalization::UnicodeCategory category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsWordSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsWordSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Globalization.TextInfo.IsLetterCategory
bool System::Globalization::TextInfo::IsLetterCategory(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsLetterCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsLetterCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Globalization.TextInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::TextInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.TextInfo.GetCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetCaseInsensitiveHashCode(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.GetCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetCaseInsensitiveHashCode(::StringW str, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(forceRandomizedHashing), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.TextInfo.GetInvariantCaseInsensitiveHashCode
int System::Globalization::TextInfo::GetInvariantCaseInsensitiveHashCode(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetInvariantCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvariantCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::StringW System::Globalization::TextInfo::ToUpperInternal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::StringW System::Globalization::TextInfo::ToLowerInternal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::Il2CppChar System::Globalization::TextInfo::ToUpperInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::Il2CppChar System::Globalization::TextInfo::ToLowerInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.InternalCompareStringOrdinalIgnoreCase
int System::Globalization::TextInfo::InternalCompareStringOrdinalIgnoreCase(::StringW strA, int indexA, ::StringW strB, int indexB, int lenA, int lenB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::InternalCompareStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "InternalCompareStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(lenA), ::il2cpp_utils::ExtractType(lenB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, lenA, lenB);
}
// Autogenerated method: System.Globalization.TextInfo.Equals
bool System::Globalization::TextInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCode
int System::Globalization::TextInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.ToString
::StringW System::Globalization::TextInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat
#include "System/Globalization/TimeSpanFormat.hpp"
// Including type: System.Globalization.TimeSpanFormat/System.Globalization.Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals PositiveInvariantFormatLiterals
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals PositiveInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals(::System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals NegativeInvariantFormatLiterals
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals NegativeInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals(::System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals", value));
}
// Autogenerated method: System.Globalization.TimeSpanFormat..cctor
void System::Globalization::TimeSpanFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.IntToString
::StringW System::Globalization::TimeSpanFormat::IntToString(int n, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, digits);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.Format
::StringW System::Globalization::TimeSpanFormat::Format(::System::TimeSpan value, ::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatStandard
::StringW System::Globalization::TimeSpanFormat::FormatStandard(::System::TimeSpan value, bool isInvariant, ::StringW format, ::System::Globalization::TimeSpanFormat::Pattern pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatStandard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatStandard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(isInvariant), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, isInvariant, format, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatCustomized
::StringW System::Globalization::TimeSpanFormat::FormatCustomized(::System::TimeSpan value, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, dtfi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat/System.Globalization.Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern None
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern None
void System::Globalization::TimeSpanFormat::Pattern::_set_None(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern Minimum
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Minimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_Minimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Minimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern Minimum
void System::Globalization::TimeSpanFormat::Pattern::_set_Minimum(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_Minimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Minimum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern Full
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/System.Globalization.Pattern Full
void System::Globalization::TimeSpanFormat::Pattern::_set_Full(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::TimeSpanFormat::Pattern::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals
#include "System/Globalization/TimeSpanFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String AppCompatLiteral
::StringW& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_AppCompatLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_AppCompatLiteral");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppCompatLiteral"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dd
int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_dd");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hh
int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_hh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_hh");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hh"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 mm
int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_mm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ss
int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ss");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ss"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ff
int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ff");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ff"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] literals
::ArrayW<::StringW>& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_literals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_literals");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literals"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_Start
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_DayHourSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayHourSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_HourMinuteSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HourMinuteSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_MinuteSecondSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinuteSecondSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_SecondFractionSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SecondFractionSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.get_End
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.InitInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant(bool isNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat/FormatLiterals", "InitInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isNegative);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/System.Globalization.FormatLiterals.Init
void System::Globalization::TimeSpanFormat::FormatLiterals::Init(::StringW format, bool useInvariantFieldLengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(useInvariantFieldLengths)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, useInvariantFieldLengths);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory UppercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_UppercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_UppercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "UppercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory UppercaseLetter
void System::Globalization::UnicodeCategory::_set_UppercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_UppercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "UppercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LowercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LowercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LowercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LowercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LowercaseLetter
void System::Globalization::UnicodeCategory::_set_LowercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LowercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LowercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_TitlecaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_TitlecaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "TitlecaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
void System::Globalization::UnicodeCategory::_set_TitlecaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_TitlecaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "TitlecaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierLetter
void System::Globalization::UnicodeCategory::_set_ModifierLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherLetter
void System::Globalization::UnicodeCategory::_set_OtherLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory NonSpacingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_NonSpacingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_NonSpacingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "NonSpacingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory NonSpacingMark
void System::Globalization::UnicodeCategory::_set_NonSpacingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_NonSpacingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "NonSpacingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpacingCombiningMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpacingCombiningMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpacingCombiningMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
void System::Globalization::UnicodeCategory::_set_SpacingCombiningMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpacingCombiningMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpacingCombiningMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory EnclosingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_EnclosingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_EnclosingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "EnclosingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory EnclosingMark
void System::Globalization::UnicodeCategory::_set_EnclosingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_EnclosingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "EnclosingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DecimalDigitNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DecimalDigitNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DecimalDigitNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
void System::Globalization::UnicodeCategory::_set_DecimalDigitNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DecimalDigitNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DecimalDigitNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LetterNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LetterNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LetterNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LetterNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LetterNumber
void System::Globalization::UnicodeCategory::_set_LetterNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LetterNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LetterNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNumber
void System::Globalization::UnicodeCategory::_set_OtherNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpaceSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpaceSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpaceSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpaceSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpaceSeparator
void System::Globalization::UnicodeCategory::_set_SpaceSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpaceSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpaceSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LineSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LineSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LineSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LineSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LineSeparator
void System::Globalization::UnicodeCategory::_set_LineSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LineSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LineSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ParagraphSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ParagraphSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ParagraphSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
void System::Globalization::UnicodeCategory::_set_ParagraphSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ParagraphSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ParagraphSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Control
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Control"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Control
void System::Globalization::UnicodeCategory::_set_Control(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Format
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Format
void System::Globalization::UnicodeCategory::_set_Format(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Surrogate
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Surrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Surrogate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Surrogate"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Surrogate
void System::Globalization::UnicodeCategory::_set_Surrogate(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Surrogate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Surrogate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory PrivateUse
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_PrivateUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_PrivateUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "PrivateUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory PrivateUse
void System::Globalization::UnicodeCategory::_set_PrivateUse(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_PrivateUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "PrivateUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ConnectorPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ConnectorPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ConnectorPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
void System::Globalization::UnicodeCategory::_set_ConnectorPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ConnectorPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ConnectorPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DashPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DashPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DashPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DashPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DashPunctuation
void System::Globalization::UnicodeCategory::_set_DashPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DashPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DashPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OpenPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OpenPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OpenPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OpenPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OpenPunctuation
void System::Globalization::UnicodeCategory::_set_OpenPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OpenPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OpenPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ClosePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ClosePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ClosePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ClosePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ClosePunctuation
void System::Globalization::UnicodeCategory::_set_ClosePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ClosePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ClosePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
void System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
void System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherPunctuation
void System::Globalization::UnicodeCategory::_set_OtherPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory MathSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_MathSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_MathSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "MathSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory MathSymbol
void System::Globalization::UnicodeCategory::_set_MathSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_MathSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "MathSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory CurrencySymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_CurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "CurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory CurrencySymbol
void System::Globalization::UnicodeCategory::_set_CurrencySymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_CurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "CurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierSymbol
void System::Globalization::UnicodeCategory::_set_ModifierSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherSymbol
void System::Globalization::UnicodeCategory::_set_OtherSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNotAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNotAssigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNotAssigned"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
void System::Globalization::UnicodeCategory::_set_OtherNotAssigned(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNotAssigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNotAssigned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::UnicodeCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String source
::StringW& System::Globalization::SortKey::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] key
::ArrayW<uint8_t>& System::Globalization::SortKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CompareOptions options
::System::Globalization::CompareOptions& System::Globalization::SortKey::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 lcid
int& System::Globalization::SortKey::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.SortKey.get_OriginalString
::StringW System::Globalization::SortKey::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_OriginalString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.get_KeyData
::ArrayW<uint8_t> System::Globalization::SortKey::get_KeyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_KeyData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.Compare
int System::Globalization::SortKey::Compare(::System::Globalization::SortKey* sortkey1, ::System::Globalization::SortKey* sortkey2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "SortKey", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortkey1), ::il2cpp_utils::ExtractType(sortkey2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sortkey1, sortkey2);
}
// Autogenerated method: System.Globalization.SortKey.Equals
bool System::Globalization::SortKey::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.SortKey.GetHashCode
int System::Globalization::SortKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.ToString
::StringW System::Globalization::SortKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureData s_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureData*>("System.Globalization", "CultureData", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureData s_Invariant
void System::Globalization::CultureData::_set_s_Invariant(::System::Globalization::CultureData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureData", "s_Invariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String sAM1159
::StringW& System::Globalization::CultureData::dyn_sAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sAM1159");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sAM1159"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sPM2359
::StringW& System::Globalization::CultureData::dyn_sPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sPM2359");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sPM2359"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sTimeSeparator
::StringW& System::Globalization::CultureData::dyn_sTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sTimeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sTimeSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saLongTimes
::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saLongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saLongTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saShortTimes
::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saShortTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstDayOfWeek
int& System::Globalization::CultureData::dyn_iFirstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstWeekOfYear
int& System::Globalization::CultureData::dyn_iFirstWeekOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstWeekOfYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstWeekOfYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] waCalendars
::ArrayW<int>& System::Globalization::CultureData::dyn_waCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_waCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CalendarData[] calendars
::ArrayW<::System::Globalization::CalendarData*>& System::Globalization::CultureData::dyn_calendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendars"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::CalendarData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sISO639Language
::StringW& System::Globalization::CultureData::dyn_sISO639Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sISO639Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sISO639Language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String sRealName
::StringW& System::Globalization::CultureData::dyn_sRealName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sRealName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sRealName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bUseOverrides
bool& System::Globalization::CultureData::dyn_bUseOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_bUseOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 calendarId
int& System::Globalization::CultureData::dyn_calendarId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendarId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numberIndex
int& System::Globalization::CultureData::dyn_numberIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_numberIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultAnsiCodePage
int& System::Globalization::CultureData::dyn_iDefaultAnsiCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultAnsiCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultAnsiCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultOemCodePage
int& System::Globalization::CultureData::dyn_iDefaultOemCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultOemCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultOemCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultMacCodePage
int& System::Globalization::CultureData::dyn_iDefaultMacCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultMacCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultMacCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultEbcdicCodePage
int& System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultEbcdicCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRightToLeft
bool& System::Globalization::CultureData::dyn_isRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_isRightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sListSeparator
::StringW& System::Globalization::CultureData::dyn_sListSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sListSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sListSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureData.get_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_LongTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_LongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_LongTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ShortTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_ShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_ShortTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SISO639LANGNAME
::StringW System::Globalization::CultureData::get_SISO639LANGNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SISO639LANGNAME");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SISO639LANGNAME", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTDAYOFWEEK
int System::Globalization::CultureData::get_IFIRSTDAYOFWEEK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTDAYOFWEEK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTDAYOFWEEK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTWEEKOFYEAR
int System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTWEEKOFYEAR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SAM1159
::StringW System::Globalization::CultureData::get_SAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SAM1159");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SAM1159", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SPM2359
::StringW System::Globalization::CultureData::get_SPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SPM2359");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SPM2359", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_TimeSeparator
::StringW System::Globalization::CultureData::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CalendarIds
::ArrayW<int> System::Globalization::CultureData::get_CalendarIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CalendarIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IsInvariantCulture
bool System::Globalization::CultureData::get_IsInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IsInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CultureName
::StringW System::Globalization::CultureData::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SCOMPAREINFO
::StringW System::Globalization::CultureData::get_SCOMPAREINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SCOMPAREINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SCOMPAREINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_STEXTINFO
::StringW System::Globalization::CultureData::get_STEXTINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_STEXTINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_STEXTINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ILANGUAGE
int System::Globalization::CultureData::get_ILANGUAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_ILANGUAGE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ILANGUAGE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_UseUserOverride
bool System::Globalization::CultureData::get_UseUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_UseUserOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseUserOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, ::StringW iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, ::StringW listSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride), ::il2cpp_utils::ExtractType(datetimeIndex), ::il2cpp_utils::ExtractType(calendarId), ::il2cpp_utils::ExtractType(numberIndex), ::il2cpp_utils::ExtractType(iso2lang), ::il2cpp_utils::ExtractType(ansiCodePage), ::il2cpp_utils::ExtractType(oemCodePage), ::il2cpp_utils::ExtractType(macCodePage), ::il2cpp_utils::ExtractType(ebcdicCodePage), ::il2cpp_utils::ExtractType(rightToLeft), ::il2cpp_utils::ExtractType(listSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(int culture, bool bUseUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(bUseUserOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, bUseUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.fill_culture_data
void System::Globalization::CultureData::fill_culture_data(int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_culture_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_culture_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datetimeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datetimeIndex);
}
// Autogenerated method: System.Globalization.CultureData.GetCalendar
::System::Globalization::CalendarData* System::Globalization::CultureData::GetCalendar(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CalendarData*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.EraNames
::ArrayW<::StringW> System::Globalization::CultureData::EraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbrevEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbrevEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedEnglishEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedEnglishEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.ShortDates
::ArrayW<::StringW> System::Globalization::CultureData::ShortDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ShortDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShortDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LongDates
::ArrayW<::StringW> System::Globalization::CultureData::LongDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LongDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LongDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.YearMonths
::ArrayW<::StringW> System::Globalization::CultureData::YearMonths(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::YearMonths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DayNames
::ArrayW<::StringW> System::Globalization::CultureData::DayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedDayNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedDayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthNames
::ArrayW<::StringW> System::Globalization::CultureData::MonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::GenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedGenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedGenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LeapYearMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::LeapYearMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthDay
::StringW System::Globalization::CultureData::MonthDay(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DateSeparator
::StringW System::Globalization::CultureData::DateSeparator(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GetDateSeparator
::StringW System::Globalization::CultureData::GetDateSeparator(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetDateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetDateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: System.Globalization.CultureData.GetSeparator
::StringW System::Globalization::CultureData::GetSeparator(::StringW format, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.IndexOfTimePart
int System::Globalization::CultureData::IndexOfTimePart(::StringW format, int startIndex, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::IndexOfTimePart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "IndexOfTimePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, startIndex, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.UnescapeNlsString
::StringW System::Globalization::CultureData::UnescapeNlsString(::StringW str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::UnescapeNlsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "UnescapeNlsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32Strings
::ArrayW<::StringW> System::Globalization::CultureData::ReescapeWin32Strings(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32Strings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32Strings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32String
::StringW System::Globalization::CultureData::ReescapeWin32String(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Globalization.CultureData.GetNFIValues
void System::Globalization::CultureData::GetNFIValues(::System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetNFIValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNFIValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.CultureData.fill_number_data
void System::Globalization::CultureData::fill_number_data(::System::Globalization::NumberFormatInfo* nfi, int numberIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_number_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "fill_number_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi), ::il2cpp_utils::ExtractType(numberIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nfi, numberIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] sep
::ArrayW<::Il2CppChar> System::Globalization::CodePageDataItem::_get_sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_get_sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "CodePageDataItem", "sep"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] sep
void System::Globalization::CodePageDataItem::_set_sep(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_set_sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CodePageDataItem", "sep", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_dataIndex
int& System::Globalization::CodePageDataItem::dyn_m_dataIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_dataIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_uiFamilyCodePage
int& System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uiFamilyCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_webName
::StringW& System::Globalization::CodePageDataItem::dyn_m_webName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_webName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_webName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_headerName
::StringW& System::Globalization::CodePageDataItem::dyn_m_headerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_headerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_flags
uint& System::Globalization::CodePageDataItem::dyn_m_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_WebName
::StringW System::Globalization::CodePageDataItem::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_WebName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_HeaderName
::StringW System::Globalization::CodePageDataItem::get_HeaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_HeaderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HeaderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem..cctor
void System::Globalization::CodePageDataItem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem.CreateString
::StringW System::Globalization::CodePageDataItem::CreateString(::StringW pStrings, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStrings), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStrings, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.EncodingTable
#include "System/Globalization/EncodingTable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
::ArrayW<::System::Globalization::InternalEncodingDataItem> System::Globalization::EncodingTable::_get_encodingDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_encodingDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalEncodingDataItem>>("System.Globalization", "EncodingTable", "encodingDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
void System::Globalization::EncodingTable::_set_encodingDataPtr(::ArrayW<::System::Globalization::InternalEncodingDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_encodingDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "encodingDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
::ArrayW<::System::Globalization::InternalCodePageDataItem> System::Globalization::EncodingTable::_get_codePageDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_codePageDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalCodePageDataItem>>("System.Globalization", "EncodingTable", "codePageDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
void System::Globalization::EncodingTable::_set_codePageDataPtr(::ArrayW<::System::Globalization::InternalCodePageDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_codePageDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "codePageDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastEncodingItem
int System::Globalization::EncodingTable::_get_lastEncodingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_lastEncodingItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "EncodingTable", "lastEncodingItem"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastEncodingItem
void System::Globalization::EncodingTable::_set_lastEncodingItem(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_lastEncodingItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "lastEncodingItem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByName
::System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByName"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByName
void System::Globalization::EncodingTable::_set_hashByName(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable hashByCodePage
::System::Collections::Hashtable* System::Globalization::EncodingTable::_get_hashByCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByCodePage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Globalization", "EncodingTable", "hashByCodePage"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable hashByCodePage
void System::Globalization::EncodingTable::_set_hashByCodePage(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByCodePage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByCodePage", value));
}
// Autogenerated method: System.Globalization.EncodingTable..cctor
void System::Globalization::EncodingTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.GetNumEncodingItems
int System::Globalization::EncodingTable::GetNumEncodingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetNumEncodingItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetNumEncodingItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.ENC
::System::Globalization::InternalEncodingDataItem System::Globalization::EncodingTable::ENC(::StringW name, uint16_t cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::ENC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "ENC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalEncodingDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, cp);
}
// Autogenerated method: System.Globalization.EncodingTable.MapCodePageDataItem
::System::Globalization::InternalCodePageDataItem System::Globalization::EncodingTable::MapCodePageDataItem(uint16_t cp, uint16_t fcp, ::StringW names, uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::MapCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "MapCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(fcp), ::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalCodePageDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, fcp, names, flags);
}
// Autogenerated method: System.Globalization.EncodingTable.internalGetCodePageFromName
int System::Globalization::EncodingTable::internalGetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::internalGetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "internalGetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageFromName
int System::Globalization::EncodingTable::GetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageDataItem
::System::Globalization::CodePageDataItem* System::Globalization::EncodingTable::GetCodePageDataItem(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CodePageDataItem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codepage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToUpperData
#include "System/Globalization/TextInfoToUpperData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00e0_0586
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_00e0_0586() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_00e0_0586");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_00e0_0586"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00e0_0586
void System::Globalization::TextInfoToUpperData::_set_range_00e0_0586(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_00e0_0586");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_00e0_0586", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e01_1ff3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e01_1ff3
void System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2170_2184
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2170_2184() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2170_2184");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2170_2184"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2170_2184
void System::Globalization::TextInfoToUpperData::_set_range_2170_2184(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2170_2184");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2170_2184", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24d0_24e9
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24d0_24e9
void System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c30_2ce3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c30_2ce3
void System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2d00_2d25
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2d00_2d25
void System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a641_a697
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a641_a697() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a641_a697");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a641_a697"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a641_a697
void System::Globalization::TextInfoToUpperData::_set_range_a641_a697(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a641_a697");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a641_a697", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a723_a78c
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a723_a78c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a723_a78c");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a723_a78c"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a723_a78c
void System::Globalization::TextInfoToUpperData::_set_range_a723_a78c(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a723_a78c");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a723_a78c", value));
}
// Autogenerated method: System.Globalization.TextInfoToUpperData..cctor
void System::Globalization::TextInfoToUpperData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToUpperData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToLowerData
#include "System/Globalization/TextInfoToLowerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00c0_0556
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_00c0_0556() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_00c0_0556");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_00c0_0556"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00c0_0556
void System::Globalization::TextInfoToLowerData::_set_range_00c0_0556(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_00c0_0556");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_00c0_0556", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_10a0_10c5
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_10a0_10c5
void System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e00_1ffc
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e00_1ffc
void System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2160_216f
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2160_216f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2160_216f");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2160_216f"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2160_216f
void System::Globalization::TextInfoToLowerData::_set_range_2160_216f(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2160_216f");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2160_216f", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24b6_24cf
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24b6_24cf
void System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c00_2c2e
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c00_2c2e
void System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c60_2ce2
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c60_2ce2
void System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a640_a696
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a640_a696() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a640_a696");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a640_a696"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a640_a696
void System::Globalization::TextInfoToLowerData::_set_range_a640_a696(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a640_a696");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a640_a696", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a722_a78b
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a722_a78b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a722_a78b");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a722_a78b"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a722_a78b
void System::Globalization::TextInfoToLowerData::_set_range_a722_a78b(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a722_a78b");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a722_a78b", value));
}
// Autogenerated method: System.Globalization.TextInfoToLowerData..cctor
void System::Globalization::TextInfoToLowerData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToLowerData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CultureInfo/System.Globalization.Data
#include "System/Globalization/CultureInfo_Data.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo invariant_culture_info
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_invariant_culture_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_invariant_culture_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "invariant_culture_info"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo invariant_culture_info
void System::Globalization::CultureInfo::_set_invariant_culture_info(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_invariant_culture_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "invariant_culture_info", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object shared_table_lock
::Il2CppObject* System::Globalization::CultureInfo::_get_shared_table_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_table_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Globalization", "CultureInfo", "shared_table_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object shared_table_lock
void System::Globalization::CultureInfo::_set_shared_table_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_table_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_table_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo default_current_culture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_default_current_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_default_current_culture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "default_current_culture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo default_current_culture
void System::Globalization::CultureInfo::_set_default_current_culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_default_current_culture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "default_current_culture", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 InvariantCultureId
int System::Globalization::CultureInfo::_get_InvariantCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_InvariantCultureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "InvariantCultureId"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 InvariantCultureId
void System::Globalization::CultureInfo::_set_InvariantCultureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_InvariantCultureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "InvariantCultureId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CalendarTypeBits
int System::Globalization::CultureInfo::_get_CalendarTypeBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_CalendarTypeBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "CalendarTypeBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CalendarTypeBits
void System::Globalization::CultureInfo::_set_CalendarTypeBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_CalendarTypeBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "CalendarTypeBits", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MSG_READONLY
::StringW System::Globalization::CultureInfo::_get_MSG_READONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_MSG_READONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "CultureInfo", "MSG_READONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MSG_READONLY
void System::Globalization::CultureInfo::_set_MSG_READONLY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_MSG_READONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "MSG_READONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_number");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_number")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
void System::Globalization::CultureInfo::_set_shared_by_number(::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_number", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_name");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_name")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
void System::Globalization::CultureInfo::_set_shared_by_name(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsTaiwanSku
bool System::Globalization::CultureInfo::_get_IsTaiwanSku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_IsTaiwanSku");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CultureInfo", "IsTaiwanSku"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsTaiwanSku
void System::Globalization::CultureInfo::_set_IsTaiwanSku(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_IsTaiwanSku");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "IsTaiwanSku", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
bool& System::Globalization::CultureInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cultureID
int& System::Globalization::CultureInfo::dyn_cultureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cultureID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cultureID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parent_lcid
int& System::Globalization::CultureInfo::dyn_parent_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 datetime_index
int& System::Globalization::CultureInfo::dyn_datetime_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_datetime_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datetime_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 number_index
int& System::Globalization::CultureInfo::dyn_number_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_number_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "number_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 default_calendar_type
int& System::Globalization::CultureInfo::dyn_default_calendar_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_default_calendar_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "default_calendar_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useUserOverride
bool& System::Globalization::CultureInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.NumberFormatInfo numInfo
::System::Globalization::NumberFormatInfo*& System::Globalization::CultureInfo::dyn_numInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_numInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::NumberFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.DateTimeFormatInfo dateTimeInfo
::System::Globalization::DateTimeFormatInfo*& System::Globalization::CultureInfo::dyn_dateTimeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_dateTimeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo textInfo
::System::Globalization::TextInfo*& System::Globalization::CultureInfo::dyn_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_name
::StringW& System::Globalization::CultureInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishname
::StringW& System::Globalization::CultureInfo::dyn_englishname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_englishname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativename
::StringW& System::Globalization::CultureInfo::dyn_nativename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_nativename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3lang
::StringW& System::Globalization::CultureInfo::dyn_iso3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2lang
::StringW& System::Globalization::CultureInfo::dyn_iso2lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso2lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3lang
::StringW& System::Globalization::CultureInfo::dyn_win3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_win3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String territory
::StringW& System::Globalization::CultureInfo::dyn_territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_territory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "territory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] native_calendar_names
::ArrayW<::StringW>& System::Globalization::CultureInfo::dyn_native_calendar_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_native_calendar_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_calendar_names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo compareInfo
::System::Globalization::CompareInfo*& System::Globalization::CultureInfo::dyn_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Void* textinfo_data
void*& System::Globalization::CultureInfo::dyn_textinfo_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textinfo_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textinfo_data"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_dataItem
int& System::Globalization::CultureInfo::dyn_m_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Calendar calendar
::System::Globalization::Calendar*& System::Globalization::CultureInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo parent_culture
::System::Globalization::CultureInfo*& System::Globalization::CultureInfo::dyn_parent_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean constructed
bool& System::Globalization::CultureInfo::dyn_constructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_constructed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] cached_serialized_form
::ArrayW<uint8_t>& System::Globalization::CultureInfo::dyn_cached_serialized_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cached_serialized_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached_serialized_form"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureData m_cultureData
::System::Globalization::CultureData*& System::Globalization::CultureInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInherited
bool& System::Globalization::CultureInfo::dyn_m_isInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isInherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureInfo.get_InvariantCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_InvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_InvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_InvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Territory
::StringW System::Globalization::CultureInfo::get_Territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Territory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Territory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_LCID
int System::Globalization::CultureInfo::get_LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_LCID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LCID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Name
::StringW System::Globalization::CultureInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Calendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Calendar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Parent
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_TextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::get_TextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_TextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CompareInfo
::System::Globalization::CompareInfo* System::Globalization::CultureInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CompareInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsNeutralCulture
bool System::Globalization::CultureInfo::get_IsNeutralCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsNeutralCulture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNeutralCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_NumberFormat
::System::Globalization::NumberFormatInfo* System::Globalization::CultureInfo::get_NumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_NumberFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_NumberFormat
void System::Globalization::CultureInfo::set_NumberFormat(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_NumberFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NumberFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DateTimeFormat
::System::Globalization::DateTimeFormatInfo* System::Globalization::CultureInfo::get_DateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_DateTimeFormat
void System::Globalization::CultureInfo::set_DateTimeFormat(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateTimeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_EnglishName
::StringW System::Globalization::CultureInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsReadOnly
bool System::Globalization::CultureInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CalendarType
int System::Globalization::CultureInfo::get_CalendarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CalendarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_SortName
::StringW System::Globalization::CultureInfo::get_SortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_SortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo..cctor
void System::Globalization::CultureInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Clone
::Il2CppObject* System::Globalization::CultureInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetTextInfoData
::System::Globalization::CultureInfo::Data System::Globalization::CultureInfo::GetTextInfoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetTextInfoData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfoData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo::Data, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckNeutral
void System::Globalization::CultureInfo::CheckNeutral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CheckNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetFormat
::Il2CppObject* System::Globalization::CultureInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.CultureInfo.Construct
void System::Globalization::CultureInfo::Construct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_lcid
bool System::Globalization::CultureInfo::construct_internal_locale_from_lcid(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_lcid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_lcid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lcid);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_name
bool System::Globalization::CultureInfo::construct_internal_locale_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_current_locale_name
::StringW System::Globalization::CultureInfo::get_current_locale_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_current_locale_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_current_locale_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructInvariant
void System::Globalization::CultureInfo::ConstructInvariant(bool read_only) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(read_only)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, read_only);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateTextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::CreateTextInfo(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateTextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.CultureInfo.insert_into_shared_tables
void System::Globalization::CultureInfo::insert_into_shared_tables(::System::Globalization::CultureInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::insert_into_shared_tables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "insert_into_shared_tables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(int culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateCulture(::StringW name, bool reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(reference)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, reference);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCulture(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCultureFromNeutral
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCultureFromNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCalendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::CreateCalendar(int calendarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarType);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateNotFoundException
::System::Exception* System::Globalization::CultureInfo::CreateNotFoundException(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateNotFoundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckDomainSafetyObject
void System::Globalization::CultureInfo::CheckDomainSafetyObject(::Il2CppObject* obj, ::Il2CppObject* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CheckDomainSafetyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CheckDomainSafetyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, container);
}
// Autogenerated method: System.Globalization.CultureInfo.Equals
bool System::Globalization::CultureInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.GetHashCode
int System::Globalization::CultureInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ToString
::StringW System::Globalization::CultureInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.IdnMapping
#include "System/Globalization/IdnMapping.hpp"
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean allow_unassigned
bool& System::Globalization::IdnMapping::dyn_allow_unassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_allow_unassigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allow_unassigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean use_std3
bool& System::Globalization::IdnMapping::dyn_use_std3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_use_std3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use_std3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Punycode puny
::System::Globalization::Punycode*& System::Globalization::IdnMapping::dyn_puny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_puny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "puny"))->offset;
  return *reinterpret_cast<::System::Globalization::Punycode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.Convert
::StringW System::Globalization::IdnMapping::Convert(::StringW input, int index, int count, bool toAscii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(toAscii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, index, count, toAscii);
}
// Autogenerated method: System.Globalization.IdnMapping.ToAscii
::StringW System::Globalization::IdnMapping::ToAscii(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyLength
void System::Globalization::IdnMapping::VerifyLength(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.NamePrep
::StringW System::Globalization::IdnMapping::NamePrep(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::NamePrep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NamePrep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyProhibitedCharacters
void System::Globalization::IdnMapping::VerifyProhibitedCharacters(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyProhibitedCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyProhibitedCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyStd3AsciiRules
void System::Globalization::IdnMapping::VerifyStd3AsciiRules(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyStd3AsciiRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyStd3AsciiRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.ToUnicode
::StringW System::Globalization::IdnMapping::ToUnicode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.Equals
bool System::Globalization::IdnMapping::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.IdnMapping.GetHashCode
int System::Globalization::IdnMapping::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.Bootstring
#include "System/Globalization/Bootstring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char delimiter
::Il2CppChar& System::Globalization::Bootstring::dyn_delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_delimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delimiter"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 base_num
int& System::Globalization::Bootstring::dyn_base_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_base_num");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmin
int& System::Globalization::Bootstring::dyn_tmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmax
int& System::Globalization::Bootstring::dyn_tmax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 skew
int& System::Globalization::Bootstring::dyn_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skew"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 damp
int& System::Globalization::Bootstring::dyn_damp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_damp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_bias
int& System::Globalization::Bootstring::dyn_initial_bias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_bias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_bias"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_n
int& System::Globalization::Bootstring::dyn_initial_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Bootstring.Encode
::StringW System::Globalization::Bootstring::Encode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.Bootstring.EncodeDigit
::Il2CppChar System::Globalization::Bootstring::EncodeDigit(int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::EncodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Globalization.Bootstring.DecodeDigit
int System::Globalization::Bootstring::DecodeDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::DecodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.Bootstring.Adapt
int System::Globalization::Bootstring::Adapt(int delta, int numPoints, bool firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Adapt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adapt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractType(firstTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delta, numPoints, firstTime);
}
// Autogenerated method: System.Globalization.Bootstring.Decode
::StringW System::Globalization::Bootstring::Decode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.RegionInfo
#include "System/Globalization/RegionInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.RegionInfo currentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::_get_currentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_get_currentRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::RegionInfo*>("System.Globalization", "RegionInfo", "currentRegion"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.RegionInfo currentRegion
void System::Globalization::RegionInfo::_set_currentRegion(::System::Globalization::RegionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_set_currentRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "RegionInfo", "currentRegion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 regionId
int& System::Globalization::RegionInfo::dyn_regionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_regionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2Name
::StringW& System::Globalization::RegionInfo::dyn_iso2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso2Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3Name
::StringW& System::Globalization::RegionInfo::dyn_iso3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3Name
::StringW& System::Globalization::RegionInfo::dyn_win3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_win3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishName
::StringW& System::Globalization::RegionInfo::dyn_englishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_englishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativeName
::StringW& System::Globalization::RegionInfo::dyn_nativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_nativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencySymbol
::StringW& System::Globalization::RegionInfo::dyn_currencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String isoCurrencySymbol
::StringW& System::Globalization::RegionInfo::dyn_isoCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_isoCurrencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isoCurrencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyEnglishName
::StringW& System::Globalization::RegionInfo::dyn_currencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyEnglishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyEnglishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyNativeName
::StringW& System::Globalization::RegionInfo::dyn_currencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyNativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::get_CurrentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrentRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "get_CurrentRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::RegionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyEnglishName
::StringW System::Globalization::RegionInfo::get_CurrencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyEnglishName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencySymbol
::StringW System::Globalization::RegionInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencySymbol");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_DisplayName
::StringW System::Globalization::RegionInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_EnglishName
::StringW System::Globalization::RegionInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_GeoId
int System::Globalization::RegionInfo::get_GeoId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_GeoId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeoId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_IsMetric
bool System::Globalization::RegionInfo::get_IsMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_IsMetric");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ISOCurrencySymbol
::StringW System::Globalization::RegionInfo::get_ISOCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ISOCurrencySymbol");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ISOCurrencySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_NativeName
::StringW System::Globalization::RegionInfo::get_NativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_NativeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyNativeName
::StringW System::Globalization::RegionInfo::get_CurrencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyNativeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_Name
::StringW System::Globalization::RegionInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterISORegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreeLetterISORegionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterWindowsRegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreeLetterWindowsRegionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_TwoLetterISORegionName
::StringW System::Globalization::RegionInfo::get_TwoLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_TwoLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoLetterISORegionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.GetByTerritory
bool System::Globalization::RegionInfo::GetByTerritory(::System::Globalization::CultureInfo* ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetByTerritory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByTerritory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ci)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ci);
}
// Autogenerated method: System.Globalization.RegionInfo.construct_internal_region_from_name
bool System::Globalization::RegionInfo::construct_internal_region_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::construct_internal_region_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_region_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.RegionInfo.ClearCachedData
void System::Globalization::RegionInfo::ClearCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ClearCachedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "ClearCachedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.Equals
bool System::Globalization::RegionInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.RegionInfo.GetHashCode
int System::Globalization::RegionInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ToString
::StringW System::Globalization::RegionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.Hashing.HashHelpers
#include "System/Numerics/Hashing/HashHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 RandomSeed
int System::Numerics::Hashing::HashHelpers::_get_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::_get_RandomSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics.Hashing", "HashHelpers", "RandomSeed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 RandomSeed
void System::Numerics::Hashing::HashHelpers::_set_RandomSeed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::_set_RandomSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics.Hashing", "HashHelpers", "RandomSeed", value));
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers..cctor
void System::Numerics::Hashing::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.Hashing.HashHelpers.Combine
int System::Numerics::Hashing::HashHelpers::Combine(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::Hashing::HashHelpers::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics.Hashing", "HashHelpers", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
::System::Action_1<::Il2CppObject*>* System::Threading::CancellationToken::_get_s_ActionToActionObjShunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::_get_s_ActionToActionObjShunt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationToken", "s_ActionToActionObjShunt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_ActionToActionObjShunt
void System::Threading::CancellationToken::_set_s_ActionToActionObjShunt(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::_set_s_ActionToActionObjShunt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationToken", "s_ActionToActionObjShunt", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource m_source
::System::Threading::CancellationTokenSource*& System::Threading::CancellationToken::dyn_m_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::dyn_m_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_source"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationToken.get_None
::System::Threading::CancellationToken System::Threading::CancellationToken::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_IsCancellationRequested
bool System::Threading::CancellationToken::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.get_CanBeCanceled
bool System::Threading::CancellationToken::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken..ctor
// ABORTED elsewhere.  System::Threading::CancellationToken::CancellationToken(::System::Threading::CancellationTokenSource* source)
// Autogenerated method: System.Threading.CancellationToken..cctor
void System::Threading::CancellationToken::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ActionToActionObjShunt
void System::Threading::CancellationToken::ActionToActionObjShunt(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ActionToActionObjShunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ActionToActionObjShunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationToken.InternalRegisterWithoutEC
::System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::InternalRegisterWithoutEC(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::InternalRegisterWithoutEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalRegisterWithoutEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Threading.CancellationToken.Register
::System::Threading::CancellationTokenRegistration System::Threading::CancellationToken::Register(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* state, bool useSynchronizationContext, bool useExecutionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(useSynchronizationContext), ::il2cpp_utils::ExtractType(useExecutionContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, state, useSynchronizationContext, useExecutionContext);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(::System::Threading::CancellationToken other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfCancellationRequested
void System::Threading::CancellationToken::ThrowIfCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowIfCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowIfCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowIfSourceDisposed
void System::Threading::CancellationToken::ThrowIfSourceDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowIfSourceDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowIfSourceDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowOperationCanceledException
void System::Threading::CancellationToken::ThrowOperationCanceledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowOperationCanceledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowOperationCanceledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.ThrowObjectDisposedException
void System::Threading::CancellationToken::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.Equals
bool System::Threading::CancellationToken::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationToken.GetHashCode
int System::Threading::CancellationToken::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationToken.op_Equality
bool System::Threading::operator ==(const ::System::Threading::CancellationToken& left, const ::System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Threading.CancellationToken.op_Inequality
bool System::Threading::operator !=(const ::System::Threading::CancellationToken& left, const ::System::Threading::CancellationToken& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationToken::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationToken", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationCallbackInfo m_callbackInfo
::System::Threading::CancellationCallbackInfo*& System::Threading::CancellationTokenRegistration::dyn_m_callbackInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::dyn_m_callbackInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_callbackInfo"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationCallbackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SparselyPopulatedArrayAddInfo`1<System.Threading.CancellationCallbackInfo> m_registrationInfo
::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*>& System::Threading::CancellationTokenRegistration::dyn_m_registrationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::dyn_m_registrationInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_registrationInfo"))->offset;
  return *reinterpret_cast<::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration..ctor
// ABORTED elsewhere.  System::Threading::CancellationTokenRegistration::CancellationTokenRegistration(::System::Threading::CancellationCallbackInfo* callbackInfo, ::System::Threading::SparselyPopulatedArrayAddInfo_1<::System::Threading::CancellationCallbackInfo*> registrationInfo)
// Autogenerated method: System.Threading.CancellationTokenRegistration.TryDeregister
bool System::Threading::CancellationTokenRegistration::TryDeregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::TryDeregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryDeregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Dispose
void System::Threading::CancellationTokenRegistration::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals(::System::Threading::CancellationTokenRegistration other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.Equals
bool System::Threading::CancellationTokenRegistration::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenRegistration.GetHashCode
int System::Threading::CancellationTokenRegistration::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenRegistration::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.SparselyPopulatedArray`1
#include "System/Threading/SparselyPopulatedArray_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get__staticSource_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_Set"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_Set
void System::Threading::CancellationTokenSource::_set__staticSource_Set(::System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set__staticSource_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_Set", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get__staticSource_NotCancelable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::CancellationTokenSource*>("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.CancellationTokenSource _staticSource_NotCancelable
void System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable(::System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set__staticSource_NotCancelable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "_staticSource_NotCancelable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_nLists
int System::Threading::CancellationTokenSource::_get_s_nLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_nLists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "s_nLists"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_nLists
void System::Threading::CancellationTokenSource::_set_s_nLists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_nLists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_nLists", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CANNOT_BE_CANCELED
int System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_CANNOT_BE_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CANNOT_BE_CANCELED
void System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_CANNOT_BE_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "CANNOT_BE_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOT_CANCELED
int System::Threading::CancellationTokenSource::_get_NOT_CANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOT_CANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOT_CANCELED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOT_CANCELED
void System::Threading::CancellationTokenSource::_set_NOT_CANCELED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOT_CANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOT_CANCELED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYING
int System::Threading::CancellationTokenSource::_get_NOTIFYING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOTIFYING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYING
void System::Threading::CancellationTokenSource::_set_NOTIFYING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOTIFYING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NOTIFYINGCOMPLETE
int System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_NOTIFYINGCOMPLETE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NOTIFYINGCOMPLETE
void System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_NOTIFYINGCOMPLETE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "NOTIFYINGCOMPLETE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
::System::Action_1<::Il2CppObject*>* System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_LinkedTokenCancelDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Action`1<System.Object> s_LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_LinkedTokenCancelDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_LinkedTokenCancelDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.TimerCallback s_timerCallback
::System::Threading::TimerCallback* System::Threading::CancellationTokenSource::_get_s_timerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_get_s_timerCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::TimerCallback*>("System.Threading", "CancellationTokenSource", "s_timerCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.TimerCallback s_timerCallback
void System::Threading::CancellationTokenSource::_set_s_timerCallback(::System::Threading::TimerCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::_set_s_timerCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationTokenSource", "s_timerCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_kernelEvent
::System::Threading::ManualResetEvent*& System::Threading::CancellationTokenSource::dyn_m_kernelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_kernelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_kernelEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SparselyPopulatedArray`1<System.Threading.CancellationCallbackInfo>[] m_registeredCallbacksLists
::ArrayW<::System::Threading::SparselyPopulatedArray_1<::System::Threading::CancellationCallbackInfo*>*>& System::Threading::CancellationTokenSource::dyn_m_registeredCallbacksLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_registeredCallbacksLists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_registeredCallbacksLists"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::SparselyPopulatedArray_1<::System::Threading::CancellationCallbackInfo*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_state
int& System::Threading::CancellationTokenSource::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_threadIDExecutingCallbacks
int& System::Threading::CancellationTokenSource::dyn_m_threadIDExecutingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_threadIDExecutingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_threadIDExecutingCallbacks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
bool& System::Threading::CancellationTokenSource::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration[] m_linkingRegistrations
::ArrayW<::System::Threading::CancellationTokenRegistration>& System::Threading::CancellationTokenSource::dyn_m_linkingRegistrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_linkingRegistrations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_linkingRegistrations"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::CancellationTokenRegistration>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationCallbackInfo m_executingCallback
::System::Threading::CancellationCallbackInfo*& System::Threading::CancellationTokenSource::dyn_m_executingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_executingCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_executingCallback"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationCallbackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Timer m_timer
::System::Threading::Timer*& System::Threading::CancellationTokenSource::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<::System::Threading::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationRequested
bool System::Threading::CancellationTokenSource::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsCancellationCompleted
bool System::Threading::CancellationTokenSource::get_IsCancellationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsCancellationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCancellationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_IsDisposed
bool System::Threading::CancellationTokenSource::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ThreadIDExecutingCallbacks
int System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.set_ThreadIDExecutingCallbacks
void System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::set_ThreadIDExecutingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThreadIDExecutingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_Token
::System::Threading::CancellationToken System::Threading::CancellationTokenSource::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_CanBeCanceled
bool System::Threading::CancellationTokenSource::get_CanBeCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_CanBeCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.get_ExecutingCallback
::System::Threading::CancellationCallbackInfo* System::Threading::CancellationTokenSource::get_ExecutingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::get_ExecutingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExecutingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationCallbackInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource..cctor
void System::Threading::CancellationTokenSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.LinkedTokenCancelDelegate
void System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::LinkedTokenCancelDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "LinkedTokenCancelDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Cancel
void System::Threading::CancellationTokenSource::Cancel(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.TimerCallbackLogic
void System::Threading::CancellationTokenSource::TimerCallbackLogic(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::TimerCallbackLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "TimerCallbackLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.Dispose
void System::Threading::CancellationTokenSource::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowIfDisposed
void System::Threading::CancellationTokenSource::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ThrowObjectDisposedException
void System::Threading::CancellationTokenSource::ThrowObjectDisposedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ThrowObjectDisposedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "ThrowObjectDisposedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalGetStaticSource
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::InternalGetStaticSource(bool set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::InternalGetStaticSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "InternalGetStaticSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Threading.CancellationTokenSource.InternalRegister
::System::Threading::CancellationTokenRegistration System::Threading::CancellationTokenSource::InternalRegister(::System::Action_1<::Il2CppObject*>* callback, ::Il2CppObject* stateForCallback, ::System::Threading::SynchronizationContext* targetSyncContext, ::System::Threading::ExecutionContext* executionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::InternalRegister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(stateForCallback), ::il2cpp_utils::ExtractType(targetSyncContext), ::il2cpp_utils::ExtractType(executionContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenRegistration, false>(this, ___internal__method, callback, stateForCallback, targetSyncContext, executionContext);
}
// Autogenerated method: System.Threading.CancellationTokenSource.NotifyCancellation
void System::Threading::CancellationTokenSource::NotifyCancellation(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::NotifyCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.ExecuteCallbackHandlers
void System::Threading::CancellationTokenSource::ExecuteCallbackHandlers(bool throwOnFirstException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::ExecuteCallbackHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCallbackHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFirstException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFirstException);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CancellationCallbackCoreWork_OnSyncContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork_OnSyncContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CancellationCallbackCoreWork
void System::Threading::CancellationTokenSource::CancellationCallbackCoreWork(::System::Threading::CancellationCallbackCoreWorkArguments args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CancellationCallbackCoreWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancellationCallbackCoreWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Threading.CancellationTokenSource.CreateLinkedTokenSource
::System::Threading::CancellationTokenSource* System::Threading::CancellationTokenSource::CreateLinkedTokenSource(::System::Threading::CancellationToken token1, ::System::Threading::CancellationToken token2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::CreateLinkedTokenSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationTokenSource", "CreateLinkedTokenSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token1), ::il2cpp_utils::ExtractType(token2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token1, token2);
}
// Autogenerated method: System.Threading.CancellationTokenSource.WaitForCallbackToComplete
void System::Threading::CancellationTokenSource::WaitForCallbackToComplete(::System::Threading::CancellationCallbackInfo* callbackInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::WaitForCallbackToComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCallbackToComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.CancellationCallbackCoreWorkArguments
#include "System/Threading/CancellationCallbackCoreWorkArguments.hpp"
// Including type: System.Threading.SparselyPopulatedArrayFragment`1
#include "System/Threading/SparselyPopulatedArrayFragment_1.hpp"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SparselyPopulatedArrayFragment`1<System.Threading.CancellationCallbackInfo> m_currArrayFragment
::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>*& System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayFragment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currArrayFragment"))->offset;
  return *reinterpret_cast<::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_currArrayIndex
int& System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackCoreWorkArguments::dyn_m_currArrayIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationCallbackCoreWorkArguments..ctor
// ABORTED elsewhere.  System::Threading::CancellationCallbackCoreWorkArguments::CancellationCallbackCoreWorkArguments(::System::Threading::SparselyPopulatedArrayFragment_1<::System::Threading::CancellationCallbackInfo*>* currArrayFragment, int currArrayIndex)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationCallbackInfo
#include "System/Threading/CancellationCallbackInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_executionContextCallback
::System::Threading::ContextCallback* System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::_get_s_executionContextCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_executionContextCallback
void System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::_set_s_executionContextCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "CancellationCallbackInfo", "s_executionContextCallback", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Action`1<System.Object> Callback
::System::Action_1<::Il2CppObject*>*& System::Threading::CancellationCallbackInfo::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Object StateForCallback
::Il2CppObject*& System::Threading::CancellationCallbackInfo::dyn_StateForCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_StateForCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateForCallback"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.SynchronizationContext TargetSyncContext
::System::Threading::SynchronizationContext*& System::Threading::CancellationCallbackInfo::dyn_TargetSyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_TargetSyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetSyncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.ExecutionContext TargetExecutionContext
::System::Threading::ExecutionContext*& System::Threading::CancellationCallbackInfo::dyn_TargetExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_TargetExecutionContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetExecutionContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.CancellationTokenSource CancellationTokenSource
::System::Threading::CancellationTokenSource*& System::Threading::CancellationCallbackInfo::dyn_CancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::dyn_CancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecuteCallback
void System::Threading::CancellationCallbackInfo::ExecuteCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::ExecuteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.CancellationCallbackInfo.ExecutionContextCallback
void System::Threading::CancellationCallbackInfo::ExecutionContextCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationCallbackInfo::ExecutionContextCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "CancellationCallbackInfo", "ExecutionContextCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyInitializer
#include "System/Threading/LazyInitializer.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_SP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_SP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_SP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_SP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_SP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_SPIN_MP
int System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_DEFAULT_SPIN_MP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_SPIN_MP
void System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_DEFAULT_SPIN_MP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "DEFAULT_SPIN_MP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_BitMask
int System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SignalledState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_BitMask
void System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SignalledState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SignalledState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SignalledState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SignalledState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SignalledState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SignalledState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Dispose_BitMask
int System::Threading::ManualResetEventSlim::_get_Dispose_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_Dispose_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "Dispose_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Dispose_BitMask
void System::Threading::ManualResetEventSlim::_set_Dispose_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_Dispose_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "Dispose_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_BitMask
int System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_BitMask
void System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SpinCountState_MaxValue
int System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_SpinCountState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SpinCountState_MaxValue
void System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_SpinCountState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "SpinCountState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_BitMask
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_BitMask
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_BitMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_ShiftCount
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_ShiftCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_ShiftCount
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_ShiftCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_ShiftCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NumWaitersState_MaxValue
int System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_NumWaitersState_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumWaitersState_MaxValue
void System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_NumWaitersState_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "NumWaitersState_MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
::System::Action_1<::Il2CppObject*>* System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_get_s_cancellationTokenCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCallback
void System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::_set_s_cancellationTokenCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ManualResetEventSlim", "s_cancellationTokenCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_lock
::Il2CppObject*& System::Threading::ManualResetEventSlim::dyn_m_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_eventObj
::System::Threading::ManualResetEvent*& System::Threading::ManualResetEventSlim::dyn_m_eventObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_eventObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventObj"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_combinedState
int& System::Threading::ManualResetEventSlim::dyn_m_combinedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::dyn_m_combinedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_combinedState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_WaitHandle
::System::Threading::WaitHandle* System::Threading::ManualResetEventSlim::get_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_WaitHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_IsSet
bool System::Threading::ManualResetEventSlim::get_IsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_IsSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_IsSet
void System::Threading::ManualResetEventSlim::set_IsSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_IsSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_SpinCount
int System::Threading::ManualResetEventSlim::get_SpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_SpinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_SpinCount
void System::Threading::ManualResetEventSlim::set_SpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_SpinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.get_Waiters
int System::Threading::ManualResetEventSlim::get_Waiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::get_Waiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Waiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.set_Waiters
void System::Threading::ManualResetEventSlim::set_Waiters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::set_Waiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Waiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ManualResetEventSlim..cctor
void System::Threading::ManualResetEventSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Initialize
void System::Threading::ManualResetEventSlim::Initialize(bool initialState, int spinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialState), ::il2cpp_utils::ExtractType(spinCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialState, spinCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.EnsureLockObjectCreated
void System::Threading::ManualResetEventSlim::EnsureLockObjectCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::EnsureLockObjectCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLockObjectCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.LazyInitializeEvent
bool System::Threading::ManualResetEventSlim::LazyInitializeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::LazyInitializeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Set
void System::Threading::ManualResetEventSlim::Set(bool duringCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duringCancellation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duringCancellation);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Wait
bool System::Threading::ManualResetEventSlim::Wait(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.Dispose
void System::Threading::ManualResetEventSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ThrowIfDisposed
void System::Threading::ManualResetEventSlim::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.CancellationTokenCallback
void System::Threading::ManualResetEventSlim::CancellationTokenCallback(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::CancellationTokenCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "CancellationTokenCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.UpdateStateAtomically
void System::Threading::ManualResetEventSlim::UpdateStateAtomically(int newBits, int updateBitsMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::UpdateStateAtomically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStateAtomically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBits), ::il2cpp_utils::ExtractType(updateBitsMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBits, updateBitsMask);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortionAndShiftRight
int System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight(int state, int mask, int rightBitShiftCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ExtractStatePortionAndShiftRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortionAndShiftRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(rightBitShiftCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, mask, rightBitShiftCount);
}
// Autogenerated method: System.Threading.ManualResetEventSlim.ExtractStatePortion
int System::Threading::ManualResetEventSlim::ExtractStatePortion(int state, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ManualResetEventSlim::ExtractStatePortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ManualResetEventSlim", "ExtractStatePortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, mask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::_get_s_trueTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_s_trueTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Threading", "SemaphoreSlim", "s_trueTask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.Task`1<System.Boolean> s_trueTask
void System::Threading::SemaphoreSlim::_set_s_trueTask(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_s_trueTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_trueTask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NO_MAXIMUM
int System::Threading::SemaphoreSlim::_get_NO_MAXIMUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_NO_MAXIMUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SemaphoreSlim", "NO_MAXIMUM"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NO_MAXIMUM
void System::Threading::SemaphoreSlim::_set_NO_MAXIMUM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_NO_MAXIMUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "NO_MAXIMUM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
::System::Action_1<::Il2CppObject*>* System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_get_s_cancellationTokenCanceledEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> s_cancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::_set_s_cancellationTokenCanceledEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SemaphoreSlim", "s_cancellationTokenCanceledEventHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentCount
int& System::Threading::SemaphoreSlim::dyn_m_currentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_currentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_maxCount
int& System::Threading::SemaphoreSlim::dyn_m_maxCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_maxCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_waitCount
int& System::Threading::SemaphoreSlim::dyn_m_waitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_waitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_waitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_lockObj
::Il2CppObject*& System::Threading::SemaphoreSlim::dyn_m_lockObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_lockObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lockObj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_waitHandle
::System::Threading::ManualResetEvent*& System::Threading::SemaphoreSlim::dyn_m_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim/System.Threading.TaskNode m_asyncHead
::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::dyn_m_asyncHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_asyncHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_asyncHead"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim/System.Threading.TaskNode m_asyncTail
::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::dyn_m_asyncTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::dyn_m_asyncTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_asyncTail"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim..cctor
void System::Threading::SemaphoreSlim::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
void System::Threading::SemaphoreSlim::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Wait
bool System::Threading::SemaphoreSlim::Wait(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout
bool System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout(int millisecondsTimeout, uint startTime, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitUntilCountOrTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout, startTime, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
::System::Threading::Tasks::Task* System::Threading::SemaphoreSlim::WaitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitAsync
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitAsync(int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CreateAndAddAsyncWaiter
::System::Threading::SemaphoreSlim::TaskNode* System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CreateAndAddAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddAsyncWaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim::TaskNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.RemoveAsyncWaiter
bool System::Threading::SemaphoreSlim::RemoveAsyncWaiter(::System::Threading::SemaphoreSlim::TaskNode* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::RemoveAsyncWaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAsyncWaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.SemaphoreSlim.WaitUntilCountOrTimeoutAsync
::System::Threading::Tasks::Task_1<bool>* System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync(::System::Threading::SemaphoreSlim::TaskNode* asyncWaiter, int millisecondsTimeout, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::WaitUntilCountOrTimeoutAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilCountOrTimeoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncWaiter), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, asyncWaiter, millisecondsTimeout, cancellationToken);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Release
int System::Threading::SemaphoreSlim::Release(int releaseCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(releaseCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, releaseCount);
}
// Autogenerated method: System.Threading.SemaphoreSlim.QueueWaiterTask
void System::Threading::SemaphoreSlim::QueueWaiterTask(::System::Threading::SemaphoreSlim::TaskNode* waiterTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::QueueWaiterTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "QueueWaiterTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waiterTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waiterTask);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.Dispose
void System::Threading::SemaphoreSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CancellationTokenCanceledEventHandler
void System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CancellationTokenCanceledEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "CancellationTokenCanceledEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.SemaphoreSlim.CheckDispose
void System::Threading::SemaphoreSlim::CheckDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::CheckDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim.GetResourceString
::StringW System::Threading::SemaphoreSlim::GetResourceString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SemaphoreSlim", "GetResourceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SemaphoreSlim/System.Threading.TaskNode Prev
::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::TaskNode::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.SemaphoreSlim/System.Threading.TaskNode Next
::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::TaskNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.TaskNode.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.TaskNode.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::SemaphoreSlim::TaskNode::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::TaskNode::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31
#include "System/Threading/SemaphoreSlim_-WaitUntilCountOrTimeoutAsync-d__31.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.SemaphoreSlim/System.Threading.TaskNode
#include "System/Threading/SemaphoreSlim_TaskNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
::System::Threading::CancellationToken& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.SemaphoreSlim/System.Threading.TaskNode asyncWaiter
::System::Threading::SemaphoreSlim::TaskNode*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_asyncWaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_asyncWaiter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncWaiter"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim::TaskNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisecondsTimeout
int& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_millisecondsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_millisecondsTimeout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisecondsTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource <cts>5__1
::System::Threading::CancellationTokenSource*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$cts$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$cts$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cts>5__1"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.SemaphoreSlim <>4__this
::System::Threading::SemaphoreSlim*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap1
::Il2CppObject*& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Threading.Tasks.Task> <>u__1
typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Threading::Tasks::Task*>::ConfiguredTaskAwaiter& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Threading::Tasks::Task*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Boolean> <>u__2
typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<bool>::ConfiguredTaskAwaiter& System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<bool>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31.MoveNext
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SemaphoreSlim/System.Threading.<WaitUntilCountOrTimeoutAsync>d__31.SetStateMachine
void System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SemaphoreSlim::$WaitUntilCountOrTimeoutAsync$d__31::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinLock
#include "System/Threading/SpinLock.hpp"
// Including type: System.Threading.SpinLock/System.Threading.SystemThreading_SpinLockDebugView
#include "System/Threading/SpinLock_SystemThreading_SpinLockDebugView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAXIMUM_WAITERS
int System::Threading::SpinLock::_get_MAXIMUM_WAITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::_get_MAXIMUM_WAITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "SpinLock", "MAXIMUM_WAITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAXIMUM_WAITERS
void System::Threading::SpinLock::_set_MAXIMUM_WAITERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::_set_MAXIMUM_WAITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SpinLock", "MAXIMUM_WAITERS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_owner
int& System::Threading::SpinLock::dyn_m_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::dyn_m_owner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_owner"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SpinLock.get_IsHeldByCurrentThread
bool System::Threading::SpinLock::get_IsHeldByCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::get_IsHeldByCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsHeldByCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.get_IsThreadOwnerTrackingEnabled
bool System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::get_IsThreadOwnerTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsThreadOwnerTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock..ctor
System::Threading::SpinLock::SpinLock(bool enableThreadOwnerTracking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableThreadOwnerTracking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableThreadOwnerTracking);
}
// Autogenerated method: System.Threading.SpinLock..cctor
void System::Threading::SpinLock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SpinLock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.Enter
void System::Threading::SpinLock::Enter(ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.TryEnter
void System::Threading::SpinLock::TryEnter(int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::TryEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnter
void System::Threading::SpinLock::ContinueTryEnter(int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ContinueTryEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueTryEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.DecrementWaiters
void System::Threading::SpinLock::DecrementWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::DecrementWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DecrementWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinLock.ContinueTryEnterWithThreadTracking
void System::Threading::SpinLock::ContinueTryEnterWithThreadTracking(int millisecondsTimeout, uint startTime, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ContinueTryEnterWithThreadTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueTryEnterWithThreadTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout, startTime, byref(lockTaken));
}
// Autogenerated method: System.Threading.SpinLock.Exit
void System::Threading::SpinLock::Exit(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMemoryBarrier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useMemoryBarrier);
}
// Autogenerated method: System.Threading.SpinLock.ExitSlowPath
void System::Threading::SpinLock::ExitSlowPath(bool useMemoryBarrier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinLock::ExitSlowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ExitSlowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMemoryBarrier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useMemoryBarrier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SpinWait
#include "System/Threading/SpinWait.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
int& System::Threading::SpinWait::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::dyn_m_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SpinWait.get_NextSpinWillYield
bool System::Threading::SpinWait::get_NextSpinWillYield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::get_NextSpinWillYield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NextSpinWillYield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SpinWait.SpinOnce
void System::Threading::SpinWait::SpinOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SpinWait::SpinOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SpinOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.PlatformHelper
#include "System/Threading/PlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_processorCount
int System::Threading::PlatformHelper::_get_s_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_get_s_processorCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_processorCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_processorCount
void System::Threading::PlatformHelper::_set_s_processorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_set_s_processorCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_processorCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_lastProcessorCountRefreshTicks
int System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_get_s_lastProcessorCountRefreshTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_lastProcessorCountRefreshTicks
void System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::_set_s_lastProcessorCountRefreshTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "PlatformHelper", "s_lastProcessorCountRefreshTicks", value));
}
// Autogenerated method: System.Threading.PlatformHelper.get_ProcessorCount
int System::Threading::PlatformHelper::get_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::get_ProcessorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_ProcessorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.PlatformHelper.get_IsSingleProcessor
bool System::Threading::PlatformHelper::get_IsSingleProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::PlatformHelper::get_IsSingleProcessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "PlatformHelper", "get_IsSingleProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.TimeoutHelper
#include "System/Threading/TimeoutHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.TimeoutHelper.GetTime
uint System::Threading::TimeoutHelper::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::TimeoutHelper::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.TimeoutHelper.UpdateTimeOut
int System::Threading::TimeoutHelper::UpdateTimeOut(uint startTime, int originalWaitMillisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::TimeoutHelper::UpdateTimeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "TimeoutHelper", "UpdateTimeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(originalWaitMillisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startTime, originalWaitMillisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.AbandonedMutexException
#include "System/Threading/AbandonedMutexException.hpp"
// Including type: System.Threading.Mutex
#include "System/Threading/Mutex.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MutexIndex
int& System::Threading::AbandonedMutexException::dyn_m_MutexIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::dyn_m_MutexIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MutexIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Mutex m_Mutex
::System::Threading::Mutex*& System::Threading::AbandonedMutexException::dyn_m_Mutex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::dyn_m_Mutex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mutex"))->offset;
  return *reinterpret_cast<::System::Threading::Mutex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.AbandonedMutexException.SetupException
void System::Threading::AbandonedMutexException::SetupException(int location, ::System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::AbandonedMutexException::SetupException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.IAsyncLocal.OnValueChanged
void System::Threading::IAsyncLocal::OnValueChanged(::Il2CppObject* previousValue, ::Il2CppObject* currentValue, bool contextChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::IAsyncLocal::OnValueChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousValue), ::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(contextChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousValue, currentValue, contextChanged);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.EventResetMode
#include "System/Threading/EventResetMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode AutoReset
::System::Threading::EventResetMode System::Threading::EventResetMode::_get_AutoReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_get_AutoReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::EventResetMode>("System.Threading", "EventResetMode", "AutoReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode AutoReset
void System::Threading::EventResetMode::_set_AutoReset(::System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_set_AutoReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "AutoReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.EventResetMode ManualReset
::System::Threading::EventResetMode System::Threading::EventResetMode::_get_ManualReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_get_ManualReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::EventResetMode>("System.Threading", "EventResetMode", "ManualReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.EventResetMode ManualReset
void System::Threading::EventResetMode::_set_ManualReset(::System::Threading::EventResetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::_set_ManualReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "EventResetMode", "ManualReset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::EventResetMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventResetMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.EventWaitHandle.Reset
bool System::Threading::EventWaitHandle::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventWaitHandle::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.EventWaitHandle.Set
bool System::Threading::EventWaitHandle::Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::EventWaitHandle::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ContextCallback.Invoke
void System::Threading::ContextCallback::Invoke(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.ContextCallback.BeginInvoke
::System::IAsyncResult* System::Threading::ContextCallback::BeginInvoke(::Il2CppObject* state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.ContextCallback.EndInvoke
void System::Threading::ContextCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ContextCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.ExecutionContext/System.Threading.Reader outerEC
::System::Threading::ExecutionContext::Reader& System::Threading::ExecutionContextSwitcher::dyn_outerEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_outerEC");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerEC"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext::Reader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean outerECBelongsToScope
bool& System::Threading::ExecutionContextSwitcher::dyn_outerECBelongsToScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_outerECBelongsToScope");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerECBelongsToScope"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object hecsw
::Il2CppObject*& System::Threading::ExecutionContextSwitcher::dyn_hecsw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_hecsw");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hecsw"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Thread thread
::System::Threading::Thread*& System::Threading::ExecutionContextSwitcher::dyn_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::dyn_thread");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContextSwitcher.UndoNoThrow
bool System::Threading::ExecutionContextSwitcher::UndoNoThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::UndoNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UndoNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContextSwitcher.Undo
void System::Threading::ExecutionContextSwitcher::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContextSwitcher::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.ExecutionContext/System.Threading.Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.ExecutionContext/System.Threading.CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext.hpp"
// Including type: System.Threading.IAsyncLocal
#include "System/Threading/IAsyncLocal.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ExecutionContextSwitcher
#include "System/Threading/ExecutionContextSwitcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::_get_s_dummyDefaultEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::_get_s_dummyDefaultEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext*>("System.Threading", "ExecutionContext", "s_dummyDefaultEC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.ExecutionContext s_dummyDefaultEC
void System::Threading::ExecutionContext::_set_s_dummyDefaultEC(::System::Threading::ExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::_set_s_dummyDefaultEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext", "s_dummyDefaultEC", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContext _syncContext
::System::Threading::SynchronizationContext*& System::Threading::ExecutionContext::dyn__syncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__syncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContext _syncContextNoFlow
::System::Threading::SynchronizationContext*& System::Threading::ExecutionContext::dyn__syncContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__syncContextNoFlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncContextNoFlow"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.LogicalCallContext _logicalCallContext
::System::Runtime::Remoting::Messaging::LogicalCallContext*& System::Threading::ExecutionContext::dyn__logicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__logicalCallContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logicalCallContext"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::LogicalCallContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.IllogicalCallContext _illogicalCallContext
::System::Runtime::Remoting::Messaging::IllogicalCallContext*& System::Threading::ExecutionContext::dyn__illogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__illogicalCallContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_illogicalCallContext"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IllogicalCallContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext/System.Threading.Flags _flags
::System::Threading::ExecutionContext::Flags& System::Threading::ExecutionContext::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Threading.IAsyncLocal,System.Object> _localValues
::System::Collections::Generic::Dictionary_2<::System::Threading::IAsyncLocal*, ::Il2CppObject*>*& System::Threading::ExecutionContext::dyn__localValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__localValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Threading::IAsyncLocal*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Threading.IAsyncLocal> _localChangeNotifications
::System::Collections::Generic::List_1<::System::Threading::IAsyncLocal*>*& System::Threading::ExecutionContext::dyn__localChangeNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::dyn__localChangeNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localChangeNotifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Threading::IAsyncLocal*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContext.get_isNewCapture
bool System::Threading::ExecutionContext::get_isNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isNewCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isNewCapture
void System::Threading::ExecutionContext::set_isNewCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_isNewCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isNewCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_isFlowSuppressed
bool System::Threading::ExecutionContext::get_isFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_isFlowSuppressed
void System::Threading::ExecutionContext::set_isFlowSuppressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_isFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_PreAllocatedDefault
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::get_PreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_PreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "get_PreAllocatedDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IsPreAllocatedDefault
bool System::Threading::ExecutionContext::get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_IsPreAllocatedDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPreAllocatedDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.get_LogicalCallContext
::System::Runtime::Remoting::Messaging::LogicalCallContext* System::Threading::ExecutionContext::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_LogicalCallContext
void System::Threading::ExecutionContext::set_LogicalCallContext(::System::Runtime::Remoting::Messaging::LogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_IllogicalCallContext
::System::Runtime::Remoting::Messaging::IllogicalCallContext* System::Threading::ExecutionContext::get_IllogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IllogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_IllogicalCallContext
void System::Threading::ExecutionContext::set_IllogicalCallContext(::System::Runtime::Remoting::Messaging::IllogicalCallContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_IllogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IllogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContext
void System::Threading::ExecutionContext::set_SynchronizationContext(::System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext.get_SynchronizationContextNoFlow
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.set_SynchronizationContextNoFlow
void System::Threading::ExecutionContext::set_SynchronizationContextNoFlow(::System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::set_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.ExecutionContext..cctor
void System::Threading::ExecutionContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.OnAsyncLocalContextChanged
void System::Threading::ExecutionContext::OnAsyncLocalContextChanged(::System::Threading::ExecutionContext* previous, ::System::Threading::ExecutionContext* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::OnAsyncLocalContextChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "OnAsyncLocalContextChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previous), ::il2cpp_utils::ExtractType(current)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previous, current);
}
// Autogenerated method: System.Threading.ExecutionContext.Dispose
void System::Threading::ExecutionContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state);
}
// Autogenerated method: System.Threading.ExecutionContext.Run
void System::Threading::ExecutionContext::Run(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.RunInternal
void System::Threading::ExecutionContext::RunInternal(::System::Threading::ExecutionContext* executionContext, ::System::Threading::ContextCallback* callback, ::Il2CppObject* state, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::RunInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, callback, state, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(ByRef<::System::Threading::ExecutionContextSwitcher> ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ecsw));
}
// Autogenerated method: System.Threading.ExecutionContext.EstablishCopyOnWriteScope
void System::Threading::ExecutionContext::EstablishCopyOnWriteScope(::System::Threading::Thread* currentThread, bool knownNullWindowsIdentity, ByRef<::System::Threading::ExecutionContextSwitcher> ecsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::EstablishCopyOnWriteScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "EstablishCopyOnWriteScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentThread), ::il2cpp_utils::ExtractType(knownNullWindowsIdentity), ::il2cpp_utils::ExtractType(ecsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentThread, knownNullWindowsIdentity, byref(ecsw));
}
// Autogenerated method: System.Threading.ExecutionContext.SetExecutionContext
::System::Threading::ExecutionContextSwitcher System::Threading::ExecutionContext::SetExecutionContext(::System::Threading::ExecutionContext* executionContext, bool preserveSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::SetExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "SetExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionContext), ::il2cpp_utils::ExtractType(preserveSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContextSwitcher, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionContext, preserveSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateCopy
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CreateCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.CreateMutableCopy
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::CreateMutableCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CreateMutableCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMutableCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.IsFlowSuppressed
bool System::Threading::ExecutionContext::IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.FastCapture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::FastCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::FastCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "FastCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext.Capture
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Capture(ByRef<::System::Threading::StackCrawlMark> stackMark, ::System::Threading::ExecutionContext::CaptureOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ExecutionContext", "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackMark), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(stackMark), options);
}
// Autogenerated method: System.Threading.ExecutionContext.GetObjectData
void System::Threading::ExecutionContext::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Threading.ExecutionContext.IsDefaultFTContext
bool System::Threading::ExecutionContext::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.Flags
#include "System/Threading/ExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags None
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags None
void System::Threading::ExecutionContext::Flags::_set_None(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsNewCapture
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsNewCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsNewCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsNewCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsNewCapture
void System::Threading::ExecutionContext::Flags::_set_IsNewCapture(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsNewCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsNewCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsFlowSuppressed
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsFlowSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsFlowSuppressed
void System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsFlowSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsFlowSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsPreAllocatedDefault
::System::Threading::ExecutionContext::Flags System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_get_IsPreAllocatedDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::Flags>("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.Flags IsPreAllocatedDefault
void System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault(::System::Threading::ExecutionContext::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::_set_IsPreAllocatedDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/Flags", "IsPreAllocatedDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::ExecutionContext::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.Reader
#include "System/Threading/ExecutionContext_Reader.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext/System.Runtime.Remoting.Messaging.Reader
#include "System/Runtime/Remoting/Messaging/LogicalCallContext_Reader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext m_ec
::System::Threading::ExecutionContext*& System::Threading::ExecutionContext::Reader::dyn_m_ec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::dyn_m_ec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ec"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_IsNull
bool System::Threading::ExecutionContext::Reader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_IsFlowSuppressed
bool System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_IsFlowSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFlowSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_SynchronizationContextNoFlow
::System::Threading::SynchronizationContext* System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_SynchronizationContextNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SynchronizationContextNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.get_LogicalCallContext
::System::Runtime::Remoting::Messaging::LogicalCallContext::Reader System::Threading::ExecutionContext::Reader::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::get_LogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::LogicalCallContext::Reader, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader..ctor
// ABORTED elsewhere.  System::Threading::ExecutionContext::Reader::Reader(::System::Threading::ExecutionContext* ec)
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.DangerousGetRawExecutionContext
::System::Threading::ExecutionContext* System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::DangerousGetRawExecutionContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DangerousGetRawExecutionContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.IsDefaultFTContext
bool System::Threading::ExecutionContext::Reader::IsDefaultFTContext(bool ignoreSyncCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::IsDefaultFTContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDefaultFTContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreSyncCtx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ignoreSyncCtx);
}
// Autogenerated method: System.Threading.ExecutionContext/System.Threading.Reader.HasSameLocalValues
bool System::Threading::ExecutionContext::Reader::HasSameLocalValues(::System::Threading::ExecutionContext* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::Reader::HasSameLocalValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasSameLocalValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ExecutionContext/System.Threading.CaptureOptions
#include "System/Threading/ExecutionContext_CaptureOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions None
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions None
void System::Threading::ExecutionContext::CaptureOptions::_set_None(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions IgnoreSyncCtx
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_IgnoreSyncCtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions IgnoreSyncCtx
void System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_IgnoreSyncCtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "IgnoreSyncCtx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions OptimizeDefaultCase
::System::Threading::ExecutionContext::CaptureOptions System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_get_OptimizeDefaultCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ExecutionContext::CaptureOptions>("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ExecutionContext/System.Threading.CaptureOptions OptimizeDefaultCase
void System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase(::System::Threading::ExecutionContext::CaptureOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::_set_OptimizeDefaultCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ExecutionContext/CaptureOptions", "OptimizeDefaultCase", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::ExecutionContext::CaptureOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ExecutionContext::CaptureOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionException
#include "System/Threading/LockRecursionException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Monitor
#include "System/Threading/Monitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Enter
void System::Threading::Monitor::Enter(::Il2CppObject* obj, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ThrowLockTakenException
void System::Threading::Monitor::ThrowLockTakenException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ThrowLockTakenException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ThrowLockTakenException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Monitor.Exit
void System::Threading::Monitor::Exit(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.Monitor.Wait
bool System::Threading::Monitor::Wait(::Il2CppObject* obj, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout);
}
// Autogenerated method: System.Threading.Monitor.Pulse
void System::Threading::Monitor::Pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.PulseAll
void System::Threading::Monitor::PulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::PulseAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "PulseAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_test_synchronised
bool System::Threading::Monitor::Monitor_test_synchronised(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_test_synchronised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_test_synchronised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse
void System::Threading::Monitor::Monitor_pulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_pulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulse
void System::Threading::Monitor::ObjPulse(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjPulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_pulse_all
void System::Threading::Monitor::Monitor_pulse_all(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_pulse_all");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_pulse_all", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.ObjPulseAll
void System::Threading::Monitor::ObjPulseAll(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjPulseAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjPulseAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Monitor.Monitor_wait
bool System::Threading::Monitor::Monitor_wait(::Il2CppObject* obj, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::Monitor_wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "Monitor_wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, ms);
}
// Autogenerated method: System.Threading.Monitor.ObjWait
bool System::Threading::Monitor::ObjWait(bool exitContext, int millisecondsTimeout, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ObjWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ObjWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exitContext), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exitContext, millisecondsTimeout, obj);
}
// Autogenerated method: System.Threading.Monitor.try_enter_with_atomic_var
void System::Threading::Monitor::try_enter_with_atomic_var(::Il2CppObject* obj, int millisecondsTimeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::try_enter_with_atomic_var");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "try_enter_with_atomic_var", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(millisecondsTimeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, millisecondsTimeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ReliableEnterTimeout
void System::Threading::Monitor::ReliableEnterTimeout(::Il2CppObject* obj, int timeout, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ReliableEnterTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnterTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, timeout, byref(lockTaken));
}
// Autogenerated method: System.Threading.Monitor.ReliableEnter
void System::Threading::Monitor::ReliableEnter(::Il2CppObject* obj, ByRef<bool> lockTaken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Monitor::ReliableEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Monitor", "ReliableEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(lockTaken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, byref(lockTaken));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ParameterizedThreadStart.Invoke
void System::Threading::ParameterizedThreadStart::Invoke(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.BeginInvoke
::System::IAsyncResult* System::Threading::ParameterizedThreadStart::BeginInvoke(::Il2CppObject* obj, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, callback, object);
}
// Autogenerated method: System.Threading.ParameterizedThreadStart.EndInvoke
void System::Threading::ParameterizedThreadStart::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ParameterizedThreadStart::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SemaphoreFullException
#include "System/Threading/SemaphoreFullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.SendOrPostCallback.Invoke
void System::Threading::SendOrPostCallback::Invoke(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.SendOrPostCallback.BeginInvoke
::System::IAsyncResult* System::Threading::SendOrPostCallback::BeginInvoke(::Il2CppObject* state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: System.Threading.SendOrPostCallback.EndInvoke
void System::Threading::SendOrPostCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SendOrPostCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.SynchronizationContextProperties
#include "System/Threading/SynchronizationContextProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties None
::System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties None
void System::Threading::SynchronizationContextProperties::_set_None(::System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
::System::Threading::SynchronizationContextProperties System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_get_RequireWaitNotification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SynchronizationContextProperties>("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SynchronizationContextProperties RequireWaitNotification
void System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification(::System::Threading::SynchronizationContextProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::_set_RequireWaitNotification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContextProperties", "RequireWaitNotification", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::SynchronizationContextProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContextProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType1
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType1"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType1
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType1(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType2
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType2"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType2
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType2(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType3
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType3"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType3
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType3(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType4
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType4"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType4
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType4(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_cachedPreparedType5
::System::Type* System::Threading::SynchronizationContext::_get_s_cachedPreparedType5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_get_s_cachedPreparedType5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Threading", "SynchronizationContext", "s_cachedPreparedType5"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_cachedPreparedType5
void System::Threading::SynchronizationContext::_set_s_cachedPreparedType5(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::_set_s_cachedPreparedType5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "SynchronizationContext", "s_cachedPreparedType5", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContextProperties _props
::System::Threading::SynchronizationContextProperties& System::Threading::SynchronizationContext::dyn__props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::dyn__props");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_props"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContextProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_Current
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.get_CurrentNoFlow
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::get_CurrentNoFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::get_CurrentNoFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "get_CurrentNoFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.Send
void System::Threading::SynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.Post
void System::Threading::SynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationStarted
void System::Threading::SynchronizationContext::OperationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::OperationStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.OperationCompleted
void System::Threading::SynchronizationContext::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::OperationCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.SetSynchronizationContext
void System::Threading::SynchronizationContext::SetSynchronizationContext(::System::Threading::SynchronizationContext* syncContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::SetSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "SetSynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syncContext);
}
// Autogenerated method: System.Threading.SynchronizationContext.GetThreadLocalContext
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::GetThreadLocalContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::GetThreadLocalContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "SynchronizationContext", "GetThreadLocalContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.SynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* System::Threading::SynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::SynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext
#include "System/Threading/OSSpecificSynchronizationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationContext
#include "System/Threading/OSSpecificSynchronizationContext_InvocationContext.hpp"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.<>c
#include "System/Threading/OSSpecificSynchronizationContext_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>* System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::_get_s_ContextCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>*>("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
void System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Threading::OSSpecificSynchronizationContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::_set_s_ContextCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "OSSpecificSynchronizationContext", "s_ContextCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_OSSynchronizationContext
::Il2CppObject*& System::Threading::OSSpecificSynchronizationContext::dyn_m_OSSynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::dyn_m_OSSynchronizationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OSSynchronizationContext"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext..cctor
void System::Threading::OSSpecificSynchronizationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Get
::System::Threading::OSSpecificSynchronizationContext* System::Threading::OSSpecificSynchronizationContext::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::OSSpecificSynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.InvocationEntry
void System::Threading::OSSpecificSynchronizationContext::InvocationEntry(::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "InvocationEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.GetOSContext
::Il2CppObject* System::Threading::OSSpecificSynchronizationContext::GetOSContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::GetOSContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "GetOSContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.PostInternal
void System::Threading::OSSpecificSynchronizationContext::PostInternal(::Il2CppObject* osSynchronizationContext, ::System::IntPtr callback, ::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::PostInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "OSSpecificSynchronizationContext", "PostInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(osSynchronizationContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, osSynchronizationContext, callback, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* System::Threading::OSSpecificSynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Send
void System::Threading::OSSpecificSynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext.Post
void System::Threading::OSSpecificSynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate
#include "System/Threading/OSSpecificSynchronizationContext_InvocationEntryDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.Invoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke(::System::IntPtr arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.BeginInvoke
::System::IAsyncResult* System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke(::System::IntPtr arg, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, arg, callback, object);
}
// Autogenerated method: System.Threading.OSSpecificSynchronizationContext/System.Threading.InvocationEntryDelegate.EndInvoke
void System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.OSSpecificSynchronizationContext/System.Threading.MonoPInvokeCallbackAttribute
#include "System/Threading/OSSpecificSynchronizationContext_MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
