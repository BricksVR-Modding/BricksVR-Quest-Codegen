// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: StartExportResponse
  struct StartExportResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StartExportResponse, "", "StartExportResponse");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x3
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: StartExportResponse
  // [TokenAttribute] Offset: FFFFFFFF
  struct StartExportResponse/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Boolean Success
    // Size: 0x1
    // Offset: 0x0
    bool Success;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean RateLimited
    // Size: 0x1
    // Offset: 0x1
    bool RateLimited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean EmptyRoom
    // Size: 0x1
    // Offset: 0x2
    bool EmptyRoom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: StartExportResponse
    constexpr StartExportResponse(bool Success_ = {}, bool RateLimited_ = {}, bool EmptyRoom_ = {}) noexcept : Success{Success_}, RateLimited{RateLimited_}, EmptyRoom{EmptyRoom_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Boolean Success
    [[deprecated]] bool& dyn_Success();
    // Get instance field reference: public System.Boolean RateLimited
    [[deprecated]] bool& dyn_RateLimited();
    // Get instance field reference: public System.Boolean EmptyRoom
    [[deprecated]] bool& dyn_EmptyRoom();
  }; // StartExportResponse
  #pragma pack(pop)
  static check_size<sizeof(StartExportResponse), 2 + sizeof(bool)> __GlobalNamespace_StartExportResponseSizeCheck;
  static_assert(sizeof(StartExportResponse) == 0x3);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
