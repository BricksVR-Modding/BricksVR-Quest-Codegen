// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AdvancedColorPicker.GraphicalColorComponent
#include "AdvancedColorPicker/GraphicalColorComponent.hpp"
// Including type: AdvancedColorPicker.ColorType
#include "AdvancedColorPicker/ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: GraphicalColorTypeComponent
  class GraphicalColorTypeComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::GraphicalColorTypeComponent);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::GraphicalColorTypeComponent*, "AdvancedColorPicker", "GraphicalColorTypeComponent");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0xDC
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.GraphicalColorTypeComponent
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class GraphicalColorTypeComponent : public ::AdvancedColorPicker::GraphicalColorComponent {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private AdvancedColorPicker.ColorType valueType1
    // Size: 0x4
    // Offset: 0xC8
    ::AdvancedColorPicker::ColorType valueType1;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorType) == 0x4);
    // private AdvancedColorPicker.ColorType valueType2
    // Size: 0x4
    // Offset: 0xCC
    ::AdvancedColorPicker::ColorType valueType2;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorType) == 0x4);
    // private AdvancedColorPicker.ColorType valueType3
    // Size: 0x4
    // Offset: 0xD0
    ::AdvancedColorPicker::ColorType valueType3;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorType) == 0x4);
    // private System.Single fixedValue2
    // Size: 0x4
    // Offset: 0xD4
    float fixedValue2;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single fixedValue3
    // Size: 0x4
    // Offset: 0xD8
    float fixedValue3;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private AdvancedColorPicker.ColorType valueType1
    ::AdvancedColorPicker::ColorType& dyn_valueType1();
    // Get instance field reference: private AdvancedColorPicker.ColorType valueType2
    ::AdvancedColorPicker::ColorType& dyn_valueType2();
    // Get instance field reference: private AdvancedColorPicker.ColorType valueType3
    ::AdvancedColorPicker::ColorType& dyn_valueType3();
    // Get instance field reference: private System.Single fixedValue2
    float& dyn_fixedValue2();
    // Get instance field reference: private System.Single fixedValue3
    float& dyn_fixedValue3();
    // public AdvancedColorPicker.ColorType get_RangeType()
    // Offset: 0xE1FB2C
    ::AdvancedColorPicker::ColorType get_RangeType();
    // public System.Void set_RangeType(AdvancedColorPicker.ColorType value)
    // Offset: 0xE21970
    void set_RangeType(::AdvancedColorPicker::ColorType value);
    // public AdvancedColorPicker.ColorType get_ValueType1()
    // Offset: 0xE21AA8
    ::AdvancedColorPicker::ColorType get_ValueType1();
    // public System.Void set_ValueType1(AdvancedColorPicker.ColorType value)
    // Offset: 0xE20118
    void set_ValueType1(::AdvancedColorPicker::ColorType value);
    // public AdvancedColorPicker.ColorType get_ValueType2()
    // Offset: 0xE21BB8
    ::AdvancedColorPicker::ColorType get_ValueType2();
    // public System.Void set_ValueType2(AdvancedColorPicker.ColorType value)
    // Offset: 0xE2016C
    void set_ValueType2(::AdvancedColorPicker::ColorType value);
    // public AdvancedColorPicker.ColorType get_ValueType3()
    // Offset: 0xE21BC0
    ::AdvancedColorPicker::ColorType get_ValueType3();
    // public System.Void set_ValueType3(AdvancedColorPicker.ColorType value)
    // Offset: 0xE21BC8
    void set_ValueType3(::AdvancedColorPicker::ColorType value);
    // public System.Single get_FixedValue2()
    // Offset: 0xE21C1C
    float get_FixedValue2();
    // public System.Void set_FixedValue2(System.Single value)
    // Offset: 0xE21C24
    void set_FixedValue2(float value);
    // public System.Single get_FixedValue3()
    // Offset: 0xE21C48
    float get_FixedValue3();
    // public System.Void set_FixedValue3(System.Single value)
    // Offset: 0xE201C0
    void set_FixedValue3(float value);
    // public System.Single GetValue1()
    // Offset: 0xE21C50
    float GetValue1();
    // public System.Single GetValue2()
    // Offset: 0xE21CE8
    float GetValue2();
    // public System.Single GetValue3()
    // Offset: 0xE21D8C
    float GetValue3();
    // static public System.Boolean CalculateNewValue(AdvancedColorPicker.ColorType newValue, ref AdvancedColorPicker.ColorType value1, ref AdvancedColorPicker.ColorType value2, ref AdvancedColorPicker.ColorType value3)
    // Offset: 0xE21AB0
    static bool CalculateNewValue(::AdvancedColorPicker::ColorType newValue, ByRef<::AdvancedColorPicker::ColorType> value1, ByRef<::AdvancedColorPicker::ColorType> value2, ByRef<::AdvancedColorPicker::ColorType> value3);
    // static private AdvancedColorPicker.ColorType GetRange(AdvancedColorPicker.ColorType type)
    // Offset: 0xE21940
    static ::AdvancedColorPicker::ColorType GetRange(::AdvancedColorPicker::ColorType type);
    // protected System.Void .ctor()
    // Offset: 0xE20260
    // Implemented from: AdvancedColorPicker.GraphicalColorComponent
    // Base method: System.Void GraphicalColorComponent::.ctor()
    // Base method: System.Void MaskableGraphic::.ctor()
    // Base method: System.Void Graphic::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GraphicalColorTypeComponent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::GraphicalColorTypeComponent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GraphicalColorTypeComponent*, creationType>()));
    }
  }; // AdvancedColorPicker.GraphicalColorTypeComponent
  #pragma pack(pop)
  static check_size<sizeof(GraphicalColorTypeComponent), 216 + sizeof(float)> __AdvancedColorPicker_GraphicalColorTypeComponentSizeCheck;
  static_assert(sizeof(GraphicalColorTypeComponent) == 0xDC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_RangeType
// Il2CppName: get_RangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorType (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_RangeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_RangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_RangeType
// Il2CppName: set_RangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_RangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_RangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType1
// Il2CppName: get_ValueType1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorType (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_ValueType1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType1
// Il2CppName: set_ValueType1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_ValueType1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType2
// Il2CppName: get_ValueType2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorType (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_ValueType2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType2
// Il2CppName: set_ValueType2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType2)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_ValueType2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType3
// Il2CppName: get_ValueType3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorType (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_ValueType3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_ValueType3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType3
// Il2CppName: set_ValueType3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_ValueType3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_ValueType3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_FixedValue2
// Il2CppName: get_FixedValue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_FixedValue2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_FixedValue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_FixedValue2
// Il2CppName: set_FixedValue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(float)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_FixedValue2)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_FixedValue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::get_FixedValue3
// Il2CppName: get_FixedValue3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::get_FixedValue3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "get_FixedValue3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::set_FixedValue3
// Il2CppName: set_FixedValue3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorTypeComponent::*)(float)>(&AdvancedColorPicker::GraphicalColorTypeComponent::set_FixedValue3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "set_FixedValue3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::GetValue1
// Il2CppName: GetValue1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::GetValue1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "GetValue1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::GetValue2
// Il2CppName: GetValue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::GetValue2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "GetValue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::GetValue3
// Il2CppName: GetValue3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::GraphicalColorTypeComponent::*)()>(&AdvancedColorPicker::GraphicalColorTypeComponent::GetValue3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "GetValue3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::CalculateNewValue
// Il2CppName: CalculateNewValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::AdvancedColorPicker::ColorType, ByRef<::AdvancedColorPicker::ColorType>, ByRef<::AdvancedColorPicker::ColorType>, ByRef<::AdvancedColorPicker::ColorType>)>(&AdvancedColorPicker::GraphicalColorTypeComponent::CalculateNewValue)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    static auto* value1 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->this_arg;
    static auto* value2 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->this_arg;
    static auto* value3 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "CalculateNewValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue, value1, value2, value3});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::GetRange
// Il2CppName: GetRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorType (*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::GraphicalColorTypeComponent::GetRange)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorTypeComponent*), "GetRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorTypeComponent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
