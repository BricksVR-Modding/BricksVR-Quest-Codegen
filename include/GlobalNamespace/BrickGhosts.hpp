// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Mesh
  class Mesh;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BrickGhosts
  class BrickGhosts;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BrickGhosts);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BrickGhosts*, "", "BrickGhosts");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BrickGhosts
  // [TokenAttribute] Offset: FFFFFFFF
  class BrickGhosts : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.GameObject _ghostPrefab
    static ::UnityEngine::GameObject* _get__ghostPrefab();
    // Set static field: static private UnityEngine.GameObject _ghostPrefab
    static void _set__ghostPrefab(::UnityEngine::GameObject* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> MeshCache
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>* _get_MeshCache();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> MeshCache
    static void _set_MeshCache(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>* value);
    // static private System.Void .cctor()
    // Offset: 0x10D55D4
    static void _cctor();
    // static public UnityEngine.GameObject GhostForBrick(System.String prefabName)
    // Offset: 0x10D523C
    static ::UnityEngine::GameObject* GhostForBrick(::StringW prefabName);
    // static private UnityEngine.GameObject GetGhostPrefab()
    // Offset: 0x10D5324
    static ::UnityEngine::GameObject* GetGhostPrefab();
    // static private UnityEngine.Mesh GetBrickMesh(System.String prefabName)
    // Offset: 0x10D5430
    static ::UnityEngine::Mesh* GetBrickMesh(::StringW prefabName);
  }; // BrickGhosts
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BrickGhosts::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::BrickGhosts::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickGhosts*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickGhosts::GhostForBrick
// Il2CppName: GhostForBrick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::StringW)>(&GlobalNamespace::BrickGhosts::GhostForBrick)> {
  static const MethodInfo* get() {
    static auto* prefabName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickGhosts*), "GhostForBrick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickGhosts::GetGhostPrefab
// Il2CppName: GetGhostPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)()>(&GlobalNamespace::BrickGhosts::GetGhostPrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickGhosts*), "GetGhostPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickGhosts::GetBrickMesh
// Il2CppName: GetBrickMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (*)(::StringW)>(&GlobalNamespace::BrickGhosts::GetBrickMesh)> {
  static const MethodInfo* get() {
    static auto* prefabName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickGhosts*), "GetBrickMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabName});
  }
};
