// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ISubsystem
  class ISubsystem;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ISubsystemDescriptor
  class ISubsystemDescriptor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ISubsystemDescriptor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ISubsystemDescriptor*, "UnityEngine", "ISubsystemDescriptor");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ISubsystemDescriptor
  // [TokenAttribute] Offset: FFFFFFFF
  class ISubsystemDescriptor {
    public:
    // public System.String get_id()
    // Offset: 0xFFFFFFFF
    ::StringW get_id();
    // public UnityEngine.ISubsystem Create()
    // Offset: 0xFFFFFFFF
    ::UnityEngine::ISubsystem* Create();
  }; // UnityEngine.ISubsystemDescriptor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ISubsystemDescriptor::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ISubsystemDescriptor::*)()>(&UnityEngine::ISubsystemDescriptor::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ISubsystemDescriptor*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ISubsystemDescriptor::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ISubsystem* (UnityEngine::ISubsystemDescriptor::*)()>(&UnityEngine::ISubsystemDescriptor::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ISubsystemDescriptor*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
