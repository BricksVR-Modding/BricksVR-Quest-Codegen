// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BrickAttachDetector
#include "GlobalNamespace/BrickAttachDetector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeTransform
  class RealtimeTransform;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0*, "", "BrickAttachDetector/<>c__DisplayClass26_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BrickAttachDetector/<>c__DisplayClass26_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BrickAttachDetector::$$c__DisplayClass26_0 : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public BrickAttachDetector <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::BrickAttachDetector* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BrickAttachDetector*) == 0x8);
    // public Normal.Realtime.RealtimeTransform rt
    // Size: 0x8
    // Offset: 0x18
    ::Normal::Realtime::RealtimeTransform* rt;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::RealtimeTransform*) == 0x8);
    public:
    // Get instance field reference: public BrickAttachDetector <>4__this
    ::GlobalNamespace::BrickAttachDetector*& dyn_$$4__this();
    // Get instance field reference: public Normal.Realtime.RealtimeTransform rt
    ::Normal::Realtime::RealtimeTransform*& dyn_rt();
    // System.Void <EnableGravityIfUnowned>b__0()
    // Offset: 0x10D1D2C
    void $EnableGravityIfUnowned$b__0();
    // public System.Void .ctor()
    // Offset: 0x10D01F0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BrickAttachDetector::$$c__DisplayClass26_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BrickAttachDetector::$$c__DisplayClass26_0*, creationType>()));
    }
  }; // BrickAttachDetector/<>c__DisplayClass26_0
  #pragma pack(pop)
  static check_size<sizeof(BrickAttachDetector::$$c__DisplayClass26_0), 24 + sizeof(::Normal::Realtime::RealtimeTransform*)> __GlobalNamespace_BrickAttachDetector_$$c__DisplayClass26_0SizeCheck;
  static_assert(sizeof(BrickAttachDetector::$$c__DisplayClass26_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0::$EnableGravityIfUnowned$b__0
// Il2CppName: <EnableGravityIfUnowned>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0::*)()>(&GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0::$EnableGravityIfUnowned$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0*), "<EnableGravityIfUnowned>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickAttachDetector::$$c__DisplayClass26_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
