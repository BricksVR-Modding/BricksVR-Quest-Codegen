// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: QuickInteractable
#include "GlobalNamespace/QuickInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: QuickInteractor
  class QuickInteractor;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: InteractablePlacedBrick
  class InteractablePlacedBrick;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::InteractablePlacedBrick);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::InteractablePlacedBrick*, "", "InteractablePlacedBrick");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: InteractablePlacedBrick
  // [TokenAttribute] Offset: FFFFFFFF
  class InteractablePlacedBrick : public ::GlobalNamespace::QuickInteractable {
    public:
    // public System.Void .ctor()
    // Offset: 0x10AAEA0
    // Implemented from: QuickInteractable
    // Base method: System.Void QuickInteractable::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractablePlacedBrick* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractablePlacedBrick::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractablePlacedBrick*, creationType>()));
    }
    // public override System.Void Interact(QuickInteractor interactor)
    // Offset: 0x10AAE84
    // Implemented from: QuickInteractable
    // Base method: System.Void QuickInteractable::Interact(QuickInteractor interactor)
    void Interact(::GlobalNamespace::QuickInteractor* interactor);
  }; // InteractablePlacedBrick
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::InteractablePlacedBrick::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::InteractablePlacedBrick::Interact
// Il2CppName: Interact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InteractablePlacedBrick::*)(::GlobalNamespace::QuickInteractor*)>(&GlobalNamespace::InteractablePlacedBrick::Interact)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("", "QuickInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InteractablePlacedBrick*), "Interact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
