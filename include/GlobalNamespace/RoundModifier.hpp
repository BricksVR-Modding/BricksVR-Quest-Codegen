// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImageModifier
#include "UnityEngine/UI/ProceduralImage/ProceduralImageModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector4
  struct Vector4;
  // Forward declaring type: Rect
  struct Rect;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RoundModifier
  class RoundModifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RoundModifier);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RoundModifier*, "", "RoundModifier");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: RoundModifier
  // [TokenAttribute] Offset: FFFFFFFF
  // [ModifierID] Offset: EFC60
  class RoundModifier : public ::UnityEngine::UI::ProceduralImage::ProceduralImageModifier {
    public:
    // public System.Void .ctor()
    // Offset: 0x4D3750
    // Implemented from: UnityEngine.UI.ProceduralImage.ProceduralImageModifier
    // Base method: System.Void ProceduralImageModifier::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RoundModifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoundModifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RoundModifier*, creationType>()));
    }
    // public override UnityEngine.Vector4 CalculateRadius(UnityEngine.Rect imageRect)
    // Offset: 0x6CC830
    // Implemented from: UnityEngine.UI.ProceduralImage.ProceduralImageModifier
    // Base method: UnityEngine.Vector4 ProceduralImageModifier::CalculateRadius(UnityEngine.Rect imageRect)
    ::UnityEngine::Vector4 CalculateRadius(::UnityEngine::Rect imageRect);
  }; // RoundModifier
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RoundModifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::RoundModifier::CalculateRadius
// Il2CppName: CalculateRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (GlobalNamespace::RoundModifier::*)(::UnityEngine::Rect)>(&GlobalNamespace::RoundModifier::CalculateRadius)> {
  static const MethodInfo* get() {
    static auto* imageRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RoundModifier*), "CalculateRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{imageRect});
  }
};
