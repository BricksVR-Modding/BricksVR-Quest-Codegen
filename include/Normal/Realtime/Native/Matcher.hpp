// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Normal.Realtime.Native.Cluster
#include "Normal/Realtime/Native/Cluster.hpp"
// Including type: Normal.Realtime.Native.Region
#include "Normal/Realtime/Native/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Native
namespace Normal::Realtime::Native {
}
// Completed forward declares
// Type namespace: Normal.Realtime.Native
namespace Normal::Realtime::Native {
  // Forward declaring type: Matcher
  class Matcher;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Native::Matcher);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Native::Matcher*, "Normal.Realtime.Native", "Matcher");
// Type namespace: Normal.Realtime.Native
namespace Normal::Realtime::Native {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Native.Matcher
  // [TokenAttribute] Offset: FFFFFFFF
  class Matcher : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::Normal::Realtime::Native::Matcher::RequestState
    struct RequestState;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.IntPtr _nativeMatcher
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr nativeMatcher;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return nativeMatcher;
    }
    // Get instance field reference: private System.IntPtr _nativeMatcher
    ::System::IntPtr& dyn__nativeMatcher();
    // public System.Void .ctor(System.String address)
    // Offset: 0xAEEE3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Matcher* New_ctor(::StringW address) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Matcher*, creationType>(address)));
    }
    // public System.Void Dispose()
    // Offset: 0xAEF04C
    void Dispose();
    // private System.Void Dispose(System.Boolean disposing)
    // Offset: 0xAEEFC8
    void Dispose(bool disposing);
    // public System.Void Connect()
    // Offset: 0xAEF140
    void Connect();
    // public System.Void Disconnect()
    // Offset: 0xAEF258
    void Disconnect();
    // public System.Void Tick()
    // Offset: 0xAEF374
    void Tick();
    // public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState GetRequestState(System.String requestGUID)
    // Offset: 0xAEF490
    ::Normal::Realtime::Native::Matcher::RequestState GetRequestState(::StringW requestGUID);
    // public System.String GetRequestErrorMessage(System.String requestGUID)
    // Offset: 0xAEF5E8
    ::StringW GetRequestErrorMessage(::StringW requestGUID);
    // public System.String GetRequestFailMessage(System.String requestGUID)
    // Offset: 0xAEF748
    ::StringW GetRequestFailMessage(::StringW requestGUID);
    // public System.Void ClearRequest(System.String requestGUID)
    // Offset: 0xAEF8A8
    void ClearRequest(::StringW requestGUID);
    // public System.String ConnectToRoom(System.String appKey, System.String roomName, System.String clientOffer, Normal.Realtime.Native.Cluster[] clusterPingResults, Normal.Realtime.Native.Region[] preferredRegions)
    // Offset: 0xAEF9F8
    ::StringW ConnectToRoom(::StringW appKey, ::StringW roomName, ::StringW clientOffer, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions);
    // public System.String GetConnectToRoomRequestResponseType(System.String requestGUID)
    // Offset: 0xAEFD68
    ::StringW GetConnectToRoomRequestResponseType(::StringW requestGUID);
    // public Normal.Realtime.Native.Cluster[] GetConnectToRoomRequestClustersToPing(System.String requestGUID)
    // Offset: 0xAEFEC8
    ::ArrayW<::Normal::Realtime::Native::Cluster> GetConnectToRoomRequestClustersToPing(::StringW requestGUID);
    // public System.String GetConnectToRoomRequestServerAnswer(System.String requestGUID)
    // Offset: 0xAF0264
    ::StringW GetConnectToRoomRequestServerAnswer(::StringW requestGUID);
    // protected override System.Void Finalize()
    // Offset: 0xAEEF5C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Normal.Realtime.Native.Matcher
  #pragma pack(pop)
  static check_size<sizeof(Matcher), 16 + sizeof(::System::IntPtr)> __Normal_Realtime_Native_MatcherSizeCheck;
  static_assert(sizeof(Matcher) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)()>(&Normal::Realtime::Native::Matcher::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)(bool)>(&Normal::Realtime::Native::Matcher::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)()>(&Normal::Realtime::Native::Matcher::Connect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Disconnect
// Il2CppName: Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)()>(&Normal::Realtime::Native::Matcher::Disconnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Tick
// Il2CppName: Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)()>(&Normal::Realtime::Native::Matcher::Tick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetRequestState
// Il2CppName: GetRequestState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::Native::Matcher::RequestState (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetRequestState)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetRequestState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetRequestErrorMessage
// Il2CppName: GetRequestErrorMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetRequestErrorMessage)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetRequestErrorMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetRequestFailMessage
// Il2CppName: GetRequestFailMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetRequestFailMessage)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetRequestFailMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::ClearRequest
// Il2CppName: ClearRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::ClearRequest)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "ClearRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::ConnectToRoom
// Il2CppName: ConnectToRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Normal::Realtime::Native::Matcher::*)(::StringW, ::StringW, ::StringW, ::ArrayW<::Normal::Realtime::Native::Cluster>, ::ArrayW<::Normal::Realtime::Native::Region>)>(&Normal::Realtime::Native::Matcher::ConnectToRoom)> {
  static const MethodInfo* get() {
    static auto* appKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clientOffer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clusterPingResults = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Normal.Realtime.Native", "Cluster"), 1)->byval_arg;
    static auto* preferredRegions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Normal.Realtime.Native", "Region"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "ConnectToRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appKey, roomName, clientOffer, clusterPingResults, preferredRegions});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType
// Il2CppName: GetConnectToRoomRequestResponseType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetConnectToRoomRequestResponseType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing
// Il2CppName: GetConnectToRoomRequestClustersToPing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Normal::Realtime::Native::Cluster> (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetConnectToRoomRequestClustersToPing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer
// Il2CppName: GetConnectToRoomRequestServerAnswer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Normal::Realtime::Native::Matcher::*)(::StringW)>(&Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer)> {
  static const MethodInfo* get() {
    static auto* requestGUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "GetConnectToRoomRequestServerAnswer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestGUID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Native::Matcher::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Native::Matcher::*)()>(&Normal::Realtime::Native::Matcher::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Native::Matcher*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
