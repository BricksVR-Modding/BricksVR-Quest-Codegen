// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.Serialization.Serialization
#include "Normal/Realtime/Serialization/Serialization.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Serialization::Serialization::WireType, "Normal.Realtime.Serialization", "Serialization/WireType");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
  // [TokenAttribute] Offset: FFFFFFFF
  struct Serialization::WireType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: WireType
    constexpr WireType(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
    static constexpr const uint8_t Null = 0u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Null();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
    static void _set_Null(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
    static constexpr const uint8_t Varint = 1u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Varint();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
    static void _set_Varint(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
    static constexpr const uint8_t Float = 2u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Float();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
    static void _set_Float(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
    static constexpr const uint8_t Double = 3u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Double();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
    static void _set_Double(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
    static constexpr const uint8_t LengthDelimited = 4u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_LengthDelimited();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
    static void _set_LengthDelimited(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
    static constexpr const uint8_t Model = 5u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Model();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
    static void _set_Model(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
    static constexpr const uint8_t Collection = 6u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Collection();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
    static void _set_Collection(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
    static constexpr const uint8_t Reference = 7u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Reference();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
    static void _set_Reference(::Normal::Realtime::Serialization::Serialization::WireType value);
    // static field const value: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
    static constexpr const uint8_t Bounds = 8u;
    // Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
    static ::Normal::Realtime::Serialization::Serialization::WireType _get_Bounds();
    // Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
    static void _set_Bounds(::Normal::Realtime::Serialization::Serialization::WireType value);
    // Get instance field reference: public System.Byte value__
    [[deprecated]] uint8_t& dyn_value__();
  }; // Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
  #pragma pack(pop)
  static check_size<sizeof(Serialization::WireType), 0 + sizeof(uint8_t)> __Normal_Realtime_Serialization_Serialization_WireTypeSizeCheck;
  static_assert(sizeof(Serialization::WireType) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
