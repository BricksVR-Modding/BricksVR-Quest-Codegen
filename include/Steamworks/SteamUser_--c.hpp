// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Steamworks.SteamUser
#include "Steamworks/SteamUser.hpp"
// Including type: Steamworks.Data.SteamServersConnected_t
#include "Steamworks/Data/SteamServersConnected_t.hpp"
// Including type: Steamworks.Data.SteamServerConnectFailure_t
#include "Steamworks/Data/SteamServerConnectFailure_t.hpp"
// Including type: Steamworks.Data.SteamServersDisconnected_t
#include "Steamworks/Data/SteamServersDisconnected_t.hpp"
// Including type: Steamworks.Data.ClientGameServerDeny_t
#include "Steamworks/Data/ClientGameServerDeny_t.hpp"
// Including type: Steamworks.Data.LicensesUpdated_t
#include "Steamworks/Data/LicensesUpdated_t.hpp"
// Including type: Steamworks.Data.ValidateAuthTicketResponse_t
#include "Steamworks/Data/ValidateAuthTicketResponse_t.hpp"
// Including type: Steamworks.Data.MicroTxnAuthorizationResponse_t
#include "Steamworks/Data/MicroTxnAuthorizationResponse_t.hpp"
// Including type: Steamworks.Data.GameWebCallback_t
#include "Steamworks/Data/GameWebCallback_t.hpp"
// Including type: Steamworks.Data.GetAuthSessionTicketResponse_t
#include "Steamworks/Data/GetAuthSessionTicketResponse_t.hpp"
// Including type: Steamworks.Data.DurationControl_t
#include "Steamworks/Data/DurationControl_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::SteamUser::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::SteamUser::$$c*, "Steamworks", "SteamUser/<>c");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.SteamUser/Steamworks.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SteamUser::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Steamworks.SteamUser/Steamworks.<>c <>9
    static ::Steamworks::SteamUser::$$c* _get_$$9();
    // Set static field: static public readonly Steamworks.SteamUser/Steamworks.<>c <>9
    static void _set_$$9(::Steamworks::SteamUser::$$c* value);
    // Get static field: static public System.Action`1<Steamworks.Data.SteamServersConnected_t> <>9__4_0
    static ::System::Action_1<::Steamworks::Data::SteamServersConnected_t>* _get_$$9__4_0();
    // Set static field: static public System.Action`1<Steamworks.Data.SteamServersConnected_t> <>9__4_0
    static void _set_$$9__4_0(::System::Action_1<::Steamworks::Data::SteamServersConnected_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.SteamServerConnectFailure_t> <>9__4_1
    static ::System::Action_1<::Steamworks::Data::SteamServerConnectFailure_t>* _get_$$9__4_1();
    // Set static field: static public System.Action`1<Steamworks.Data.SteamServerConnectFailure_t> <>9__4_1
    static void _set_$$9__4_1(::System::Action_1<::Steamworks::Data::SteamServerConnectFailure_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.SteamServersDisconnected_t> <>9__4_2
    static ::System::Action_1<::Steamworks::Data::SteamServersDisconnected_t>* _get_$$9__4_2();
    // Set static field: static public System.Action`1<Steamworks.Data.SteamServersDisconnected_t> <>9__4_2
    static void _set_$$9__4_2(::System::Action_1<::Steamworks::Data::SteamServersDisconnected_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.ClientGameServerDeny_t> <>9__4_3
    static ::System::Action_1<::Steamworks::Data::ClientGameServerDeny_t>* _get_$$9__4_3();
    // Set static field: static public System.Action`1<Steamworks.Data.ClientGameServerDeny_t> <>9__4_3
    static void _set_$$9__4_3(::System::Action_1<::Steamworks::Data::ClientGameServerDeny_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.LicensesUpdated_t> <>9__4_4
    static ::System::Action_1<::Steamworks::Data::LicensesUpdated_t>* _get_$$9__4_4();
    // Set static field: static public System.Action`1<Steamworks.Data.LicensesUpdated_t> <>9__4_4
    static void _set_$$9__4_4(::System::Action_1<::Steamworks::Data::LicensesUpdated_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.ValidateAuthTicketResponse_t> <>9__4_5
    static ::System::Action_1<::Steamworks::Data::ValidateAuthTicketResponse_t>* _get_$$9__4_5();
    // Set static field: static public System.Action`1<Steamworks.Data.ValidateAuthTicketResponse_t> <>9__4_5
    static void _set_$$9__4_5(::System::Action_1<::Steamworks::Data::ValidateAuthTicketResponse_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.MicroTxnAuthorizationResponse_t> <>9__4_6
    static ::System::Action_1<::Steamworks::Data::MicroTxnAuthorizationResponse_t>* _get_$$9__4_6();
    // Set static field: static public System.Action`1<Steamworks.Data.MicroTxnAuthorizationResponse_t> <>9__4_6
    static void _set_$$9__4_6(::System::Action_1<::Steamworks::Data::MicroTxnAuthorizationResponse_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.GameWebCallback_t> <>9__4_7
    static ::System::Action_1<::Steamworks::Data::GameWebCallback_t>* _get_$$9__4_7();
    // Set static field: static public System.Action`1<Steamworks.Data.GameWebCallback_t> <>9__4_7
    static void _set_$$9__4_7(::System::Action_1<::Steamworks::Data::GameWebCallback_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.GetAuthSessionTicketResponse_t> <>9__4_8
    static ::System::Action_1<::Steamworks::Data::GetAuthSessionTicketResponse_t>* _get_$$9__4_8();
    // Set static field: static public System.Action`1<Steamworks.Data.GetAuthSessionTicketResponse_t> <>9__4_8
    static void _set_$$9__4_8(::System::Action_1<::Steamworks::Data::GetAuthSessionTicketResponse_t>* value);
    // Get static field: static public System.Action`1<Steamworks.Data.DurationControl_t> <>9__4_9
    static ::System::Action_1<::Steamworks::Data::DurationControl_t>* _get_$$9__4_9();
    // Set static field: static public System.Action`1<Steamworks.Data.DurationControl_t> <>9__4_9
    static void _set_$$9__4_9(::System::Action_1<::Steamworks::Data::DurationControl_t>* value);
    // static private System.Void .cctor()
    // Offset: 0x5C99C0
    static void _cctor();
    // System.Void <InstallEvents>b__4_0(Steamworks.Data.SteamServersConnected_t x)
    // Offset: 0x5C85A0
    void $InstallEvents$b__4_0(::Steamworks::Data::SteamServersConnected_t x);
    // System.Void <InstallEvents>b__4_1(Steamworks.Data.SteamServerConnectFailure_t x)
    // Offset: 0x5C86F0
    void $InstallEvents$b__4_1(::Steamworks::Data::SteamServerConnectFailure_t x);
    // System.Void <InstallEvents>b__4_2(Steamworks.Data.SteamServersDisconnected_t x)
    // Offset: 0x5C87C0
    void $InstallEvents$b__4_2(::Steamworks::Data::SteamServersDisconnected_t x);
    // System.Void <InstallEvents>b__4_3(Steamworks.Data.ClientGameServerDeny_t x)
    // Offset: 0x5C8830
    void $InstallEvents$b__4_3(::Steamworks::Data::ClientGameServerDeny_t x);
    // System.Void <InstallEvents>b__4_4(Steamworks.Data.LicensesUpdated_t x)
    // Offset: 0x5C89B0
    void $InstallEvents$b__4_4(::Steamworks::Data::LicensesUpdated_t x);
    // System.Void <InstallEvents>b__4_5(Steamworks.Data.ValidateAuthTicketResponse_t x)
    // Offset: 0x5C8A80
    void $InstallEvents$b__4_5(::Steamworks::Data::ValidateAuthTicketResponse_t x);
    // System.Void <InstallEvents>b__4_6(Steamworks.Data.MicroTxnAuthorizationResponse_t x)
    // Offset: 0x5C8B20
    void $InstallEvents$b__4_6(::Steamworks::Data::MicroTxnAuthorizationResponse_t x);
    // System.Void <InstallEvents>b__4_7(Steamworks.Data.GameWebCallback_t x)
    // Offset: 0x5C8BE0
    void $InstallEvents$b__4_7(::Steamworks::Data::GameWebCallback_t x);
    // System.Void <InstallEvents>b__4_8(Steamworks.Data.GetAuthSessionTicketResponse_t x)
    // Offset: 0x5C8C70
    void $InstallEvents$b__4_8(::Steamworks::Data::GetAuthSessionTicketResponse_t x);
    // System.Void <InstallEvents>b__4_9(Steamworks.Data.DurationControl_t x)
    // Offset: 0x5C8CF0
    void $InstallEvents$b__4_9(::Steamworks::Data::DurationControl_t x);
    // public System.Void .ctor()
    // Offset: 0x1DD400
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SteamUser::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamUser::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SteamUser::$$c*, creationType>()));
    }
  }; // Steamworks.SteamUser/Steamworks.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Steamworks::SteamUser::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_0
// Il2CppName: <InstallEvents>b__4_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::SteamServersConnected_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "SteamServersConnected_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_1
// Il2CppName: <InstallEvents>b__4_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::SteamServerConnectFailure_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_1)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "SteamServerConnectFailure_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_2
// Il2CppName: <InstallEvents>b__4_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::SteamServersDisconnected_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_2)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "SteamServersDisconnected_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_3
// Il2CppName: <InstallEvents>b__4_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::ClientGameServerDeny_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_3)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "ClientGameServerDeny_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_4
// Il2CppName: <InstallEvents>b__4_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::LicensesUpdated_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_4)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "LicensesUpdated_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_5
// Il2CppName: <InstallEvents>b__4_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::ValidateAuthTicketResponse_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_5)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "ValidateAuthTicketResponse_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_6
// Il2CppName: <InstallEvents>b__4_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::MicroTxnAuthorizationResponse_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_6)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "MicroTxnAuthorizationResponse_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_7
// Il2CppName: <InstallEvents>b__4_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::GameWebCallback_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_7)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "GameWebCallback_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_8
// Il2CppName: <InstallEvents>b__4_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::GetAuthSessionTicketResponse_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_8)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "GetAuthSessionTicketResponse_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::$InstallEvents$b__4_9
// Il2CppName: <InstallEvents>b__4_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamUser::$$c::*)(::Steamworks::Data::DurationControl_t)>(&Steamworks::SteamUser::$$c::$InstallEvents$b__4_9)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "DurationControl_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamUser::$$c*), "<InstallEvents>b__4_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamUser::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
