// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRCameraComposition
#include "GlobalNamespace/OVRCameraComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: OVRComposition because it is already included!
  // Forward declaring type: CompositionMethod
  struct OVRManager_CompositionMethod;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRDirectComposition
  class OVRDirectComposition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRDirectComposition);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRDirectComposition*, "", "OVRDirectComposition");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: OVRDirectComposition
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRDirectComposition : public ::GlobalNamespace::OVRCameraComposition {
    public:
    // Writing base type padding for base size: 0x6D to desired offset: 0x70
    char ___base_padding[0x3] = {};
    public:
    // private UnityEngine.GameObject previousMainCameraObject
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* previousMainCameraObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject directCompositionCameraGameObject
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* directCompositionCameraGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Camera directCompositionCamera
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Camera* directCompositionCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // public UnityEngine.RenderTexture boundaryMeshMaskTexture
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::RenderTexture* boundaryMeshMaskTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.GameObject previousMainCameraObject
    [[deprecated]] ::UnityEngine::GameObject*& dyn_previousMainCameraObject();
    // Get instance field reference: public UnityEngine.GameObject directCompositionCameraGameObject
    [[deprecated]] ::UnityEngine::GameObject*& dyn_directCompositionCameraGameObject();
    // Get instance field reference: public UnityEngine.Camera directCompositionCamera
    [[deprecated]] ::UnityEngine::Camera*& dyn_directCompositionCamera();
    // Get instance field reference: public UnityEngine.RenderTexture boundaryMeshMaskTexture
    [[deprecated]] ::UnityEngine::RenderTexture*& dyn_boundaryMeshMaskTexture();
    // private System.Void RefreshCameraObjects(UnityEngine.GameObject parentObject, UnityEngine.Camera mainCamera)
    // Offset: 0x23A0E0
    void RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera);
    // public System.Void .ctor(UnityEngine.GameObject parentObject, UnityEngine.Camera mainCamera, OVRManager/CameraDevice cameraDevice, System.Boolean useDynamicLighting, OVRManager/DepthQuality depthQuality)
    // Offset: 0x23B0C0
    // Implemented from: OVRCameraComposition
    // Base method: System.Void OVRCameraComposition::.ctor(UnityEngine.GameObject parentObject, UnityEngine.Camera mainCamera, OVRManager/CameraDevice cameraDevice, System.Boolean useDynamicLighting, OVRManager/DepthQuality depthQuality)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRDirectComposition* New_ctor(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRManager_CameraDevice cameraDevice, bool useDynamicLighting, ::GlobalNamespace::OVRManager_DepthQuality depthQuality) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRDirectComposition*, creationType>(parentObject, mainCamera, cameraDevice, useDynamicLighting, depthQuality)));
    }
    // public override OVRManager/CompositionMethod CompositionMethod()
    // Offset: 0x23A0D0
    // Implemented from: OVRComposition
    // Base method: OVRManager/CompositionMethod OVRComposition::CompositionMethod()
    ::GlobalNamespace::OVRManager_CompositionMethod CompositionMethod();
    // public override System.Void Update(UnityEngine.GameObject gameObject, UnityEngine.Camera mainCamera)
    // Offset: 0x23A680
    // Implemented from: OVRComposition
    // Base method: System.Void OVRComposition::Update(UnityEngine.GameObject gameObject, UnityEngine.Camera mainCamera)
    void Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera);
    // public override System.Void Cleanup()
    // Offset: 0x239F20
    // Implemented from: OVRCameraComposition
    // Base method: System.Void OVRCameraComposition::Cleanup()
    void Cleanup();
  }; // OVRDirectComposition
  #pragma pack(pop)
  static check_size<sizeof(OVRDirectComposition), 136 + sizeof(::UnityEngine::RenderTexture*)> __GlobalNamespace_OVRDirectCompositionSizeCheck;
  static_assert(sizeof(OVRDirectComposition) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRDirectComposition::RefreshCameraObjects
// Il2CppName: RefreshCameraObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRDirectComposition::*)(::UnityEngine::GameObject*, ::UnityEngine::Camera*)>(&GlobalNamespace::OVRDirectComposition::RefreshCameraObjects)> {
  static const MethodInfo* get() {
    static auto* parentObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* mainCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRDirectComposition*), "RefreshCameraObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentObject, mainCamera});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRDirectComposition::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRDirectComposition::CompositionMethod
// Il2CppName: CompositionMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRManager_CompositionMethod (GlobalNamespace::OVRDirectComposition::*)()>(&GlobalNamespace::OVRDirectComposition::CompositionMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRDirectComposition*), "CompositionMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRDirectComposition::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRDirectComposition::*)(::UnityEngine::GameObject*, ::UnityEngine::Camera*)>(&GlobalNamespace::OVRDirectComposition::Update)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* mainCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRDirectComposition*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, mainCamera});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRDirectComposition::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRDirectComposition::*)()>(&GlobalNamespace::OVRDirectComposition::Cleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRDirectComposition*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
