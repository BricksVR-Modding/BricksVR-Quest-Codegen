// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Outline
#include "GlobalNamespace/Outline.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Outline::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Outline::$$c*, "", "Outline/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Outline/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Outline::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Outline/<>c <>9
    static ::GlobalNamespace::Outline::$$c* _get_$$9();
    // Set static field: static public readonly Outline/<>c <>9
    static void _set_$$9(::GlobalNamespace::Outline::$$c* value);
    // Get static field: static public System.Func`3<UnityEngine.Vector3,System.Int32,System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32>> <>9__31_0
    static ::System::Func_3<::UnityEngine::Vector3, int, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int>>* _get_$$9__31_0();
    // Set static field: static public System.Func`3<UnityEngine.Vector3,System.Int32,System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32>> <>9__31_0
    static void _set_$$9__31_0(::System::Func_3<::UnityEngine::Vector3, int, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int>>* value);
    // Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32>,UnityEngine.Vector3> <>9__31_1
    static ::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int>, ::UnityEngine::Vector3>* _get_$$9__31_1();
    // Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32>,UnityEngine.Vector3> <>9__31_1
    static void _set_$$9__31_1(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int>, ::UnityEngine::Vector3>* value);
    // static private System.Void .cctor()
    // Offset: 0x7EB4D0
    static void _cctor();
    // System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32> <SmoothNormals>b__31_0(UnityEngine.Vector3 vertex, System.Int32 index)
    // Offset: 0x7EB350
    ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int> $SmoothNormals$b__31_0(::UnityEngine::Vector3 vertex, int index);
    // UnityEngine.Vector3 <SmoothNormals>b__31_1(System.Collections.Generic.KeyValuePair`2<UnityEngine.Vector3,System.Int32> pair)
    // Offset: 0x7EB3D0
    ::UnityEngine::Vector3 $SmoothNormals$b__31_1(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int> pair);
    // public System.Void .ctor()
    // Offset: 0x1DD400
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Outline::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Outline::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Outline::$$c*, creationType>()));
    }
  }; // Outline/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Outline::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Outline::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Outline::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Outline::$$c::$SmoothNormals$b__31_0
// Il2CppName: <SmoothNormals>b__31_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int> (GlobalNamespace::Outline::$$c::*)(::UnityEngine::Vector3, int)>(&GlobalNamespace::Outline::$$c::$SmoothNormals$b__31_0)> {
  static const MethodInfo* get() {
    static auto* vertex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Outline::$$c*), "<SmoothNormals>b__31_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertex, index});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Outline::$$c::$SmoothNormals$b__31_1
// Il2CppName: <SmoothNormals>b__31_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (GlobalNamespace::Outline::$$c::*)(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::Vector3, int>)>(&GlobalNamespace::Outline::$$c::$SmoothNormals$b__31_1)> {
  static const MethodInfo* get() {
    static auto* pair = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Outline::$$c*), "<SmoothNormals>b__31_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pair});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Outline::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
