// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Normal.Realtime.Native
namespace Normal::Realtime::Native {
  // Forward declaring type: Region
  struct Region;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Native::Region, "Normal.Realtime.Native", "Region");
// Type namespace: Normal.Realtime.Native
namespace Normal::Realtime::Native {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Normal.Realtime.Native.Region
  // [TokenAttribute] Offset: FFFFFFFF
  struct Region/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly System.String name
    // Size: 0x8
    // Offset: 0x0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: Region
    constexpr Region(::StringW name_ = {}) noexcept : name{name_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return name;
    }
    // Get instance field reference: public readonly System.String name
    ::StringW& dyn_name();
    // public System.Void .ctor(System.String name)
    // Offset: 0xAF1440
    // ABORTED: conflicts with another method.  Region(::StringW name);
  }; // Normal.Realtime.Native.Region
  #pragma pack(pop)
  static check_size<sizeof(Region), 0 + sizeof(::StringW)> __Normal_Realtime_Native_RegionSizeCheck;
  static_assert(sizeof(Region) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Native::Region::Region
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
