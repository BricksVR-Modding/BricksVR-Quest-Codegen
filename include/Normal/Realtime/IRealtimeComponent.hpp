// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeView
  class RealtimeView;
  // Forward declaring type: Realtime
  class Realtime;
  // Forward declaring type: Room
  class Room;
}
// Completed forward declares
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: IRealtimeComponent
  class IRealtimeComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::IRealtimeComponent);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::IRealtimeComponent*, "Normal.Realtime", "IRealtimeComponent");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.IRealtimeComponent
  // [TokenAttribute] Offset: FFFFFFFF
  class IRealtimeComponent {
    public:
    // public Normal.Realtime.RealtimeView get_realtimeView()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Normal::Realtime::RealtimeView* get_realtimeView();
    // public Normal.Realtime.Realtime get_realtime()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Normal::Realtime::Realtime* get_realtime();
    // public Normal.Realtime.Room get_room()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Normal::Realtime::Room* get_room();
    // public System.Int32 get_ownerIDSelf()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ownerIDSelf();
    // public System.Int32 get_ownerIDInHierarchy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ownerIDInHierarchy();
    // public System.Boolean get_isUnownedSelf()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isUnownedSelf();
    // public System.Boolean get_isUnownedInHierarchy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isUnownedInHierarchy();
    // public System.Boolean get_isOwnedLocallySelf()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isOwnedLocallySelf();
    // public System.Boolean get_isOwnedLocallyInHierarchy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isOwnedLocallyInHierarchy();
    // public System.Boolean get_isOwnedRemotelySelf()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isOwnedRemotelySelf();
    // public System.Boolean get_isOwnedRemotelyInHierarchy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isOwnedRemotelyInHierarchy();
    // public System.Void RequestOwnership()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RequestOwnership();
    // public System.Void SetOwnership(System.Int32 clientID)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetOwnership(int clientID);
    // public System.Void ClearOwnership()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearOwnership();
  }; // Normal.Realtime.IRealtimeComponent
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_realtimeView
// Il2CppName: get_realtimeView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::RealtimeView* (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_realtimeView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_realtimeView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_realtime
// Il2CppName: get_realtime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::Realtime* (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_realtime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_realtime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_room
// Il2CppName: get_room
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::Room* (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_room)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_room", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_ownerIDSelf
// Il2CppName: get_ownerIDSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_ownerIDSelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_ownerIDSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy
// Il2CppName: get_ownerIDInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_ownerIDInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isUnownedSelf
// Il2CppName: get_isUnownedSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isUnownedSelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isUnownedSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy
// Il2CppName: get_isUnownedInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isUnownedInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf
// Il2CppName: get_isOwnedLocallySelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isOwnedLocallySelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy
// Il2CppName: get_isOwnedLocallyInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isOwnedLocallyInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf
// Il2CppName: get_isOwnedRemotelySelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isOwnedRemotelySelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy
// Il2CppName: get_isOwnedRemotelyInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "get_isOwnedRemotelyInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::RequestOwnership
// Il2CppName: RequestOwnership
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::RequestOwnership)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "RequestOwnership", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::SetOwnership
// Il2CppName: SetOwnership
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeComponent::*)(int)>(&Normal::Realtime::IRealtimeComponent::SetOwnership)> {
  static const MethodInfo* get() {
    static auto* clientID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "SetOwnership", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clientID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeComponent::ClearOwnership
// Il2CppName: ClearOwnership
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeComponent::*)()>(&Normal::Realtime::IRealtimeComponent::ClearOwnership)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeComponent*), "ClearOwnership", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
