// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: SteamClass
  class SteamClass;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::SteamClass);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::SteamClass*, "Steamworks", "SteamClass");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.SteamClass
  // [TokenAttribute] Offset: FFFFFFFF
  class SteamClass : public ::Il2CppObject {
    public:
    // protected System.Void .ctor()
    // Offset: 0x1DD400
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SteamClass* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamClass::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SteamClass*, creationType>()));
    }
    // System.Void InitializeInterface(System.Boolean server)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InitializeInterface(bool server);
    // System.Void DestroyInterface(System.Boolean server)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyInterface(bool server);
  }; // Steamworks.SteamClass
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::SteamClass::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Steamworks::SteamClass::InitializeInterface
// Il2CppName: InitializeInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamClass::*)(bool)>(&Steamworks::SteamClass::InitializeInterface)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamClass*), "InitializeInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamClass::DestroyInterface
// Il2CppName: DestroyInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamClass::*)(bool)>(&Steamworks::SteamClass::DestroyInterface)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamClass*), "DestroyInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
