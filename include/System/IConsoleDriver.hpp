// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ConsoleKeyInfo
  struct ConsoleKeyInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: IConsoleDriver
  class IConsoleDriver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IConsoleDriver);
DEFINE_IL2CPP_ARG_TYPE(::System::IConsoleDriver*, "System", "IConsoleDriver");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IConsoleDriver
  // [TokenAttribute] Offset: FFFFFFFF
  class IConsoleDriver {
    public:
    // public System.ConsoleKeyInfo ReadKey(System.Boolean intercept)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ConsoleKeyInfo ReadKey(bool intercept);
  }; // System.IConsoleDriver
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IConsoleDriver::ReadKey
// Il2CppName: ReadKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ConsoleKeyInfo (System::IConsoleDriver::*)(bool)>(&System::IConsoleDriver::ReadKey)> {
  static const MethodInfo* get() {
    static auto* intercept = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IConsoleDriver*), "ReadKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{intercept});
  }
};
