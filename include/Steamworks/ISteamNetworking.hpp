// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Steamworks.SteamInterface
#include "Steamworks/SteamInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Completed forward declares
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: ISteamNetworking
  class ISteamNetworking;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::ISteamNetworking);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::ISteamNetworking*, "Steamworks", "ISteamNetworking");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.ISteamNetworking
  // [TokenAttribute] Offset: FFFFFFFF
  class ISteamNetworking : public ::Steamworks::SteamInterface {
    public:
    // System.Void .ctor(System.Boolean IsGameServer)
    // Offset: 0x5BDB50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ISteamNetworking* New_ctor(bool IsGameServer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworking::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ISteamNetworking*, creationType>(IsGameServer)));
    }
    // static System.IntPtr SteamAPI_SteamNetworking_v006()
    // Offset: 0x5BF0A0
    static ::System::IntPtr SteamAPI_SteamNetworking_v006();
    // static System.IntPtr SteamAPI_SteamGameServerNetworking_v006()
    // Offset: 0x5BF030
    static ::System::IntPtr SteamAPI_SteamGameServerNetworking_v006();
    // public override System.IntPtr GetUserInterfacePointer()
    // Offset: 0x5BF0A0
    // Implemented from: Steamworks.SteamInterface
    // Base method: System.IntPtr SteamInterface::GetUserInterfacePointer()
    ::System::IntPtr GetUserInterfacePointer();
    // public override System.IntPtr GetServerInterfacePointer()
    // Offset: 0x5BF030
    // Implemented from: Steamworks.SteamInterface
    // Base method: System.IntPtr SteamInterface::GetServerInterfacePointer()
    ::System::IntPtr GetServerInterfacePointer();
  }; // Steamworks.ISteamNetworking
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::ISteamNetworking::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Steamworks::ISteamNetworking::SteamAPI_SteamNetworking_v006
// Il2CppName: SteamAPI_SteamNetworking_v006
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Steamworks::ISteamNetworking::SteamAPI_SteamNetworking_v006)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamNetworking*), "SteamAPI_SteamNetworking_v006", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamNetworking::SteamAPI_SteamGameServerNetworking_v006
// Il2CppName: SteamAPI_SteamGameServerNetworking_v006
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Steamworks::ISteamNetworking::SteamAPI_SteamGameServerNetworking_v006)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamNetworking*), "SteamAPI_SteamGameServerNetworking_v006", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamNetworking::GetUserInterfacePointer
// Il2CppName: GetUserInterfacePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (Steamworks::ISteamNetworking::*)()>(&Steamworks::ISteamNetworking::GetUserInterfacePointer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamNetworking*), "GetUserInterfacePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamNetworking::GetServerInterfacePointer
// Il2CppName: GetServerInterfacePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (Steamworks::ISteamNetworking::*)()>(&Steamworks::ISteamNetworking::GetServerInterfacePointer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamNetworking*), "GetServerInterfacePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
