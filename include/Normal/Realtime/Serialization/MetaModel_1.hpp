// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: IMetaModelExtension
  class IMetaModelExtension;
}
// Completed forward declares
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: MetaModel`1<T>
  template<typename T>
  class MetaModel_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Normal::Realtime::Serialization::MetaModel_1, "Normal.Realtime.Serialization", "MetaModel`1");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Normal.Realtime.Serialization.MetaModel`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class MetaModel_1 : public ::Normal::Realtime::Serialization::MetaModel {
    public:
    public:
    // private T _modelExtension
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T modelExtension;
    public:
    // Autogenerated instance field getter
    // Get instance field: private T _modelExtension
    [[deprecated]] T& dyn__modelExtension() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel_1::dyn__modelExtension");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelExtension"))->offset;
      return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(T modelExtension)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MetaModel_1<T>* New_ctor(T modelExtension) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MetaModel_1<T>*, creationType>(modelExtension)));
    }
    // protected override System.UInt32 get_modelType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Normal.Realtime.Serialization.MetaModel
    // Base method: System.UInt32 MetaModel::get_modelType()
    uint get_modelType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel_1::get_modelType");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), -1));
      return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
    }
    // protected override Normal.Realtime.Serialization.IMetaModelExtension get_modelExtension()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Normal.Realtime.Serialization.MetaModel
    // Base method: Normal.Realtime.Serialization.IMetaModelExtension MetaModel::get_modelExtension()
    ::Normal::Realtime::Serialization::IMetaModelExtension* get_modelExtension() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel_1::get_modelExtension");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::IMetaModelExtension*, false>(this, ___internal__method);
    }
  }; // Normal.Realtime.Serialization.MetaModel`1
  // Could not write size check! Type: Normal.Realtime.Serialization.MetaModel`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
