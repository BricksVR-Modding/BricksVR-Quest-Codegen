// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DownloadBricksOnLoad
#include "GlobalNamespace/DownloadBricksOnLoad.hpp"
// Including type: NormcoreRPC
#include "GlobalNamespace/NormcoreRPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse*, "", "DownloadBricksOnLoad/FetchAllBricksResponse");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: DownloadBricksOnLoad/FetchAllBricksResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class DownloadBricksOnLoad::FetchAllBricksResponse : public ::Il2CppObject {
    public:
    public:
    // public NormcoreRPC/Brick[] bricks
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GlobalNamespace::NormcoreRPC::Brick*> bricks;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::NormcoreRPC::Brick*>) == 0x8);
    // public System.String ownerShortIdPrefix
    // Size: 0x8
    // Offset: 0x18
    ::StringW ownerShortIdPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public NormcoreRPC/Brick[] bricks
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::NormcoreRPC::Brick*>& dyn_bricks();
    // Get instance field reference: public System.String ownerShortIdPrefix
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ownerShortIdPrefix();
    // public System.Void .ctor()
    // Offset: 0x1DD400
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DownloadBricksOnLoad::FetchAllBricksResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DownloadBricksOnLoad::FetchAllBricksResponse*, creationType>()));
    }
  }; // DownloadBricksOnLoad/FetchAllBricksResponse
  #pragma pack(pop)
  static check_size<sizeof(DownloadBricksOnLoad::FetchAllBricksResponse), 24 + sizeof(::StringW)> __GlobalNamespace_DownloadBricksOnLoad_FetchAllBricksResponseSizeCheck;
  static_assert(sizeof(DownloadBricksOnLoad::FetchAllBricksResponse) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
