// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Windows.Speech
namespace UnityEngine::Windows::Speech {
  // Forward declaring type: SpeechError
  struct SpeechError;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Windows::Speech::SpeechError, "UnityEngine.Windows.Speech", "SpeechError");
// Type namespace: UnityEngine.Windows.Speech
namespace UnityEngine::Windows::Speech {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Windows.Speech.SpeechError
  // [TokenAttribute] Offset: FFFFFFFF
  struct SpeechError/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SpeechError
    constexpr SpeechError(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError NoError
    static constexpr const int NoError = 0;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError NoError
    static ::UnityEngine::Windows::Speech::SpeechError _get_NoError();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError NoError
    static void _set_NoError(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError TopicLanguageNotSupported
    static constexpr const int TopicLanguageNotSupported = 1;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError TopicLanguageNotSupported
    static ::UnityEngine::Windows::Speech::SpeechError _get_TopicLanguageNotSupported();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError TopicLanguageNotSupported
    static void _set_TopicLanguageNotSupported(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError GrammarLanguageMismatch
    static constexpr const int GrammarLanguageMismatch = 2;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError GrammarLanguageMismatch
    static ::UnityEngine::Windows::Speech::SpeechError _get_GrammarLanguageMismatch();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError GrammarLanguageMismatch
    static void _set_GrammarLanguageMismatch(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError GrammarCompilationFailure
    static constexpr const int GrammarCompilationFailure = 3;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError GrammarCompilationFailure
    static ::UnityEngine::Windows::Speech::SpeechError _get_GrammarCompilationFailure();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError GrammarCompilationFailure
    static void _set_GrammarCompilationFailure(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError AudioQualityFailure
    static constexpr const int AudioQualityFailure = 4;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError AudioQualityFailure
    static ::UnityEngine::Windows::Speech::SpeechError _get_AudioQualityFailure();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError AudioQualityFailure
    static void _set_AudioQualityFailure(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError PauseLimitExceeded
    static constexpr const int PauseLimitExceeded = 5;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError PauseLimitExceeded
    static ::UnityEngine::Windows::Speech::SpeechError _get_PauseLimitExceeded();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError PauseLimitExceeded
    static void _set_PauseLimitExceeded(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError TimeoutExceeded
    static constexpr const int TimeoutExceeded = 6;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError TimeoutExceeded
    static ::UnityEngine::Windows::Speech::SpeechError _get_TimeoutExceeded();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError TimeoutExceeded
    static void _set_TimeoutExceeded(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError NetworkFailure
    static constexpr const int NetworkFailure = 7;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError NetworkFailure
    static ::UnityEngine::Windows::Speech::SpeechError _get_NetworkFailure();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError NetworkFailure
    static void _set_NetworkFailure(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError MicrophoneUnavailable
    static constexpr const int MicrophoneUnavailable = 8;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError MicrophoneUnavailable
    static ::UnityEngine::Windows::Speech::SpeechError _get_MicrophoneUnavailable();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError MicrophoneUnavailable
    static void _set_MicrophoneUnavailable(::UnityEngine::Windows::Speech::SpeechError value);
    // static field const value: static public UnityEngine.Windows.Speech.SpeechError UnknownError
    static constexpr const int UnknownError = 9;
    // Get static field: static public UnityEngine.Windows.Speech.SpeechError UnknownError
    static ::UnityEngine::Windows::Speech::SpeechError _get_UnknownError();
    // Set static field: static public UnityEngine.Windows.Speech.SpeechError UnknownError
    static void _set_UnknownError(::UnityEngine::Windows::Speech::SpeechError value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.Windows.Speech.SpeechError
  #pragma pack(pop)
  static check_size<sizeof(SpeechError), 0 + sizeof(int)> __UnityEngine_Windows_Speech_SpeechErrorSizeCheck;
  static_assert(sizeof(SpeechError) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
