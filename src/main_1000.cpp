// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.IPCountry_t
#include "Steamworks/Data/IPCountry_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::IPCountry_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::IPCountry_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "IPCountry_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::IPCountry_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::IPCountry_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "IPCountry_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.IPCountry_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::IPCountry_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::IPCountry_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.IPCountry_t..cctor
void Steamworks::Data::IPCountry_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::IPCountry_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "IPCountry_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LowBatteryPower_t
#include "Steamworks/Data/LowBatteryPower_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LowBatteryPower_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LowBatteryPower_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LowBatteryPower_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LowBatteryPower_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LowBatteryPower_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LowBatteryPower_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte MinutesBatteryLeft
uint8_t& Steamworks::Data::LowBatteryPower_t::dyn_MinutesBatteryLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LowBatteryPower_t::dyn_MinutesBatteryLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinutesBatteryLeft"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LowBatteryPower_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LowBatteryPower_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LowBatteryPower_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LowBatteryPower_t..cctor
void Steamworks::Data::LowBatteryPower_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LowBatteryPower_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LowBatteryPower_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.SteamAPICallCompleted_t
#include "Steamworks/Data/SteamAPICallCompleted_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::SteamAPICallCompleted_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "SteamAPICallCompleted_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::SteamAPICallCompleted_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "SteamAPICallCompleted_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 AsyncCall
uint64_t& Steamworks::Data::SteamAPICallCompleted_t::dyn_AsyncCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::dyn_AsyncCall");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AsyncCall"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Callback
int& Steamworks::Data::SteamAPICallCompleted_t::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::dyn_Callback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 ParamCount
uint& Steamworks::Data::SteamAPICallCompleted_t::dyn_ParamCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::dyn_ParamCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParamCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.SteamAPICallCompleted_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::SteamAPICallCompleted_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.SteamAPICallCompleted_t..cctor
void Steamworks::Data::SteamAPICallCompleted_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamAPICallCompleted_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "SteamAPICallCompleted_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.SteamShutdown_t
#include "Steamworks/Data/SteamShutdown_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::SteamShutdown_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamShutdown_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "SteamShutdown_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::SteamShutdown_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamShutdown_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "SteamShutdown_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.SteamShutdown_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::SteamShutdown_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamShutdown_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.SteamShutdown_t..cctor
void Steamworks::Data::SteamShutdown_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SteamShutdown_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "SteamShutdown_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.CheckFileSignature_t
#include "Steamworks/Data/CheckFileSignature_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::CheckFileSignature_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CheckFileSignature_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "CheckFileSignature_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::CheckFileSignature_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CheckFileSignature_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "CheckFileSignature_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.CheckFileSignature CheckFileSignature
::Steamworks::CheckFileSignature& Steamworks::Data::CheckFileSignature_t::dyn_CheckFileSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CheckFileSignature_t::dyn_CheckFileSignature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CheckFileSignature"))->offset;
  return *reinterpret_cast<::Steamworks::CheckFileSignature*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.CheckFileSignature_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::CheckFileSignature_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CheckFileSignature_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.CheckFileSignature_t..cctor
void Steamworks::Data::CheckFileSignature_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CheckFileSignature_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "CheckFileSignature_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.GamepadTextInputDismissed_t
#include "Steamworks/Data/GamepadTextInputDismissed_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::GamepadTextInputDismissed_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "GamepadTextInputDismissed_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::GamepadTextInputDismissed_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "GamepadTextInputDismissed_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Submitted
bool& Steamworks::Data::GamepadTextInputDismissed_t::dyn_Submitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::dyn_Submitted");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Submitted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 SubmittedText
uint& Steamworks::Data::GamepadTextInputDismissed_t::dyn_SubmittedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::dyn_SubmittedText");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubmittedText"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.GamepadTextInputDismissed_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::GamepadTextInputDismissed_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.GamepadTextInputDismissed_t..cctor
void Steamworks::Data::GamepadTextInputDismissed_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GamepadTextInputDismissed_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "GamepadTextInputDismissed_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.FavoritesListChanged_t
#include "Steamworks/Data/FavoritesListChanged_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::FavoritesListChanged_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "FavoritesListChanged_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::FavoritesListChanged_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "FavoritesListChanged_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 IP
uint& Steamworks::Data::FavoritesListChanged_t::dyn_IP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_IP");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IP"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 QueryPort
uint& Steamworks::Data::FavoritesListChanged_t::dyn_QueryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_QueryPort");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueryPort"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 ConnPort
uint& Steamworks::Data::FavoritesListChanged_t::dyn_ConnPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_ConnPort");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnPort"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 AppID
uint& Steamworks::Data::FavoritesListChanged_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Flags
uint& Steamworks::Data::FavoritesListChanged_t::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Add
bool& Steamworks::Data::FavoritesListChanged_t::dyn_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_Add");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Add"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 AccountId
uint& Steamworks::Data::FavoritesListChanged_t::dyn_AccountId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::dyn_AccountId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.FavoritesListChanged_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::FavoritesListChanged_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.FavoritesListChanged_t..cctor
void Steamworks::Data::FavoritesListChanged_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListChanged_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "FavoritesListChanged_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyInvite_t
#include "Steamworks/Data/LobbyInvite_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyInvite_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyInvite_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyInvite_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyInvite_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDUser
uint64_t& Steamworks::Data::LobbyInvite_t::dyn_SteamIDUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::dyn_SteamIDUser");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDUser"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyInvite_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::LobbyInvite_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyInvite_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyInvite_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyInvite_t..cctor
void Steamworks::Data::LobbyInvite_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyInvite_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyInvite_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyEnter_t
#include "Steamworks/Data/LobbyEnter_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyEnter_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyEnter_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyEnter_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyEnter_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyEnter_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 GfChatPermissions
uint& Steamworks::Data::LobbyEnter_t::dyn_GfChatPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::dyn_GfChatPermissions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GfChatPermissions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Locked
bool& Steamworks::Data::LobbyEnter_t::dyn_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::dyn_Locked");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 EChatRoomEnterResponse
uint& Steamworks::Data::LobbyEnter_t::dyn_EChatRoomEnterResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::dyn_EChatRoomEnterResponse");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EChatRoomEnterResponse"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyEnter_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyEnter_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyEnter_t..cctor
void Steamworks::Data::LobbyEnter_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyEnter_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyEnter_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyDataUpdate_t
#include "Steamworks/Data/LobbyDataUpdate_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyDataUpdate_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyDataUpdate_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyDataUpdate_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyDataUpdate_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyDataUpdate_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDMember
uint64_t& Steamworks::Data::LobbyDataUpdate_t::dyn_SteamIDMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::dyn_SteamIDMember");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDMember"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte Success
uint8_t& Steamworks::Data::LobbyDataUpdate_t::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::dyn_Success");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyDataUpdate_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyDataUpdate_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyDataUpdate_t..cctor
void Steamworks::Data::LobbyDataUpdate_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyDataUpdate_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyDataUpdate_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyChatUpdate_t
#include "Steamworks/Data/LobbyChatUpdate_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyChatUpdate_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyChatUpdate_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyChatUpdate_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyChatUpdate_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDUserChanged
uint64_t& Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDUserChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDUserChanged");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDUserChanged"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDMakingChange
uint64_t& Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDMakingChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::dyn_SteamIDMakingChange");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDMakingChange"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 GfChatMemberStateChange
uint& Steamworks::Data::LobbyChatUpdate_t::dyn_GfChatMemberStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::dyn_GfChatMemberStateChange");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GfChatMemberStateChange"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyChatUpdate_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyChatUpdate_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyChatUpdate_t..cctor
void Steamworks::Data::LobbyChatUpdate_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatUpdate_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyChatUpdate_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyChatMsg_t
#include "Steamworks/Data/LobbyChatMsg_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyChatMsg_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyChatMsg_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyChatMsg_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyChatMsg_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyChatMsg_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDUser
uint64_t& Steamworks::Data::LobbyChatMsg_t::dyn_SteamIDUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::dyn_SteamIDUser");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDUser"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte ChatEntryType
uint8_t& Steamworks::Data::LobbyChatMsg_t::dyn_ChatEntryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::dyn_ChatEntryType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChatEntryType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 ChatID
uint& Steamworks::Data::LobbyChatMsg_t::dyn_ChatID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::dyn_ChatID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChatID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyChatMsg_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyChatMsg_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyChatMsg_t..cctor
void Steamworks::Data::LobbyChatMsg_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyChatMsg_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyChatMsg_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyGameCreated_t
#include "Steamworks/Data/LobbyGameCreated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyGameCreated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyGameCreated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyGameCreated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyGameCreated_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyGameCreated_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDGameServer
uint64_t& Steamworks::Data::LobbyGameCreated_t::dyn_SteamIDGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::dyn_SteamIDGameServer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDGameServer"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 IP
uint& Steamworks::Data::LobbyGameCreated_t::dyn_IP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::dyn_IP");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IP"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt16 Port
uint16_t& Steamworks::Data::LobbyGameCreated_t::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::dyn_Port");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyGameCreated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyGameCreated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyGameCreated_t..cctor
void Steamworks::Data::LobbyGameCreated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyGameCreated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyGameCreated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyMatchList_t
#include "Steamworks/Data/LobbyMatchList_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyMatchList_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyMatchList_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyMatchList_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyMatchList_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyMatchList_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyMatchList_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 LobbiesMatching
uint& Steamworks::Data::LobbyMatchList_t::dyn_LobbiesMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyMatchList_t::dyn_LobbiesMatching");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbiesMatching"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyMatchList_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyMatchList_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyMatchList_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyMatchList_t..cctor
void Steamworks::Data::LobbyMatchList_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyMatchList_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyMatchList_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyKicked_t
#include "Steamworks/Data/LobbyKicked_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyKicked_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyKicked_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyKicked_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyKicked_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyKicked_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDAdmin
uint64_t& Steamworks::Data::LobbyKicked_t::dyn_SteamIDAdmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::dyn_SteamIDAdmin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDAdmin"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte KickedDueToDisconnect
uint8_t& Steamworks::Data::LobbyKicked_t::dyn_KickedDueToDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::dyn_KickedDueToDisconnect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KickedDueToDisconnect"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyKicked_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyKicked_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyKicked_t..cctor
void Steamworks::Data::LobbyKicked_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyKicked_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyKicked_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LobbyCreated_t
#include "Steamworks/Data/LobbyCreated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LobbyCreated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LobbyCreated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LobbyCreated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LobbyCreated_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::LobbyCreated_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::LobbyCreated_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LobbyCreated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LobbyCreated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LobbyCreated_t..cctor
void Steamworks::Data::LobbyCreated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LobbyCreated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LobbyCreated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.PSNGameBootInviteResult_t
#include "Steamworks/Data/PSNGameBootInviteResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::PSNGameBootInviteResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "PSNGameBootInviteResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::PSNGameBootInviteResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "PSNGameBootInviteResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Boolean GameBootInviteExists
bool& Steamworks::Data::PSNGameBootInviteResult_t::dyn_GameBootInviteExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::dyn_GameBootInviteExists");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameBootInviteExists"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::PSNGameBootInviteResult_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.PSNGameBootInviteResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::PSNGameBootInviteResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.PSNGameBootInviteResult_t..cctor
void Steamworks::Data::PSNGameBootInviteResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PSNGameBootInviteResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "PSNGameBootInviteResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.FavoritesListAccountsUpdated_t
#include "Steamworks/Data/FavoritesListAccountsUpdated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::FavoritesListAccountsUpdated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListAccountsUpdated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "FavoritesListAccountsUpdated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::FavoritesListAccountsUpdated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListAccountsUpdated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "FavoritesListAccountsUpdated_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::FavoritesListAccountsUpdated_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListAccountsUpdated_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.FavoritesListAccountsUpdated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::FavoritesListAccountsUpdated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListAccountsUpdated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.FavoritesListAccountsUpdated_t..cctor
void Steamworks::Data::FavoritesListAccountsUpdated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FavoritesListAccountsUpdated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "FavoritesListAccountsUpdated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.SearchForGameProgressCallback_t
#include "Steamworks/Data/SearchForGameProgressCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::SearchForGameProgressCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "SearchForGameProgressCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::SearchForGameProgressCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "SearchForGameProgressCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LSearchID
uint64_t& Steamworks::Data::SearchForGameProgressCallback_t::dyn_LSearchID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_LSearchID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LSearchID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::SearchForGameProgressCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LobbyID
uint64_t& Steamworks::Data::SearchForGameProgressCallback_t::dyn_LobbyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_LobbyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbyID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDEndedSearch
uint64_t& Steamworks::Data::SearchForGameProgressCallback_t::dyn_SteamIDEndedSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_SteamIDEndedSearch");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDEndedSearch"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 SecondsRemainingEstimate
int& Steamworks::Data::SearchForGameProgressCallback_t::dyn_SecondsRemainingEstimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_SecondsRemainingEstimate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsRemainingEstimate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CPlayersSearching
int& Steamworks::Data::SearchForGameProgressCallback_t::dyn_CPlayersSearching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::dyn_CPlayersSearching");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CPlayersSearching"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.SearchForGameProgressCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::SearchForGameProgressCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.SearchForGameProgressCallback_t..cctor
void Steamworks::Data::SearchForGameProgressCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameProgressCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "SearchForGameProgressCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.SearchForGameResultCallback_t
#include "Steamworks/Data/SearchForGameResultCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::SearchForGameResultCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "SearchForGameResultCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::SearchForGameResultCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "SearchForGameResultCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LSearchID
uint64_t& Steamworks::Data::SearchForGameResultCallback_t::dyn_LSearchID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_LSearchID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LSearchID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::SearchForGameResultCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CountPlayersInGame
int& Steamworks::Data::SearchForGameResultCallback_t::dyn_CountPlayersInGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_CountPlayersInGame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CountPlayersInGame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CountAcceptedGame
int& Steamworks::Data::SearchForGameResultCallback_t::dyn_CountAcceptedGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_CountAcceptedGame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CountAcceptedGame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDHost
uint64_t& Steamworks::Data::SearchForGameResultCallback_t::dyn_SteamIDHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_SteamIDHost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDHost"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean FinalCallback
bool& Steamworks::Data::SearchForGameResultCallback_t::dyn_FinalCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::dyn_FinalCallback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FinalCallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.SearchForGameResultCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::SearchForGameResultCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.SearchForGameResultCallback_t..cctor
void Steamworks::Data::SearchForGameResultCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SearchForGameResultCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "SearchForGameResultCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RequestPlayersForGameProgressCallback_t
#include "Steamworks/Data/RequestPlayersForGameProgressCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RequestPlayersForGameProgressCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RequestPlayersForGameProgressCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RequestPlayersForGameProgressCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameProgressCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RequestPlayersForGameProgressCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LSearchID
uint64_t& Steamworks::Data::RequestPlayersForGameProgressCallback_t::dyn_LSearchID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::dyn_LSearchID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LSearchID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameProgressCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RequestPlayersForGameProgressCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameProgressCallback_t..cctor
void Steamworks::Data::RequestPlayersForGameProgressCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameProgressCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RequestPlayersForGameProgressCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RequestPlayersForGameResultCallback_t
#include "Steamworks/Data/RequestPlayersForGameResultCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RequestPlayersForGameResultCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RequestPlayersForGameResultCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RequestPlayersForGameResultCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameResultCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LSearchID
uint64_t& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_LSearchID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_LSearchID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LSearchID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDPlayerFound
uint64_t& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SteamIDPlayerFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SteamIDPlayerFound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDPlayerFound"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDLobby
uint64_t& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SteamIDLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SteamIDLobby");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDLobby"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t PlayerAcceptState
::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_PlayerAcceptState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_PlayerAcceptState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerAcceptState"))->offset;
  return *reinterpret_cast<::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PlayerIndex
int& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_PlayerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_PlayerIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalPlayersFound
int& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_TotalPlayersFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_TotalPlayersFound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalPlayersFound"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalPlayersAcceptedGame
int& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_TotalPlayersAcceptedGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_TotalPlayersAcceptedGame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalPlayersAcceptedGame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 SuggestedTeamIndex
int& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SuggestedTeamIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_SuggestedTeamIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuggestedTeamIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LUniqueGameID
uint64_t& Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_LUniqueGameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::dyn_LUniqueGameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LUniqueGameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameResultCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RequestPlayersForGameResultCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameResultCallback_t..cctor
void Steamworks::Data::RequestPlayersForGameResultCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RequestPlayersForGameResultCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t
#include "Steamworks/Data/RequestPlayersForGameResultCallback_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t Unknown
::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t>("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t Unknown
void Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_Unknown(::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t PlayerAccepted
::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_PlayerAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_PlayerAccepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t>("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "PlayerAccepted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t PlayerAccepted
void Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_PlayerAccepted(::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_PlayerAccepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "PlayerAccepted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t PlayerDeclined
::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_PlayerDeclined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_get_PlayerDeclined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t>("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "PlayerDeclined"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Data.RequestPlayersForGameResultCallback_t/Steamworks.Data.PlayerAcceptState_t PlayerDeclined
void Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_PlayerDeclined(::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::_set_PlayerDeclined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameResultCallback_t/PlayerAcceptState_t", "PlayerDeclined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameResultCallback_t::PlayerAcceptState_t::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RequestPlayersForGameFinalResultCallback_t
#include "Steamworks/Data/RequestPlayersForGameFinalResultCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RequestPlayersForGameFinalResultCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RequestPlayersForGameFinalResultCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LSearchID
uint64_t& Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_LSearchID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_LSearchID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LSearchID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 LUniqueGameID
uint64_t& Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_LUniqueGameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::dyn_LUniqueGameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LUniqueGameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameFinalResultCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RequestPlayersForGameFinalResultCallback_t..cctor
void Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RequestPlayersForGameFinalResultCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RequestPlayersForGameFinalResultCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.SubmitPlayerResultResultCallback_t
#include "Steamworks/Data/SubmitPlayerResultResultCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::SubmitPlayerResultResultCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "SubmitPlayerResultResultCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::SubmitPlayerResultResultCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "SubmitPlayerResultResultCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 UllUniqueGameID
uint64_t& Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_UllUniqueGameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_UllUniqueGameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UllUniqueGameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDPlayer
uint64_t& Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_SteamIDPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::dyn_SteamIDPlayer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDPlayer"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.SubmitPlayerResultResultCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::SubmitPlayerResultResultCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.SubmitPlayerResultResultCallback_t..cctor
void Steamworks::Data::SubmitPlayerResultResultCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::SubmitPlayerResultResultCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "SubmitPlayerResultResultCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.EndGameResultCallback_t
#include "Steamworks/Data/EndGameResultCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::EndGameResultCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "EndGameResultCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::EndGameResultCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "EndGameResultCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::EndGameResultCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 UllUniqueGameID
uint64_t& Steamworks::Data::EndGameResultCallback_t::dyn_UllUniqueGameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::dyn_UllUniqueGameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UllUniqueGameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.EndGameResultCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::EndGameResultCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.EndGameResultCallback_t..cctor
void Steamworks::Data::EndGameResultCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::EndGameResultCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "EndGameResultCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.JoinPartyCallback_t
#include "Steamworks/Data/JoinPartyCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::JoinPartyCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "JoinPartyCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::JoinPartyCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "JoinPartyCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::JoinPartyCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 BeaconID
uint64_t& Steamworks::Data::JoinPartyCallback_t::dyn_BeaconID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::dyn_BeaconID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BeaconID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDBeaconOwner
uint64_t& Steamworks::Data::JoinPartyCallback_t::dyn_SteamIDBeaconOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::dyn_SteamIDBeaconOwner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDBeaconOwner"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] ConnectString
::ArrayW<uint8_t>& Steamworks::Data::JoinPartyCallback_t::dyn_ConnectString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::dyn_ConnectString");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectString"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.JoinPartyCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::JoinPartyCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.JoinPartyCallback_t..cctor
void Steamworks::Data::JoinPartyCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::JoinPartyCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "JoinPartyCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.CreateBeaconCallback_t
#include "Steamworks/Data/CreateBeaconCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::CreateBeaconCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "CreateBeaconCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::CreateBeaconCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "CreateBeaconCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::CreateBeaconCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 BeaconID
uint64_t& Steamworks::Data::CreateBeaconCallback_t::dyn_BeaconID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::dyn_BeaconID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BeaconID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.CreateBeaconCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::CreateBeaconCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.CreateBeaconCallback_t..cctor
void Steamworks::Data::CreateBeaconCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::CreateBeaconCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "CreateBeaconCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.ReservationNotificationCallback_t
#include "Steamworks/Data/ReservationNotificationCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::ReservationNotificationCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "ReservationNotificationCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::ReservationNotificationCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "ReservationNotificationCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 BeaconID
uint64_t& Steamworks::Data::ReservationNotificationCallback_t::dyn_BeaconID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::dyn_BeaconID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BeaconID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDJoiner
uint64_t& Steamworks::Data::ReservationNotificationCallback_t::dyn_SteamIDJoiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::dyn_SteamIDJoiner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDJoiner"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.ReservationNotificationCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::ReservationNotificationCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.ReservationNotificationCallback_t..cctor
void Steamworks::Data::ReservationNotificationCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ReservationNotificationCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "ReservationNotificationCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.ChangeNumOpenSlotsCallback_t
#include "Steamworks/Data/ChangeNumOpenSlotsCallback_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::ChangeNumOpenSlotsCallback_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ChangeNumOpenSlotsCallback_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "ChangeNumOpenSlotsCallback_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::ChangeNumOpenSlotsCallback_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ChangeNumOpenSlotsCallback_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "ChangeNumOpenSlotsCallback_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::ChangeNumOpenSlotsCallback_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ChangeNumOpenSlotsCallback_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.ChangeNumOpenSlotsCallback_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::ChangeNumOpenSlotsCallback_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ChangeNumOpenSlotsCallback_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.ChangeNumOpenSlotsCallback_t..cctor
void Steamworks::Data::ChangeNumOpenSlotsCallback_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ChangeNumOpenSlotsCallback_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "ChangeNumOpenSlotsCallback_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.AvailableBeaconLocationsUpdated_t
#include "Steamworks/Data/AvailableBeaconLocationsUpdated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::AvailableBeaconLocationsUpdated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AvailableBeaconLocationsUpdated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "AvailableBeaconLocationsUpdated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::AvailableBeaconLocationsUpdated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AvailableBeaconLocationsUpdated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "AvailableBeaconLocationsUpdated_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.AvailableBeaconLocationsUpdated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::AvailableBeaconLocationsUpdated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AvailableBeaconLocationsUpdated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.AvailableBeaconLocationsUpdated_t..cctor
void Steamworks::Data::AvailableBeaconLocationsUpdated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AvailableBeaconLocationsUpdated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "AvailableBeaconLocationsUpdated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.ActiveBeaconsUpdated_t
#include "Steamworks/Data/ActiveBeaconsUpdated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::ActiveBeaconsUpdated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ActiveBeaconsUpdated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "ActiveBeaconsUpdated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::ActiveBeaconsUpdated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ActiveBeaconsUpdated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "ActiveBeaconsUpdated_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.ActiveBeaconsUpdated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::ActiveBeaconsUpdated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ActiveBeaconsUpdated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.ActiveBeaconsUpdated_t..cctor
void Steamworks::Data::ActiveBeaconsUpdated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ActiveBeaconsUpdated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "ActiveBeaconsUpdated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageAppSyncedClient_t
#include "Steamworks/Data/RemoteStorageAppSyncedClient_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageAppSyncedClient_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageAppSyncedClient_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageAppSyncedClient_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageAppSyncedClient_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NumDownloads
int& Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_NumDownloads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::dyn_NumDownloads");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumDownloads"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncedClient_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageAppSyncedClient_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncedClient_t..cctor
void Steamworks::Data::RemoteStorageAppSyncedClient_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedClient_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageAppSyncedClient_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageAppSyncedServer_t
#include "Steamworks/Data/RemoteStorageAppSyncedServer_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageAppSyncedServer_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageAppSyncedServer_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageAppSyncedServer_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageAppSyncedServer_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NumUploads
int& Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_NumUploads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::dyn_NumUploads");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumUploads"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncedServer_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageAppSyncedServer_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncedServer_t..cctor
void Steamworks::Data::RemoteStorageAppSyncedServer_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncedServer_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageAppSyncedServer_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageAppSyncProgress_t
#include "Steamworks/Data/RemoteStorageAppSyncProgress_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageAppSyncProgress_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageAppSyncProgress_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageAppSyncProgress_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageAppSyncProgress_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] CurrentFile
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_CurrentFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_CurrentFile");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentFile"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 BytesTransferredThisChunk
uint& Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_BytesTransferredThisChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_BytesTransferredThisChunk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesTransferredThisChunk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double DAppPercentComplete
double& Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_DAppPercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_DAppPercentComplete");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DAppPercentComplete"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Uploading
bool& Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_Uploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::dyn_Uploading");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Uploading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncProgress_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageAppSyncProgress_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncProgress_t..cctor
void Steamworks::Data::RemoteStorageAppSyncProgress_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncProgress_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageAppSyncProgress_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageAppSyncStatusCheck_t
#include "Steamworks/Data/RemoteStorageAppSyncStatusCheck_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageAppSyncStatusCheck_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageAppSyncStatusCheck_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncStatusCheck_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageAppSyncStatusCheck_t..cctor
void Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageAppSyncStatusCheck_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageAppSyncStatusCheck_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageFileShareResult_t
#include "Steamworks/Data/RemoteStorageFileShareResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageFileShareResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageFileShareResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageFileShareResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageFileShareResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageFileShareResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 File
uint64_t& Steamworks::Data::RemoteStorageFileShareResult_t::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::dyn_File");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Filename
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageFileShareResult_t::dyn_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::dyn_Filename");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filename"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileShareResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageFileShareResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileShareResult_t..cctor
void Steamworks::Data::RemoteStorageFileShareResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileShareResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageFileShareResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishFileResult_t
#include "Steamworks/Data/RemoteStoragePublishFileResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishFileResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishFileResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishFileResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishFileResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean UserNeedsToAcceptWorkshopLegalAgreement
bool& Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_UserNeedsToAcceptWorkshopLegalAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::dyn_UserNeedsToAcceptWorkshopLegalAgreement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserNeedsToAcceptWorkshopLegalAgreement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishFileResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishFileResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishFileResult_t..cctor
void Steamworks::Data::RemoteStoragePublishFileResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishFileResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageDeletePublishedFileResult_t
#include "Steamworks/Data/RemoteStorageDeletePublishedFileResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageDeletePublishedFileResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageDeletePublishedFileResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageDeletePublishedFileResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageDeletePublishedFileResult_t..cctor
void Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDeletePublishedFileResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageDeletePublishedFileResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageEnumerateUserPublishedFilesResult_t
#include "Steamworks/Data/RemoteStorageEnumerateUserPublishedFilesResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageEnumerateUserPublishedFilesResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageEnumerateUserPublishedFilesResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResultsReturned
int& Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_ResultsReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_ResultsReturned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResultsReturned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalResultCount
int& Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_TotalResultCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_TotalResultCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalResultCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId[] GPublishedFileId
::ArrayW<::Steamworks::Data::PublishedFileId>& Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_GPublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::dyn_GPublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GPublishedFileId"))->offset;
  return *reinterpret_cast<::ArrayW<::Steamworks::Data::PublishedFileId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserPublishedFilesResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserPublishedFilesResult_t..cctor
void Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserPublishedFilesResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageEnumerateUserPublishedFilesResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageSubscribePublishedFileResult_t
#include "Steamworks/Data/RemoteStorageSubscribePublishedFileResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageSubscribePublishedFileResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageSubscribePublishedFileResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageSubscribePublishedFileResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageSubscribePublishedFileResult_t..cctor
void Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSubscribePublishedFileResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageSubscribePublishedFileResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageEnumerateUserSubscribedFilesResult_t
#include "Steamworks/Data/RemoteStorageEnumerateUserSubscribedFilesResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageEnumerateUserSubscribedFilesResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageEnumerateUserSubscribedFilesResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResultsReturned
int& Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_ResultsReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_ResultsReturned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResultsReturned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalResultCount
int& Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_TotalResultCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_TotalResultCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalResultCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId[] GPublishedFileId
::ArrayW<::Steamworks::Data::PublishedFileId>& Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_GPublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_GPublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GPublishedFileId"))->offset;
  return *reinterpret_cast<::ArrayW<::Steamworks::Data::PublishedFileId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32[] GRTimeSubscribed
::ArrayW<uint>& Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_GRTimeSubscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::dyn_GRTimeSubscribed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GRTimeSubscribed"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserSubscribedFilesResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserSubscribedFilesResult_t..cctor
void Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSubscribedFilesResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageEnumerateUserSubscribedFilesResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageUnsubscribePublishedFileResult_t
#include "Steamworks/Data/RemoteStorageUnsubscribePublishedFileResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageUnsubscribePublishedFileResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageUnsubscribePublishedFileResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUnsubscribePublishedFileResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUnsubscribePublishedFileResult_t..cctor
void Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUnsubscribePublishedFileResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageUnsubscribePublishedFileResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageUpdatePublishedFileResult_t
#include "Steamworks/Data/RemoteStorageUpdatePublishedFileResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageUpdatePublishedFileResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageUpdatePublishedFileResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean UserNeedsToAcceptWorkshopLegalAgreement
bool& Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_UserNeedsToAcceptWorkshopLegalAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::dyn_UserNeedsToAcceptWorkshopLegalAgreement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserNeedsToAcceptWorkshopLegalAgreement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUpdatePublishedFileResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUpdatePublishedFileResult_t..cctor
void Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdatePublishedFileResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageUpdatePublishedFileResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageDownloadUGCResult_t
#include "Steamworks/Data/RemoteStorageDownloadUGCResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageDownloadUGCResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageDownloadUGCResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageDownloadUGCResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageDownloadUGCResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 File
uint64_t& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_File");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 SizeInBytes
int& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_SizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_SizeInBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeInBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] PchFileName
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_PchFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_PchFileName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PchFileName"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDOwner
uint64_t& Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_SteamIDOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::dyn_SteamIDOwner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDOwner"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageDownloadUGCResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageDownloadUGCResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageDownloadUGCResult_t..cctor
void Steamworks::Data::RemoteStorageDownloadUGCResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageDownloadUGCResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageDownloadUGCResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageGetPublishedFileDetailsResult_t
#include "Steamworks/Data/RemoteStorageGetPublishedFileDetailsResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageGetPublishedFileDetailsResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageGetPublishedFileDetailsResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId CreatorAppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_CreatorAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_CreatorAppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreatorAppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId ConsumerAppID
::Steamworks::AppId& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_ConsumerAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_ConsumerAppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConsumerAppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Title
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Title");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Title"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Description
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Description");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 File
uint64_t& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_File");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 PreviewFile
uint64_t& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PreviewFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PreviewFile");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviewFile"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDOwner
uint64_t& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_SteamIDOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_SteamIDOwner");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDOwner"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 TimeCreated
uint& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TimeCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TimeCreated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeCreated"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 TimeUpdated
uint& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TimeUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TimeUpdated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeUpdated"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.RemoteStoragePublishedFileVisibility Visibility
::Steamworks::RemoteStoragePublishedFileVisibility& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Visibility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visibility"))->offset;
  return *reinterpret_cast<::Steamworks::RemoteStoragePublishedFileVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Banned
bool& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Banned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Banned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Banned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Tags
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_Tags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean TagsTruncated
bool& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TagsTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_TagsTruncated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagsTruncated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] PchFileName
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PchFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PchFileName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PchFileName"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 FileSize
int& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_FileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_FileSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PreviewFileSize
int& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PreviewFileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_PreviewFileSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviewFileSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] URL
::ArrayW<uint8_t>& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_URL");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "URL"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.WorkshopFileType FileType
::Steamworks::WorkshopFileType& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_FileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_FileType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileType"))->offset;
  return *reinterpret_cast<::Steamworks::WorkshopFileType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean AcceptedForUse
bool& Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_AcceptedForUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::dyn_AcceptedForUse");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AcceptedForUse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageGetPublishedFileDetailsResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageGetPublishedFileDetailsResult_t..cctor
void Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedFileDetailsResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageGetPublishedFileDetailsResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageEnumerateWorkshopFilesResult_t
#include "Steamworks/Data/RemoteStorageEnumerateWorkshopFilesResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageEnumerateWorkshopFilesResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageEnumerateWorkshopFilesResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResultsReturned
int& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_ResultsReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_ResultsReturned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResultsReturned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalResultCount
int& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_TotalResultCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_TotalResultCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalResultCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId[] GPublishedFileId
::ArrayW<::Steamworks::Data::PublishedFileId>& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_GPublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_GPublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GPublishedFileId"))->offset;
  return *reinterpret_cast<::ArrayW<::Steamworks::Data::PublishedFileId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single[] GScore
::ArrayW<float>& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_GScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_GScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GScore"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppId
::Steamworks::AppId& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_AppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_AppId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppId"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 StartIndex
uint& Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_StartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::dyn_StartIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateWorkshopFilesResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateWorkshopFilesResult_t..cctor
void Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateWorkshopFilesResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageEnumerateWorkshopFilesResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageGetPublishedItemVoteDetailsResult_t
#include "Steamworks/Data/RemoteStorageGetPublishedItemVoteDetailsResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageGetPublishedItemVoteDetailsResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageGetPublishedItemVoteDetailsResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 VotesFor
int& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_VotesFor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_VotesFor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VotesFor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 VotesAgainst
int& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_VotesAgainst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_VotesAgainst");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VotesAgainst"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Reports
int& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_Reports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_Reports");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reports"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single FScore
float& Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_FScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::dyn_FScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageGetPublishedItemVoteDetailsResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageGetPublishedItemVoteDetailsResult_t..cctor
void Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageGetPublishedItemVoteDetailsResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageGetPublishedItemVoteDetailsResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishedFileSubscribed_t
#include "Steamworks/Data/RemoteStoragePublishedFileSubscribed_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishedFileSubscribed_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishedFileSubscribed_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileSubscribed_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileSubscribed_t..cctor
void Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileSubscribed_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishedFileSubscribed_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishedFileUnsubscribed_t
#include "Steamworks/Data/RemoteStoragePublishedFileUnsubscribed_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishedFileUnsubscribed_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishedFileUnsubscribed_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileUnsubscribed_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileUnsubscribed_t..cctor
void Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUnsubscribed_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishedFileUnsubscribed_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishedFileDeleted_t
#include "Steamworks/Data/RemoteStoragePublishedFileDeleted_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishedFileDeleted_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishedFileDeleted_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishedFileDeleted_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishedFileDeleted_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStoragePublishedFileDeleted_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStoragePublishedFileDeleted_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileDeleted_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishedFileDeleted_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileDeleted_t..cctor
void Steamworks::Data::RemoteStoragePublishedFileDeleted_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileDeleted_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishedFileDeleted_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageUpdateUserPublishedItemVoteResult_t
#include "Steamworks/Data/RemoteStorageUpdateUserPublishedItemVoteResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageUpdateUserPublishedItemVoteResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageUpdateUserPublishedItemVoteResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUpdateUserPublishedItemVoteResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUpdateUserPublishedItemVoteResult_t..cctor
void Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUpdateUserPublishedItemVoteResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageUpdateUserPublishedItemVoteResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageUserVoteDetails_t
#include "Steamworks/Data/RemoteStorageUserVoteDetails_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageUserVoteDetails_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageUserVoteDetails_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageUserVoteDetails_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageUserVoteDetails_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.WorkshopVote Vote
::Steamworks::WorkshopVote& Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_Vote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::dyn_Vote");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vote"))->offset;
  return *reinterpret_cast<::Steamworks::WorkshopVote*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUserVoteDetails_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageUserVoteDetails_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageUserVoteDetails_t..cctor
void Steamworks::Data::RemoteStorageUserVoteDetails_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageUserVoteDetails_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageUserVoteDetails_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t
#include "Steamworks/Data/RemoteStorageEnumerateUserSharedWorkshopFilesResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageEnumerateUserSharedWorkshopFilesResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageEnumerateUserSharedWorkshopFilesResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResultsReturned
int& Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_ResultsReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_ResultsReturned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResultsReturned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalResultCount
int& Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_TotalResultCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_TotalResultCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalResultCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId[] GPublishedFileId
::ArrayW<::Steamworks::Data::PublishedFileId>& Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_GPublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::dyn_GPublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GPublishedFileId"))->offset;
  return *reinterpret_cast<::ArrayW<::Steamworks::Data::PublishedFileId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t..cctor
void Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageEnumerateUserSharedWorkshopFilesResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageSetUserPublishedFileActionResult_t
#include "Steamworks/Data/RemoteStorageSetUserPublishedFileActionResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageSetUserPublishedFileActionResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageSetUserPublishedFileActionResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.WorkshopFileAction Action
::Steamworks::WorkshopFileAction& Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::dyn_Action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Steamworks::WorkshopFileAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageSetUserPublishedFileActionResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageSetUserPublishedFileActionResult_t..cctor
void Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageSetUserPublishedFileActionResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageSetUserPublishedFileActionResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageEnumeratePublishedFilesByUserActionResult_t
#include "Steamworks/Data/RemoteStorageEnumeratePublishedFilesByUserActionResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageEnumeratePublishedFilesByUserActionResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageEnumeratePublishedFilesByUserActionResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.WorkshopFileAction Action
::Steamworks::WorkshopFileAction& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_Action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Steamworks::WorkshopFileAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResultsReturned
int& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_ResultsReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_ResultsReturned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResultsReturned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalResultCount
int& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_TotalResultCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_TotalResultCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalResultCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId[] GPublishedFileId
::ArrayW<::Steamworks::Data::PublishedFileId>& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_GPublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_GPublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GPublishedFileId"))->offset;
  return *reinterpret_cast<::ArrayW<::Steamworks::Data::PublishedFileId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32[] GRTimeUpdated
::ArrayW<uint>& Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_GRTimeUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::dyn_GRTimeUpdated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GRTimeUpdated"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumeratePublishedFilesByUserActionResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageEnumeratePublishedFilesByUserActionResult_t..cctor
void Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageEnumeratePublishedFilesByUserActionResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageEnumeratePublishedFilesByUserActionResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishFileProgress_t
#include "Steamworks/Data/RemoteStoragePublishFileProgress_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishFileProgress_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishFileProgress_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishFileProgress_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishFileProgress_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Double DPercentFile
double& Steamworks::Data::RemoteStoragePublishFileProgress_t::dyn_DPercentFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::dyn_DPercentFile");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DPercentFile"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Preview
bool& Steamworks::Data::RemoteStoragePublishFileProgress_t::dyn_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::dyn_Preview");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Preview"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishFileProgress_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishFileProgress_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishFileProgress_t..cctor
void Steamworks::Data::RemoteStoragePublishFileProgress_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishFileProgress_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishFileProgress_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStoragePublishedFileUpdated_t
#include "Steamworks/Data/RemoteStoragePublishedFileUpdated_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStoragePublishedFileUpdated_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStoragePublishedFileUpdated_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStoragePublishedFileUpdated_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStoragePublishedFileUpdated_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.PublishedFileId PublishedFileId
::Steamworks::Data::PublishedFileId& Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_PublishedFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_PublishedFileId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublishedFileId"))->offset;
  return *reinterpret_cast<::Steamworks::Data::PublishedFileId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 Unused
uint64_t& Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_Unused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::dyn_Unused");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Unused"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileUpdated_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStoragePublishedFileUpdated_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStoragePublishedFileUpdated_t..cctor
void Steamworks::Data::RemoteStoragePublishedFileUpdated_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStoragePublishedFileUpdated_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStoragePublishedFileUpdated_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageFileWriteAsyncComplete_t
#include "Steamworks/Data/RemoteStorageFileWriteAsyncComplete_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageFileWriteAsyncComplete_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageFileWriteAsyncComplete_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileWriteAsyncComplete_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileWriteAsyncComplete_t..cctor
void Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileWriteAsyncComplete_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageFileWriteAsyncComplete_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RemoteStorageFileReadAsyncComplete_t
#include "Steamworks/Data/RemoteStorageFileReadAsyncComplete_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RemoteStorageFileReadAsyncComplete_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RemoteStorageFileReadAsyncComplete_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 FileReadAsync
uint64_t& Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_FileReadAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_FileReadAsync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileReadAsync"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Offset
uint& Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Read
uint& Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::dyn_Read");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Read"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileReadAsyncComplete_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RemoteStorageFileReadAsyncComplete_t..cctor
void Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RemoteStorageFileReadAsyncComplete_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RemoteStorageFileReadAsyncComplete_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.UserStatsReceived_t
#include "Steamworks/Data/UserStatsReceived_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::UserStatsReceived_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "UserStatsReceived_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::UserStatsReceived_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "UserStatsReceived_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::UserStatsReceived_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::UserStatsReceived_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDUser
uint64_t& Steamworks::Data::UserStatsReceived_t::dyn_SteamIDUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::dyn_SteamIDUser");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDUser"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.UserStatsReceived_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::UserStatsReceived_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserStatsReceived_t..cctor
void Steamworks::Data::UserStatsReceived_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsReceived_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "UserStatsReceived_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.UserStatsStored_t
#include "Steamworks/Data/UserStatsStored_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::UserStatsStored_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "UserStatsStored_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::UserStatsStored_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "UserStatsStored_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::UserStatsStored_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::UserStatsStored_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.UserStatsStored_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::UserStatsStored_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserStatsStored_t..cctor
void Steamworks::Data::UserStatsStored_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsStored_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "UserStatsStored_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.UserAchievementStored_t
#include "Steamworks/Data/UserAchievementStored_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::UserAchievementStored_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "UserAchievementStored_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::UserAchievementStored_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "UserAchievementStored_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::UserAchievementStored_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean GroupAchievement
bool& Steamworks::Data::UserAchievementStored_t::dyn_GroupAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::dyn_GroupAchievement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupAchievement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] AchievementName
::ArrayW<uint8_t>& Steamworks::Data::UserAchievementStored_t::dyn_AchievementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::dyn_AchievementName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AchievementName"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 CurProgress
uint& Steamworks::Data::UserAchievementStored_t::dyn_CurProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::dyn_CurProgress");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurProgress"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 MaxProgress
uint& Steamworks::Data::UserAchievementStored_t::dyn_MaxProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::dyn_MaxProgress");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxProgress"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.UserAchievementStored_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::UserAchievementStored_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserAchievementStored_t..cctor
void Steamworks::Data::UserAchievementStored_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "UserAchievementStored_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserAchievementStored_t.AchievementNameUTF8
::StringW Steamworks::Data::UserAchievementStored_t::AchievementNameUTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementStored_t::AchievementNameUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AchievementNameUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LeaderboardFindResult_t
#include "Steamworks/Data/LeaderboardFindResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LeaderboardFindResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LeaderboardFindResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LeaderboardFindResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LeaderboardFindResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamLeaderboard
uint64_t& Steamworks::Data::LeaderboardFindResult_t::dyn_SteamLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::dyn_SteamLeaderboard");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamLeaderboard"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte LeaderboardFound
uint8_t& Steamworks::Data::LeaderboardFindResult_t::dyn_LeaderboardFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::dyn_LeaderboardFound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderboardFound"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LeaderboardFindResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LeaderboardFindResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LeaderboardFindResult_t..cctor
void Steamworks::Data::LeaderboardFindResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardFindResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LeaderboardFindResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LeaderboardScoresDownloaded_t
#include "Steamworks/Data/LeaderboardScoresDownloaded_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LeaderboardScoresDownloaded_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LeaderboardScoresDownloaded_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LeaderboardScoresDownloaded_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LeaderboardScoresDownloaded_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamLeaderboard
uint64_t& Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_SteamLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_SteamLeaderboard");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamLeaderboard"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamLeaderboardEntries
uint64_t& Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_SteamLeaderboardEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_SteamLeaderboardEntries");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamLeaderboardEntries"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CEntryCount
int& Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_CEntryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::dyn_CEntryCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CEntryCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LeaderboardScoresDownloaded_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LeaderboardScoresDownloaded_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LeaderboardScoresDownloaded_t..cctor
void Steamworks::Data::LeaderboardScoresDownloaded_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoresDownloaded_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LeaderboardScoresDownloaded_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LeaderboardScoreUploaded_t
#include "Steamworks/Data/LeaderboardScoreUploaded_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LeaderboardScoreUploaded_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LeaderboardScoreUploaded_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LeaderboardScoreUploaded_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LeaderboardScoreUploaded_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte Success
uint8_t& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_Success");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamLeaderboard
uint64_t& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_SteamLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_SteamLeaderboard");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamLeaderboard"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Score
int& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_Score");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte ScoreChanged
uint8_t& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_ScoreChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_ScoreChanged");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScoreChanged"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 GlobalRankNew
int& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_GlobalRankNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_GlobalRankNew");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalRankNew"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 GlobalRankPrevious
int& Steamworks::Data::LeaderboardScoreUploaded_t::dyn_GlobalRankPrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::dyn_GlobalRankPrevious");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalRankPrevious"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LeaderboardScoreUploaded_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LeaderboardScoreUploaded_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LeaderboardScoreUploaded_t..cctor
void Steamworks::Data::LeaderboardScoreUploaded_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardScoreUploaded_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LeaderboardScoreUploaded_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.NumberOfCurrentPlayers_t
#include "Steamworks/Data/NumberOfCurrentPlayers_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::NumberOfCurrentPlayers_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "NumberOfCurrentPlayers_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::NumberOfCurrentPlayers_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "NumberOfCurrentPlayers_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte Success
uint8_t& Steamworks::Data::NumberOfCurrentPlayers_t::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::dyn_Success");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CPlayers
int& Steamworks::Data::NumberOfCurrentPlayers_t::dyn_CPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::dyn_CPlayers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CPlayers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.NumberOfCurrentPlayers_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::NumberOfCurrentPlayers_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.NumberOfCurrentPlayers_t..cctor
void Steamworks::Data::NumberOfCurrentPlayers_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NumberOfCurrentPlayers_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "NumberOfCurrentPlayers_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.UserStatsUnloaded_t
#include "Steamworks/Data/UserStatsUnloaded_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::UserStatsUnloaded_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsUnloaded_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "UserStatsUnloaded_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::UserStatsUnloaded_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsUnloaded_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "UserStatsUnloaded_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDUser
uint64_t& Steamworks::Data::UserStatsUnloaded_t::dyn_SteamIDUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsUnloaded_t::dyn_SteamIDUser");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDUser"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.UserStatsUnloaded_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::UserStatsUnloaded_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsUnloaded_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserStatsUnloaded_t..cctor
void Steamworks::Data::UserStatsUnloaded_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserStatsUnloaded_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "UserStatsUnloaded_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.UserAchievementIconFetched_t
#include "Steamworks/Data/UserAchievementIconFetched_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::UserAchievementIconFetched_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "UserAchievementIconFetched_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::UserAchievementIconFetched_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "UserAchievementIconFetched_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Data.GameId GameID
::Steamworks::Data::GameId& Steamworks::Data::UserAchievementIconFetched_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<::Steamworks::Data::GameId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] AchievementName
::ArrayW<uint8_t>& Steamworks::Data::UserAchievementIconFetched_t::dyn_AchievementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::dyn_AchievementName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AchievementName"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Achieved
bool& Steamworks::Data::UserAchievementIconFetched_t::dyn_Achieved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::dyn_Achieved");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Achieved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 IconHandle
int& Steamworks::Data::UserAchievementIconFetched_t::dyn_IconHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::dyn_IconHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IconHandle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.UserAchievementIconFetched_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::UserAchievementIconFetched_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserAchievementIconFetched_t..cctor
void Steamworks::Data::UserAchievementIconFetched_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "UserAchievementIconFetched_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Data.UserAchievementIconFetched_t.AchievementNameUTF8
::StringW Steamworks::Data::UserAchievementIconFetched_t::AchievementNameUTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::UserAchievementIconFetched_t::AchievementNameUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AchievementNameUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.GlobalAchievementPercentagesReady_t
#include "Steamworks/Data/GlobalAchievementPercentagesReady_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::GlobalAchievementPercentagesReady_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "GlobalAchievementPercentagesReady_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::GlobalAchievementPercentagesReady_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "GlobalAchievementPercentagesReady_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::GlobalAchievementPercentagesReady_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::GlobalAchievementPercentagesReady_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.GlobalAchievementPercentagesReady_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::GlobalAchievementPercentagesReady_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.GlobalAchievementPercentagesReady_t..cctor
void Steamworks::Data::GlobalAchievementPercentagesReady_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalAchievementPercentagesReady_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "GlobalAchievementPercentagesReady_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.LeaderboardUGCSet_t
#include "Steamworks/Data/LeaderboardUGCSet_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::LeaderboardUGCSet_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "LeaderboardUGCSet_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::LeaderboardUGCSet_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "LeaderboardUGCSet_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::LeaderboardUGCSet_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamLeaderboard
uint64_t& Steamworks::Data::LeaderboardUGCSet_t::dyn_SteamLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::dyn_SteamLeaderboard");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamLeaderboard"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.LeaderboardUGCSet_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::LeaderboardUGCSet_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.LeaderboardUGCSet_t..cctor
void Steamworks::Data::LeaderboardUGCSet_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::LeaderboardUGCSet_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "LeaderboardUGCSet_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.GlobalStatsReceived_t
#include "Steamworks/Data/GlobalStatsReceived_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::GlobalStatsReceived_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "GlobalStatsReceived_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::GlobalStatsReceived_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "GlobalStatsReceived_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 GameID
uint64_t& Steamworks::Data::GlobalStatsReceived_t::dyn_GameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::dyn_GameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::GlobalStatsReceived_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.GlobalStatsReceived_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::GlobalStatsReceived_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.GlobalStatsReceived_t..cctor
void Steamworks::Data::GlobalStatsReceived_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::GlobalStatsReceived_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "GlobalStatsReceived_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.DlcInstalled_t
#include "Steamworks/Data/DlcInstalled_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::DlcInstalled_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::DlcInstalled_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "DlcInstalled_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::DlcInstalled_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::DlcInstalled_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "DlcInstalled_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.AppId AppID
::Steamworks::AppId& Steamworks::Data::DlcInstalled_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::DlcInstalled_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<::Steamworks::AppId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.DlcInstalled_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::DlcInstalled_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::DlcInstalled_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.DlcInstalled_t..cctor
void Steamworks::Data::DlcInstalled_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::DlcInstalled_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "DlcInstalled_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.RegisterActivationCodeResponse_t
#include "Steamworks/Data/RegisterActivationCodeResponse_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::RegisterActivationCodeResponse_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "RegisterActivationCodeResponse_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::RegisterActivationCodeResponse_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "RegisterActivationCodeResponse_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.RegisterActivationCodeResult Result
::Steamworks::RegisterActivationCodeResult& Steamworks::Data::RegisterActivationCodeResponse_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::RegisterActivationCodeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 PackageRegistered
uint& Steamworks::Data::RegisterActivationCodeResponse_t::dyn_PackageRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::dyn_PackageRegistered");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PackageRegistered"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.RegisterActivationCodeResponse_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::RegisterActivationCodeResponse_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.RegisterActivationCodeResponse_t..cctor
void Steamworks::Data::RegisterActivationCodeResponse_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::RegisterActivationCodeResponse_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "RegisterActivationCodeResponse_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.NewUrlLaunchParameters_t
#include "Steamworks/Data/NewUrlLaunchParameters_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::NewUrlLaunchParameters_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NewUrlLaunchParameters_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "NewUrlLaunchParameters_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::NewUrlLaunchParameters_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NewUrlLaunchParameters_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "NewUrlLaunchParameters_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.NewUrlLaunchParameters_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::NewUrlLaunchParameters_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NewUrlLaunchParameters_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.NewUrlLaunchParameters_t..cctor
void Steamworks::Data::NewUrlLaunchParameters_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::NewUrlLaunchParameters_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "NewUrlLaunchParameters_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.AppProofOfPurchaseKeyResponse_t
#include "Steamworks/Data/AppProofOfPurchaseKeyResponse_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::AppProofOfPurchaseKeyResponse_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "AppProofOfPurchaseKeyResponse_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::AppProofOfPurchaseKeyResponse_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "AppProofOfPurchaseKeyResponse_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 AppID
uint& Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_AppID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 CchKeyLength
uint& Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_CchKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_CchKeyLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CchKeyLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Key
::ArrayW<uint8_t>& Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::dyn_Key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.AppProofOfPurchaseKeyResponse_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::AppProofOfPurchaseKeyResponse_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.AppProofOfPurchaseKeyResponse_t..cctor
void Steamworks::Data::AppProofOfPurchaseKeyResponse_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::AppProofOfPurchaseKeyResponse_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "AppProofOfPurchaseKeyResponse_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.FileDetailsResult_t
#include "Steamworks/Data/FileDetailsResult_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::FileDetailsResult_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "FileDetailsResult_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::FileDetailsResult_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "FileDetailsResult_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::FileDetailsResult_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 FileSize
uint64_t& Steamworks::Data::FileDetailsResult_t::dyn_FileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::dyn_FileSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileSize"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] FileSHA
::ArrayW<uint8_t>& Steamworks::Data::FileDetailsResult_t::dyn_FileSHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::dyn_FileSHA");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileSHA"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Flags
uint& Steamworks::Data::FileDetailsResult_t::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::dyn_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.FileDetailsResult_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::FileDetailsResult_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.FileDetailsResult_t..cctor
void Steamworks::Data::FileDetailsResult_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::FileDetailsResult_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "FileDetailsResult_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.P2PSessionRequest_t
#include "Steamworks/Data/P2PSessionRequest_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::P2PSessionRequest_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionRequest_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "P2PSessionRequest_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::P2PSessionRequest_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionRequest_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "P2PSessionRequest_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDRemote
uint64_t& Steamworks::Data::P2PSessionRequest_t::dyn_SteamIDRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionRequest_t::dyn_SteamIDRemote");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDRemote"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.P2PSessionRequest_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::P2PSessionRequest_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionRequest_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.P2PSessionRequest_t..cctor
void Steamworks::Data::P2PSessionRequest_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionRequest_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "P2PSessionRequest_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.P2PSessionConnectFail_t
#include "Steamworks/Data/P2PSessionConnectFail_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::P2PSessionConnectFail_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "P2PSessionConnectFail_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::P2PSessionConnectFail_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "P2PSessionConnectFail_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 SteamIDRemote
uint64_t& Steamworks::Data::P2PSessionConnectFail_t::dyn_SteamIDRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::dyn_SteamIDRemote");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SteamIDRemote"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte P2PSessionError
uint8_t& Steamworks::Data::P2PSessionConnectFail_t::dyn_P2PSessionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::dyn_P2PSessionError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "P2PSessionError"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.P2PSessionConnectFail_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::P2PSessionConnectFail_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.P2PSessionConnectFail_t..cctor
void Steamworks::Data::P2PSessionConnectFail_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::P2PSessionConnectFail_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "P2PSessionConnectFail_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.ScreenshotReady_t
#include "Steamworks/Data/ScreenshotReady_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::ScreenshotReady_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "ScreenshotReady_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::ScreenshotReady_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "ScreenshotReady_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Local
uint& Steamworks::Data::ScreenshotReady_t::dyn_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::dyn_Local");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Local"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.Result Result
::Steamworks::Result& Steamworks::Data::ScreenshotReady_t::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::dyn_Result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Steamworks::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.ScreenshotReady_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::ScreenshotReady_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.ScreenshotReady_t..cctor
void Steamworks::Data::ScreenshotReady_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotReady_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "ScreenshotReady_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.ScreenshotRequested_t
#include "Steamworks/Data/ScreenshotRequested_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::ScreenshotRequested_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotRequested_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "ScreenshotRequested_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::ScreenshotRequested_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotRequested_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "ScreenshotRequested_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.ScreenshotRequested_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::ScreenshotRequested_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotRequested_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.ScreenshotRequested_t..cctor
void Steamworks::Data::ScreenshotRequested_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::ScreenshotRequested_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "ScreenshotRequested_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.PlaybackStatusHasChanged_t
#include "Steamworks/Data/PlaybackStatusHasChanged_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::PlaybackStatusHasChanged_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PlaybackStatusHasChanged_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "PlaybackStatusHasChanged_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::PlaybackStatusHasChanged_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PlaybackStatusHasChanged_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "PlaybackStatusHasChanged_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.PlaybackStatusHasChanged_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::PlaybackStatusHasChanged_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PlaybackStatusHasChanged_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.PlaybackStatusHasChanged_t..cctor
void Steamworks::Data::PlaybackStatusHasChanged_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::PlaybackStatusHasChanged_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "PlaybackStatusHasChanged_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.VolumeHasChanged_t
#include "Steamworks/Data/VolumeHasChanged_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::VolumeHasChanged_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::VolumeHasChanged_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "VolumeHasChanged_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::VolumeHasChanged_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::VolumeHasChanged_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "VolumeHasChanged_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Single NewVolume
float& Steamworks::Data::VolumeHasChanged_t::dyn_NewVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::VolumeHasChanged_t::dyn_NewVolume");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.VolumeHasChanged_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::VolumeHasChanged_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::VolumeHasChanged_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.VolumeHasChanged_t..cctor
void Steamworks::Data::VolumeHasChanged_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::VolumeHasChanged_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "VolumeHasChanged_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerRemoteWillActivate_t
#include "Steamworks/Data/MusicPlayerRemoteWillActivate_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerRemoteWillActivate_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillActivate_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerRemoteWillActivate_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerRemoteWillActivate_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillActivate_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerRemoteWillActivate_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteWillActivate_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerRemoteWillActivate_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillActivate_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteWillActivate_t..cctor
void Steamworks::Data::MusicPlayerRemoteWillActivate_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillActivate_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerRemoteWillActivate_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerRemoteWillDeactivate_t
#include "Steamworks/Data/MusicPlayerRemoteWillDeactivate_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerRemoteWillDeactivate_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerRemoteWillDeactivate_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteWillDeactivate_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteWillDeactivate_t..cctor
void Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteWillDeactivate_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerRemoteWillDeactivate_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerRemoteToFront_t
#include "Steamworks/Data/MusicPlayerRemoteToFront_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerRemoteToFront_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteToFront_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerRemoteToFront_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerRemoteToFront_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteToFront_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerRemoteToFront_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteToFront_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerRemoteToFront_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteToFront_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerRemoteToFront_t..cctor
void Steamworks::Data::MusicPlayerRemoteToFront_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerRemoteToFront_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerRemoteToFront_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWillQuit_t
#include "Steamworks/Data/MusicPlayerWillQuit_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWillQuit_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWillQuit_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWillQuit_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWillQuit_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWillQuit_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWillQuit_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerWillQuit_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWillQuit_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWillQuit_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWillQuit_t..cctor
void Steamworks::Data::MusicPlayerWillQuit_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWillQuit_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWillQuit_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsPlay_t
#include "Steamworks/Data/MusicPlayerWantsPlay_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsPlay_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlay_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsPlay_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsPlay_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlay_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsPlay_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlay_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsPlay_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlay_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlay_t..cctor
void Steamworks::Data::MusicPlayerWantsPlay_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlay_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsPlay_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsPause_t
#include "Steamworks/Data/MusicPlayerWantsPause_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsPause_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPause_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsPause_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsPause_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPause_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsPause_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPause_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsPause_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPause_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPause_t..cctor
void Steamworks::Data::MusicPlayerWantsPause_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPause_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsPause_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsPlayPrevious_t
#include "Steamworks/Data/MusicPlayerWantsPlayPrevious_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsPlayPrevious_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayPrevious_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsPlayPrevious_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsPlayPrevious_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayPrevious_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsPlayPrevious_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayPrevious_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsPlayPrevious_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayPrevious_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayPrevious_t..cctor
void Steamworks::Data::MusicPlayerWantsPlayPrevious_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayPrevious_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsPlayPrevious_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsPlayNext_t
#include "Steamworks/Data/MusicPlayerWantsPlayNext_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsPlayNext_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayNext_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsPlayNext_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsPlayNext_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayNext_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsPlayNext_t", "_datasize", value));
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayNext_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsPlayNext_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayNext_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayNext_t..cctor
void Steamworks::Data::MusicPlayerWantsPlayNext_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayNext_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsPlayNext_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsShuffled_t
#include "Steamworks/Data/MusicPlayerWantsShuffled_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsShuffled_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsShuffled_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsShuffled_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsShuffled_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsShuffled_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsShuffled_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Shuffled
bool& Steamworks::Data::MusicPlayerWantsShuffled_t::dyn_Shuffled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsShuffled_t::dyn_Shuffled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shuffled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsShuffled_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsShuffled_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsShuffled_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsShuffled_t..cctor
void Steamworks::Data::MusicPlayerWantsShuffled_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsShuffled_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsShuffled_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsLooped_t
#include "Steamworks/Data/MusicPlayerWantsLooped_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsLooped_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsLooped_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsLooped_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsLooped_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsLooped_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsLooped_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Looped
bool& Steamworks::Data::MusicPlayerWantsLooped_t::dyn_Looped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsLooped_t::dyn_Looped");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Looped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsLooped_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsLooped_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsLooped_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsLooped_t..cctor
void Steamworks::Data::MusicPlayerWantsLooped_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsLooped_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsLooped_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsVolume_t
#include "Steamworks/Data/MusicPlayerWantsVolume_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsVolume_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsVolume_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsVolume_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsVolume_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsVolume_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsVolume_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Single NewVolume
float& Steamworks::Data::MusicPlayerWantsVolume_t::dyn_NewVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsVolume_t::dyn_NewVolume");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsVolume_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsVolume_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsVolume_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsVolume_t..cctor
void Steamworks::Data::MusicPlayerWantsVolume_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsVolume_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsVolume_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerSelectsQueueEntry_t
#include "Steamworks/Data/MusicPlayerSelectsQueueEntry_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerSelectsQueueEntry_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsQueueEntry_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerSelectsQueueEntry_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerSelectsQueueEntry_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsQueueEntry_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerSelectsQueueEntry_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NID
int& Steamworks::Data::MusicPlayerSelectsQueueEntry_t::dyn_NID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsQueueEntry_t::dyn_NID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerSelectsQueueEntry_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerSelectsQueueEntry_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsQueueEntry_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerSelectsQueueEntry_t..cctor
void Steamworks::Data::MusicPlayerSelectsQueueEntry_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsQueueEntry_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerSelectsQueueEntry_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerSelectsPlaylistEntry_t
#include "Steamworks/Data/MusicPlayerSelectsPlaylistEntry_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerSelectsPlaylistEntry_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerSelectsPlaylistEntry_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NID
int& Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::dyn_NID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::dyn_NID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerSelectsPlaylistEntry_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerSelectsPlaylistEntry_t..cctor
void Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerSelectsPlaylistEntry_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerSelectsPlaylistEntry_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.MusicPlayerWantsPlayingRepeatStatus_t
#include "Steamworks/Data/MusicPlayerWantsPlayingRepeatStatus_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "MusicPlayerWantsPlayingRepeatStatus_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "MusicPlayerWantsPlayingRepeatStatus_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PlayingRepeatStatus
int& Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::dyn_PlayingRepeatStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::dyn_PlayingRepeatStatus");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayingRepeatStatus"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayingRepeatStatus_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.MusicPlayerWantsPlayingRepeatStatus_t..cctor
void Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::MusicPlayerWantsPlayingRepeatStatus_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "MusicPlayerWantsPlayingRepeatStatus_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.HTTPRequestCompleted_t
#include "Steamworks/Data/HTTPRequestCompleted_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::HTTPRequestCompleted_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "HTTPRequestCompleted_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::HTTPRequestCompleted_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "HTTPRequestCompleted_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Request
uint& Steamworks::Data::HTTPRequestCompleted_t::dyn_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::dyn_Request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Request"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 ContextValue
uint64_t& Steamworks::Data::HTTPRequestCompleted_t::dyn_ContextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::dyn_ContextValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContextValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean RequestSuccessful
bool& Steamworks::Data::HTTPRequestCompleted_t::dyn_RequestSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::dyn_RequestSuccessful");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestSuccessful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Steamworks.HTTPStatusCode StatusCode
::Steamworks::HTTPStatusCode& Steamworks::Data::HTTPRequestCompleted_t::dyn_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::dyn_StatusCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatusCode"))->offset;
  return *reinterpret_cast<::Steamworks::HTTPStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 BodySize
uint& Steamworks::Data::HTTPRequestCompleted_t::dyn_BodySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::dyn_BodySize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BodySize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.HTTPRequestCompleted_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::HTTPRequestCompleted_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.HTTPRequestCompleted_t..cctor
void Steamworks::Data::HTTPRequestCompleted_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestCompleted_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "HTTPRequestCompleted_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.HTTPRequestHeadersReceived_t
#include "Steamworks/Data/HTTPRequestHeadersReceived_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::HTTPRequestHeadersReceived_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "HTTPRequestHeadersReceived_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::HTTPRequestHeadersReceived_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "HTTPRequestHeadersReceived_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Request
uint& Steamworks::Data::HTTPRequestHeadersReceived_t::dyn_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::dyn_Request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Request"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 ContextValue
uint64_t& Steamworks::Data::HTTPRequestHeadersReceived_t::dyn_ContextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::dyn_ContextValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContextValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.HTTPRequestHeadersReceived_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::HTTPRequestHeadersReceived_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.HTTPRequestHeadersReceived_t..cctor
void Steamworks::Data::HTTPRequestHeadersReceived_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestHeadersReceived_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "HTTPRequestHeadersReceived_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Data.HTTPRequestDataReceived_t
#include "Steamworks/Data/HTTPRequestDataReceived_t.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 _datasize
int Steamworks::Data::HTTPRequestDataReceived_t::_get__datasize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::_get__datasize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Steamworks.Data", "HTTPRequestDataReceived_t", "_datasize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _datasize
void Steamworks::Data::HTTPRequestDataReceived_t::_set__datasize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::_set__datasize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks.Data", "HTTPRequestDataReceived_t", "_datasize", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Request
uint& Steamworks::Data::HTTPRequestDataReceived_t::dyn_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::dyn_Request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Request"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 ContextValue
uint64_t& Steamworks::Data::HTTPRequestDataReceived_t::dyn_ContextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::dyn_ContextValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContextValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 COffset
uint& Steamworks::Data::HTTPRequestDataReceived_t::dyn_COffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::dyn_COffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "COffset"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 CBytesReceived
uint& Steamworks::Data::HTTPRequestDataReceived_t::dyn_CBytesReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::dyn_CBytesReceived");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CBytesReceived"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Data.HTTPRequestDataReceived_t.get_CallbackType
::Steamworks::CallbackType Steamworks::Data::HTTPRequestDataReceived_t::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CallbackType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Data.HTTPRequestDataReceived_t..cctor
void Steamworks::Data::HTTPRequestDataReceived_t::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Data::HTTPRequestDataReceived_t::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks.Data", "HTTPRequestDataReceived_t", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
