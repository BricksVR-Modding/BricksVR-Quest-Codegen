// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Mesh_Extents
#include "TMPro/Mesh_Extents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 min
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& TMPro::Mesh_Extents::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::dyn_min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 max
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& TMPro::Mesh_Extents::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::dyn_max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.Mesh_Extents..ctor
// ABORTED elsewhere.  TMPro::Mesh_Extents::Mesh_Extents(::UnityEngine::Vector2 min, ::UnityEngine::Vector2 max)
// Autogenerated method: TMPro.Mesh_Extents.ToString
::StringW TMPro::Mesh_Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
void TMPro::TextMeshPro::_set_k_GenerateTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SetArraySizesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SetArraySizesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SetArraySizesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
void TMPro::TextMeshPro::_set_k_SetArraySizesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SetArraySizesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SetArraySizesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ParseMarkupTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ParseMarkupTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ParseMarkupTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
void TMPro::TextMeshPro::_set_k_ParseMarkupTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ParseMarkupTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ParseMarkupTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_CharacterLookupMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_CharacterLookupMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_CharacterLookupMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
void TMPro::TextMeshPro::_set_k_CharacterLookupMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_CharacterLookupMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_CharacterLookupMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleGPOSFeaturesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleGPOSFeaturesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleGPOSFeaturesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
void TMPro::TextMeshPro::_set_k_HandleGPOSFeaturesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleGPOSFeaturesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleGPOSFeaturesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_CalculateVerticesPositionMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_CalculateVerticesPositionMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_CalculateVerticesPositionMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
void TMPro::TextMeshPro::_set_k_CalculateVerticesPositionMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_CalculateVerticesPositionMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_CalculateVerticesPositionMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ComputeTextMetricsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ComputeTextMetricsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ComputeTextMetricsMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
void TMPro::TextMeshPro::_set_k_ComputeTextMetricsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ComputeTextMetricsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ComputeTextMetricsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleVisibleCharacterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleVisibleCharacterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleVisibleCharacterMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
void TMPro::TextMeshPro::_set_k_HandleVisibleCharacterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleVisibleCharacterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleVisibleCharacterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleWhiteSpacesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleWhiteSpacesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleWhiteSpacesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
void TMPro::TextMeshPro::_set_k_HandleWhiteSpacesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleWhiteSpacesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleWhiteSpacesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleHorizontalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleHorizontalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleHorizontalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
void TMPro::TextMeshPro::_set_k_HandleHorizontalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleHorizontalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleHorizontalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleVerticalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleVerticalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleVerticalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
void TMPro::TextMeshPro::_set_k_HandleVerticalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleVerticalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleVerticalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SaveGlyphVertexDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SaveGlyphVertexDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SaveGlyphVertexDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
void TMPro::TextMeshPro::_set_k_SaveGlyphVertexDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SaveGlyphVertexDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SaveGlyphVertexDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ComputeCharacterAdvanceMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ComputeCharacterAdvanceMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ComputeCharacterAdvanceMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
void TMPro::TextMeshPro::_set_k_ComputeCharacterAdvanceMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ComputeCharacterAdvanceMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ComputeCharacterAdvanceMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleCarriageReturnMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleCarriageReturnMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleCarriageReturnMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
void TMPro::TextMeshPro::_set_k_HandleCarriageReturnMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleCarriageReturnMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleCarriageReturnMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleLineTerminationMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleLineTerminationMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleLineTerminationMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
void TMPro::TextMeshPro::_set_k_HandleLineTerminationMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleLineTerminationMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleLineTerminationMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SavePageInfoMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SavePageInfoMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SavePageInfoMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
void TMPro::TextMeshPro::_set_k_SavePageInfoMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SavePageInfoMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SavePageInfoMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SaveProcessingStatesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SaveProcessingStatesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SaveProcessingStatesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
void TMPro::TextMeshPro::_set_k_SaveProcessingStatesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SaveProcessingStatesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SaveProcessingStatesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIIMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasFontAssetChanged
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshPro::dyn_m_hasFontAssetChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_hasFontAssetChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasFontAssetChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_previousLossyScaleY
[[deprecated("Use field access instead!")]] float& TMPro::TextMeshPro::dyn_m_previousLossyScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_previousLossyScaleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousLossyScaleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& TMPro::TextMeshPro::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter m_meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& TMPro::TextMeshPro::dyn_m_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_CanvasRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasRenderer*& TMPro::TextMeshPro::dyn_m_CanvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_CanvasRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isFirstAllocation
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshPro::dyn_m_isFirstAllocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_isFirstAllocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFirstAllocation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_characters
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshPro::dyn_m_max_characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_max_characters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_characters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_numberOfLines
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshPro::dyn_m_max_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_max_numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SubMesh[] m_subTextObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TMP_SubMesh*>& TMPro::TextMeshPro::dyn_m_subTextObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_subTextObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subTextObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_SubMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.MaskingTypes m_maskType
[[deprecated("Use field access instead!")]] ::TMPro::MaskingTypes& TMPro::TextMeshPro::dyn_m_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_maskType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maskType"))->offset;
  return *reinterpret_cast<::TMPro::MaskingTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_EnvMapMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& TMPro::TextMeshPro::dyn_m_EnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_EnvMapMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnvMapMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RectTransformCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& TMPro::TextMeshPro::dyn_m_RectTransformCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_RectTransformCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransformCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshPro::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingLayer
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshPro::dyn__SortingLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingLayerID
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshPro::dyn__SortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingLayerID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingLayerID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingOrder
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshPro::dyn__SortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TMPro.TMP_TextInfo> OnPreRenderText
[[deprecated("Use field access instead!")]] ::System::Action_1<::TMPro::TMP_TextInfo*>*& TMPro::TextMeshPro::dyn_OnPreRenderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_OnPreRenderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRenderText"))->offset;
  return *reinterpret_cast<::System::Action_1<::TMPro::TMP_TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentAutoSizeMode
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshPro::dyn_m_currentAutoSizeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_currentAutoSizeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentAutoSizeMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingLayerID
int TMPro::TextMeshPro::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingLayerID
void TMPro::TextMeshPro::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingOrder
int TMPro::TextMeshPro::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingOrder
void TMPro::TextMeshPro::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_textContainer
::TMPro::TextContainer* TMPro::TextMeshPro::get_textContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_textContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_renderer
::UnityEngine::Renderer* TMPro::TextMeshPro::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_meshFilter
::UnityEngine::MeshFilter* TMPro::TextMeshPro::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_maskType
::TMPro::MaskingTypes TMPro::TextMeshPro::get_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::MaskingTypes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_maskType
void TMPro::TextMeshPro::set_maskType(::TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateEnvMapMatrix
void TMPro::TextMeshPro::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes maskType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maskType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maskType);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(::UnityEngine::Vector4 coords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(::UnityEngine::Vector4 coords, float softX, float softY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords), ::il2cpp_utils::ExtractType(softX), ::il2cpp_utils::ExtractType(softY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coords, softX, softY);
}
// Autogenerated method: TMPro.TextMeshPro.EnableMasking
void TMPro::TextMeshPro::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.DisableMasking
void TMPro::TextMeshPro::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMask
void TMPro::TextMeshPro::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CreateMaterialInstance
void TMPro::TextMeshPro::CreateMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetPerspectiveCorrection
void TMPro::TextMeshPro::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnPreRenderObject
void TMPro::TextMeshPro::OnPreRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnPreRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GenerateTextMesh
void TMPro::TextMeshPro::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshPro*), 142));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMeshFilters
void TMPro::TextMeshPro::SetMeshFilters(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMeshFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubTextObjectRenderers
void TMPro::TextMeshPro::SetActiveSubTextObjectRenderers(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetActiveSubTextObjectRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubTextObjectRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSubMeshSortingLayerID
void TMPro::TextMeshPro::UpdateSubMeshSortingLayerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSubMeshSortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubMeshSortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSubMeshSortingOrder
void TMPro::TextMeshPro::UpdateSubMeshSortingOrder(int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSubMeshSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubMeshSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSDFScale
void TMPro::TextMeshPro::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes type, ::UnityEngine::Vector4 maskCoords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, maskCoords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes type, ::UnityEngine::Vector4 maskCoords, float softnessX, float softnessY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords), ::il2cpp_utils::ExtractType(softnessX), ::il2cpp_utils::ExtractType(softnessY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, maskCoords, softnessX, softnessY);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateFontAsset
void TMPro::TextMeshPro::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputHorizontal
void TMPro::TextMeshPro::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshPro*), 133));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputVertical
void TMPro::TextMeshPro::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshPro*), 134));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_autoSizeTextContainer
bool TMPro::TextMeshPro::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 75));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_autoSizeTextContainer
void TMPro::TextMeshPro::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_transform
::UnityEngine::Transform* TMPro::TextMeshPro::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_mesh
::UnityEngine::Mesh* TMPro::TextMeshPro::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_mesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.add_OnPreRenderText
void TMPro::TextMeshPro::add_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::add_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 78));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.remove_OnPreRenderText
void TMPro::TextMeshPro::remove_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::remove_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 79));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro..cctor
void TMPro::TextMeshPro::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextMeshPro", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Awake
void TMPro::TextMeshPro::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnEnable
void TMPro::TextMeshPro::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDisable
void TMPro::TextMeshPro::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDestroy
void TMPro::TextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.LoadFontAsset
void TMPro::TextMeshPro::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 89));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterial
::UnityEngine::Material* TMPro::TextMeshPro::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 91));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshPro::GetMaterials(::ArrayW<::UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 95));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterial
void TMPro::TextMeshPro::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshPro::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 93));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterials
void TMPro::TextMeshPro::SetSharedMaterials(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 94));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineThickness
void TMPro::TextMeshPro::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 99));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshPro.SetFaceColor
void TMPro::TextMeshPro::SetFaceColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 97));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineColor
void TMPro::TextMeshPro::SetOutlineColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 98));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetShaderDepth
void TMPro::TextMeshPro::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 100));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetCulling
void TMPro::TextMeshPro::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetCulling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 101));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetArraySizes
int TMPro::TextMeshPro::SetArraySizes(::ArrayW<::TMPro::TMP_Text::UnicodeChar> unicodeChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 114));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unicodeChars);
}
// Autogenerated method: TMPro.TextMeshPro.ComputeMarginSize
void TMPro::TextMeshPro::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 119));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDidApplyAnimationProperties
void TMPro::TextMeshPro::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnTransformParentChanged
void TMPro::TextMeshPro::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnRectTransformDimensionsChange
void TMPro::TextMeshPro::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.InternalUpdate
void TMPro::TextMeshPro::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 132));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextContainerLocalCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextMeshPro::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 105));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubMeshes
void TMPro::TextMeshPro::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 127));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.DestroySubMeshObjects
void TMPro::TextMeshPro::DestroySubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::DestroySubMeshObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 128));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetCompoundBounds
::UnityEngine::Bounds TMPro::TextMeshPro::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 116));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetVerticesDirty
void TMPro::TextMeshPro::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetLayoutDirty
void TMPro::TextMeshPro::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaterialDirty
void TMPro::TextMeshPro::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetAllDirty
void TMPro::TextMeshPro::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Rebuild
void TMPro::TextMeshPro::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMaterial
void TMPro::TextMeshPro::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMeshPadding
void TMPro::TextMeshPro::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 111));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate(bool ignoreActiveState, bool forceTextReparsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 106));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreActiveState, forceTextReparsing);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextInfo
::TMPro::TMP_TextInfo* TMPro::TextMeshPro::GetTextInfo(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 118));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshPro.ClearMesh
void TMPro::TextMeshPro::ClearMesh(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 130));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateGeometry
void TMPro::TextMeshPro::UpdateGeometry(::UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 107));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData(::TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 108));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 109));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89
#include "TMPro/TextMeshProUGUI_-DelayedGraphicRebuild-d__89.hpp"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90
#include "TMPro/TextMeshProUGUI_-DelayedMaterialRebuild-d__90.hpp"
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SetArraySizesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SetArraySizesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SetArraySizesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
void TMPro::TextMeshProUGUI::_set_k_SetArraySizesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SetArraySizesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SetArraySizesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ParseMarkupTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ParseMarkupTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ParseMarkupTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
void TMPro::TextMeshProUGUI::_set_k_ParseMarkupTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ParseMarkupTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ParseMarkupTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_CharacterLookupMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_CharacterLookupMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_CharacterLookupMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
void TMPro::TextMeshProUGUI::_set_k_CharacterLookupMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_CharacterLookupMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_CharacterLookupMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleGPOSFeaturesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleGPOSFeaturesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleGPOSFeaturesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
void TMPro::TextMeshProUGUI::_set_k_HandleGPOSFeaturesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleGPOSFeaturesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleGPOSFeaturesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_CalculateVerticesPositionMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_CalculateVerticesPositionMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_CalculateVerticesPositionMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
void TMPro::TextMeshProUGUI::_set_k_CalculateVerticesPositionMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_CalculateVerticesPositionMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_CalculateVerticesPositionMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ComputeTextMetricsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ComputeTextMetricsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ComputeTextMetricsMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
void TMPro::TextMeshProUGUI::_set_k_ComputeTextMetricsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ComputeTextMetricsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ComputeTextMetricsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleVisibleCharacterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleVisibleCharacterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleVisibleCharacterMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
void TMPro::TextMeshProUGUI::_set_k_HandleVisibleCharacterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleVisibleCharacterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleVisibleCharacterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleWhiteSpacesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleWhiteSpacesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleWhiteSpacesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
void TMPro::TextMeshProUGUI::_set_k_HandleWhiteSpacesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleWhiteSpacesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleWhiteSpacesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleHorizontalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleHorizontalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleHorizontalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
void TMPro::TextMeshProUGUI::_set_k_HandleHorizontalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleHorizontalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleHorizontalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleVerticalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleVerticalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleVerticalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
void TMPro::TextMeshProUGUI::_set_k_HandleVerticalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleVerticalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleVerticalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SaveGlyphVertexDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SaveGlyphVertexDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SaveGlyphVertexDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
void TMPro::TextMeshProUGUI::_set_k_SaveGlyphVertexDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SaveGlyphVertexDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SaveGlyphVertexDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ComputeCharacterAdvanceMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ComputeCharacterAdvanceMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ComputeCharacterAdvanceMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
void TMPro::TextMeshProUGUI::_set_k_ComputeCharacterAdvanceMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ComputeCharacterAdvanceMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ComputeCharacterAdvanceMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleCarriageReturnMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleCarriageReturnMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleCarriageReturnMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
void TMPro::TextMeshProUGUI::_set_k_HandleCarriageReturnMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleCarriageReturnMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleCarriageReturnMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleLineTerminationMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleLineTerminationMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleLineTerminationMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
void TMPro::TextMeshProUGUI::_set_k_HandleLineTerminationMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleLineTerminationMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleLineTerminationMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SavePageInfoMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SavePageInfoMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SavePageInfoMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
void TMPro::TextMeshProUGUI::_set_k_SavePageInfoMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SavePageInfoMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SavePageInfoMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SaveProcessingStatesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SaveProcessingStatesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SaveProcessingStatesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
void TMPro::TextMeshProUGUI::_set_k_SaveProcessingStatesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SaveProcessingStatesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SaveProcessingStatesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIIMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasFontAssetChanged
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_hasFontAssetChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_hasFontAssetChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasFontAssetChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SubMeshUI[] m_subTextObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TMP_SubMeshUI*>& TMPro::TextMeshProUGUI::dyn_m_subTextObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_subTextObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subTextObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_SubMeshUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_previousLossyScaleY
[[deprecated("Use field access instead!")]] float& TMPro::TextMeshProUGUI::dyn_m_previousLossyScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_previousLossyScaleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousLossyScaleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RectTransformCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& TMPro::TextMeshProUGUI::dyn_m_RectTransformCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_RectTransformCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransformCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_canvasRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasRenderer*& TMPro::TextMeshProUGUI::dyn_m_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_canvasRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvasRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& TMPro::TextMeshProUGUI::dyn_m_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CanvasScaleFactor
[[deprecated("Use field access instead!")]] float& TMPro::TextMeshProUGUI::dyn_m_CanvasScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_CanvasScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isFirstAllocation
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_isFirstAllocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isFirstAllocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFirstAllocation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_characters
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshProUGUI::dyn_m_max_characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_max_characters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_characters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_baseMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& TMPro::TextMeshProUGUI::dyn_m_baseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_baseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baseMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isScrollRegionSet
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_isScrollRegionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isScrollRegionSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isScrollRegionSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_maskOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& TMPro::TextMeshProUGUI::dyn_m_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_maskOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maskOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_EnvMapMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& TMPro::TextMeshProUGUI::dyn_m_EnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_EnvMapMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnvMapMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRebuildingLayout
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_isRebuildingLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isRebuildingLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRebuildingLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DelayedGraphicRebuild
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& TMPro::TextMeshProUGUI::dyn_m_DelayedGraphicRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_DelayedGraphicRebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedGraphicRebuild"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DelayedMaterialRebuild
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& TMPro::TextMeshProUGUI::dyn_m_DelayedMaterialRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_DelayedMaterialRebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedMaterialRebuild"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_ClipRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& TMPro::TextMeshProUGUI::dyn_m_ClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_ClipRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ValidRect
[[deprecated("Use field access instead!")]] bool& TMPro::TextMeshProUGUI::dyn_m_ValidRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_ValidRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidRect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TMPro.TMP_TextInfo> OnPreRenderText
[[deprecated("Use field access instead!")]] ::System::Action_1<::TMPro::TMP_TextInfo*>*& TMPro::TextMeshProUGUI::dyn_OnPreRenderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_OnPreRenderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRenderText"))->offset;
  return *reinterpret_cast<::System::Action_1<::TMPro::TMP_TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_canvasRenderer
::UnityEngine::CanvasRenderer* TMPro::TextMeshProUGUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_maskOffset
::UnityEngine::Vector4 TMPro::TextMeshProUGUI::get_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_maskOffset
void TMPro::TextMeshProUGUI::set_maskOffset(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::set_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvas
::UnityEngine::Canvas* TMPro::TextMeshProUGUI::GetCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateEnvMapMatrix
void TMPro::TextMeshProUGUI::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.EnableMasking
void TMPro::TextMeshProUGUI::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DisableMasking
void TMPro::TextMeshProUGUI::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMask
void TMPro::TextMeshProUGUI::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetPerspectiveCorrection
void TMPro::TextMeshProUGUI::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMeshArrays
void TMPro::TextMeshProUGUI::SetMeshArrays(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnPreRenderCanvas
void TMPro::TextMeshProUGUI::OnPreRenderCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnPreRenderCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GenerateTextMesh
void TMPro::TextMeshProUGUI::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI*), 142));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSDFScale
void TMPro::TextMeshProUGUI::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputHorizontal
void TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI*), 133));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputVertical
void TMPro::TextMeshProUGUI::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI*), 134));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DelayedGraphicRebuild
::System::Collections::IEnumerator* TMPro::TextMeshProUGUI::DelayedGraphicRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DelayedGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DelayedMaterialRebuild
::System::Collections::IEnumerator* TMPro::TextMeshProUGUI::DelayedMaterialRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DelayedMaterialRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedMaterialRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSubObjectPivot
void TMPro::TextMeshProUGUI::UpdateSubObjectPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateSubObjectPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubObjectPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateFontAsset
void TMPro::TextMeshProUGUI::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_materialForRendering
::UnityEngine::Material* TMPro::TextMeshProUGUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_autoSizeTextContainer
bool TMPro::TextMeshProUGUI::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 75));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_autoSizeTextContainer
void TMPro::TextMeshProUGUI::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_mesh
::UnityEngine::Mesh* TMPro::TextMeshProUGUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_mesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.add_OnPreRenderText
void TMPro::TextMeshProUGUI::add_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::add_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 78));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.remove_OnPreRenderText
void TMPro::TextMeshProUGUI::remove_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::remove_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 79));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI..cctor
void TMPro::TextMeshProUGUI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextMeshProUGUI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Awake
void TMPro::TextMeshProUGUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnEnable
void TMPro::TextMeshProUGUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDisable
void TMPro::TextMeshProUGUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDestroy
void TMPro::TextMeshProUGUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.LoadFontAsset
void TMPro::TextMeshProUGUI::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 89));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterial
::UnityEngine::Material* TMPro::TextMeshProUGUI::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 91));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshProUGUI::GetMaterials(::ArrayW<::UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 95));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterial
void TMPro::TextMeshProUGUI::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshProUGUI::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 93));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterials
void TMPro::TextMeshProUGUI::SetSharedMaterials(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 94));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineThickness
void TMPro::TextMeshProUGUI::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 99));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetFaceColor
void TMPro::TextMeshProUGUI::SetFaceColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 97));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineColor
void TMPro::TextMeshProUGUI::SetOutlineColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 98));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetShaderDepth
void TMPro::TextMeshProUGUI::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 100));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetCulling
void TMPro::TextMeshProUGUI::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetCulling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 101));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetArraySizes
int TMPro::TextMeshProUGUI::SetArraySizes(::ArrayW<::TMPro::TMP_Text::UnicodeChar> unicodeChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 114));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unicodeChars);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ComputeMarginSize
void TMPro::TextMeshProUGUI::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 119));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDidApplyAnimationProperties
void TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnCanvasHierarchyChanged
void TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnTransformParentChanged
void TMPro::TextMeshProUGUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnRectTransformDimensionsChange
void TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalUpdate
void TMPro::TextMeshProUGUI::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 132));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextContainerLocalCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextMeshProUGUI::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 105));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetActiveSubMeshes
void TMPro::TextMeshProUGUI::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 127));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DestroySubMeshObjects
void TMPro::TextMeshProUGUI::DestroySubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DestroySubMeshObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 128));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCompoundBounds
::UnityEngine::Bounds TMPro::TextMeshProUGUI::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 116));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvasSpaceClippingRect
::UnityEngine::Rect TMPro::TextMeshProUGUI::GetCanvasSpaceClippingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCanvasSpaceClippingRect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 117));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetVerticesDirty
void TMPro::TextMeshProUGUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetLayoutDirty
void TMPro::TextMeshProUGUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMaterialDirty
void TMPro::TextMeshProUGUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetAllDirty
void TMPro::TextMeshProUGUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Rebuild
void TMPro::TextMeshProUGUI::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetModifiedMaterial
::UnityEngine::Material* TMPro::TextMeshProUGUI::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMaterial
void TMPro::TextMeshProUGUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateClipping
void TMPro::TextMeshProUGUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Cull
void TMPro::TextMeshProUGUI::Cull(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Cull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateCulling
void TMPro::TextMeshProUGUI::UpdateCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateCulling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 102));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMeshPadding
void TMPro::TextMeshProUGUI::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 111));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeColor
void TMPro::TextMeshProUGUI::InternalCrossFadeColor(::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 112));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeAlpha
void TMPro::TextMeshProUGUI::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 113));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate(bool ignoreActiveState, bool forceTextReparsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 106));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreActiveState, forceTextReparsing);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextInfo
::TMPro::TMP_TextInfo* TMPro::TextMeshProUGUI::GetTextInfo(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 118));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ClearMesh
void TMPro::TextMeshProUGUI::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 129));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateGeometry
void TMPro::TextMeshProUGUI::UpdateGeometry(::UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 107));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData(::TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 108));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TMP_Text*), 109));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89
#include "TMPro/TextMeshProUGUI_-DelayedGraphicRebuild-d__89.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI <>4__this
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.IDisposable.Dispose
void TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.MoveNext
bool TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.IEnumerator.Reset
void TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90
#include "TMPro/TextMeshProUGUI_-DelayedMaterialRebuild-d__90.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI <>4__this
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.IDisposable.Dispose
void TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.MoveNext
bool TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.IEnumerator.Reset
void TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainerAnchors
#include "TMPro/TextContainerAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopLeft
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopLeft
void TMPro::TextContainerAnchors::_set_TopLeft(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Top
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Top
void TMPro::TextContainerAnchors::_set_Top(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopRight
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopRight
void TMPro::TextContainerAnchors::_set_TopRight(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Left
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Left
void TMPro::TextContainerAnchors::_set_Left(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Middle
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Middle
void TMPro::TextContainerAnchors::_set_Middle(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Right
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Right
void TMPro::TextContainerAnchors::_set_Right(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomLeft
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomLeft
void TMPro::TextContainerAnchors::_set_BottomLeft(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Bottom
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Bottom
void TMPro::TextContainerAnchors::_set_Bottom(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomRight
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomRight
void TMPro::TextContainerAnchors::_set_BottomRight(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Custom
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Custom
void TMPro::TextContainerAnchors::_set_Custom(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& TMPro::TextContainerAnchors::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_defaultSize
::UnityEngine::Vector2 TMPro::TextContainer::_get_k_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::_get_k_defaultSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TextContainer", "k_defaultSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_defaultSize
void TMPro::TextContainer::_set_k_defaultSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::_set_k_defaultSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainer", "k_defaultSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasChanged
[[deprecated("Use field access instead!")]] bool& TMPro::TextContainer::dyn_m_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_hasChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_pivot
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& TMPro::TextContainer::dyn_m_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pivot"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextContainerAnchors m_anchorPosition
[[deprecated("Use field access instead!")]] ::TMPro::TextContainerAnchors& TMPro::TextContainer::dyn_m_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_anchorPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_anchorPosition"))->offset;
  return *reinterpret_cast<::TMPro::TextContainerAnchors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_rect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& TMPro::TextContainer::dyn_m_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultWidth
[[deprecated("Use field access instead!")]] bool& TMPro::TextContainer::dyn_m_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isDefaultWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultHeight
[[deprecated("Use field access instead!")]] bool& TMPro::TextContainer::dyn_m_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isDefaultHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isAutoFitting
[[deprecated("Use field access instead!")]] bool& TMPro::TextContainer::dyn_m_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isAutoFitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isAutoFitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& TMPro::TextContainer::dyn_m_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_worldCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& TMPro::TextContainer::dyn_m_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_worldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_worldCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_margins
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& TMPro::TextContainer::dyn_m_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_margins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_margins"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& TMPro::TextContainer::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro m_textMeshPro
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& TMPro::TextContainer::dyn_m_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_textMeshPro");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textMeshPro"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextContainer.get_hasChanged
bool TMPro::TextContainer::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_hasChanged
void TMPro::TextContainer::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_pivot
::UnityEngine::Vector2 TMPro::TextContainer::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_pivot
void TMPro::TextContainer::set_pivot(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_anchorPosition
::TMPro::TextContainerAnchors TMPro::TextContainer::get_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainerAnchors, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_anchorPosition
void TMPro::TextContainer::set_anchorPosition(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rect
::UnityEngine::Rect TMPro::TextContainer::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_rect
void TMPro::TextContainer::set_rect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_size
::UnityEngine::Vector2 TMPro::TextContainer::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_size
void TMPro::TextContainer::set_size(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_width
float TMPro::TextContainer::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_width
void TMPro::TextContainer::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_height
float TMPro::TextContainer::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_height
void TMPro::TextContainer::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultWidth
bool TMPro::TextContainer::get_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isDefaultWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultHeight
bool TMPro::TextContainer::get_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isDefaultHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isAutoFitting
bool TMPro::TextContainer::get_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_isAutoFitting
void TMPro::TextContainer::set_isAutoFitting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_corners
::ArrayW<::UnityEngine::Vector3> TMPro::TextContainer::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_worldCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextContainer::get_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_worldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_margins
::UnityEngine::Vector4 TMPro::TextContainer::get_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_margins
void TMPro::TextContainer::set_margins(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rectTransform
::UnityEngine::RectTransform* TMPro::TextContainer::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_textMeshPro
::TMPro::TextMeshPro* TMPro::TextContainer::get_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_textMeshPro");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textMeshPro", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextMeshPro*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer..cctor
void TMPro::TextContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnContainerChanged
void TMPro::TextContainer::OnContainerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnContainerChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContainerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.SetRect
void TMPro::TextContainer::SetRect(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::SetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextContainer.UpdateCorners
void TMPro::TextContainer::UpdateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::UpdateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.GetPivot
::UnityEngine::Vector2 TMPro::TextContainer::GetPivot(::TMPro::TextContainerAnchors anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::GetPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, anchor);
}
// Autogenerated method: TMPro.TextContainer.GetAnchorPosition
::TMPro::TextContainerAnchors TMPro::TextContainer::GetAnchorPosition(::UnityEngine::Vector2 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::GetAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainerAnchors, false>(this, ___internal__method, pivot);
}
// Autogenerated method: TMPro.TextContainer.Awake
void TMPro::TextContainer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnEnable
void TMPro::TextContainer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnDisable
void TMPro::TextContainer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnRectTransformDimensionsChange
void TMPro::TextContainer::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.SpriteAssetImportFormats
#include "TMPro/SpriteAssetUtilities/SpriteAssetImportFormats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None(::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePackerJsonArray
::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePackerJsonArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePackerJsonArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePackerJsonArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePackerJsonArray
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePackerJsonArray(::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePackerJsonArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePackerJsonArray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteFrame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteSize.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Frame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_Frame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_Meta.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteDataObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single h
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame.ToString
::StringW TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single h
[[deprecated("Use field access instead!")]] float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize.ToString
::StringW TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteDataObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Frame> frames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Frame>*& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Frame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta meta
[[deprecated("Use field access instead!")]] ::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Meta& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Meta*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes
#include "UnityEngine/XR/Interaction/Toolkit/XRController_InteractionTypes.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_InputAxisNames
::ArrayW<::StringW> UnityEngine::XR::Interaction::Toolkit::XRController::_get_s_InputAxisNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::_get_s_InputAxisNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("UnityEngine.XR.Interaction.Toolkit", "XRController", "s_InputAxisNames"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_InputAxisNames
void UnityEngine::XR::Interaction::Toolkit::XRController::_set_s_InputAxisNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::_set_s_InputAxisNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController", "s_InputAxisNames", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType m_UpdateTrackingType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UpdateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UpdateTrackingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateTrackingType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputTracking
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_ControllerNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_SelectUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_ActivateUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_UIPressUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AxisToPressThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisToPressThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AnimateModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AnimateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AnimateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimateModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelDeSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelDeSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelDeSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_SelectInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_ActivateInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_UIPressInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice m_InputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ModelGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_HideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_HideControllerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_updateTrackingType
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::get_updateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_updateTrackingType
void UnityEngine::XR::Interaction::Toolkit::XRController::set_updateTrackingType(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_enableInputTracking
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_enableInputTracking
void UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_enableInputActions
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_enableInputActions
void UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputActions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_controllerNode
::UnityEngine::XR::XRNode UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_controllerNode
void UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_selectUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_activateUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_uiPressUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_axisToPressThreshold
float UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_axisToPressThreshold
void UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelPrefab
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRController::get_modelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelPrefab
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelPrefab(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRController::get_modelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_animateModel
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_animateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_animateModel
void UnityEngine::XR::Interaction::Toolkit::XRController::set_animateModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRController::get_modelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelDeSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRController::get_modelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelDeSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelDeSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_inputDevice
::UnityEngine::XR::InputDevice UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDevice, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_hideControllerModel
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_hideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_hideControllerModel
void UnityEngine::XR::Interaction::Toolkit::XRController::set_hideControllerModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController..cctor
void UnityEngine::XR::Interaction::Toolkit::XRController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.Awake
void UnityEngine::XR::Interaction::Toolkit::XRController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.PerformSetup
void UnityEngine::XR::Interaction::Toolkit::XRController::PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::PerformSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SetupModel
void UnityEngine::XR::Interaction::Toolkit::XRController::SetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SetupModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.ShouldUpdateTrackingInput
bool UnityEngine::XR::Interaction::Toolkit::XRController::ShouldUpdateTrackingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::ShouldUpdateTrackingInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldUpdateTrackingInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.Update
void UnityEngine::XR::Interaction::Toolkit::XRController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrackingInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.GetSimulator
bool UnityEngine::XR::Interaction::Toolkit::XRController::GetSimulator(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::GetSimulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSimulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionStateType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactionStateType);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.HandleInteractionAction
void UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction(::UnityEngine::XR::XRNode node, ::StringW usage, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState> interactionState, ::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractType(interactionState), ::il2cpp_utils::ExtractType(interactionStateType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, usage, byref(interactionState), interactionStateType);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInteractionType
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionType(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType, bool isInteractionStateOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionStateType), ::il2cpp_utils::ExtractType(isInteractionStateOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionStateType, isInteractionStateOn);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInteractionState
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState> interactionState, bool isInteractionStateOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRController", "UpdateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionState), ::il2cpp_utils::ExtractType(isInteractionStateOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(interactionState), isInteractionStateOn);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateControllerModelAnimation
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerModelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerModelAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerModelAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateControllerPose
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerPose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes DPad
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_DPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_DPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "DPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes DPad
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_DPad(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_DPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "DPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Trigger
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Trigger
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Trigger(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Grip
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Grip
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Grip(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Grip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes IndexTouch
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_IndexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_IndexTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "IndexTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes IndexTouch
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_IndexTouch(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_IndexTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "IndexTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes ThumbTouch
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_ThumbTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_ThumbTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "ThumbTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes ThumbTouch
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_ThumbTouch(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_ThumbTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "ThumbTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType UpdateAndBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_UpdateAndBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_UpdateAndBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "UpdateAndBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType UpdateAndBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_UpdateAndBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_UpdateAndBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "UpdateAndBeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType Update
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType Update
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_Update(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType BeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType BeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_BeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "BeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes
#include "UnityEngine/XR/Interaction/Toolkit/XRController_InteractionTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes select
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "select"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes select
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_select(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "select", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes activate
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_activate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "activate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes activate
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_activate(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_activate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "activate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes uiPress
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_uiPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_uiPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "uiPress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes uiPress
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_uiPress(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_uiPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "uiPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecorder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayOnStart
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerRecording m_Recording
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Recording"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController m_Controller
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_CurrentTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsRecording
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPlaying
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastPlaybackTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlaybackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameIdx
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_playOnStart
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_playOnStart
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_controller
::UnityEngine::XR::Interaction::Toolkit::XRController* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_controller
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_controller(::UnityEngine::XR::Interaction::Toolkit::XRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recording
::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isRecording
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isPlaying
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isPlaying
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_currentTime
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Awake
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ToggleRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ToggleRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ToggleRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Update
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdateControllerRecordingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdateControllerRecordingUpdate(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame recordingFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdateControllerRecordingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerRecordingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingFrame);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ResetPlayback
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdatePlaybackTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaybackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame> m_Frames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_frames
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>* UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(selectActive), ::il2cpp_utils::ExtractType(activateActive), ::il2cpp_utils::ExtractType(pressActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, position, rotation, selectActive, activateActive, pressActive);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.InitRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.SaveRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean selectActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_selectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_selectActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean activateActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_activateActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_activateActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pressActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_pressActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_pressActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame..ctor
// ABORTED elsewhere.  UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::Frame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive)
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame.ToString
::StringW UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TintColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnSelection
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_TintRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_Interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintColor
::UnityEngine::Color UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnHover
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnHover
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnSelection
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnSelection
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintRenderers
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Destroy
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.SetTint
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnFirstHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnLastHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_HoveringInteractors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoveringInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isHovered>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isHovered>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isSelected>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isSelected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFirstHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExit
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExit
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnLastHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExit
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnActivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeactivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor,UnityEngine.GameObject> m_ReticleCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoveringInteractors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoveringInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isHovered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isSelected
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onFirstHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onLastHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onActivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onDeactivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_customReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_customReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CustomForceDrop
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CustomForceDrop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CustomForceDrop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CustomForceDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RegisterWithInteractionMananger
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionMananger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionMananger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionMananger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType VelocityTracking
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType VelocityTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Kinematic
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Kinematic
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Instantaneous
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Instantaneous
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultTighteningAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultTighteningAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultSmoothingAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultSmoothingAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_VelocityPredictionFactor
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_VelocityPredictionFactor
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_AngularVelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_AngularVelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_ThrowSmoothingFrameCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_ThrowSmoothingFrameCount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultAttachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultAttachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AttachEaseInTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachEaseInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType m_MovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothPositionAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPositionAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenPosition
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothRotationAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenRotation
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ThrowOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowSmoothingDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_ThrowSmoothingCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowAngularVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowAngularVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GravityOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasKinematic
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsedGravity
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_SelectingInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectingInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InteractorLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_InteractorLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetWorldPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_TargetWorldRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentAttachEaseTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentAttachEaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType m_CurrentMovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentMovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DetachInLateUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachInLateUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachAngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachAngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ThrowSmoothingCurrentFrame
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurrentFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_ThrowSmoothingFrameTimes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingFrameTimes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ThrowSmoothingVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ThrowSmoothingAngularVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingAngularVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_RigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_movementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_movementType
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPositionAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPositionAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenPosition
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotationAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotationAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenRotation
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_gravityOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_gravityOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachPosition
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachRotation
::UnityEngine::Quaternion UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateTarget
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget(float timeDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformInstantaneousUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformInstantaneousUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformKinematicUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformKinematicUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformVelocityTrackingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformVelocityTrackingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Teleport
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Teleport(::UnityEngine::Transform* teleportTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Teleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Teleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teleportTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, teleportTransform);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Detach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Detach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateInteractorLocalPose
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractorLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityStart
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityEnd
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.getSmoothedVelocityValue
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::getSmoothedVelocityValue(::ArrayW<::UnityEngine::Vector3> velocityFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::getSmoothedVelocityValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getSmoothedVelocityValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, velocityFrames);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSimpleInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRSimpleInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider
#include "UnityEngine/XR/Interaction/Toolkit/IXRCustomReticleProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> noPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(noPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorLineVisual.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_MinLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MinLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_MaxLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MaxLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideInteractorLineLength
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideInteractorLineLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineLength
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_WidthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WidthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_ValidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_InvalidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InvalidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FollowTightness
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FollowTightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SnapThresholdDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapThresholdDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Reticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Reticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StopLineAtFirstRaycastHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StopLineAtFirstRaycastHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticlePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticleNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_EndPositionInLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapCurve
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapCurve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PreviousHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CurrentHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleToUse
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleToUse"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer m_LineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ILineRenderable m_LineRenderable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ILineRenderable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_TargetPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoTargetPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoTargetPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_PreviousRenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousRenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoPreviousRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoPreviousRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ClearArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomReticleAttached
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticleAttached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_overrideInteractorLineLength
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_overrideInteractorLineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineLength
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_widthCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_widthCurve
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_validColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_validColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_invalidColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_invalidColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_smoothMovement
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_smoothMovement
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_followTightness
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_followTightness
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_snapThresholdDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_snapThresholdDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_reticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_reticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_stopLineAtFirstRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_stopLineAtFirstRaycastHit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.ClearLineRenderer
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateSettings
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.TryFindLineRenderer
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle(::UnityEngine::GameObject* reticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticle);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorReticleVisual.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultMaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultMaxRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultMaxRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultMaxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultMaxRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultMaxRaycastDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultPrefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultPrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultPrefabScalingFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultPrefabScalingFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultPrefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultPrefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultPrefabScalingFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultPrefabScalingFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultEndpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultEndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultEndpointSmoothingTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultEndpointSmoothingTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultEndpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultEndpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultEndpointSmoothingTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultEndpointSmoothingTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_DefaultLayerMask
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_DefaultLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultLayerMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultLayerMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticlePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrefabScalingFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrefabScalingFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UndoDistanceScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UndoDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AlignPrefabWithSurfaceNormal
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlignPrefabWithSurfaceNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndpointSmoothingTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndpointSmoothingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DrawWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DrawWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_Interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReticleActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasSelectedInteractable
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasSelectedInteractable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticlePrefab
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_prefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_prefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_undoDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_undoDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_alignPrefabWithSurfaceNormal
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_alignPrefabWithSurfaceNormal
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_endpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_endpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_drawWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_drawWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticleActive
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticleActive
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.SetupReticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.FindClosestHit
::UnityEngine::RaycastHit UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit> hits, int hitCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(hitCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, hitCount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.TryGetRaycastPoint
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint(ByRef<::UnityEngine::Vector3> raycastPos, ByRef<::UnityEngine::Vector3> raycastNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetRaycastPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastPos), ::il2cpp_utils::ExtractType(raycastNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastPos), byref(raycastNormal));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.UpdateReticleTarget
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticleTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.ActivateReticleAtTarget
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateReticleAtTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerOnSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerOnSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectEnter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectExit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectExit
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverEnter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverExit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverExit
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectEnter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectExit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverEnter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverExit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelectActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController m_Controller
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource m_EffectsAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectsAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_toggleSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_toggleSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_toggleSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggleSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_toggleSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_toggleSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_toggleSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_toggleSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hideControllerOnSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hideControllerOnSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isUISelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUISelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CreateEffectsAudioSource
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEffectsAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectedInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_SelectTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_HoverTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExit
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExit
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInteractions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInteractions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequiresRegistration
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequiresRegistration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_InteractionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_InteractionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_InteractionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_InteractionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_InteractionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectTarget
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingSelectedInteractable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_enableInteractions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_enableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_overrideSelectedInteractableMovement
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_overrideSelectedInteractableMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_overrideSelectedInteractableMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EnableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* hoverTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.RegisterWithInteractionMananger
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionMananger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionMananger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionMananger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ClearHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ClearHoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ClearHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableDistanceSqrMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSortComparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.InteractableSortComparison
int UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.RemoveInteractableFromTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::RemoveInteractableFromTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::RemoveInteractableFromTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveInteractableFromTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__6_0
::System::Func_2<::UnityEngine::Collider*, bool>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__6_0
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__6_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <>9__10_0
::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <>9__10_0
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__10_0(::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__10_0", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c.<Awake>b__6_0
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::$Awake$b__6_0(::UnityEngine::Collider* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::<Awake>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c.<GetValidTargets>b__10_0
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::$GetValidTargets$b__10_0(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::<GetValidTargets>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetValidTargets>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultMaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultMaxRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultMaxRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultMaxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultMaxRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultMaxRaycastDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultHoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultHoverTimeToSelect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultHoverTimeToSelect"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultHoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultHoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultHoverTimeToSelect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultHoverTimeToSelect", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_kMaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_kMaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "kMaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_kMaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_kMaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "kMaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MinLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MinLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] s_CachedLinePoints
::ArrayW<::UnityEngine::Vector3> UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] s_CachedLinePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType m_LineType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ReferenceFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Velocity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Acceleration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AdditionalFlightTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AdditionalFlightTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleFrequency
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType m_HitDetectionType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitDetectionType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SphereCastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.QueryTriggerInteraction m_RaycastTriggerInteraction
[[deprecated("Use field access instead!")]] ::UnityEngine::QueryTriggerInteraction& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastTriggerInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryTriggerInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HoverToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HoverTimeToSelect
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTimeToSelect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableUIInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableUIInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer m_RaycastHitComparer
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_SamplePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SamplePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoSamplePoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoSamplePoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_CurrentNearestObject
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentNearestObject"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastTimeHoveredObjectChanged
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastTimeHoveredObjectChanged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PassedHoverTimeToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PassedHoverTimeToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitCount
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitPositionInLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ControlPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_lineType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_lineType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_referenceFrame
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_referenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_AdditionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_AdditionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hitDetectionType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hitDetectionType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sphereCastRadius
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sphereCastRadius
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastTriggerInteraction
::UnityEngine::QueryTriggerInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::QueryTriggerInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastTriggerInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverToSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_enableUIInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_enableUIInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_m_StartTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_m_StartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_m_StartTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_m_StartTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RebuildSamplePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSamplePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindOrCreateXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOrCreateXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> noPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(noPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentUIRaycastResult
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult(ByRef<::UnityEngine::EventSystems::RaycastResult> result, ByRef<int> raycastPointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentUIRaycastResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::RaycastResult&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result), byref(raycastPointIndex));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateControlPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateBezierPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 control, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBezierPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t, start, control, end);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateProjectilePoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateProjectilePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(acceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t, start, velocity, acceleration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindReferenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CheckCollidersBetweenPoints
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCollidersBetweenPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer.Compare
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType StraightLine
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType StraightLine
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType ProjectileCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType ProjectileCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType BezierCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType BezierCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType Raycast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType Raycast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType SphereCast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType SphereCast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShowInteractableHoverMeshes
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShowInteractableHoverMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_InteractableHoverMeshMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverMeshMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SocketActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SocketActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InteractableHoverScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RecycleDelayTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecycleDelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastRemoveTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRemoveTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableDistanceSqrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableDistanceSqrMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableDistanceSqrMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,UnityEngine.MeshFilter[]> m_MeshFilterCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeshFilterCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableSortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableSortComparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSortComparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_showInteractableHoverMeshes
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_showInteractableHoverMeshes
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverMeshMaterial
::UnityEngine::Material* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverMeshMaterial
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_socketActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_socketActive
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverScale
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverScale
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_recycleDelayTime
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_recycleDelayTime
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.InteractableSortComparison
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetInteractableAttachMatrix
::UnityEngine::Matrix4x4 UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* interactable, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteractableAttachMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, interactable, scale);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.DrawHoveredInteractables
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c__DisplayClass34_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_Interactors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_Interactables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ColliderToInteractableMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderToInteractableMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_HoverTargetList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverTargetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverTargetList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTargetList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractorValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> sortedTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_sortedTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_sortedTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_interactors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_interactables
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.LateUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.FixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.TryGetInteractableForCollider
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method, collider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceSelect
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceDrop
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceDrop(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceDrop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceSwap
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSwap(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* oldInteractor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* newInteractor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldInteractor), ::il2cpp_utils::ExtractType(newInteractor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldInteractor, newInteractor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorSelectValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorSelectValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorHoverValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorHoverValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c__DisplayClass34_0.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 interactorPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::dyn_interactorPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::dyn_interactorPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactorPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0.<InteractorSelectValidTargets>b__0
int UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::$InteractorSelectValidTargets$b__0(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* a, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::<InteractorSelectValidTargets>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InteractorSelectValidTargets>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 k_ControllerRecorder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_ControllerRecorder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Controllers
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Controllers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_ControllerInteractionManager
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerInteractionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerInteractionManager"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_ControllerInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerInteractionManager(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerInteractionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerInteractionManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_InteractionManager
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_InteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactors
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactables
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_LineVisual
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_LineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_BeforeRenderOrder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_BeforeRenderOrder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Fixed
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Fixed
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Dynamic
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Dynamic
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Late
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Late
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase OnBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionSystem m_System
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_System"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> startLocomotion
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> endLocomotion
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.get_system
::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.set_system
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.Awake
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.CanBeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.BeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.EndLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.RequestResult
#include "UnityEngine/XR/Interaction/Toolkit/RequestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Success
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Success
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Success(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Busy
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Busy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Busy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Busy
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Busy(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Busy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Busy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Error
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Error"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Error
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Error(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::RequestResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.RequestResult
#include "UnityEngine/XR/Interaction/Toolkit/RequestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single Timeout
float UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single Timeout
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::_set_Timeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem", "Timeout", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_CurrentExclusiveProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_CurrentExclusiveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_CurrentExclusiveProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentExclusiveProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeMadeExclusive
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_TimeMadeExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_TimeMadeExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeMadeExclusive"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Timeout
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_Timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Timeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRig m_XRRig
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRig*& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_XRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_XRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRRig"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_timeout
float UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.set_timeout
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_timeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_xrRig
::UnityEngine::XR::Interaction::Toolkit::XRRig* UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.set_xrRig
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrRig(::UnityEngine::XR::Interaction::Toolkit::XRRig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_Busy
bool UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_Busy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Busy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.RequestExclusiveOperation
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::RequestExclusiveOperation(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::RequestExclusiveOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestExclusiveOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::RequestResult, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.ResetExclusivity
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::ResetExclusivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::ResetExclusivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetExclusivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.FinishExclusiveOperation
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::FinishExclusiveOperation(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::FinishExclusiveOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishExclusiveOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::RequestResult, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.Update
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.Awake
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/SnapTurnProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::_get_m_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::_get_m_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider", "m_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::_set_m_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::_set_m_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider", "m_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 turnIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_turnIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_turnIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes m_TurnUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TurnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TurnUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DebounceTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_DebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_DebounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DebounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_DeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_DeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentTurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_CurrentTurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_CurrentTurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeStarted
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TimeStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_TimeStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Boolean> m_ControllersWereActive
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_ControllersWereActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::dyn_m_ControllersWereActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllersWereActive"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.get_turnUsage
::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_turnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.set_turnUsage
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_turnUsage(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.set_controllers
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.get_turnAmount
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_turnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.set_turnAmount
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_turnAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.get_debounceTime
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.set_debounceTime
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_debounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.get_deadZone
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::get_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.set_deadZone
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_deadZone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::set_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider..cctor
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.Update
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.EnsureControllerDataListSize
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::EnsureControllerDataListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::EnsureControllerDataListSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureControllerDataListSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.FakeStartTurn
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::FakeStartTurn(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::FakeStartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeStartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider.StartTurn
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::StartTurn(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::StartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/SnapTurnProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "SnapTurnProvider/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.MatchOrientation
#include "UnityEngine/XR/Interaction/Toolkit/MatchOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation None
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation None
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_None(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation Camera
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_Camera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "Camera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation Camera
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_Camera(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_Camera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "Camera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::MatchOrientation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.XR.Interaction.Toolkit.TeleportationProvider m_TeleportationProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportationProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportationProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportationProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.XR.Interaction.Toolkit.MatchOrientation m_MatchOrientation
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::MatchOrientation& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchOrientation"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger m_TeleportTrigger
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportTrigger"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_teleportationProvider
::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_teleportationProvider
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_matchOrientation
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_matchOrientation
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_teleportTrigger
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_teleportTrigger
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.SendTeleportRequest
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTeleportRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectExit
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectEnter
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEnter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEnter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationAnchor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_TeleportAnchorTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::dyn_m_TeleportAnchorTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::dyn_m_TeleportAnchorTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportAnchorTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.get_teleportAnchorTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::get_teleportAnchorTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::get_teleportAnchorTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportAnchorTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.set_teleportAnchorTransform
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::set_teleportAnchorTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::set_teleportAnchorTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportAnchorTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnValidate
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnDrawGizmos
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationArea
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationArea.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationArea.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::TeleportationArea::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationArea::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TeleportRequest m_CurrentRequest
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest& UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::dyn_m_CurrentRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::dyn_m_CurrentRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentRequest"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ValidRequest
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::dyn_m_ValidRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::dyn_m_ValidRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider.QueueTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::QueueTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::QueueTeleportRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTeleportRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teleportRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, teleportRequest);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider.Update
void UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GizmoHelpers
#include "UnityEngine/XR/Interaction/Toolkit/GizmoHelpers.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GizmoHelpers.DrawWirePlaneOriented
void UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawWirePlaneOriented(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawWirePlaneOriented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "GizmoHelpers", "DrawWirePlaneOriented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, rotation, size);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GizmoHelpers.DrawWireCubeOriented
void UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawWireCubeOriented(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawWireCubeOriented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "GizmoHelpers", "DrawWireCubeOriented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, rotation, size);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GizmoHelpers.DrawAxisArrows
void UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawAxisArrows(::UnityEngine::Transform* transform, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GizmoHelpers::DrawAxisArrows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "GizmoHelpers", "DrawAxisArrows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SortingHelpers
#include "UnityEngine/XR/Interaction/Toolkit/SortingHelpers.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34
#include "UnityEngine/XR/Interaction/Toolkit/XRRig_-RepeatInitializeCamera-d__34.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultCameraYOffset
float UnityEngine::XR::Interaction::Toolkit::XRRig::_get_k_DefaultCameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::_get_k_DefaultCameraYOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRRig", "k_DefaultCameraYOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultCameraYOffset
void UnityEngine::XR::Interaction::Toolkit::XRRig::_set_k_DefaultCameraYOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::_set_k_DefaultCameraYOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRig", "k_DefaultCameraYOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* UnityEngine::XR::Interaction::Toolkit::XRRig::_get_s_InputSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::_get_s_InputSubsystems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>*>("UnityEngine.XR.Interaction.Toolkit", "XRRig", "s_InputSubsystems"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
void UnityEngine::XR::Interaction::Toolkit::XRRig::_set_s_InputSubsystems(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::_set_s_InputSubsystems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRig", "s_InputSubsystems", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_RigBaseGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_RigBaseGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_RigBaseGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigBaseGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CameraFloorOffsetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraFloorOffsetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraFloorOffsetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraFloorOffsetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.TrackingSpaceType m_TrackingSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::TrackingSpaceType& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_TrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_TrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackingSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::TrackingSpaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CameraYOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraYOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraYOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CameraInitialized
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CameraInitializing
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::dyn_m_CameraInitializing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraInitializing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_rig
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRRig::get_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_rig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.set_rig
void UnityEngine::XR::Interaction::Toolkit::XRRig::set_rig(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::set_rig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_cameraFloorOffsetObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraFloorOffsetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraFloorOffsetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraFloorOffsetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.set_cameraFloorOffsetObject
void UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraFloorOffsetObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraFloorOffsetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cameraFloorOffsetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_cameraGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.set_cameraGameObject
void UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_trackingSpace
::UnityEngine::XR::TrackingSpaceType UnityEngine::XR::Interaction::Toolkit::XRRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::TrackingSpaceType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.set_trackingSpace
void UnityEngine::XR::Interaction::Toolkit::XRRig::set_trackingSpace(::UnityEngine::XR::TrackingSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_cameraYOffset
float UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.set_cameraYOffset
void UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraYOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cameraYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_rigInCameraSpacePos
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRig::get_rigInCameraSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_rigInCameraSpacePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigInCameraSpacePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_cameraInRigSpacePos
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpacePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInRigSpacePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.get_cameraInRigSpaceHeight
float UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpaceHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInRigSpaceHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig..cctor
void UnityEngine::XR::Interaction::Toolkit::XRRig::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRig", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.Awake
void UnityEngine::XR::Interaction::Toolkit::XRRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.Start
void UnityEngine::XR::Interaction::Toolkit::XRRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRRig::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.TryInitializeCamera
void UnityEngine::XR::Interaction::Toolkit::XRRig::TryInitializeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::TryInitializeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInitializeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.RepeatInitializeCamera
::System::Collections::IEnumerator* UnityEngine::XR::Interaction::Toolkit::XRRig::RepeatInitializeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::RepeatInitializeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatInitializeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.SetupCamera
bool UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.SetupCamera
bool UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCamera(::UnityEngine::XR::XRInputSubsystem* subsystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subsystem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, subsystem);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.SetupCameraLegacy
void UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCameraLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::SetupCameraLegacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCameraLegacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.RotateAroundCameraUsingRigUp
bool UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraUsingRigUp(float angleDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraUsingRigUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundCameraUsingRigUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, angleDegrees);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.RotateAroundCameraPosition
bool UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraPosition(::UnityEngine::Vector3 vector, float angleDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundCameraPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(angleDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, vector, angleDegrees);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.MatchRigUp
bool UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUp(::UnityEngine::Vector3 destinationUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchRigUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.MatchRigUpCameraForward
bool UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpCameraForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpCameraForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchRigUpCameraForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp), ::il2cpp_utils::ExtractType(destinationForward)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp, destinationForward);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.MatchRigUpRigForward
bool UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpRigForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpRigForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchRigUpRigForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp), ::il2cpp_utils::ExtractType(destinationForward)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp, destinationForward);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.MoveCameraToWorldLocation
bool UnityEngine::XR::Interaction::Toolkit::XRRig::MoveCameraToWorldLocation(::UnityEngine::Vector3 desiredWorldLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::MoveCameraToWorldLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToWorldLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredWorldLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, desiredWorldLocation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig.OnDrawGizmos
void UnityEngine::XR::Interaction::Toolkit::XRRig::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34
#include "UnityEngine/XR/Interaction/Toolkit/XRRig_-RepeatInitializeCamera-d__34.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRRig <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRig*& UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34.System.IDisposable.Dispose
void UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34.MoveNext
bool UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRig/UnityEngine.XR.Interaction.Toolkit.<RepeatInitializeCamera>d__34.System.Collections.IEnumerator.Reset
void UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRig::$RepeatInitializeCamera$d__34*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/JoystickModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <move>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$move$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$move$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<move>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <submitButtonDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$submitButtonDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$submitButtonDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<submitButtonDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <cancelButtonDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$cancelButtonDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$cancelButtonDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancelButtonDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData <implementationData>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$implementationData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_$implementationData$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<implementationData>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SubmitButtonDown
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_m_SubmitButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_m_SubmitButtonDown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButtonDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CancelButtonDown
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_m_CancelButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::dyn_m_CancelButtonDown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButtonDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_move
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_move
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_move(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_submitButtonDown
bool UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_submitButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_submitButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_submitButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_submitButtonDown
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_submitButtonDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_submitButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_submitButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_submitButtonDelta
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_submitButtonDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_submitButtonDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_submitButtonDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_submitButtonDelta
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_submitButtonDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_submitButtonDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_submitButtonDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_cancelButtonDown
bool UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_cancelButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_cancelButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cancelButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_cancelButtonDown
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_cancelButtonDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_cancelButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_cancelButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_cancelButtonDelta
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_cancelButtonDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_cancelButtonDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cancelButtonDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_cancelButtonDelta
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_cancelButtonDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_cancelButtonDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_cancelButtonDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.get_implementationData
::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_implementationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::get_implementationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_implementationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.set_implementationData
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_implementationData(::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::set_implementationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_implementationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel.OnFrameFinished
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::OnFrameFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::OnFrameFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnFrameFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData
#include "UnityEngine/XR/Interaction/Toolkit/UI/JoystickModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <consecutiveMoveCount>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$consecutiveMoveCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$consecutiveMoveCount$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<consecutiveMoveCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.MoveDirection <lastMoveDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::MoveDirection& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$lastMoveDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$lastMoveDirection$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastMoveDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::MoveDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lastMoveTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$lastMoveTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::dyn_$lastMoveTime$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastMoveTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_consecutiveMoveCount
int UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_consecutiveMoveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_consecutiveMoveCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_consecutiveMoveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_consecutiveMoveCount
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_consecutiveMoveCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_consecutiveMoveCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_consecutiveMoveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_lastMoveDirection
::UnityEngine::EventSystems::MoveDirection UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_lastMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_lastMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lastMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::MoveDirection, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_lastMoveDirection
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_lastMoveDirection(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_lastMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lastMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_lastMoveTime
float UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_lastMoveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::get_lastMoveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lastMoveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_lastMoveTime
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_lastMoveTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::set_lastMoveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lastMoveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel::ImplementationData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState
#include "UnityEngine/XR/Interaction/Toolkit/UI/ButtonDeltaState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState NoChange
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_NoChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_NoChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState>("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "NoChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState NoChange
void UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_NoChange(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_NoChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "NoChange", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState Pressed
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState>("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState Pressed
void UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_Pressed(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState Released
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_Released() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_get_Released");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState>("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "Released"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState Released
void UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_Released(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::_set_Released");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState", "Released", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseButtonModel.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <lastFrameDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_$lastFrameDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_$lastFrameDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastFrameDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsDown
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_m_IsDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_m_IsDown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData m_ImplementationData
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_m_ImplementationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::dyn_m_ImplementationData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImplementationData"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.get_isDown
bool UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::get_isDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::get_isDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.set_isDown
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::set_isDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::set_isDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_isDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.get_lastFrameDelta
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::get_lastFrameDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::get_lastFrameDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lastFrameDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.set_lastFrameDelta
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::set_lastFrameDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::set_lastFrameDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lastFrameDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.OnFrameFinished
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::OnFrameFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::OnFrameFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnFrameFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.CopyTo
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::CopyTo(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel.CopyFrom
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::CopyFrom(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseButtonModel.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDragging>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$isDragging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$isDragging$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDragging>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <pressedTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedTime$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <pressedPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.RaycastResult <pressedRaycast>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::RaycastResult& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedRaycast$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedRaycast$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedRaycast>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::RaycastResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObjectRaw>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObjectRaw>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <draggedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$draggedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::dyn_$draggedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<draggedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_isDragging
bool UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_isDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_isDragging
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_isDragging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedTime
float UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedTime
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedPosition
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedRaycast
::UnityEngine::EventSystems::RaycastResult UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedRaycast
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedRaycast(::UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObjectRaw
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedGameObjectRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObjectRaw
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedGameObjectRaw(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_draggedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_draggedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::get_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_draggedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_draggedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::set_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel::ImplementationData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseModel.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <pointerId>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$pointerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$pointerId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <changedThisFrame>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$changedThisFrame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$changedThisFrame$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changedThisFrame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <deltaPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$deltaPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$deltaPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deltaPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <scrollDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$scrollDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_$scrollDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<scrollDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_ScrollPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_ScrollPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_ScrollPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel m_LeftButton
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_LeftButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_LeftButton");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LeftButton"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel m_RightButton
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_RightButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_RightButton");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RightButton"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseButtonModel m_MiddleButton
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_MiddleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_MiddleButton");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MiddleButton"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData m_InternalData
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_InternalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::dyn_m_InternalData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalData"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_pointerId
int UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_pointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_pointerId
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_pointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_changedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_changedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_changedThisFrame
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_changedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_position
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_position
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_deltaPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_deltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_deltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_deltaPosition
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_deltaPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_deltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_scrollPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_scrollPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_scrollPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_scrollPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_scrollPosition
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_scrollPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_scrollPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_scrollPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_scrollDelta
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_scrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_scrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_scrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_scrollDelta
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_scrollDelta(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_scrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_scrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_leftButton
::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_leftButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_leftButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_leftButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_leftButton
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_leftButton(::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_leftButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_leftButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_leftButtonPressed
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_leftButtonPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_leftButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_leftButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_rightButton
::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_rightButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_rightButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rightButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_rightButton
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_rightButton(::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_rightButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rightButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_rightButtonPressed
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_rightButtonPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_rightButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rightButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.get_middleButton
::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_middleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::get_middleButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_middleButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_middleButton
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_middleButton(::UnityEngine::XR::Interaction::Toolkit::UI::MouseButtonModel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_middleButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_middleButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.set_middleButtonPressed
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_middleButtonPressed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::set_middleButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_middleButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel..ctor
UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::MouseModel(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.OnFrameFinished
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::OnFrameFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::OnFrameFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnFrameFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.CopyTo
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::CopyTo(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel.CopyFrom
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::CopyFrom(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> <hoverTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::dyn_$hoverTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::dyn_$hoverTargets$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoverTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pointerTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::dyn_$pointerTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::dyn_$pointerTarget$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData.get_hoverTargets
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::get_hoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::get_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData.set_hoverTargets
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::set_hoverTargets(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::set_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData.get_pointerTarget
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::get_pointerTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::get_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData.set_pointerTarget
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::set_pointerTarget(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::set_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/UnityEngine.XR.Interaction.Toolkit.UI.InternalData.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel::InternalData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TouchModel.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <pointerId>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$pointerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$pointerId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <selectDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$selectDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$selectDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <changedThisFrame>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$changedThisFrame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$changedThisFrame$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changedThisFrame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <deltaPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$deltaPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_$deltaPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deltaPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TouchPhase m_SelectPhase
[[deprecated("Use field access instead!")]] ::UnityEngine::TouchPhase& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_SelectPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_SelectPhase");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectPhase"))->offset;
  return *reinterpret_cast<::UnityEngine::TouchPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData m_ImplementationData
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_ImplementationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::dyn_m_ImplementationData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImplementationData"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_pointerId
int UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_pointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_pointerId
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_pointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_selectPhase
::UnityEngine::TouchPhase UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_selectPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_selectPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchPhase, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_selectPhase
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_selectPhase(::UnityEngine::TouchPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_selectPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_selectDelta
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_selectDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_selectDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_selectDelta
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_selectDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_selectDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_changedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_changedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_changedThisFrame
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_changedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_position
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_position
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.get_deltaPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_deltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::get_deltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.set_deltaPosition
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_deltaPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::set_deltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel..ctor
UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::TouchModel(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.OnFrameFinished
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::OnFrameFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::OnFrameFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnFrameFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.CopyTo
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::CopyTo(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel.CopyFrom
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::CopyFrom(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TouchModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> <hoverTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$hoverTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$hoverTargets$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoverTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pointerTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pointerTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pointerTarget$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDragging>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$isDragging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$isDragging$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDragging>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <pressedTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedTime$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <pressedPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.RaycastResult <pressedRaycast>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::RaycastResult& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedRaycast$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedRaycast$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedRaycast>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::RaycastResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObjectRaw>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObjectRaw>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <draggedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$draggedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::dyn_$draggedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<draggedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_hoverTargets
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_hoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_hoverTargets
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_hoverTargets(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pointerTarget
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pointerTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pointerTarget
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pointerTarget(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_isDragging
bool UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_isDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_isDragging
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_isDragging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedTime
float UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedTime
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedPosition
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedRaycast
::UnityEngine::EventSystems::RaycastResult UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedRaycast
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedRaycast(::UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObjectRaw
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedGameObjectRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObjectRaw
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedGameObjectRaw(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_draggedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_draggedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::get_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_draggedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_draggedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::set_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel::ImplementationData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> <rayPoints>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$rayPoints$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$rayPoints$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rayPoints>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <rayHitIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$rayHitIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$rayHitIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rayHitIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask <layerMask>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$layerMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::dyn_$layerMask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<layerMask>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.get_rayPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_rayPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_rayPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rayPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.set_rayPoints
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_rayPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_rayPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rayPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.get_rayHitIndex
int UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_rayHitIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_rayHitIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rayHitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.set_rayHitIndex
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_rayHitIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_rayHitIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rayHitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.get_layerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::get_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData.set_layerMask
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_layerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData::set_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceGraphicRaycaster.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceEventData.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceGraphicRaycaster_RaycastHitComparer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData> s_SortedGraphics
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_s_SortedGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_s_SortedGraphics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>*>("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "s_SortedGraphics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData> s_SortedGraphics
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_s_SortedGraphics(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_s_SortedGraphics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "s_SortedGraphics", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] s_Corners
::ArrayW<::UnityEngine::Vector3> UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_s_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_get_s_Corners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "s_Corners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] s_Corners
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_s_Corners(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_set_s_Corners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "s_Corners", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreReversedGraphics
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_IgnoreReversedGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_IgnoreReversedGraphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreReversedGraphics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CheckFor2DOcclusion
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_CheckFor2DOcclusion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_CheckFor2DOcclusion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CheckFor2DOcclusion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CheckFor3DOcclusion
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_CheckFor3DOcclusion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_CheckFor3DOcclusion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CheckFor3DOcclusion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_BlockingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_BlockingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_BlockingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlockingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] occlusionHits3D
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_occlusionHits3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_occlusionHits3D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occlusionHits3D"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit2D[] occlusionHits2D
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit2D>& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_occlusionHits2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_occlusionHits2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occlusionHits2D"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit2D>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitComparer m_raycastHitComparer
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitComparer*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_raycastHitComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_raycastHitComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_raycastHitComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData> m_RaycastResultsCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_RaycastResultsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_m_RaycastResultsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastResultsCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] physicsHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_physicsHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_physicsHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "physicsHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit2D[] graphicHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit2D>& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_graphicHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::dyn_graphicHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit2D>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.get_canvas
::UnityEngine::Canvas* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::get_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::get_canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster..cctor
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.FindClosestHit
::UnityEngine::RaycastHit UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit> hits, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, count);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.FindClosestHit
::UnityEngine::RaycastHit2D UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit2D> hits, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceGraphicRaycaster", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, count);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.PerformRaycasts
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::PerformRaycasts(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::PerformRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.PerformRaycast
bool UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::PerformRaycast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::UnityEngine::LayerMask layerMask, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::PerformRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(resultAppendList)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, layerMask, resultAppendList);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.SortedRaycastGraphics
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::SortedRaycastGraphics(::UnityEngine::Canvas* canvas, ::UnityEngine::Ray ray, float maxDistance, ::UnityEngine::LayerMask layerMask, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::SortedRaycastGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortedRaycastGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas, ray, maxDistance, layerMask, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.RayIntersectsRectTransform
bool UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RayIntersectsRectTransform(::UnityEngine::RectTransform* transform, ::UnityEngine::Ray ray, ByRef<::UnityEngine::Vector3> worldPosition, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RayIntersectsRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RayIntersectsRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transform, ray, byref(worldPosition), byref(distance));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster.Raycast
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceGraphicRaycaster.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic <graphic>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$graphic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$graphic$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graphic>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <worldHitPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$worldHitPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$worldHitPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<worldHitPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <screenPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$screenPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$screenPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<screenPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <distance>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$distance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::dyn_$distance$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<distance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.get_graphic
::UnityEngine::UI::Graphic* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.set_graphic
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_graphic(::UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.get_worldHitPosition
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_worldHitPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_worldHitPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_worldHitPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.set_worldHitPosition
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_worldHitPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_worldHitPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_worldHitPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.get_screenPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_screenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_screenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_screenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.set_screenPosition
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_screenPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_screenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_screenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.get_distance
float UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData.set_distance
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::set_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitData..ctor
// ABORTED elsewhere.  UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData::RaycastHitData(::UnityEngine::UI::Graphic* graphic, ::UnityEngine::Vector3 worldHitPosition, ::UnityEngine::Vector2 screenPosition, float distance)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceGraphicRaycaster_RaycastHitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/UnityEngine.XR.Interaction.Toolkit.UI.RaycastHitComparer.Compare
int UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitComparer::Compare(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData a, ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitData b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceGraphicRaycaster::RaycastHitComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::_get_k_DefaultMaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::_get_k_DefaultMaxRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceModel", "k_DefaultMaxRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::_set_k_DefaultMaxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::_set_k_DefaultMaxRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceModel", "k_DefaultMaxRaycastDistance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <pointerId>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$pointerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$pointerId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <maxRaycastDistance>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$maxRaycastDistance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$maxRaycastDistance$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxRaycastDistance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <selectDelta>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$selectDelta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$selectDelta$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectDelta>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <changedThisFrame>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$changedThisFrame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_$changedThisFrame$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changedThisFrame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SelectDown
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_SelectDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_SelectDown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Orientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_Orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_RaycastPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_RaycastPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_RaycastPoints");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_RaycastLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_RaycastLayerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData m_ImplementationData
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_ImplementationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::dyn_m_ImplementationData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImplementationData"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_implementationData
::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_implementationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_implementationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_implementationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_pointerId
int UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_pointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_pointerId
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_pointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_select
bool UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_select
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_select(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_selectDelta
::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_selectDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_selectDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_selectDelta
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_selectDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_selectDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_changedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_changedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_changedThisFrame
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_changedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_changedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_changedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_position
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_position
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_orientation
::UnityEngine::Quaternion UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_orientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_orientation
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_orientation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_orientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_raycastPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_raycastPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_raycastPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_raycastPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_raycastPoints
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_raycastPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_raycastPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_raycastPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.get_raycastLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_raycastLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::get_raycastLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_raycastLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.set_raycastLayerMask
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_raycastLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::set_raycastLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_raycastLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel..ctor
UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::TrackedDeviceModel(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::Reset(bool resetImplementation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resetImplementation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resetImplementation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.OnFrameFinished
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::OnFrameFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::OnFrameFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnFrameFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.CopyTo
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::CopyTo(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel.CopyFrom
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::CopyFrom(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> <hoverTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$hoverTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$hoverTargets$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoverTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pointerTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pointerTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pointerTarget$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDragging>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$isDragging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$isDragging$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDragging>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <pressedTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedTime$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <pressedPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.RaycastResult <pressedRaycast>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::RaycastResult& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedRaycast$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedRaycast$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedRaycast>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::RaycastResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.RaycastResult <lastFrameRaycast>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::RaycastResult& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$lastFrameRaycast$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$lastFrameRaycast$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastFrameRaycast>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::RaycastResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lastFrameRaycastResultPositionInLine>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$lastFrameRaycastResultPositionInLine$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$lastFrameRaycastResultPositionInLine$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastFrameRaycastResultPositionInLine>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <pressedGameObjectRaw>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$pressedGameObjectRaw$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pressedGameObjectRaw>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <draggedGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$draggedGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::dyn_$draggedGameObject$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<draggedGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_hoverTargets
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_hoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_hoverTargets
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_hoverTargets(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pointerTarget
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pointerTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pointerTarget
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pointerTarget(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pointerTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointerTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_isDragging
bool UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_isDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_isDragging
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_isDragging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_isDragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedTime
float UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedTime
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedPosition
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedPosition
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedRaycast
::UnityEngine::EventSystems::RaycastResult UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedRaycast
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedRaycast(::UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_lastFrameRaycast
::UnityEngine::EventSystems::RaycastResult UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_lastFrameRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_lastFrameRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lastFrameRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_lastFrameRaycast
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_lastFrameRaycast(::UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_lastFrameRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lastFrameRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_lastFrameRaycastResultPositionInLine
int UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_lastFrameRaycastResultPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_lastFrameRaycastResultPositionInLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lastFrameRaycastResultPositionInLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_lastFrameRaycastResultPositionInLine
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_lastFrameRaycastResultPositionInLine(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_lastFrameRaycastResultPositionInLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lastFrameRaycastResultPositionInLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_pressedGameObjectRaw
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedGameObjectRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_pressedGameObjectRaw
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedGameObjectRaw(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_pressedGameObjectRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedGameObjectRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.get_draggedGameObject
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_draggedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::get_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.set_draggedGameObject
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_draggedGameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::set_draggedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_draggedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel/UnityEngine.XR.Interaction.Toolkit.UI.ImplementationData.Reset
void UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel::ImplementationData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/UIInputModule.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceEventData.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState
#include "UnityEngine/XR/Interaction/Toolkit/UI/ButtonDeltaState.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TouchModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.JoystickModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/JoystickModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_Camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_Camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clickSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_clickSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_clickSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clickSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveDeadzone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_moveDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_moveDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDeadzone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single repeatDelay
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_repeatDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_repeatDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single repeatRate
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_repeatRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_repeatRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single trackedDeviceDragThresholdMultiplier
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_trackedDeviceDragThresholdMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_trackedDeviceDragThresholdMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceDragThresholdMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.AxisEventData m_CachedAxisEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::AxisEventData*& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedAxisEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedAxisEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedAxisEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::AxisEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.PointerEventData m_CachedPointerEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedPointerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedPointerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedPointerEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData m_CachedTrackedDeviceEventData
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData*& UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedTrackedDeviceEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::dyn_m_CachedTrackedDeviceEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedTrackedDeviceEventData"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.get_uiCamera
::UnityEngine::Camera* UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_uiCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_uiCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.set_uiCamera
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_uiCamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_uiCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.DoProcess
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::DoProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::DoProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.PerformRaycast
::UnityEngine::EventSystems::RaycastResult UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::PerformRaycast(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::PerformRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessMouse
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouse(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel> mouseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(mouseState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessMouseMovement
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseMovement(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessMouseButton
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseButton(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState mouseButtonChanges, ::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseButtonChanges), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseButtonChanges, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessMouseButtonDrag
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseButtonDrag(::UnityEngine::EventSystems::PointerEventData* eventData, float pixelDragThresholdMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseButtonDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseButtonDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(pixelDragThresholdMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, pixelDragThresholdMultiplier);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessMouseScroll
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseScroll(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseScroll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessTouch
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTouch(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel> touchState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(touchState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessTrackedDevice
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTrackedDevice(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> deviceState, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTrackedDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTrackedDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceState), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(deviceState), force);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.ProcessJoystick
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessJoystick(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::JoystickModel> joystickState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessJoystick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessJoystick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joystickState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(joystickState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.GetOrCreateCachedPointerEvent
::UnityEngine::EventSystems::PointerEventData* UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedPointerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedPointerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateCachedPointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.GetOrCreateCachedTrackedDeviceEvent
::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedTrackedDeviceEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedTrackedDeviceEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateCachedTrackedDeviceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.GetOrCreateCachedAxisEvent
::UnityEngine::EventSystems::AxisEventData* UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedAxisEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedAxisEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateCachedAxisEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::AxisEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule.Process
void UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable
#include "UnityEngine/XR/Interaction/Toolkit/UI/IUIInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable
#include "UnityEngine/XR/Interaction/Toolkit/UI/IUIInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxTrackedDeviceRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::_get_k_DefaultMaxTrackedDeviceRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::_get_k_DefaultMaxTrackedDeviceRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule", "k_DefaultMaxTrackedDeviceRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxTrackedDeviceRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::_set_k_DefaultMaxTrackedDeviceRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::_set_k_DefaultMaxTrackedDeviceRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule", "k_DefaultMaxTrackedDeviceRaycastDistance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxTrackedDeviceRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_MaxTrackedDeviceRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_MaxTrackedDeviceRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxTrackedDeviceRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableXRInput
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableXRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableXRInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableXRInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableMouseInput
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableMouseInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableMouseInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableMouseInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableTouchInput
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_EnableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.MouseModel m_Mouse
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_Mouse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mouse"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredTouch> m_RegisteredTouches
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch>*& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RegisteredTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RegisteredTouches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredTouches"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_RollingInteractableIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RollingInteractableIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RollingInteractableIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RollingInteractableIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredInteractable> m_RegisteredInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable>*& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RegisteredInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::dyn_m_RegisteredInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.EnsureInitialized
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnsureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnsureInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.RegisterInteractable
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.UnregisterInteractable
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.GetTrackedDeviceModel
bool UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetTrackedDeviceModel(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable* interactable, ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetTrackedDeviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.ProcessMouse
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.ProcessTouches
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessTouches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.Awake
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.OnEnable
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule.DoProcess
void UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DoProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DoProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredInteractable
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable
#include "UnityEngine/XR/Interaction/Toolkit/UI/IUIInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractable interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable*& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::dyn_interactable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::dyn_model");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredInteractable..ctor
UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::RegisteredInteractable(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractable* interactable, int deviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(deviceIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable, deviceIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredTouch
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.Touch
#include "UnityEngine/Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isValid
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_isValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 touchId
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_touchId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_touchId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.UI.TouchModel model
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel& UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::dyn_model");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/UnityEngine.XR.Interaction.Toolkit.UI.RegisteredTouch..ctor
UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::RegisteredTouch(::UnityEngine::Touch touch, int deviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touch), ::il2cpp_utils::ExtractType(deviceIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touch, deviceIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARAnnotationInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARAnnotationInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARBaseGestureInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARBaseGestureInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARPlacementInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARPlacementInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARRotationInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARRotationInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARScaleInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARScaleInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARSelectionInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARSelectionInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARTranslationInteractable
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARTranslationInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.AR.ARGestureInteractor
#include "UnityEngine/XR/Interaction/Toolkit/AR/ARGestureInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRConfigurationDataAttribute
#include "UnityEngine/XR/Management/XRConfigurationDataAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <displayName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$displayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$displayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<displayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <buildSettingsKey>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$buildSettingsKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$buildSettingsKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buildSettingsKey>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.get_displayName
::StringW UnityEngine::XR::Management::XRConfigurationDataAttribute::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.set_displayName
void UnityEngine::XR::Management::XRConfigurationDataAttribute::set_displayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.get_buildSettingsKey
::StringW UnityEngine::XR::Management::XRConfigurationDataAttribute::get_buildSettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::get_buildSettingsKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buildSettingsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.set_buildSettingsKey
void UnityEngine::XR::Management::XRConfigurationDataAttribute::set_buildSettingsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::set_buildSettingsKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buildSettingsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRGeneralSettings
#include "UnityEngine/XR/Management/XRGeneralSettings.hpp"
// Including type: UnityEngine.XR.Management.XRManagerSettings
#include "UnityEngine/XR/Management/XRManagerSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String k_SettingsKey
::StringW UnityEngine::XR::Management::XRGeneralSettings::_get_k_SettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_get_k_SettingsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.XR.Management", "XRGeneralSettings", "k_SettingsKey"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_SettingsKey
void UnityEngine::XR::Management::XRGeneralSettings::_set_k_SettingsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_set_k_SettingsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRGeneralSettings", "k_SettingsKey", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.XR.Management.XRGeneralSettings s_RuntimeSettingsInstance
::UnityEngine::XR::Management::XRGeneralSettings* UnityEngine::XR::Management::XRGeneralSettings::_get_s_RuntimeSettingsInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_get_s_RuntimeSettingsInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Management::XRGeneralSettings*>("UnityEngine.XR.Management", "XRGeneralSettings", "s_RuntimeSettingsInstance"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.XR.Management.XRGeneralSettings s_RuntimeSettingsInstance
void UnityEngine::XR::Management::XRGeneralSettings::_set_s_RuntimeSettingsInstance(::UnityEngine::XR::Management::XRGeneralSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_set_s_RuntimeSettingsInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRGeneralSettings", "s_RuntimeSettingsInstance", value));
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.XR.Management.XRManagerSettings m_LoaderManagerInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_LoaderManagerInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_LoaderManagerInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoaderManagerInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_InitManagerOnStart
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_InitManagerOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_InitManagerOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitManagerOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Management.XRManagerSettings m_XRManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_XRManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_XRManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ProviderIntialized
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderIntialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderIntialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderIntialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ProviderStarted
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_Manager
::UnityEngine::XR::Management::XRManagerSettings* UnityEngine::XR::Management::XRGeneralSettings::get_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRManagerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.set_Manager
void UnityEngine::XR::Management::XRGeneralSettings::set_Manager(::UnityEngine::XR::Management::XRManagerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::set_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_Instance
::UnityEngine::XR::Management::XRGeneralSettings* UnityEngine::XR::Management::XRGeneralSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRGeneralSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_AssignedSettings
::UnityEngine::XR::Management::XRManagerSettings* UnityEngine::XR::Management::XRGeneralSettings::get_AssignedSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_AssignedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssignedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRManagerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_InitManagerOnStart
bool UnityEngine::XR::Management::XRGeneralSettings::get_InitManagerOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_InitManagerOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitManagerOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings..cctor
void UnityEngine::XR::Management::XRGeneralSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Awake
void UnityEngine::XR::Management::XRGeneralSettings::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Quit
void UnityEngine::XR::Management::XRGeneralSettings::Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Quit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "Quit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Start
void UnityEngine::XR::Management::XRGeneralSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.OnDestroy
void UnityEngine::XR::Management::XRGeneralSettings::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.AttemptInitializeXRSDKOnLoad
void UnityEngine::XR::Management::XRGeneralSettings::AttemptInitializeXRSDKOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::AttemptInitializeXRSDKOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "AttemptInitializeXRSDKOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.AttemptStartXRSDKOnBeforeSplashScreen
void UnityEngine::XR::Management::XRGeneralSettings::AttemptStartXRSDKOnBeforeSplashScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::AttemptStartXRSDKOnBeforeSplashScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "AttemptStartXRSDKOnBeforeSplashScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.InitXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::InitXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::InitXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.StartXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::StartXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::StartXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.StopXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::StopXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::StopXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.DeInitXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::DeInitXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::DeInitXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeInitXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Initialize
bool UnityEngine::XR::Management::XRLoader::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Start
bool UnityEngine::XR::Management::XRLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Stop
bool UnityEngine::XR::Management::XRLoader::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Deinitialize
bool UnityEngine::XR::Management::XRLoader::Deinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Deinitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.GetSupportedGraphicsDeviceTypes
::System::Collections::Generic::List_1<::UnityEngine::Rendering::GraphicsDeviceType>* UnityEngine::XR::Management::XRLoader::GetSupportedGraphicsDeviceTypes(bool buildingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::GetSupportedGraphicsDeviceTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Rendering::GraphicsDeviceType>*, false>(this, ___internal__method, buildingPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.IntegratedSubsystemDescriptor
#include "UnityEngine/IntegratedSubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.Management.XRLoaderHelper
#include "UnityEngine/XR/Management/XRLoaderHelper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
// Including type: UnityEngine.Subsystem
#include "UnityEngine/Subsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ISubsystem> m_SubsystemInstanceMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ISubsystem*>*& UnityEngine::XR::Management::XRLoaderHelper::dyn_m_SubsystemInstanceMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoaderHelper::dyn_m_SubsystemInstanceMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubsystemInstanceMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ISubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoaderHelper.Deinitialize
bool UnityEngine::XR::Management::XRLoaderHelper::Deinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoaderHelper::Deinitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRManagerSettings
#include "UnityEngine/XR/Management/XRManagerSettings.hpp"
// Including type: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24
#include "UnityEngine/XR/Management/XRManagerSettings_-InitializeLoader-d__24.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_InitializationComplete
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_InitializationComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_InitializationComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitializationComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequiresSettingsUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_RequiresSettingsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_RequiresSettingsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequiresSettingsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutomaticLoading
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutomaticLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutomaticRunning
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutomaticRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> m_Loaders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*& UnityEngine::XR::Management::XRManagerSettings::dyn_m_Loaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_Loaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loaders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.XR.Management.XRLoader> m_RegisteredLoaders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>*& UnityEngine::XR::Management::XRManagerSettings::dyn_m_RegisteredLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_RegisteredLoaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredLoaders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Management.XRLoader <activeLoader>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Management::XRLoader*& UnityEngine::XR::Management::XRManagerSettings::dyn_$activeLoader$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_$activeLoader$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activeLoader>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_automaticLoading
bool UnityEngine::XR::Management::XRManagerSettings::get_automaticLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_automaticLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_automaticLoading
void UnityEngine::XR::Management::XRManagerSettings::set_automaticLoading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_automaticLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_automaticRunning
bool UnityEngine::XR::Management::XRManagerSettings::get_automaticRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_automaticRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_automaticRunning
void UnityEngine::XR::Management::XRManagerSettings::set_automaticRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_automaticRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_loaders
::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_loaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_loaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_activeLoaders
::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_activeLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_activeLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_isInitializationComplete
bool UnityEngine::XR::Management::XRManagerSettings::get_isInitializationComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_isInitializationComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitializationComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_activeLoader
::UnityEngine::XR::Management::XRLoader* UnityEngine::XR::Management::XRManagerSettings::get_activeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_activeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRLoader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_activeLoader
void UnityEngine::XR::Management::XRManagerSettings::set_activeLoader(::UnityEngine::XR::Management::XRLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_activeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_currentLoaders
::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_currentLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_currentLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_currentLoaders
void UnityEngine::XR::Management::XRManagerSettings::set_currentLoaders(::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_currentLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_registeredLoaders
::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_registeredLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_registeredLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_registeredLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.InitializeLoaderSync
void UnityEngine::XR::Management::XRManagerSettings::InitializeLoaderSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::InitializeLoaderSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLoaderSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.InitializeLoader
::System::Collections::IEnumerator* UnityEngine::XR::Management::XRManagerSettings::InitializeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::InitializeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.CheckLoaderRegistration
bool UnityEngine::XR::Management::XRManagerSettings::CheckLoaderRegistration(::UnityEngine::XR::Management::XRLoader* loader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::CheckLoaderRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLoaderRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TryAddLoader
bool UnityEngine::XR::Management::XRManagerSettings::TryAddLoader(::UnityEngine::XR::Management::XRLoader* loader, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TryAddLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader, index);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TryRemoveLoader
bool UnityEngine::XR::Management::XRManagerSettings::TryRemoveLoader(::UnityEngine::XR::Management::XRLoader* loader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TryRemoveLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRemoveLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TrySetLoaders
bool UnityEngine::XR::Management::XRManagerSettings::TrySetLoaders(::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* reorderedLoaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TrySetLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reorderedLoaders)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reorderedLoaders);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.CheckGraphicsAPICompatibility
bool UnityEngine::XR::Management::XRManagerSettings::CheckGraphicsAPICompatibility(::UnityEngine::XR::Management::XRLoader* loader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::CheckGraphicsAPICompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckGraphicsAPICompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.StartSubsystems
void UnityEngine::XR::Management::XRManagerSettings::StartSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::StartSubsystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSubsystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.StopSubsystems
void UnityEngine::XR::Management::XRManagerSettings::StopSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::StopSubsystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSubsystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.DeinitializeLoader
void UnityEngine::XR::Management::XRManagerSettings::DeinitializeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::DeinitializeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeinitializeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.Start
void UnityEngine::XR::Management::XRManagerSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.OnDisable
void UnityEngine::XR::Management::XRManagerSettings::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.OnDestroy
void UnityEngine::XR::Management::XRManagerSettings::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24
#include "UnityEngine/XR/Management/XRManagerSettings_-InitializeLoader-d__24.hpp"
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Management.XRManagerSettings <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<UnityEngine.XR.Management.XRLoader> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>::Enumerator& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.IDisposable.Dispose
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.MoveNext
bool UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.<>m__Finally1
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.IEnumerator.Reset
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Utils
#include "Unity/XR/Oculus/Utils.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Utils.SetColorScaleAndOffset
void Unity::XR::Oculus::Utils::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset);
}
// Autogenerated method: Unity.XR.Oculus.Utils.SetFoveationLevel
void Unity::XR::Oculus::Utils::SetFoveationLevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::SetFoveationLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "SetFoveationLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Unity.XR.Oculus.Utils.GetFoveationLevel
int Unity::XR::Oculus::Utils::GetFoveationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::GetFoveationLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "GetFoveationLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
