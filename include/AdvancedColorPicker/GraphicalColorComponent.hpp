// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorPicker
  class ColorPicker;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Color because it is already included!
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: GraphicalColorComponent
  class GraphicalColorComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::GraphicalColorComponent);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::GraphicalColorComponent*, "AdvancedColorPicker", "GraphicalColorComponent");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0xC8
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.GraphicalColorComponent
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class GraphicalColorComponent : public ::UnityEngine::UI::MaskableGraphic {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private AdvancedColorPicker.ColorPicker picker
    // Size: 0x8
    // Offset: 0xC0
    ::AdvancedColorPicker::ColorPicker* picker;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorPicker*) == 0x8);
    public:
    // Get instance field reference: private AdvancedColorPicker.ColorPicker picker
    ::AdvancedColorPicker::ColorPicker*& dyn_picker();
    // public AdvancedColorPicker.ColorPicker get_Picker()
    // Offset: 0xE2175C
    ::AdvancedColorPicker::ColorPicker* get_Picker();
    // public System.Void set_Picker(AdvancedColorPicker.ColorPicker value)
    // Offset: 0xE21764
    void set_Picker(::AdvancedColorPicker::ColorPicker* value);
    // private System.Void OnColorChanged(UnityEngine.Color color)
    // Offset: 0xE21930
    void OnColorChanged(::UnityEngine::Color color);
    // protected System.Void DisplayNewColor()
    // Offset: 0xFFFFFFFF
    void DisplayNewColor();
    // protected System.Void .ctor()
    // Offset: 0xE1EDB8
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::.ctor()
    // Base method: System.Void Graphic::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GraphicalColorComponent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::GraphicalColorComponent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GraphicalColorComponent*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0xE203CC
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xE20584
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnDisable()
    void OnDisable();
  }; // AdvancedColorPicker.GraphicalColorComponent
  #pragma pack(pop)
  static check_size<sizeof(GraphicalColorComponent), 192 + sizeof(::AdvancedColorPicker::ColorPicker*)> __AdvancedColorPicker_GraphicalColorComponentSizeCheck;
  static_assert(sizeof(GraphicalColorComponent) == 0xC8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::get_Picker
// Il2CppName: get_Picker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorPicker* (AdvancedColorPicker::GraphicalColorComponent::*)()>(&AdvancedColorPicker::GraphicalColorComponent::get_Picker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "get_Picker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::set_Picker
// Il2CppName: set_Picker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorComponent::*)(::AdvancedColorPicker::ColorPicker*)>(&AdvancedColorPicker::GraphicalColorComponent::set_Picker)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorPicker")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "set_Picker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::OnColorChanged
// Il2CppName: OnColorChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorComponent::*)(::UnityEngine::Color)>(&AdvancedColorPicker::GraphicalColorComponent::OnColorChanged)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "OnColorChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::DisplayNewColor
// Il2CppName: DisplayNewColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorComponent::*)()>(&AdvancedColorPicker::GraphicalColorComponent::DisplayNewColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "DisplayNewColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorComponent::*)()>(&AdvancedColorPicker::GraphicalColorComponent::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::GraphicalColorComponent::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::GraphicalColorComponent::*)()>(&AdvancedColorPicker::GraphicalColorComponent::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::GraphicalColorComponent*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
