// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RigidbodyConstraints
  struct RigidbodyConstraints;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::RigidbodyConstraints, "UnityEngine", "RigidbodyConstraints");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.RigidbodyConstraints
  // [TokenAttribute] Offset: FFFFFFFF
  struct RigidbodyConstraints/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RigidbodyConstraints
    constexpr RigidbodyConstraints(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.RigidbodyConstraints None
    static constexpr const int None = 0;
    // Get static field: static public UnityEngine.RigidbodyConstraints None
    static ::UnityEngine::RigidbodyConstraints _get_None();
    // Set static field: static public UnityEngine.RigidbodyConstraints None
    static void _set_None(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezePositionX
    static constexpr const int FreezePositionX = 2;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
    static ::UnityEngine::RigidbodyConstraints _get_FreezePositionX();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
    static void _set_FreezePositionX(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezePositionY
    static constexpr const int FreezePositionY = 4;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
    static ::UnityEngine::RigidbodyConstraints _get_FreezePositionY();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
    static void _set_FreezePositionY(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezePositionZ
    static constexpr const int FreezePositionZ = 8;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
    static ::UnityEngine::RigidbodyConstraints _get_FreezePositionZ();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
    static void _set_FreezePositionZ(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezeRotationX
    static constexpr const int FreezeRotationX = 16;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
    static ::UnityEngine::RigidbodyConstraints _get_FreezeRotationX();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
    static void _set_FreezeRotationX(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezeRotationY
    static constexpr const int FreezeRotationY = 32;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
    static ::UnityEngine::RigidbodyConstraints _get_FreezeRotationY();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
    static void _set_FreezeRotationY(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
    static constexpr const int FreezeRotationZ = 64;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
    static ::UnityEngine::RigidbodyConstraints _get_FreezeRotationZ();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
    static void _set_FreezeRotationZ(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezePosition
    static constexpr const int FreezePosition = 14;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezePosition
    static ::UnityEngine::RigidbodyConstraints _get_FreezePosition();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezePosition
    static void _set_FreezePosition(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezeRotation
    static constexpr const int FreezeRotation = 112;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
    static ::UnityEngine::RigidbodyConstraints _get_FreezeRotation();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
    static void _set_FreezeRotation(::UnityEngine::RigidbodyConstraints value);
    // static field const value: static public UnityEngine.RigidbodyConstraints FreezeAll
    static constexpr const int FreezeAll = 126;
    // Get static field: static public UnityEngine.RigidbodyConstraints FreezeAll
    static ::UnityEngine::RigidbodyConstraints _get_FreezeAll();
    // Set static field: static public UnityEngine.RigidbodyConstraints FreezeAll
    static void _set_FreezeAll(::UnityEngine::RigidbodyConstraints value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // UnityEngine.RigidbodyConstraints
  #pragma pack(pop)
  static check_size<sizeof(RigidbodyConstraints), 0 + sizeof(int)> __UnityEngine_RigidbodyConstraintsSizeCheck;
  static_assert(sizeof(RigidbodyConstraints) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
