// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.TaskCoroutine
#include "Normal/Utility/TaskCoroutine.hpp"
// Including type: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0
#include "Normal/Utility/TaskCoroutine_-Wait-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.TaskCoroutine.Wait
::System::Collections::IEnumerator* Normal::Utility::TaskCoroutine::Wait(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "TaskCoroutine", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0
#include "Normal/Utility/TaskCoroutine_-Wait-d__0.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task task
::System::Threading::Tasks::Task*& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.IDisposable.Dispose
void Normal::Utility::TaskCoroutine::$Wait$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.MoveNext
bool Normal::Utility::TaskCoroutine::$Wait$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.IEnumerator.Reset
void Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.StaticFunctions
#include "Normal/Utility/StaticFunctions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.StaticFunctions.SetLayerRecursively
void Normal::Utility::StaticFunctions::SetLayerRecursively(::UnityEngine::GameObject* gameObject, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::SetLayerRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "SetLayerRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, layer);
}
// Autogenerated method: Normal.Utility.StaticFunctions.CalculateAverageDbForAudioBuffer
float Normal::Utility::StaticFunctions::CalculateAverageDbForAudioBuffer(::ArrayW<float> audioBuffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::CalculateAverageDbForAudioBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "CalculateAverageDbForAudioBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioBuffer, offset);
}
// Autogenerated method: Normal.Utility.StaticFunctions.LinearToDb
float Normal::Utility::StaticFunctions::LinearToDb(float linear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::LinearToDb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "LinearToDb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linear)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, linear);
}
// Autogenerated method: Normal.Utility.StaticFunctions.SwingTwistDecomposition
void Normal::Utility::StaticFunctions::SwingTwistDecomposition(::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Quaternion> swing, ByRef<::UnityEngine::Quaternion> twist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::SwingTwistDecomposition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "SwingTwistDecomposition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation, direction, byref(swing), byref(twist));
}
// Autogenerated method: Normal.Utility.StaticFunctions.NormalizeQuaternion
::UnityEngine::Vector4 Normal::Utility::StaticFunctions::NormalizeQuaternion(::UnityEngine::Vector4 quaternion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::NormalizeQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "NormalizeQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quaternion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, quaternion);
}
// Autogenerated method: Normal.Utility.StaticFunctions.StabilizeLengthOfQuaternion
::UnityEngine::Vector4 Normal::Utility::StaticFunctions::StabilizeLengthOfQuaternion(::UnityEngine::Vector4 q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::StabilizeLengthOfQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "StabilizeLengthOfQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Normal.Utility.StaticFunctions.LerpClamped
double Normal::Utility::StaticFunctions::LerpClamped(double a, double b, double t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::LerpClamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "LerpClamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.Extensions
#include "Normal/Utility/Extensions.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.ExecutionOrder
#include "Normal/Utility/ExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
int& Normal::Utility::ExecutionOrder::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::ExecutionOrder::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::IConfigurableComponent::CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::CreateModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::IConfigurableComponent::SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::SetModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::IConfigurableComponent::SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::SetView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimeComponent
#include "Normal/Realtime/IRealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::IRealtimeComponent::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_realtimeView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::IRealtimeComponent::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_realtime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_room
::Normal::Realtime::Room* Normal::Realtime::IRealtimeComponent::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_room");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_ownerIDSelf
int Normal::Realtime::IRealtimeComponent::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_ownerIDSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_ownerIDInHierarchy
int Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isUnownedSelf
bool Normal::Realtime::IRealtimeComponent::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isUnownedSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isUnownedInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedLocallySelf
bool Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedRemotelySelf
bool Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.RequestOwnership
void Normal::Realtime::IRealtimeComponent::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::RequestOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.SetOwnership
void Normal::Realtime::IRealtimeComponent::SetOwnership(int clientID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::SetOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.ClearOwnership
void Normal::Realtime::IRealtimeComponent::ClearOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::ClearOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeComponent
#include "Normal/Realtime/RealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeView <realtimeView>k__BackingField
::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeComponent::dyn_$realtimeView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn_$realtimeView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtimeView>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _createModelMethod
::System::Reflection::MethodInfo*& Normal::Realtime::RealtimeComponent::dyn__createModelMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__createModelMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createModelMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCreateModelMethodCached
bool& Normal::Realtime::RealtimeComponent::dyn__isCreateModelMethodCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__isCreateModelMethodCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCreateModelMethodCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.PropertyInfo _modelProperty
::System::Reflection::PropertyInfo*& Normal::Realtime::RealtimeComponent::dyn__modelProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__modelProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelProperty"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isModelPropertyCached
bool& Normal::Realtime::RealtimeComponent::dyn__isModelPropertyCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__isModelPropertyCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isModelPropertyCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeComponent::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.set_realtimeView
void Normal::Realtime::RealtimeComponent::set_realtimeView(::Normal::Realtime::RealtimeView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::set_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeComponent::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeComponent::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_cachedCreateModelMethod
::System::Reflection::MethodInfo* Normal::Realtime::RealtimeComponent::get_cachedCreateModelMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_cachedCreateModelMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedCreateModelMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_cachedModelProperty
::System::Reflection::PropertyInfo* Normal::Realtime::RealtimeComponent::get_cachedModelProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_cachedModelProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedModelProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.CreateModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.CreateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.CreateModelFromCustomMethod
::Il2CppObject* Normal::Realtime::RealtimeComponent::CreateModelFromCustomMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::CreateModelFromCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModelFromCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.CreateModelFromDefaultConstructor
::Il2CppObject* Normal::Realtime::RealtimeComponent::CreateModelFromDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::CreateModelFromDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModelFromDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.SetModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.SetModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.SetView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.SetView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26
#include "Normal/Realtime/RealtimeTransform_-FixedUpdateEnumerator-d__26.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Normal.Realtime.IRealtimeTransformStrategy
#include "Normal/Realtime/IRealtimeTransformStrategy.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interpolate
bool& Normal::Realtime::RealtimeTransform::dyn__interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__interpolate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncPosition
bool& Normal::Realtime::RealtimeTransform::dyn__syncPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncRotation
bool& Normal::Realtime::RealtimeTransform::dyn__syncRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncScale
bool& Normal::Realtime::RealtimeTransform::dyn__syncScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncVelocity
bool& Normal::Realtime::RealtimeTransform::dyn__syncVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _maintainOwnershipWhileSleeping
bool& Normal::Realtime::RealtimeTransform::dyn__maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__maintainOwnershipWhileSleeping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maintainOwnershipWhileSleeping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimeTransformStrategy _strategy
::Normal::Realtime::IRealtimeTransformStrategy*& Normal::Realtime::RealtimeTransform::dyn__strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strategy"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimeTransformStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingPosition
bool Normal::Realtime::RealtimeTransform::get_isSyncingPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingRotation
bool Normal::Realtime::RealtimeTransform::get_isSyncingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingScale
bool Normal::Realtime::RealtimeTransform::get_isSyncingScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingVelocity
bool Normal::Realtime::RealtimeTransform::get_isSyncingVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingAngularVelocity
bool Normal::Realtime::RealtimeTransform::get_isSyncingAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_maintainOwnershipWhileSleeping
bool Normal::Realtime::RealtimeTransform::get_maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.set_maintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransform::set_maintainOwnershipWhileSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::set_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isPhysicsOwnershipAvailable
bool Normal::Realtime::RealtimeTransform::get_isPhysicsOwnershipAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isPhysicsOwnershipAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPhysicsOwnershipAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransform::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isInterpolationWarmedUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnEnable
void Normal::Realtime::RealtimeTransform::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.Update
void Normal::Realtime::RealtimeTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.FixedUpdateEnumerator
::System::Collections::IEnumerator* Normal::Realtime::RealtimeTransform::FixedUpdateEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::FixedUpdateEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdateEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionEnter
void Normal::Realtime::RealtimeTransform::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionStay
void Normal::Realtime::RealtimeTransform::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionExit
void Normal::Realtime::RealtimeTransform::OnCollisionExit(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnDestroy
void Normal::Realtime::RealtimeTransform::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnRealtimeModelReplaced
void Normal::Realtime::RealtimeTransform::OnRealtimeModelReplaced(::Normal::Realtime::RealtimeTransformModel* previousModel, ::Normal::Realtime::RealtimeTransformModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRealtimeModelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousModel), ::il2cpp_utils::ExtractType(currentModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SubscribeStrategyEvents
void Normal::Realtime::RealtimeTransform::SubscribeStrategyEvents(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SubscribeStrategyEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeStrategyEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.UnsubscribeStrategyEvents
void Normal::Realtime::RealtimeTransform::UnsubscribeStrategyEvents(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::UnsubscribeStrategyEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeStrategyEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnModelWillWrite
void Normal::Realtime::RealtimeTransform::OnModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnModelWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnModelDidRead
void Normal::Realtime::RealtimeTransform::OnModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnModelDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.GetOrCreateStrategy
::Normal::Realtime::IRealtimeTransformStrategy* Normal::Realtime::RealtimeTransform::GetOrCreateStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::GetOrCreateStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimeTransformStrategy*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetTransformValues
void Normal::Realtime::RealtimeTransform::SetTransformValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetTransformValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransformValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetTransformFromModel
void Normal::Realtime::RealtimeTransform::SetTransformFromModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetTransformFromModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransformFromModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetModelValues
void Normal::Realtime::RealtimeTransform::SetModelValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetModelValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetModelFromTransform
void Normal::Realtime::RealtimeTransform::SetModelFromTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetModelFromTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelFromTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26
#include "Normal/Realtime/RealtimeTransform_-FixedUpdateEnumerator-d__26.hpp"
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeTransform <>4__this
::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForFixedUpdate <wait>5__2
::UnityEngine::WaitForFixedUpdate*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$wait$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$wait$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wait>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForFixedUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.IDisposable.Dispose
void Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.MoveNext
bool Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.IEnumerator.Reset
void Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel
#include "Normal/Realtime/RealtimeTransformModel.hpp"
// Including type: Normal.Realtime.UnreliableProperty`1
#include "Normal/Realtime/UnreliableProperty_1.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformWriteHandler.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformReadHandler.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeTransformModel_PropertyID.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_POSITION
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_POSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_POSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_POSITION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_POSITION
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_POSITION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_POSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_POSITION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_ROTATION
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ROTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ROTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ROTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_ROTATION
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ROTATION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ROTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ROTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_SCALE
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_SCALE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_SCALE
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_SCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_SCALE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_VELOCITY
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_VELOCITY
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_VELOCITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_ANGULAR_VELOCITY
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ANGULAR_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ANGULAR_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ANGULAR_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_ANGULAR_VELOCITY
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ANGULAR_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ANGULAR_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ANGULAR_VELOCITY", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
::UnityEngine::Quaternion& Normal::Realtime::RealtimeTransformModel::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _scale
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _velocity
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocity
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState _physicsState
::Normal::Realtime::RealtimeTransformModel::PhysicsState& Normal::Realtime::RealtimeTransformModel::dyn__physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsState"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::PhysicsState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _physicsBodyTimeOffset
float& Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _physicsStateTimeOffset
float& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler onWillWrite
::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler*& Normal::Realtime::RealtimeTransformModel::dyn_onWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_onWillWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler onDidRead
::Normal::Realtime::RealtimeTransformModel::TransformReadHandler*& Normal::Realtime::RealtimeTransformModel::dyn_onDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_onDidRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::TransformReadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <timestamp>k__BackingField
double& Normal::Realtime::RealtimeTransformModel::dyn_$timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_$timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _positionProperty
::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__positionProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__positionProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Quaternion> _rotationProperty
::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Quaternion>*& Normal::Realtime::RealtimeTransformModel::dyn__rotationProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__rotationProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _scaleProperty
::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__scaleProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__scaleProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _velocityProperty
::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__velocityProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__velocityProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _angularVelocityProperty
::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__angularVelocityProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__angularVelocityProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocityProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.UInt32> _physicsStateProperty
::Normal::Realtime::ReliableProperty_1<uint>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _physicsBodyTimeOffsetProperty
::Normal::Realtime::UnreliableProperty_1<float>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffsetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffsetProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeOffsetProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Single> _physicsStateTimeOffsetProperty
::Normal::Realtime::ReliableProperty_1<float>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffsetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffsetProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeOffsetProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet _propertyChangeSet
::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*& Normal::Realtime::RealtimeTransformModel::dyn__propertyChangeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__propertyChangeSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyChangeSet"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_useGravity
bool Normal::Realtime::RealtimeTransformModel::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_useGravity
void Normal::Realtime::RealtimeTransformModel::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_isKinematic
bool Normal::Realtime::RealtimeTransformModel::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_isKinematic
void Normal::Realtime::RealtimeTransformModel::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_isSleeping
bool Normal::Realtime::RealtimeTransformModel::get_isSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_isSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_isSleeping
void Normal::Realtime::RealtimeTransformModel::set_isSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_isSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_maintainOwnershipWhileSleeping
bool Normal::Realtime::RealtimeTransformModel::get_maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_maintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransformModel::set_maintainOwnershipWhileSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_timestamp
double Normal::Realtime::RealtimeTransformModel::get_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_timestamp
void Normal::Realtime::RealtimeTransformModel::set_timestamp(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasTransformChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasTransformChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasTransformChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTransformChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasPhysicsBodyChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasPhysicsBodyChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasPhysicsBodyChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPhysicsBodyChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasPhysicsStateChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasPhysicsStateChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasPhysicsStateChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPhysicsStateChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_position
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_position
void Normal::Realtime::RealtimeTransformModel::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_rotation
::UnityEngine::Quaternion Normal::Realtime::RealtimeTransformModel::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_rotation
void Normal::Realtime::RealtimeTransformModel::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_scale
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_scale
void Normal::Realtime::RealtimeTransformModel::set_scale(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_velocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_velocity
void Normal::Realtime::RealtimeTransformModel::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_angularVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_angularVelocity
void Normal::Realtime::RealtimeTransformModel::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsBodyTimeOffset
float Normal::Realtime::RealtimeTransformModel::get_physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsBodyTimeOffset
void Normal::Realtime::RealtimeTransformModel::set_physicsBodyTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsState
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::get_physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeTransformModel::PhysicsState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsState
void Normal::Realtime::RealtimeTransformModel::set_physicsState(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsStateTimeOffset
float Normal::Realtime::RealtimeTransformModel::get_physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsStateTimeOffset
void Normal::Realtime::RealtimeTransformModel::set_physicsStateTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.add_onWillWrite
void Normal::Realtime::RealtimeTransformModel::add_onWillWrite(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::add_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.remove_onWillWrite
void Normal::Realtime::RealtimeTransformModel::remove_onWillWrite(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::remove_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.add_onDidRead
void Normal::Realtime::RealtimeTransformModel::add_onDidRead(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::add_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.remove_onDidRead
void Normal::Realtime::RealtimeTransformModel::remove_onDidRead(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::remove_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsVectorNaN
bool Normal::Realtime::RealtimeTransformModel::IsVectorNaN(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsVectorNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsVectorNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsVectorEqual
bool Normal::Realtime::RealtimeTransformModel::IsVectorEqual(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsVectorEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsVectorEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsQuaternionNaN
bool Normal::Realtime::RealtimeTransformModel::IsQuaternionNaN(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsQuaternionNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsQuaternionNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsQuaternionEqual
bool Normal::Realtime::RealtimeTransformModel::IsQuaternionEqual(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsQuaternionEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsQuaternionEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafePosition
void Normal::Realtime::RealtimeTransformModel::SetSafePosition(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeRotation
void Normal::Realtime::RealtimeTransformModel::SetSafeRotation(::UnityEngine::Quaternion r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeScale
void Normal::Realtime::RealtimeTransformModel::SetSafeScale(::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeVelocity
void Normal::Realtime::RealtimeTransformModel::SetSafeVelocity(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeAngularVelocity
void Normal::Realtime::RealtimeTransformModel::SetSafeAngularVelocity(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.GetPhysicsFlag
bool Normal::Realtime::RealtimeTransformModel::GetPhysicsFlag(::Normal::Realtime::RealtimeTransformModel::PhysicsState flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::GetPhysicsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhysicsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetPhysicsFlag
void Normal::Realtime::RealtimeTransformModel::SetPhysicsFlag(::Normal::Realtime::RealtimeTransformModel::PhysicsState flag, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetPhysicsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnWillWrite
void Normal::Realtime::RealtimeTransformModel::OnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnDidReadProperties
void Normal::Realtime::RealtimeTransformModel::OnDidReadProperties(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnDidReadProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnDidReadPropertiesWrapper
void Normal::Realtime::RealtimeTransformModel::OnDidReadPropertiesWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnDidReadPropertiesWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadPropertiesWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.UpdateBackingFields
void Normal::Realtime::RealtimeTransformModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnParentReplaced
void Normal::Realtime::RealtimeTransformModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnParentReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousParent), ::il2cpp_utils::ExtractType(currentParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.WriteLength
int Normal::Realtime::RealtimeTransformModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.Write
void Normal::Realtime::RealtimeTransformModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.Read
void Normal::Realtime::RealtimeTransformModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState
#include "Normal/Realtime/RealtimeTransformModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState Default
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState Default
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_Default(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState ShouldExtrapolate
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_ShouldExtrapolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_ShouldExtrapolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "ShouldExtrapolate"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState ShouldExtrapolate
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_ShouldExtrapolate(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_ShouldExtrapolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "ShouldExtrapolate", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState UseGravity
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_UseGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_UseGravity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "UseGravity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState UseGravity
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_UseGravity(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_UseGravity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "UseGravity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsKinematic
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsKinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsKinematic"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsKinematic
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsKinematic(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsKinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsKinematic", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsSleeping
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsSleeping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsSleeping"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsSleeping
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsSleeping(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsSleeping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsSleeping", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState MaintainOwnershipWhileSleeping
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_MaintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_MaintainOwnershipWhileSleeping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "MaintainOwnershipWhileSleeping"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState MaintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_MaintainOwnershipWhileSleeping(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_MaintainOwnershipWhileSleeping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "MaintainOwnershipWhileSleeping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::RealtimeTransformModel::PhysicsState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformWriteHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.Invoke
void Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::Invoke(::Normal::Realtime::RealtimeTransformModel* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::BeginInvoke(::Normal::Realtime::RealtimeTransformModel* sender, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.EndInvoke
void Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformReadHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.Invoke
void Normal::Realtime::RealtimeTransformModel::TransformReadHandler::Invoke(::Normal::Realtime::RealtimeTransformModel* sender, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeTransformModel::TransformReadHandler::BeginInvoke(::Normal::Realtime::RealtimeTransformModel* sender, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(changes), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, changes, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.EndInvoke
void Normal::Realtime::RealtimeTransformModel::TransformReadHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeTransformModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Position
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Position"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Position
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Position(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Rotation
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Rotation
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Rotation(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Scale
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Scale
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Scale(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Velocity
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Velocity
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Velocity(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID AngularVelocity
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID AngularVelocity
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_AngularVelocity(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsState
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsState"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsState
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsState(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsState", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsBodyTimeOffset
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsBodyTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsBodyTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsBodyTimeOffset
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsBodyTimeOffset(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsBodyTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsBodyTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsStateTimeOffset
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsStateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsStateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsStateTimeOffset
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsStateTimeOffset(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsStateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsStateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Normal::Realtime::RealtimeTransformModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_position
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_rotation
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_scale
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_velocity
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_angularVelocity
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsState
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsBodyTimeOffset
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsStateTimeOffset
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_DELAY
float Normal::Realtime::InterpolationDelay::_get_DEFAULT_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_get_DEFAULT_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "InterpolationDelay", "DEFAULT_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_DELAY
void Normal::Realtime::InterpolationDelay::_set_DEFAULT_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_set_DEFAULT_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "InterpolationDelay", "DEFAULT_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAXIMUM_DELAY
float Normal::Realtime::InterpolationDelay::_get_MAXIMUM_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_get_MAXIMUM_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "InterpolationDelay", "MAXIMUM_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAXIMUM_DELAY
void Normal::Realtime::InterpolationDelay::_set_MAXIMUM_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_set_MAXIMUM_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "InterpolationDelay", "MAXIMUM_DELAY", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <delay>k__BackingField
float& Normal::Realtime::InterpolationDelay::dyn_$delay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn_$delay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<delay>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <basis>k__BackingField
double& Normal::Realtime::InterpolationDelay::dyn_$basis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn_$basis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<basis>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& Normal::Realtime::InterpolationDelay::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _delayIncrement
float& Normal::Realtime::InterpolationDelay::dyn__delayIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__delayIncrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayIncrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _delayDecrement
float& Normal::Realtime::InterpolationDelay::dyn__delayDecrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__delayDecrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayDecrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _penaltyCounter
int& Normal::Realtime::InterpolationDelay::dyn__penaltyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__penaltyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_penaltyCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _correctCounter
int& Normal::Realtime::InterpolationDelay::dyn__correctCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__correctCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_correctCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.get_delay
float Normal::Realtime::InterpolationDelay::get_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::get_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.set_delay
void Normal::Realtime::InterpolationDelay::set_delay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::set_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.get_basis
double Normal::Realtime::InterpolationDelay::get_basis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::get_basis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_basis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.set_basis
void Normal::Realtime::InterpolationDelay::set_basis(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::set_basis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_basis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.Reset
void Normal::Realtime::InterpolationDelay::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.Adjust
void Normal::Realtime::InterpolationDelay::Adjust(double sent, double arrived, double sendrate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sent), ::il2cpp_utils::ExtractType(arrived), ::il2cpp_utils::ExtractType(sendrate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sent, arrived, sendrate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RigidbodyPhysicsBodyFrame
#include "Normal/Realtime/RigidbodyPhysicsBodyFrame.hpp"
// Including type: Normal.Realtime.TimelineEntry`1
#include "Normal/Realtime/TimelineEntry_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
::UnityEngine::Quaternion& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 scale
::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 velocity
::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 angularVelocity
::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_angularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::RigidbodyPhysicsBodyFrame::RigidbodyPhysicsBodyFrame(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angularVelocity)
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame.Interpolate
::Normal::Realtime::RigidbodyPhysicsBodyFrame Normal::Realtime::RigidbodyPhysicsBodyFrame::Interpolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* a, ::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RigidbodyPhysicsBodyFrame", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RigidbodyPhysicsBodyFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame.Extrapolate
::Normal::Realtime::RigidbodyPhysicsBodyFrame Normal::Realtime::RigidbodyPhysicsBodyFrame::Extrapolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* from, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::Extrapolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RigidbodyPhysicsBodyFrame", "Extrapolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RigidbodyPhysicsBodyFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RigidbodyPhysicsStateFrame
#include "Normal/Realtime/RigidbodyPhysicsStateFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useGravity
bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_useGravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isKinematic
bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isKinematic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isSleeping
bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isSleeping");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSleeping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsStateFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::RigidbodyPhysicsStateFrame::RigidbodyPhysicsStateFrame(bool useGravity, bool isKinematic, bool isSleeping)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.StandardTransformFrame
#include "Normal/Realtime/StandardTransformFrame.hpp"
// Including type: Normal.Realtime.TimelineEntry`1
#include "Normal/Realtime/TimelineEntry_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
::UnityEngine::Vector3& Normal::Realtime::StandardTransformFrame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
::UnityEngine::Quaternion& Normal::Realtime::StandardTransformFrame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 scale
::UnityEngine::Vector3& Normal::Realtime::StandardTransformFrame::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.StandardTransformFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::StandardTransformFrame::StandardTransformFrame(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale)
// Autogenerated method: Normal.Realtime.StandardTransformFrame.Interpolate
::Normal::Realtime::StandardTransformFrame Normal::Realtime::StandardTransformFrame::Interpolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::StandardTransformFrame>* a, ::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::StandardTransformFrame>* b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "StandardTransformFrame", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::StandardTransformFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimeTransformStrategy
#include "Normal/Realtime/IRealtimeTransformStrategy.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.get_isInterpolationWarmedUp
bool Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.Reset
void Normal::Realtime::IRealtimeTransformStrategy::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.Update
void Normal::Realtime::IRealtimeTransformStrategy::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.OnRemoteModelDidRead
void Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.OnLocalModelWillWrite
void Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformInterpolation
#include "Normal/Realtime/RealtimeTransformInterpolation.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.Timeline`1
#include "Normal/Realtime/Timeline_1.hpp"
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformInterpolation::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.StandardTransformFrame> _timeline
::Normal::Realtime::Timeline_1<::Normal::Realtime::StandardTransformFrame>*& Normal::Realtime::RealtimeTransformInterpolation::dyn__timeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__timeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::StandardTransformFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.InterpolationDelay _delay
::Normal::Realtime::InterpolationDelay*& Normal::Realtime::RealtimeTransformInterpolation::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<::Normal::Realtime::InterpolationDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.get_roomTime
double Normal::Realtime::RealtimeTransformInterpolation::get_roomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::get_roomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformInterpolation::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.Reset
void Normal::Realtime::RealtimeTransformInterpolation::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.Update
void Normal::Realtime::RealtimeTransformInterpolation::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformInterpolation::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformInterpolation::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.RemoteUpdate
void Normal::Realtime::RealtimeTransformInterpolation::RemoteUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::RemoteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.ResetWithLocalModel
void Normal::Realtime::RealtimeTransformInterpolation::ResetWithLocalModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::ResetWithLocalModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithLocalModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.ResetWithRemoteModel
void Normal::Realtime::RealtimeTransformInterpolation::ResetWithRemoteModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::ResetWithRemoteModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithRemoteModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.AddTimelineFrame
void Normal::Realtime::RealtimeTransformInterpolation::AddTimelineFrame(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::AddTimelineFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTimelineFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.IsInterpolationBodyChanged
bool Normal::Realtime::RealtimeTransformInterpolation::IsInterpolationBodyChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::IsInterpolationBodyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformInterpolation", "IsInterpolationBodyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformRigidbody
#include "Normal/Realtime/RealtimeTransformRigidbody.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Normal.Realtime.Timeline`1
#include "Normal/Realtime/Timeline_1.hpp"
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformRigidbody::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rigidbody _rigidbody
::UnityEngine::Rigidbody*& Normal::Realtime::RealtimeTransformRigidbody::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.RigidbodyPhysicsBodyFrame> _physicsBodyTimeline
::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>*& Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsBodyTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsBodyTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.RigidbodyPhysicsStateFrame> _physicsStateTimeline
::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsStateFrame>*& Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsStateTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsStateTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsStateFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.InterpolationDelay _delay
::Normal::Realtime::InterpolationDelay*& Normal::Realtime::RealtimeTransformRigidbody::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<::Normal::Realtime::InterpolationDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _fixedRoomTime
double& Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedRoomTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixedRoomTimeInitialized
bool& Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTimeInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedRoomTimeInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _velocityPrevWrite
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformRigidbody::dyn__velocityPrevWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__velocityPrevWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityPrevWrite"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocityPrevWrite
::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformRigidbody::dyn__angularVelocityPrevWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__angularVelocityPrevWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocityPrevWrite"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.get_roomTime
double Normal::Realtime::RealtimeTransformRigidbody::get_roomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::get_roomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformRigidbody::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::ResetFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.InitializeFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::InitializeFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::InitializeFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IncrementFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::IncrementFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IncrementFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.CorrectFixedRoomTimeDrift
void Normal::Realtime::RealtimeTransformRigidbody::CorrectFixedRoomTimeDrift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::CorrectFixedRoomTimeDrift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CorrectFixedRoomTimeDrift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ReconstructFixedTimestamp
double Normal::Realtime::RealtimeTransformRigidbody::ReconstructFixedTimestamp(double packetRoomTime, float fixedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ReconstructFixedTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "ReconstructFixedTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetRoomTime), ::il2cpp_utils::ExtractType(fixedTimeOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packetRoomTime, fixedTimeOffset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.Reset
void Normal::Realtime::RealtimeTransformRigidbody::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.Update
void Normal::Realtime::RealtimeTransformRigidbody::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.FixedUpdate
void Normal::Realtime::RealtimeTransformRigidbody::FixedUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformRigidbody::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformRigidbody::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetWithLocalModel
void Normal::Realtime::RealtimeTransformRigidbody::ResetWithLocalModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetWithLocalModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithLocalModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetWithRemoteModel
void Normal::Realtime::RealtimeTransformRigidbody::ResetWithRemoteModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetWithRemoteModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithRemoteModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.RemoteFixedUpdate
void Normal::Realtime::RealtimeTransformRigidbody::RemoteFixedUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::RemoteFixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteFixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ClearTimelines
void Normal::Realtime::RealtimeTransformRigidbody::ClearTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ClearTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IsPhysicsBodyChanged
bool Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsBodyChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsBodyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "IsPhysicsBodyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IsPhysicsStateChanged
bool Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsStateChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "IsPhysicsStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetPhysicsBodyValues
void Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsBodyValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsBodyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsBodyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale, velocity, angularVelocity);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetPhysicsStateValues
void Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsStateValues(bool useGravity, bool isKinematic, bool isSleeping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsStateValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsStateValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(isKinematic), ::il2cpp_utils::ExtractType(isSleeping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useGravity, isKinematic, isSleeping);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ClearOwnershipIfSleeping
void Normal::Realtime::RealtimeTransformRigidbody::ClearOwnershipIfSleeping(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ClearOwnershipIfSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnershipIfSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.AddPhysicsBodyFrame
void Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsBodyFrame(::Normal::Realtime::RealtimeTransformModel* model, double timestamp, bool useModelVelocity, bool useModelAngularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsBodyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPhysicsBodyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(useModelVelocity), ::il2cpp_utils::ExtractType(useModelAngularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, timestamp, useModelVelocity, useModelAngularVelocity);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.AddPhysicsStateFrame
void Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsStateFrame(::Normal::Realtime::RealtimeTransformModel* model, double timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsStateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPhysicsStateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, timestamp);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetModelFromRigidbody
void Normal::Realtime::RealtimeTransformRigidbody::SetModelFromRigidbody(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetModelFromRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelFromRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ShouldSendVelocity
bool Normal::Realtime::RealtimeTransformRigidbody::ShouldSendVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ShouldSendVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ShouldSendAngularVelocity
bool Normal::Realtime::RealtimeTransformRigidbody::ShouldSendAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ShouldSendAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionEnter
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionExit
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionExit(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionStay
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.TakeOverCollidingRigidbodyIfOwnedByWorld
void Normal::Realtime::RealtimeTransformRigidbody::TakeOverCollidingRigidbodyIfOwnedByWorld(::UnityEngine::Rigidbody* otherRigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::TakeOverCollidingRigidbodyIfOwnedByWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeOverCollidingRigidbodyIfOwnedByWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherRigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherRigidbody);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.DeriveVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformRigidbody::DeriveVelocity(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::DeriveVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "DeriveVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, dt);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.DeriveAngularVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformRigidbody::DeriveAngularVelocity(::UnityEngine::Quaternion start, ::UnityEngine::Quaternion end, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::DeriveAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "DeriveAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, dt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformSnapping
#include "Normal/Realtime/RealtimeTransformSnapping.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformSnapping::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformSnapping::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.Reset
void Normal::Realtime::RealtimeTransformSnapping::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.Update
void Normal::Realtime::RealtimeTransformSnapping::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformSnapping::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformSnapping::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CollectionUtilities
#include "Normal/Realtime/CollectionUtilities.hpp"
// Including type: Normal.Realtime.Serialization.IModel
#include "Normal/Realtime/Serialization/IModel.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.CollectionUtilities.SetParentOnIModel
void Normal::Realtime::CollectionUtilities::SetParentOnIModel(::Normal::Realtime::Serialization::IModel* child, ::Normal::Realtime::RealtimeModel* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CollectionUtilities::SetParentOnIModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "CollectionUtilities", "SetParentOnIModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.PhysXEmulation
#include "Normal/Realtime/PhysXEmulation.hpp"
// Including type: UnityEngine.RigidbodyConstraints
#include "UnityEngine/RigidbodyConstraints.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.PhysXEmulation.SimulatePhysX
float Normal::Realtime::PhysXEmulation::SimulatePhysX(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity, bool useGravity, ::UnityEngine::Vector3 gravity, float linearDamping, float angularDamping, float maxLinearVelocity, float maxAngularVelocity, ::UnityEngine::RigidbodyConstraints constraints, float deltaTime, float timeStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PhysXEmulation::SimulatePhysX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "PhysXEmulation", "SimulatePhysX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity), ::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(gravity), ::il2cpp_utils::ExtractType(linearDamping), ::il2cpp_utils::ExtractType(angularDamping), ::il2cpp_utils::ExtractType(maxLinearVelocity), ::il2cpp_utils::ExtractType(maxAngularVelocity), ::il2cpp_utils::ExtractType(constraints), ::il2cpp_utils::ExtractType(deltaTime), ::il2cpp_utils::ExtractType(timeStep)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(position), byref(rotation), byref(linearVelocity), byref(angularVelocity), useGravity, gravity, linearDamping, angularDamping, maxLinearVelocity, maxAngularVelocity, constraints, deltaTime, timeStep);
}
// Autogenerated method: Normal.Realtime.PhysXEmulation.SimulatePhysXTick
void Normal::Realtime::PhysXEmulation::SimulatePhysXTick(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity, bool useGravity, ::UnityEngine::Vector3 gravity, float linearDamping, float angularDamping, float maxLinearVelocity, float maxAngularVelocity, ::UnityEngine::RigidbodyConstraints constraints, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PhysXEmulation::SimulatePhysXTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "PhysXEmulation", "SimulatePhysXTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity), ::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(gravity), ::il2cpp_utils::ExtractType(linearDamping), ::il2cpp_utils::ExtractType(angularDamping), ::il2cpp_utils::ExtractType(maxLinearVelocity), ::il2cpp_utils::ExtractType(maxAngularVelocity), ::il2cpp_utils::ExtractType(constraints), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(position), byref(rotation), byref(linearVelocity), byref(angularVelocity), useGravity, gravity, linearDamping, angularDamping, maxLinearVelocity, maxAngularVelocity, constraints, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimePrefabMetadata
#include "Normal/Realtime/RealtimePrefabMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimePrefabLoadDelegate.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::IRealtimePrefabLoadDelegate::LoadRealtimePrefab(::Normal::Realtime::RealtimePrefabMetadata prefabMetadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabLoadDelegate::LoadRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabMetadata)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabMetadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimePrefabInstantiateDelegate
#include "Normal/Realtime/IRealtimePrefabInstantiateDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimePrefabInstantiateDelegate.InstantiateRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::IRealtimePrefabInstantiateDelegate::InstantiateRealtimePrefab(::UnityEngine::GameObject* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabInstantiateDelegate::InstantiateRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Normal.Realtime.IRealtimePrefabInstantiateDelegate.DestroyRealtimePrefab
void Normal::Realtime::IRealtimePrefabInstantiateDelegate::DestroyRealtimePrefab(::UnityEngine::GameObject* prefabInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabInstantiateDelegate::DestroyRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimePrefabExtensions
#include "Normal/Realtime/RealtimePrefabExtensions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimePrefabExtensions.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::RealtimePrefabExtensions::LoadRealtimePrefab(::Normal::Realtime::IRealtimePrefabLoadDelegate* prefabDelegate, ::StringW prefabName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimePrefabExtensions::LoadRealtimePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimePrefabExtensions", "LoadRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabDelegate), ::il2cpp_utils::ExtractType(prefabName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabDelegate, prefabName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.DefaultRealtimePrefabDelegate
#include "Normal/Realtime/DefaultRealtimePrefabDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimePrefabMetadata
#include "Normal/Realtime/RealtimePrefabMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::DefaultRealtimePrefabDelegate::LoadRealtimePrefab(::Normal::Realtime::RealtimePrefabMetadata prefabMetadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::LoadRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabMetadata)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabMetadata);
}
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.InstantiateRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::DefaultRealtimePrefabDelegate::InstantiateRealtimePrefab(::UnityEngine::GameObject* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::InstantiateRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.DestroyRealtimePrefab
void Normal::Realtime::DefaultRealtimePrefabDelegate::DestroyRealtimePrefab(::UnityEngine::GameObject* prefabInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::DestroyRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfirmedProperty.Confirm
void Normal::Realtime::IConfirmedProperty::Confirm(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfirmedProperty::Confirm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Confirm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.IConfirmedProperty.UnsubscribeCallback
void Normal::Realtime::IConfirmedProperty::UnsubscribeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfirmedProperty::UnsubscribeCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeWireTypeAttribute
#include "Normal/Realtime/RealtimeWireTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType type
::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::RealtimeWireTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeWireTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] _changeset
::ArrayW<bool>& Normal::Realtime::PropertyChangeSet::dyn__changeset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::dyn__changeset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeset"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <anyPropertiesChanged>k__BackingField
bool& Normal::Realtime::PropertyChangeSet::dyn_$anyPropertiesChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::dyn_$anyPropertiesChanged$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anyPropertiesChanged>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.get_anyPropertiesChanged
bool Normal::Realtime::PropertyChangeSet::get_anyPropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::get_anyPropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anyPropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.set_anyPropertiesChanged
void Normal::Realtime::PropertyChangeSet::set_anyPropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::set_anyPropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anyPropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.get_Item
bool Normal::Realtime::PropertyChangeSet::get_Item(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.Clear
void Normal::Realtime::PropertyChangeSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.SetPropertyChanged
void Normal::Realtime::PropertyChangeSet::SetPropertyChanged(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::SetPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isFreshModel>k__BackingField
bool& Normal::Realtime::RealtimeModel::dyn_$isFreshModel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn_$isFreshModel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isFreshModel>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.MetaModel _metaModel
::Normal::Realtime::Serialization::MetaModel*& Normal::Realtime::RealtimeModel::dyn__metaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__metaModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metaModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::MetaModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _parent
::Normal::Realtime::RealtimeModel*& Normal::Realtime::RealtimeModel::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel[] _children
::ArrayW<::Normal::Realtime::RealtimeModel*>& Normal::Realtime::RealtimeModel::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::RealtimeModel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
::Normal::Realtime::Room*& Normal::Realtime::RealtimeModel::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Normal.Realtime.RealtimeModelEvent,System.Action> _callbacks
::System::Collections::Generic::Dictionary_2<::Normal::Realtime::RealtimeModelEvent, ::System::Action*>*& Normal::Realtime::RealtimeModel::dyn__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Normal::Realtime::RealtimeModelEvent, ::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.StreamContext _cachedReliableContext
::Normal::Realtime::Serialization::StreamContext& Normal::Realtime::RealtimeModel::dyn__cachedReliableContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedReliableContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedReliableContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cachedReliableLength
int& Normal::Realtime::RealtimeModel::dyn__cachedReliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedReliableLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedReliableLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.StreamContext _cachedUnreliableContext
::Normal::Realtime::Serialization::StreamContext& Normal::Realtime::RealtimeModel::dyn__cachedUnreliableContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedUnreliableContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedUnreliableContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cachedUnreliableLength
int& Normal::Realtime::RealtimeModel::dyn__cachedUnreliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedUnreliableLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedUnreliableLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isFreshModel
bool Normal::Realtime::RealtimeModel::get_isFreshModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_isFreshModel
void Normal::Realtime::RealtimeModel::set_isFreshModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_isFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_hasMetaModel
bool Normal::Realtime::RealtimeModel::get_hasMetaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_hasMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_preventOwnershipTakeover
bool Normal::Realtime::RealtimeModel::get_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_preventOwnershipTakeover
void Normal::Realtime::RealtimeModel::set_preventOwnershipTakeover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenOwnerOrLastClientLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenOwnerOrLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isPersistent
bool Normal::Realtime::RealtimeModel::get_isPersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenLastClientLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenLastClientLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenOwnerLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenOwnerLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenOwnerLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_parent
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeModel::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeModel::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isRoomConnected
bool Normal::Realtime::RealtimeModel::get_isRoomConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isRoomConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRoomConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerID
int Normal::Realtime::RealtimeModel::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerIDSelf
int Normal::Realtime::RealtimeModel::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerIDSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerIDInHierarchy
int Normal::Realtime::RealtimeModel::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerIDInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnownedSelf
bool Normal::Realtime::RealtimeModel::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnownedSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnownedInHierarchy
bool Normal::Realtime::RealtimeModel::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnownedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedRemotelySelf
bool Normal::Realtime::RealtimeModel::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedRemotelySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::RealtimeModel::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedRemotelyInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedLocallySelf
bool Normal::Realtime::RealtimeModel::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedLocallySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::RealtimeModel::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedLocallyInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isCachedLengthDirty
bool Normal::Realtime::RealtimeModel::get_isCachedLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isCachedLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCachedLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isReliableLengthDirty
bool Normal::Realtime::RealtimeModel::get_isReliableLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isReliableLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReliableLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnreliableLengthDirty
bool Normal::Realtime::RealtimeModel::get_isUnreliableLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnreliableLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnreliableLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetMetaModel
void Normal::Realtime::RealtimeModel::SetMetaModel(::Normal::Realtime::Serialization::MetaModel* metaModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metaModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metaModel);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetLifetimeFlag
bool Normal::Realtime::RealtimeModel::GetLifetimeFlag(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetLifetimeFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLifetimeFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetLifetimeFlag
void Normal::Realtime::RealtimeModel::SetLifetimeFlag(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags flag, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetLifetimeFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLifetimeFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.WriteMetaModel
void Normal::Realtime::RealtimeModel::WriteMetaModel(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::WriteMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.ReadMetaModel
void Normal::Realtime::RealtimeModel::ReadMetaModel(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::ReadMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.MetaModelWriteLength
int Normal::Realtime::RealtimeModel::MetaModelWriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::MetaModelWriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MetaModelWriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetParent
void Normal::Realtime::RealtimeModel::SetParent(::Normal::Realtime::RealtimeModel* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetChildren
void Normal::Realtime::RealtimeModel::SetChildren(::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::RealtimeModel*>* children) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(children)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, children);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnParentReplaced
void Normal::Realtime::RealtimeModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnParentReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousParent), ::il2cpp_utils::ExtractType(currentParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetRoom
void Normal::Realtime::RealtimeModel::SetRoom(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.AttachAllCallbacks
void Normal::Realtime::RealtimeModel::AttachAllCallbacks(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::AttachAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.DetachAllCallbacks
void Normal::Realtime::RealtimeModel::DetachAllCallbacks(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::DetachAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.AttachModelEvent
void Normal::Realtime::RealtimeModel::AttachModelEvent(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::AttachModelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachModelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.DetachModelEvent
void Normal::Realtime::RealtimeModel::DetachModelEvent(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::DetachModelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachModelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SubscribeEventCallback
void Normal::Realtime::RealtimeModel::SubscribeEventCallback(::Normal::Realtime::RealtimeModelEvent event, ::System::Action* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SubscribeEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event), ::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event, handler);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.UnsubscribeEventCallback
void Normal::Realtime::RealtimeModel::UnsubscribeEventCallback(::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::UnsubscribeEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnWillWrite
void Normal::Realtime::RealtimeModel::OnWillWrite(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidWrite
void Normal::Realtime::RealtimeModel::OnDidWrite(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnWillRead
void Normal::Realtime::RealtimeModel::OnWillRead(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidRead
void Normal::Realtime::RealtimeModel::OnDidRead(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidReadProperties
void Normal::Realtime::RealtimeModel::OnDidReadProperties(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidReadProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SafeInvokeCallback
void Normal::Realtime::RealtimeModel::SafeInvokeCallback(::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SafeInvokeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeInvokeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetOwnerIDSelf
int Normal::Realtime::RealtimeModel::GetOwnerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetOwnerIDSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetOwnerIDInHierarchy
int Normal::Realtime::RealtimeModel::GetOwnerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetOwnerIDInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.RequestOwnership
void Normal::Realtime::RealtimeModel::RequestOwnership(int ownerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerID);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.RequestOwnership
void Normal::Realtime::RealtimeModel::RequestOwnership(bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetOwnership
void Normal::Realtime::RealtimeModel::SetOwnership(int ownerID, bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerID), ::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerID, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.ClearOwnership
void Normal::Realtime::RealtimeModel::ClearOwnership(bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::ClearOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateCachedLength
void Normal::Realtime::RealtimeModel::InvalidateCachedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateCachedLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateCachedLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateReliableLength
void Normal::Realtime::RealtimeModel::InvalidateReliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateReliableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateReliableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateUnreliableLength
void Normal::Realtime::RealtimeModel::InvalidateUnreliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateUnreliableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateUnreliableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateContextLength
void Normal::Realtime::RealtimeModel::InvalidateContextLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateContextLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateContextLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamWriter_WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamWriter.WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamWriter.WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.WriteLength
int Normal::Realtime::RealtimeModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamWriter_Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamWriter.Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamWriter.Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Write
void Normal::Realtime::RealtimeModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamReader_Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamReader.Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamReader.Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Read
void Normal::Realtime::RealtimeModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeModelEvent
#include "Normal/Realtime/RealtimeModelEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnWillWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnWillWrite"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
void Normal::Realtime::RealtimeModelEvent::_set_OnWillWrite(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnWillWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnWillWrite", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidWrite"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
void Normal::Realtime::RealtimeModelEvent::_set_OnDidWrite(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidWrite", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnWillRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnWillRead"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
void Normal::Realtime::RealtimeModelEvent::_set_OnWillRead(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnWillRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnWillRead", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidRead"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
void Normal::Realtime::RealtimeModelEvent::_set_OnDidRead(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidRead", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidReadProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidReadProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidReadProperties"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
void Normal::Realtime::RealtimeModelEvent::_set_OnDidReadProperties(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidReadProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidReadProperties", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::RealtimeModelEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent
#include "Normal/Realtime/Realtime_RealtimeEvent.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1
#include "Normal/Realtime/Realtime_--c__DisplayClass81_1.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84
#include "Normal/Realtime/Realtime_-ConnectSceneViewsToDatastoreTimeout-d__84.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0
#include "Normal/Realtime/Realtime_--c__DisplayClass85_0.hpp"
// Including type: Normal.NormcoreAppSettings
#include "Normal/NormcoreAppSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Normal.Realtime.Serialization.IModel
#include "Normal/Realtime/Serialization/IModel.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<Normal.Realtime.Realtime> __instances
::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>* Normal::Realtime::Realtime::_get___instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get___instances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>*>("Normal.Realtime", "Realtime", "__instances"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<Normal.Realtime.Realtime> __instances
void Normal::Realtime::Realtime::_set___instances(::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set___instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "__instances", value));
}
// Autogenerated static field getter
// Get static field: static private System.String UNSUPPORTED_INSTANTIATE_MESSAGE
::StringW Normal::Realtime::Realtime::_get_UNSUPPORTED_INSTANTIATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get_UNSUPPORTED_INSTANTIATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime", "Realtime", "UNSUPPORTED_INSTANTIATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.String UNSUPPORTED_INSTANTIATE_MESSAGE
void Normal::Realtime::Realtime::_set_UNSUPPORTED_INSTANTIATE_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set_UNSUPPORTED_INSTANTIATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "UNSUPPORTED_INSTANTIATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.String UNSUPPORTED_DESTROY_MESSAGE
::StringW Normal::Realtime::Realtime::_get_UNSUPPORTED_DESTROY_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get_UNSUPPORTED_DESTROY_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime", "Realtime", "UNSUPPORTED_DESTROY_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.String UNSUPPORTED_DESTROY_MESSAGE
void Normal::Realtime::Realtime::_set_UNSUPPORTED_DESTROY_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set_UNSUPPORTED_DESTROY_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "UNSUPPORTED_DESTROY_MESSAGE", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent didConnectToRoom
::Normal::Realtime::Realtime::RealtimeEvent*& Normal::Realtime::Realtime::dyn_didConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn_didConnectToRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didConnectToRoom"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::RealtimeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent didDisconnectFromRoom
::Normal::Realtime::Realtime::RealtimeEvent*& Normal::Realtime::Realtime::dyn_didDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn_didDisconnectFromRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDisconnectFromRoom"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::RealtimeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _obsoleteAppKey
::StringW& Normal::Realtime::Realtime::dyn__obsoleteAppKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__obsoleteAppKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obsoleteAppKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.NormcoreAppSettings _normcoreAppSettings
::Normal::NormcoreAppSettings*& Normal::Realtime::Realtime::dyn__normcoreAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__normcoreAppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normcoreAppSettings"))->offset;
  return *reinterpret_cast<::Normal::NormcoreAppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _roomToJoinOnStart
::StringW& Normal::Realtime::Realtime::dyn__roomToJoinOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__roomToJoinOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomToJoinOnStart"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _joinRoomOnStart
bool& Normal::Realtime::Realtime::dyn__joinRoomOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__joinRoomOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinRoomOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
::Normal::Realtime::Room*& Normal::Realtime::Realtime::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> _sceneViews
::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::dyn__sceneViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__sceneViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewsConnected
bool& Normal::Realtime::Realtime::dyn__sceneViewsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__sceneViewsConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewsConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> _prefabViews
::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::dyn__prefabViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__prefabViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _lastPrefabInstantiated
::UnityEngine::GameObject*& Normal::Realtime::Realtime::dyn__lastPrefabInstantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__lastPrefabInstantiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPrefabInstantiated"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _connectSceneViewsTimeoutRoutine
::UnityEngine::Coroutine*& Normal::Realtime::Realtime::dyn__connectSceneViewsTimeoutRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__connectSceneViewsTimeoutRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectSceneViewsTimeoutRoutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime.get_instances
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::Realtime*>* Normal::Realtime::Realtime::get_instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_instances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "get_instances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::Realtime*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_roomToJoinOnStart
::StringW Normal::Realtime::Realtime::get_roomToJoinOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_roomToJoinOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomToJoinOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_joinRoomOnStart
bool Normal::Realtime::Realtime::get_joinRoomOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_joinRoomOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_joinRoomOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_normcoreAppSettings
::Normal::NormcoreAppSettings* Normal::Realtime::Realtime::get_normcoreAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_normcoreAppSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normcoreAppSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreAppSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.set_normcoreAppSettings
void Normal::Realtime::Realtime::set_normcoreAppSettings(::Normal::NormcoreAppSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::set_normcoreAppSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normcoreAppSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.get_room
::Normal::Realtime::Room* Normal::Realtime::Realtime::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.set_room
void Normal::Realtime::Realtime::set_room(::Normal::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::set_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.get_connecting
bool Normal::Realtime::Realtime::get_connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_connecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_connected
bool Normal::Realtime::Realtime::get_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_disconnected
bool Normal::Realtime::Realtime::get_disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_disconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_clientID
int Normal::Realtime::Realtime::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.add_didConnectToRoom
void Normal::Realtime::Realtime::add_didConnectToRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::add_didConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.remove_didConnectToRoom
void Normal::Realtime::Realtime::remove_didConnectToRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::remove_didConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.add_didDisconnectFromRoom
void Normal::Realtime::Realtime::add_didDisconnectFromRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::add_didDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.remove_didDisconnectFromRoom
void Normal::Realtime::Realtime::remove_didDisconnectFromRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::remove_didDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::System::Nullable_1<::Normal::Realtime::Realtime::InstantiateOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, options);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::System::Nullable_1<::Normal::Realtime::Realtime::InstantiateOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, options);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.FindRealtimeInstance
::Normal::Realtime::Realtime* Normal::Realtime::Realtime::FindRealtimeInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FindRealtimeInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "FindRealtimeInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.RepositionRealtimePrefab
void Normal::Realtime::Realtime::RepositionRealtimePrefab(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RepositionRealtimePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "RepositionRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, position, rotation);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation, parent);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::UnityEngine::GameObject* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyObject
void Normal::Realtime::Realtime::DestroyObject(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyObject
void Normal::Realtime::Realtime::DestroyObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Realtime.Awake
void Normal::Realtime::Realtime::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Start
void Normal::Realtime::Realtime::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.OnDestroy
void Normal::Realtime::Realtime::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.OnApplicationQuit
void Normal::Realtime::Realtime::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Update
void Normal::Realtime::Realtime::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.FireDidConnectToRoom
void Normal::Realtime::Realtime::FireDidConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FireDidConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.FireDidDisconnectFromRoom
void Normal::Realtime::Realtime::FireDidDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FireDidDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Connect
void Normal::Realtime::Realtime::Connect(::StringW roomName, ::Normal::Realtime::Serialization::IModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, roomModel);
}
// Autogenerated method: Normal.Realtime.Realtime.Connect
void Normal::Realtime::Realtime::Connect(::StringW roomName, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, roomModel);
}
// Autogenerated method: Normal.Realtime.Realtime.Disconnect
void Normal::Realtime::Realtime::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.RoomConnectionStateChanged
void Normal::Realtime::Realtime::RoomConnectionStateChanged(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RoomConnectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomConnectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(previousConnectionState), ::il2cpp_utils::ExtractType(connectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, previousConnectionState, connectionState);
}
// Autogenerated method: Normal.Realtime.Realtime.SetRoom
void Normal::Realtime::Realtime::SetRoom(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::SetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.Realtime.RegisterSceneRealtimeView
void Normal::Realtime::Realtime::RegisterSceneRealtimeView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RegisterSceneRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSceneRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.Realtime.UnregisterSceneRealtimeView
void Normal::Realtime::Realtime::UnregisterSceneRealtimeView(::Normal::Realtime::RealtimeView* view, bool isViewDestroyed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::UnregisterSceneRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSceneRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(isViewDestroyed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, isViewDestroyed);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewsToDatastore
void Normal::Realtime::Realtime::ConnectSceneViewsToDatastore(::System::Action* didConnectSceneViewsToDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewsToDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewsToDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(didConnectSceneViewsToDatastore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, didConnectSceneViewsToDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.StartConnectSceneViewsTimeout
void Normal::Realtime::Realtime::StartConnectSceneViewsTimeout(::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>* viewsThatAreConnectingToTheDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::StartConnectSceneViewsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartConnectSceneViewsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewsThatAreConnectingToTheDatastore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewsThatAreConnectingToTheDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.StopConnectSceneViewsTimeout
void Normal::Realtime::Realtime::StopConnectSceneViewsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::StopConnectSceneViewsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopConnectSceneViewsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewsToDatastoreTimeout
::System::Collections::IEnumerator* Normal::Realtime::Realtime::ConnectSceneViewsToDatastoreTimeout(::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>* viewsThatAreConnectingToTheDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewsToDatastoreTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewsToDatastoreTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewsThatAreConnectingToTheDatastore)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, viewsThatAreConnectingToTheDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewToDatastore
void Normal::Realtime::Realtime::ConnectSceneViewToDatastore(::Normal::Realtime::RealtimeView* view, ::System::Action_1<bool>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewToDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewToDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, completionHandler);
}
// Autogenerated method: Normal.Realtime.Realtime.DisconnectSceneViewsFromDatastore
void Normal::Realtime::Realtime::DisconnectSceneViewsFromDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DisconnectSceneViewsFromDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectSceneViewsFromDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.ReplaceSceneViewModelWithFreshModel
void Normal::Realtime::Realtime::ReplaceSceneViewModelWithFreshModel(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ReplaceSceneViewModelWithFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceSceneViewModelWithFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.Realtime.InstantiateInternal
::UnityEngine::GameObject* Normal::Realtime::Realtime::InstantiateInternal(::StringW prefabName, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, bool destroyWhenOwnerLeaves, bool destroyWhenLastClientLeaves) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(destroyWhenOwnerLeaves), ::il2cpp_utils::ExtractType(destroyWhenLastClientLeaves)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabName, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, destroyWhenOwnerLeaves, destroyWhenLastClientLeaves);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyRealtimeView
void Normal::Realtime::Realtime::DestroyRealtimeView(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.Realtime.PrefabRealtimeViewModelAdded
void Normal::Realtime::Realtime::PrefabRealtimeViewModelAdded(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::PrefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Realtime.PrefabRealtimeViewModelRemoved
void Normal::Realtime::Realtime::PrefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::PrefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Realtime.CreatePrefabRealtimeViewsForDatastore
void Normal::Realtime::Realtime::CreatePrefabRealtimeViewsForDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::CreatePrefabRealtimeViewsForDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrefabRealtimeViewsForDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyAllPrefabRealtimeViews
void Normal::Realtime::Realtime::DestroyAllPrefabRealtimeViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyAllPrefabRealtimeViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAllPrefabRealtimeViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.CreatePrefabForRealtimeViewModel
::UnityEngine::GameObject* Normal::Realtime::Realtime::CreatePrefabForRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::CreatePrefabForRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrefabForRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.Realtime.<RoomConnectionStateChanged>b__77_0
void Normal::Realtime::Realtime::$RoomConnectionStateChanged$b__77_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::<RoomConnectionStateChanged>b__77_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RoomConnectionStateChanged>b__77_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.<SetRoom>b__78_0
void Normal::Realtime::Realtime::$SetRoom$b__78_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::<SetRoom>b__78_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetRoom>b__78_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime..cctor
void Normal::Realtime::Realtime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent, instantiateInWorldSpace);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyImmediate
void Normal::Realtime::Realtime::DestroyImmediate(::UnityEngine::Object* obj, bool allowDestroyingAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(allowDestroyingAssets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, allowDestroyingAssets);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyImmediate
void Normal::Realtime::Realtime::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions
#include "Normal/Realtime/Realtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions defaults
::Normal::Realtime::Realtime::InstantiateOptions Normal::Realtime::Realtime::InstantiateOptions::_get_defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::_get_defaults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Realtime::InstantiateOptions>("Normal.Realtime", "Realtime/InstantiateOptions", "defaults"));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions defaults
void Normal::Realtime::Realtime::InstantiateOptions::_set_defaults(::Normal::Realtime::Realtime::InstantiateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::_set_defaults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime/InstantiateOptions", "defaults", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> ownedByClient
::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_ownedByClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_ownedByClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownedByClient"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> preventOwnershipTakeover
::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_preventOwnershipTakeover");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preventOwnershipTakeover"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> destroyWhenOwnerLeaves
::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenOwnerLeaves");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyWhenOwnerLeaves"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> destroyWhenLastClientLeaves
::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenLastClientLeaves");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyWhenLastClientLeaves"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime useInstance
::Normal::Realtime::Realtime*& Normal::Realtime::Realtime::InstantiateOptions::dyn_useInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_useInstance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInstance"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions..cctor
void Normal::Realtime::Realtime::InstantiateOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime/InstantiateOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent
#include "Normal/Realtime/Realtime_RealtimeEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.Invoke
void Normal::Realtime::Realtime::RealtimeEvent::Invoke(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Realtime::RealtimeEvent::BeginInvoke(::Normal::Realtime::Realtime* realtime, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, realtime, callback, object);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.EndInvoke
void Normal::Realtime::Realtime::RealtimeEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime <>4__this
::Normal::Realtime::Realtime*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action didConnectSceneViewsToDatastore
::System::Action*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_didConnectSceneViewsToDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_didConnectSceneViewsToDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didConnectSceneViewsToDatastore"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> viewsThatAreConnectingToTheDatastore
::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_viewsThatAreConnectingToTheDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_viewsThatAreConnectingToTheDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewsThatAreConnectingToTheDatastore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1
#include "Normal/Realtime/Realtime_--c__DisplayClass81_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
::Normal::Realtime::RealtimeView*& Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0 CS$<>8__locals1
::Normal::Realtime::Realtime::$$c__DisplayClass81_0*& Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::$$c__DisplayClass81_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1.<ConnectSceneViewsToDatastore>b__0
void Normal::Realtime::Realtime::$$c__DisplayClass81_1::$ConnectSceneViewsToDatastore$b__0(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::<ConnectSceneViewsToDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectSceneViewsToDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84
#include "Normal/Realtime/Realtime_-ConnectSceneViewsToDatastoreTimeout-d__84.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> viewsThatAreConnectingToTheDatastore
::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_viewsThatAreConnectingToTheDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_viewsThatAreConnectingToTheDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewsThatAreConnectingToTheDatastore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.IDisposable.Dispose
void Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.MoveNext
bool Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.IEnumerator.Reset
void Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0
#include "Normal/Realtime/Realtime_--c__DisplayClass85_0.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
::Normal::Realtime::RealtimeView*& Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> completionHandler
::System::Action_1<bool>*& Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0.<ConnectSceneViewToDatastore>b__0
void Normal::Realtime::Realtime::$$c__DisplayClass85_0::$ConnectSceneViewToDatastore$b__0(bool success, ::Normal::Realtime::RealtimeViewModel* viewModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::<ConnectSceneViewToDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectSceneViewToDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(viewModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, viewModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded
#include "Normal/Realtime/Datastore_PrefabViewModelAdded.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved
#include "Normal/Realtime/Datastore_PrefabViewModelRemoved.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.Properties
#include "Normal/Realtime/Datastore_Properties.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0
#include "Normal/Realtime/Datastore_--c__DisplayClass22_0.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher
#include "Normal/Realtime/Serialization/StreamEventDispatcher.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: Normal.Realtime.Collections.StringKeyDictionary`1
#include "Normal/Realtime/Collections/StringKeyDictionary_1.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.RealtimeSet`1
#include "Normal/Realtime/Serialization/RealtimeSet_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteBuffer
#include "Normal/Realtime/Serialization/WriteBuffer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _roomModel
::Normal::Realtime::RealtimeModel*& Normal::Realtime::Datastore::dyn__roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Serialization.StreamEventDispatcher _dispatcher
::Normal::Realtime::Serialization::StreamEventDispatcher*& Normal::Realtime::Datastore::dyn__dispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__dispatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dispatcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamEventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Serialization.InflightUpdateNotifier _inflightUpdateNotifier
::Normal::Realtime::Serialization::InflightUpdateNotifier*& Normal::Realtime::Datastore::dyn__inflightUpdateNotifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__inflightUpdateNotifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inflightUpdateNotifier"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::InflightUpdateNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1<Normal.Realtime.RealtimeViewModel> _sceneViewModels
::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::dyn__sceneViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__sceneViewModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewModels"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.RealtimeSet`1<Normal.Realtime.RealtimeViewModel> _prefabViewModels
::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::dyn__prefabViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__prefabViewModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabViewModels"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded prefabRealtimeViewModelAdded
::Normal::Realtime::Datastore::PrefabViewModelAdded*& Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRealtimeViewModelAdded"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore::PrefabViewModelAdded**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved prefabRealtimeViewModelRemoved
::Normal::Realtime::Datastore::PrefabViewModelRemoved*& Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRealtimeViewModelRemoved"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore::PrefabViewModelRemoved**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.WriteBuffer _writeBuffer
::Normal::Realtime::Serialization::WriteBuffer*& Normal::Realtime::Datastore::dyn__writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeBuffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::WriteBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.WriteStream _writeStream
::Normal::Realtime::Serialization::WriteStream*& Normal::Realtime::Datastore::dyn__writeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__writeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::WriteStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _readBuffer
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Datastore::dyn__readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readBuffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadStream _readStream
::Normal::Realtime::Serialization::ReadStream*& Normal::Realtime::Datastore::dyn__readStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__readStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Datastore.get_roomModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::Datastore::get_roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_roomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_sceneViewModels
::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>* Normal::Realtime::Datastore::get_sceneViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_sceneViewModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneViewModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_prefabViewModels
::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* Normal::Realtime::Datastore::get_prefabViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_prefabViewModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabViewModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_writeBuffer
::Normal::Realtime::Serialization::WriteBuffer* Normal::Realtime::Datastore::get_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_writeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_writeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::WriteBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.add_prefabRealtimeViewModelAdded
void Normal::Realtime::Datastore::add_prefabRealtimeViewModelAdded(::Normal::Realtime::Datastore::PrefabViewModelAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::add_prefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_prefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.remove_prefabRealtimeViewModelAdded
void Normal::Realtime::Datastore::remove_prefabRealtimeViewModelAdded(::Normal::Realtime::Datastore::PrefabViewModelAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::remove_prefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_prefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.add_prefabRealtimeViewModelRemoved
void Normal::Realtime::Datastore::add_prefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore::PrefabViewModelRemoved* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::add_prefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_prefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.remove_prefabRealtimeViewModelRemoved
void Normal::Realtime::Datastore::remove_prefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore::PrefabViewModelRemoved* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::remove_prefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_prefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.Reset
void Normal::Realtime::Datastore::Reset(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, roomModel);
}
// Autogenerated method: Normal.Realtime.Datastore.GetSceneRealtimeViewModelForUUID
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::Datastore::GetSceneRealtimeViewModelForUUID(::ArrayW<uint8_t> sceneViewUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::GetSceneRealtimeViewModelForUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneRealtimeViewModelForUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method, sceneViewUUID);
}
// Autogenerated method: Normal.Realtime.Datastore.ConnectSceneRealtimeViewModel
void Normal::Realtime::Datastore::ConnectSceneRealtimeViewModel(::StringW sceneViewUUID, ::Normal::Realtime::RealtimeViewModel* sceneViewViewModel, ::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::ConnectSceneRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID), ::il2cpp_utils::ExtractType(sceneViewViewModel), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneViewUUID, sceneViewViewModel, completionHandler);
}
// Autogenerated method: Normal.Realtime.Datastore.TryInsertSceneViewModelIntoDatastore
void Normal::Realtime::Datastore::TryInsertSceneViewModelIntoDatastore(::StringW sceneViewUUID, ::Normal::Realtime::RealtimeViewModel* sceneViewViewModel, ::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>* completionHandler, int previousAttempts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::TryInsertSceneViewModelIntoDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInsertSceneViewModelIntoDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID), ::il2cpp_utils::ExtractType(sceneViewViewModel), ::il2cpp_utils::ExtractType(completionHandler), ::il2cpp_utils::ExtractType(previousAttempts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneViewUUID, sceneViewViewModel, completionHandler, previousAttempts);
}
// Autogenerated method: Normal.Realtime.Datastore.AddPrefabRealtimeViewModel
void Normal::Realtime::Datastore::AddPrefabRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* prefabViewModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::AddPrefabRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefabRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabViewModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabViewModel);
}
// Autogenerated method: Normal.Realtime.Datastore.RemovePrefabRealtimeViewModel
bool Normal::Realtime::Datastore::RemovePrefabRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::RemovePrefabRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePrefabRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.Datastore.PrefabViewModelAddedToSet
void Normal::Realtime::Datastore::PrefabViewModelAddedToSet(::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* set, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAddedToSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabViewModelAddedToSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore.PrefabViewModelRemovedFromSet
void Normal::Realtime::Datastore::PrefabViewModelRemovedFromSet(::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* set, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemovedFromSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabViewModelRemovedFromSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore.SetUpSerialization
void Normal::Realtime::Datastore::SetUpSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::SetUpSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.Deserialize
void Normal::Realtime::Datastore::Deserialize(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Normal.Realtime.Datastore.SerializeDeltaUpdates
void Normal::Realtime::Datastore::SerializeDeltaUpdates(bool reliable, uint updateID, double roomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::SerializeDeltaUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDeltaUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(roomTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reliable, updateID, roomTime);
}
// Autogenerated method: Normal.Realtime.Datastore.DeserializeDeltaUpdates
uint Normal::Realtime::Datastore::DeserializeDeltaUpdates(::ArrayW<uint8_t> buffer, bool reliable, bool updateIsFromUs, double currentRoomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::DeserializeDeltaUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDeltaUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateIsFromUs), ::il2cpp_utils::ExtractType(currentRoomTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, buffer, reliable, updateIsFromUs, currentRoomTime);
}
// Autogenerated method: Normal.Realtime.Datastore.WriteLength
int Normal::Realtime::Datastore::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Datastore.Write
void Normal::Realtime::Datastore::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Datastore.Read
void Normal::Realtime::Datastore::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded
#include "Normal/Realtime/Datastore_PrefabViewModelAdded.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.Invoke
void Normal::Realtime::Datastore::PrefabViewModelAdded::Invoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Datastore::PrefabViewModelAdded::BeginInvoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, datastore, model, remote, callback, object);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.EndInvoke
void Normal::Realtime::Datastore::PrefabViewModelAdded::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved
#include "Normal/Realtime/Datastore_PrefabViewModelRemoved.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.Invoke
void Normal::Realtime::Datastore::PrefabViewModelRemoved::Invoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Datastore::PrefabViewModelRemoved::BeginInvoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, datastore, model, remote, callback, object);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.EndInvoke
void Normal::Realtime::Datastore::PrefabViewModelRemoved::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore/Normal.Realtime.Properties
#include "Normal/Realtime/Datastore_Properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties SceneRealtimeViewModels
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_SceneRealtimeViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_SceneRealtimeViewModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "SceneRealtimeViewModels"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties SceneRealtimeViewModels
void Normal::Realtime::Datastore::Properties::_set_SceneRealtimeViewModels(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_SceneRealtimeViewModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "SceneRealtimeViewModels", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties RoomModel
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_RoomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_RoomModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "RoomModel"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties RoomModel
void Normal::Realtime::Datastore::Properties::_set_RoomModel(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_RoomModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "RoomModel", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties PrefabRealtimeViewModels
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_PrefabRealtimeViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_PrefabRealtimeViewModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "PrefabRealtimeViewModels"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties PrefabRealtimeViewModels
void Normal::Realtime::Datastore::Properties::_set_PrefabRealtimeViewModels(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_PrefabRealtimeViewModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "PrefabRealtimeViewModels", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Normal::Realtime::Datastore::Properties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0
#include "Normal/Realtime/Datastore_--c__DisplayClass22_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Boolean,Normal.Realtime.RealtimeViewModel> completionHandler
::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeViewModel sceneViewViewModel
::Normal::Realtime::RealtimeViewModel*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewViewModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewViewModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Datastore <>4__this
::Normal::Realtime::Datastore*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sceneViewUUID
::StringW& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 previousAttempts
int& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_previousAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_previousAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0.<TryInsertSceneViewModelIntoDatastore>b__0
void Normal::Realtime::Datastore::$$c__DisplayClass22_0::$TryInsertSceneViewModelIntoDatastore$b__0(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::<TryInsertSceneViewModelIntoDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryInsertSceneViewModelIntoDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged
#include "Normal/Realtime/Room_ConnectionStateChanged.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived
#include "Normal/Realtime/Room_RPCMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client
#include "Normal/Realtime/Native/Client.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler
#include "Normal/Realtime/Room_RoomEventHandler.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87
#include "Normal/Realtime/Room_-ConnectToServer_Coroutine-d__87.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.SessionCapture
#include "Normal/Realtime/SessionCapture.hpp"
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
// Including type: Normal.Realtime.IRealtimePrefabInstantiateDelegate
#include "Normal/Realtime/IRealtimePrefabInstantiateDelegate.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: Normal.Realtime.Native.NetworkInfo
#include "Normal/Realtime/Native/NetworkInfo.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged connectionStateChanged
::Normal::Realtime::Room::ConnectionStateChanged*& Normal::Realtime::Room::dyn_connectionStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_connectionStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionStateChanged"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::ConnectionStateChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived rpcMessageReceived
::Normal::Realtime::Room::RPCMessageReceived*& Normal::Realtime::Room::dyn_rpcMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_rpcMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RPCMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
::StringW& Normal::Realtime::Room::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _time
double& Normal::Realtime::Room::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.ConnectionState _connectionState
::Normal::Realtime::Room::ConnectionState& Normal::Realtime::Room::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <datastoreFrameDuration>k__BackingField
double& Normal::Realtime::Room::dyn_$datastoreFrameDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$datastoreFrameDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<datastoreFrameDuration>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _debugLogging
bool& Normal::Realtime::Room::dyn__debugLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__debugLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debugLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client _client
::Normal::Realtime::Native::Client*& Normal::Realtime::Room::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner _coroutineRunner
::Normal::Realtime::CoroutineRunner*& Normal::Realtime::Room::dyn__coroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__coroutineRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineRunner"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext _activeConnectToServerCoroutine
::Normal::Realtime::CoroutineRunner::CoroutineContext*& Normal::Realtime::Room::dyn__activeConnectToServerCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__activeConnectToServerCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeConnectToServerCoroutine"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Component <realtime>k__BackingField
::UnityEngine::Component*& Normal::Realtime::Room::dyn_$realtime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$realtime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtime>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore _datastore
::Normal::Realtime::Datastore*& Normal::Realtime::Room::dyn__datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__datastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_datastore"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _deltaTime
double& Normal::Realtime::Room::dyn__deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deltaTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nextUpdateID
uint& Normal::Realtime::Room::dyn__nextUpdateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__nextUpdateID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextUpdateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _roomModel
::Normal::Realtime::RealtimeModel*& Normal::Realtime::Room::dyn__roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture _sessionCapture
::Normal::Realtime::SessionCapture*& Normal::Realtime::Room::dyn__sessionCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__sessionCapture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionCapture"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onWillWrite
::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onWillWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onWillRead
::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onWillRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onDidWrite
::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onDidWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onDidRead
::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onDidRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimePrefabLoadDelegate <prefabLoadDelegate>k__BackingField
::Normal::Realtime::IRealtimePrefabLoadDelegate*& Normal::Realtime::Room::dyn_$prefabLoadDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$prefabLoadDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prefabLoadDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimePrefabLoadDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimePrefabInstantiateDelegate <prefabInstantiateDelegate>k__BackingField
::Normal::Realtime::IRealtimePrefabInstantiateDelegate*& Normal::Realtime::Room::dyn_$prefabInstantiateDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$prefabInstantiateDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prefabInstantiateDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimePrefabInstantiateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room.get_name
::StringW Normal::Realtime::Room::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_clientID
int Normal::Realtime::Room::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_time
double Normal::Realtime::Room::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connectionState
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connecting
bool Normal::Realtime::Room::get_connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connected
bool Normal::Realtime::Room::get_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_disconnected
bool Normal::Realtime::Room::get_disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_disconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_datastoreFrameDuration
double Normal::Realtime::Room::get_datastoreFrameDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_datastoreFrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_datastoreFrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_datastoreFrameDuration
void Normal::Realtime::Room::set_datastoreFrameDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_datastoreFrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_datastoreFrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_debugLogging
bool Normal::Realtime::Room::get_debugLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_debugLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debugLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_debugLogging
void Normal::Realtime::Room::set_debugLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_debugLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debugLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_realtime
::UnityEngine::Component* Normal::Realtime::Room::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_realtime
void Normal::Realtime::Room::set_realtime(::UnityEngine::Component* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_datastore
::Normal::Realtime::Datastore* Normal::Realtime::Room::get_datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_datastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_datastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Datastore*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_sessionCaptureRecord
bool Normal::Realtime::Room::get_sessionCaptureRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_sessionCaptureRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sessionCaptureRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_sessionCapturePlayback
bool Normal::Realtime::Room::get_sessionCapturePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_sessionCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sessionCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_prefabLoadDelegate
::Normal::Realtime::IRealtimePrefabLoadDelegate* Normal::Realtime::Room::get_prefabLoadDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_prefabLoadDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabLoadDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimePrefabLoadDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_prefabLoadDelegate
void Normal::Realtime::Room::set_prefabLoadDelegate(::Normal::Realtime::IRealtimePrefabLoadDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_prefabLoadDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabLoadDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_prefabInstantiateDelegate
::Normal::Realtime::IRealtimePrefabInstantiateDelegate* Normal::Realtime::Room::get_prefabInstantiateDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_prefabInstantiateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstantiateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimePrefabInstantiateDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_prefabInstantiateDelegate
void Normal::Realtime::Room::set_prefabInstantiateDelegate(::Normal::Realtime::IRealtimePrefabInstantiateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_prefabInstantiateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabInstantiateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_connectionStateChanged
void Normal::Realtime::Room::add_connectionStateChanged(::Normal::Realtime::Room::ConnectionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_connectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_connectionStateChanged
void Normal::Realtime::Room::remove_connectionStateChanged(::Normal::Realtime::Room::ConnectionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_connectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_rpcMessageReceived
void Normal::Realtime::Room::add_rpcMessageReceived(::Normal::Realtime::Room::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_rpcMessageReceived
void Normal::Realtime::Room::remove_rpcMessageReceived(::Normal::Realtime::Room::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onWillWrite
void Normal::Realtime::Room::add_onWillWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onWillWrite
void Normal::Realtime::Room::remove_onWillWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onWillRead
void Normal::Realtime::Room::add_onWillRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onWillRead
void Normal::Realtime::Room::remove_onWillRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onDidWrite
void Normal::Realtime::Room::add_onDidWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onDidWrite
void Normal::Realtime::Room::remove_onDidWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onDidRead
void Normal::Realtime::Room::add_onDidRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onDidRead
void Normal::Realtime::Room::remove_onDidRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.Dispose
void Normal::Realtime::Room::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.Dispose
void Normal::Realtime::Room::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Room.Connect
void Normal::Realtime::Room::Connect(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.Connect
void Normal::Realtime::Room::Connect(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel, ::Normal::Realtime::IRealtimePrefabLoadDelegate* prefabLoadDelegate, ::Normal::Realtime::IRealtimePrefabInstantiateDelegate* prefabInstantiateDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel), ::il2cpp_utils::ExtractType(prefabLoadDelegate), ::il2cpp_utils::ExtractType(prefabInstantiateDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel, prefabLoadDelegate, prefabInstantiateDelegate);
}
// Autogenerated method: Normal.Realtime.Room.Disconnect
void Normal::Realtime::Room::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.CreateCoroutineRunner
void Normal::Realtime::Room::CreateCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.DestroyCoroutineRunner
void Normal::Realtime::Room::DestroyCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::DestroyCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SetConnectionState
void Normal::Realtime::Room::SetConnectionState(::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SetConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionState);
}
// Autogenerated method: Normal.Realtime.Room.CreateClient
void Normal::Realtime::Room::CreateClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.DestroyClient
void Normal::Realtime::Room::DestroyClient(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::DestroyClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Room.ConnectToServer
void Normal::Realtime::Room::ConnectToServer(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.ConnectToServer_Coroutine
::System::Collections::IEnumerator* Normal::Realtime::Room::ConnectToServer_Coroutine(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext, ::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions, ::Normal::Realtime::Native::Matcher* matcher, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectToServer_Coroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer_Coroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel), ::il2cpp_utils::ExtractType(preferredRegions), ::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(clusterPingResults)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, coroutineContext, roomName, appKey, matcherURL, roomModel, preferredRegions, matcher, clusterPingResults);
}
// Autogenerated method: Normal.Realtime.Room.Disconnect
void Normal::Realtime::Room::Disconnect(bool error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: Normal.Realtime.Room.Tick
void Normal::Realtime::Room::Tick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.RoomTick
void Normal::Realtime::Room::RoomTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.ClientTick
void Normal::Realtime::Room::ClientTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ClientTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.ClientConnectToRoom
void Normal::Realtime::Room::ClientConnectToRoom(::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ClientConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Room.PersistenceTick
void Normal::Realtime::Room::PersistenceTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::PersistenceTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PersistenceTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.ReceivedPersistenceMessage
void Normal::Realtime::Room::ReceivedPersistenceMessage(::Normal::Realtime::Native::Client* client, int sender, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ReceivedPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, sender, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnWillWrite
void Normal::Realtime::Room::SafeDispatchOnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnWillRead
void Normal::Realtime::Room::SafeDispatchOnWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnDidWrite
void Normal::Realtime::Room::SafeDispatchOnDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnDidRead
void Normal::Realtime::Room::SafeDispatchOnDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.StartSessonCapturePlayback
void Normal::Realtime::Room::StartSessonCapturePlayback(::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::StartSessonCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSessonCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.StopSessionCapturePlayback
void Normal::Realtime::Room::StopSessionCapturePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::StopSessionCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSessionCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SessionCapturePlaybackTick
void Normal::Realtime::Room::SessionCapturePlaybackTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SessionCapturePlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SessionCapturePlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.SendRPCMessage
bool Normal::Realtime::Room::SendRPCMessage(::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.SendRPCMessage
bool Normal::Realtime::Room::SendRPCMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Room.ReceivedRPCMessage
void Normal::Realtime::Room::ReceivedRPCMessage(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ReceivedRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.CreateAudioInputStream
::Normal::Realtime::Native::AudioInputStream* Normal::Realtime::Room::CreateAudioInputStream(bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioInputStream*, false>(this, ___internal__method, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Room.GetAudioOutputStream
::Normal::Realtime::Native::AudioOutputStream* Normal::Realtime::Room::GetAudioOutputStream(int clientID, int streamID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::GetAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(streamID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioOutputStream*, false>(this, ___internal__method, clientID, streamID);
}
// Autogenerated method: Normal.Realtime.Room.GetNetworkStatistics
::Normal::Realtime::Native::NetworkInfo Normal::Realtime::Room::GetNetworkStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::GetNetworkStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::NetworkInfo, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.Finalize
void Normal::Realtime::Room::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged
#include "Normal/Realtime/Room_ConnectionStateChanged.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.Invoke
void Normal::Realtime::Room::ConnectionStateChanged::Invoke(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(previousConnectionState), ::il2cpp_utils::ExtractType(connectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, previousConnectionState, connectionState);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::ConnectionStateChanged::BeginInvoke(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(previousConnectionState), ::il2cpp_utils::ExtractType(connectionState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, room, previousConnectionState, connectionState, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.EndInvoke
void Normal::Realtime::Room::ConnectionStateChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived
#include "Normal/Realtime/Room_RPCMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.Invoke
void Normal::Realtime::Room::RPCMessageReceived::Invoke(::Normal::Realtime::Room* room, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::RPCMessageReceived::BeginInvoke(::Normal::Realtime::Room* room, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, room, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.EndInvoke
void Normal::Realtime::Room::RPCMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Error
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Error
void Normal::Realtime::Room::ConnectionState::_set_Error(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Disconnected
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Disconnected
void Normal::Realtime::Room::ConnectionState::_set_Disconnected(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState RequestingRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_RequestingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_RequestingRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "RequestingRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState RequestingRoom
void Normal::Realtime::Room::ConnectionState::_set_RequestingRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_RequestingRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "RequestingRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState PingingClusters
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_PingingClusters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_PingingClusters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "PingingClusters"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState PingingClusters
void Normal::Realtime::Room::ConnectionState::_set_PingingClusters(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_PingingClusters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "PingingClusters", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectingToRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_ConnectingToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_ConnectingToRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "ConnectingToRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectingToRoom
void Normal::Realtime::Room::ConnectionState::_set_ConnectingToRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_ConnectingToRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "ConnectingToRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectedToRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_ConnectedToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_ConnectedToRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "ConnectedToRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectedToRoom
void Normal::Realtime::Room::ConnectionState::_set_ConnectedToRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_ConnectedToRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "ConnectedToRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Ready
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Ready
void Normal::Realtime::Room::ConnectionState::_set_Ready(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Ready", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::Room::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler
#include "Normal/Realtime/Room_RoomEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.Invoke
void Normal::Realtime::Room::RoomEventHandler::Invoke(::Normal::Realtime::Room* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::RoomEventHandler::BeginInvoke(::Normal::Realtime::Room* sender, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.EndInvoke
void Normal::Realtime::Room::RoomEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Room <>4__this
::Normal::Realtime::Room*& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Matcher matcher
::Normal::Realtime::Native::Matcher*& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_matcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_matcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Matcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String connectToRoomRequest
::StringW& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_connectToRoomRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_connectToRoomRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToRoomRequest"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldConnectAgain
bool& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_shouldConnectAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_shouldConnectAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldConnectAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0.<ConnectToServer_Coroutine>b__0
void Normal::Realtime::Room::$$c__DisplayClass87_0::$ConnectToServer_Coroutine$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::<ConnectToServer_Coroutine>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectToServer_Coroutine>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87
#include "Normal/Realtime/Room_-ConnectToServer_Coroutine-d__87.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ping
#include "UnityEngine/Ping.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Room <>4__this
::Normal::Realtime::Room*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Matcher matcher
::Normal::Realtime::Native::Matcher*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Matcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomName
::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeModel roomModel
::Normal::Realtime::RealtimeModel*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String matcherURL
::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcherURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcherURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcherURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String appKey
::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_appKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_appKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Cluster[] clusterPingResults
::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_clusterPingResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_clusterPingResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clusterPingResults"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Region[] preferredRegions
::ArrayW<::Normal::Realtime::Native::Region>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_preferredRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_preferredRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preferredRegions"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Region>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext coroutineContext
::Normal::Realtime::CoroutineRunner::CoroutineContext*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_coroutineContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_coroutineContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0 <>8__1
::Normal::Realtime::Room::$$c__DisplayClass87_0*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::$$c__DisplayClass87_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Cluster[] <newClusterPingResults>5__2
::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$newClusterPingResults$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$newClusterPingResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newClusterPingResults>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <requestComplete>5__3
bool& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$requestComplete$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$requestComplete$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestComplete>5__3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Cluster[] <clustersToPing>5__4
::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$clustersToPing$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$clustersToPing$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clustersToPing>5__4"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Ping> <pings>5__5
::System::Collections::Generic::List_1<::UnityEngine::Ping*>*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$pings$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$pings$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pings>5__5"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Ping*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__6
float& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$startTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$startTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.IDisposable.Dispose
void Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.MoveNext
bool Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.IEnumerator.Reset
void Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture
#include "Normal/Realtime/RealtimeSessionCapture.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/RealtimeSessionCapture_--c.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode _mode
::Normal::Realtime::RealtimeSessionCapture::Mode& Normal::Realtime::RealtimeSessionCapture::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeSessionCapture::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _playbackCaptureFiles
::ArrayW<::StringW>& Normal::Realtime::RealtimeSessionCapture::dyn__playbackCaptureFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__playbackCaptureFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackCaptureFiles"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& Normal::Realtime::RealtimeSessionCapture::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
::Normal::Realtime::Room*& Normal::Realtime::RealtimeSessionCapture::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture.Awake
void Normal::Realtime::RealtimeSessionCapture::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode
#include "Normal/Realtime/RealtimeSessionCapture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Off
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Off
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Off(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Record
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Record
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Record(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Playback
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Playback
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Playback(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Playback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::RealtimeSessionCapture::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/RealtimeSessionCapture_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c <>9
::Normal::Realtime::RealtimeSessionCapture::$$c* Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::$$c*>("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c <>9
void Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9(::Normal::Realtime::RealtimeSessionCapture::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__5_0
::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>*>("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__5_0
void Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9__5_0(::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c..cctor
void Normal::Realtime::RealtimeSessionCapture::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeSessionCapture/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c.<Awake>b__5_0
::System::DateTime Normal::Realtime::RealtimeSessionCapture::$$c::$Awake$b__5_0(::System::IO::FileInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::<Awake>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture
#include "Normal/Realtime/SessionCapture.hpp"
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream
#include "Normal/Realtime/SessionCapture_PlaybackStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/SessionCapture_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture/Normal.Realtime.Mode _mode
::Normal::Realtime::SessionCapture::Mode& Normal::Realtime::SessionCapture::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _recording
bool& Normal::Realtime::SessionCapture::dyn__recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playing
bool& Normal::Realtime::SessionCapture::dyn__playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordFilePath
::StringW& Normal::Realtime::SessionCapture::dyn__recordFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recordFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream _recordFileStream
::Normal::Realtime::SessionCaptureFileStream*& Normal::Realtime::SessionCapture::dyn__recordFileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recordFileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordFileStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _playbackTime
double& Normal::Realtime::SessionCapture::dyn__playbackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playbackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.UInt32,Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate>> _clientToIncomingReliableUpdatesMap
::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>*>*& Normal::Realtime::SessionCapture::dyn__clientToIncomingReliableUpdatesMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__clientToIncomingReliableUpdatesMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientToIncomingReliableUpdatesMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _primaryPlaybackFilePath
::StringW& Normal::Realtime::SessionCapture::dyn__primaryPlaybackFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream _primaryPlaybackStream
::Normal::Realtime::SessionCapture::PlaybackStream*& Normal::Realtime::SessionCapture::dyn__primaryPlaybackStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture::PlaybackStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate> _primaryPlaybackDeltaUpdatesToBeProcessed
::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>*& Normal::Realtime::SessionCapture::dyn__primaryPlaybackDeltaUpdatesToBeProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackDeltaUpdatesToBeProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackDeltaUpdatesToBeProcessed"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _secondaryPlaybackFilePaths
::ArrayW<::StringW>& Normal::Realtime::SessionCapture::dyn__secondaryPlaybackFilePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__secondaryPlaybackFilePaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryPlaybackFilePaths"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream> _secondaryPlaybackStreams
::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::SessionCapture::PlaybackStream*>*& Normal::Realtime::SessionCapture::dyn__secondaryPlaybackStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__secondaryPlaybackStreams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryPlaybackStreams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::SessionCapture::PlaybackStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate> _playbackDeltaUpdates
::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>*& Normal::Realtime::SessionCapture::dyn__playbackDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playbackDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_mode
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCapture::Mode, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_recording
bool Normal::Realtime::SessionCapture::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_playing
bool Normal::Realtime::SessionCapture::get_playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_playing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StartRecording
void Normal::Realtime::SessionCapture::StartRecording(int clientID, double startTimestamp, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(startTimestamp), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID, startTimestamp, data);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StopRecording
void Normal::Realtime::SessionCapture::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.WriteDeltaUpdate
void Normal::Realtime::SessionCapture::WriteDeltaUpdate(double timestamp, int sender, ::ArrayW<uint8_t> data, int dataLength, bool reliable, uint updateID, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::WriteDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, sender, data, dataLength, reliable, updateID, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StartPlayback
::ArrayW<uint8_t> Normal::Realtime::SessionCapture::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StopPlayback
void Normal::Realtime::SessionCapture::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.PlaybackTick
void Normal::Realtime::SessionCapture::PlaybackTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.SessionCapture.AdjustOutgoingUnreliableDeltaUpdateTimestamp
bool Normal::Realtime::SessionCapture::AdjustOutgoingUnreliableDeltaUpdateTimestamp(double playbackTime, ::Normal::Realtime::SessionCapture::PlaybackStream* playbackStream, ::Normal::Realtime::SessionCapture::DeltaUpdate* deltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::AdjustOutgoingUnreliableDeltaUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture", "AdjustOutgoingUnreliableDeltaUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(playbackStream), ::il2cpp_utils::ExtractType(deltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playbackTime, playbackStream, deltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture.AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate
bool Normal::Realtime::SessionCapture::AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate(::Normal::Realtime::SessionCapture::PlaybackStream* playbackStream, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>* incomingReliableUpdates, ::Normal::Realtime::SessionCapture::DeltaUpdate* outgoingReliableDeltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture", "AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackStream), ::il2cpp_utils::ExtractType(incomingReliableUpdates), ::il2cpp_utils::ExtractType(outgoingReliableDeltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playbackStream, incomingReliableUpdates, outgoingReliableDeltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture.ReadDeltaUpdate
::Normal::Realtime::SessionCapture::DeltaUpdate* Normal::Realtime::SessionCapture::ReadDeltaUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCapture::DeltaUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.Finalize
void Normal::Realtime::SessionCapture::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.Mode
#include "Normal/Realtime/SessionCapture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Record
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::Mode>("Normal.Realtime", "SessionCapture/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Record
void Normal::Realtime::SessionCapture::Mode::_set_Record(::Normal::Realtime::SessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Playback
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::Mode>("Normal.Realtime", "SessionCapture/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Playback
void Normal::Realtime::SessionCapture::Mode::_set_Playback(::Normal::Realtime::SessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/Mode", "Playback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::SessionCapture::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double timestamp
double& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sender
int& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] data
::ArrayW<uint8_t>& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reliable
bool& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_reliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 updateID
uint& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_updateID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean incoming
bool& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_incoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_incoming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incoming"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate.get_unreliable
bool Normal::Realtime::SessionCapture::DeltaUpdate::get_unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::get_unreliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unreliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate.get_outgoing
bool Normal::Realtime::SessionCapture::DeltaUpdate::get_outgoing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::get_outgoing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outgoing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream
#include "Normal/Realtime/SessionCapture_PlaybackStream.hpp"
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream _fileStream
::Normal::Realtime::SessionCaptureFileStream*& Normal::Realtime::SessionCapture::PlaybackStream::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _sendTimestampOffset
double& Normal::Realtime::SessionCapture::PlaybackStream::dyn__sendTimestampOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::dyn__sendTimestampOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendTimestampOffset"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_reading
bool Normal::Realtime::SessionCapture::PlaybackStream::get_reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_startTimestamp
double Normal::Realtime::SessionCapture::PlaybackStream::get_startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_startTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_clientID
int Normal::Realtime::SessionCapture::PlaybackStream::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_sendTimestampOffset
double Normal::Realtime::SessionCapture::PlaybackStream::get_sendTimestampOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_sendTimestampOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendTimestampOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.set_sendTimestampOffset
void Normal::Realtime::SessionCapture::PlaybackStream::set_sendTimestampOffset(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::set_sendTimestampOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendTimestampOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Dispose
void Normal::Realtime::SessionCapture::PlaybackStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Dispose
void Normal::Realtime::SessionCapture::PlaybackStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.ReadHeader
::ArrayW<uint8_t> Normal::Realtime::SessionCapture::PlaybackStream::ReadHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::ReadHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.ReadDeltaUpdate
bool Normal::Realtime::SessionCapture::PlaybackStream::ReadDeltaUpdate(double playbackTime, ::Normal::Realtime::SessionCapture::DeltaUpdate* deltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(deltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playbackTime, deltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.SkipToTime
void Normal::Realtime::SessionCapture::PlaybackStream::SkipToTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::SkipToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Finalize
void Normal::Realtime::SessionCapture::PlaybackStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/SessionCapture_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.SessionCapture/Normal.Realtime.<>c <>9
::Normal::Realtime::SessionCapture::$$c* Normal::Realtime::SessionCapture::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::$$c*>("Normal.Realtime", "SessionCapture/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.SessionCapture/Normal.Realtime.<>c <>9
void Normal::Realtime::SessionCapture::$$c::_set_$$9(::Normal::Realtime::SessionCapture::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate,System.Double> <>9__28_0
::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>* Normal::Realtime::SessionCapture::$$c::_get_$$9__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_get_$$9__28_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>*>("Normal.Realtime", "SessionCapture/<>c", "<>9__28_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate,System.Double> <>9__28_0
void Normal::Realtime::SessionCapture::$$c::_set_$$9__28_0(::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_set_$$9__28_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/<>c", "<>9__28_0", value)));
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.<>c..cctor
void Normal::Realtime::SessionCapture::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.<>c.<PlaybackTick>b__28_0
double Normal::Realtime::SessionCapture::$$c::$PlaybackTick$b__28_0(::Normal::Realtime::SessionCapture::DeltaUpdate* playbackDeltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::<PlaybackTick>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PlaybackTick>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackDeltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, playbackDeltaUpdate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.Compression.GZipStream
#include "System/IO/Compression/GZipStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _filePath
::StringW& Normal::Realtime::SessionCaptureFileStream::dyn__filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode _mode
::Normal::Realtime::SessionCaptureFileStream::Mode& Normal::Realtime::SessionCaptureFileStream::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStream _fileStream
::System::IO::FileStream*& Normal::Realtime::SessionCaptureFileStream::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::System::IO::FileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.GZipStream _gzipStream
::System::IO::Compression::GZipStream*& Normal::Realtime::SessionCaptureFileStream::dyn__gzipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__gzipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gzipStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::GZipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writing
bool& Normal::Realtime::SessionCaptureFileStream::dyn__writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__writing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _reading
bool& Normal::Realtime::SessionCaptureFileStream::dyn__reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__reading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _startTimestamp
double& Normal::Realtime::SessionCaptureFileStream::dyn__startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__startTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTimestamp"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _clientID
int& Normal::Realtime::SessionCaptureFileStream::dyn__clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__clientID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nextUpdateDeltaTimestamp
uint& Normal::Realtime::SessionCaptureFileStream::dyn__nextUpdateDeltaTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__nextUpdateDeltaTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextUpdateDeltaTimestamp"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_filePath
::StringW Normal::Realtime::SessionCaptureFileStream::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_mode
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCaptureFileStream::Mode, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_writing
bool Normal::Realtime::SessionCaptureFileStream::get_writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_reading
bool Normal::Realtime::SessionCaptureFileStream::get_reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_startTimestamp
double Normal::Realtime::SessionCaptureFileStream::get_startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_startTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_clientID
int Normal::Realtime::SessionCaptureFileStream::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Dispose
void Normal::Realtime::SessionCaptureFileStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Dispose
void Normal::Realtime::SessionCaptureFileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteHeader
void Normal::Realtime::SessionCaptureFileStream::WriteHeader(int clientID, double startTimestamp, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(startTimestamp), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID, startTimestamp, data);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Flush
void Normal::Realtime::SessionCaptureFileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteDeltaUpdate
void Normal::Realtime::SessionCaptureFileStream::WriteDeltaUpdate(double timestamp, int sender, ::ArrayW<uint8_t> data, int dataLength, bool reliable, uint updateID, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, sender, data, dataLength, reliable, updateID, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadHeader
::ArrayW<uint8_t> Normal::Realtime::SessionCaptureFileStream::ReadHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.PeekNextUpdateDeltaTimestamp
bool Normal::Realtime::SessionCaptureFileStream::PeekNextUpdateDeltaTimestamp(ByRef<double> deltaTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::PeekNextUpdateDeltaTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNextUpdateDeltaTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(deltaTimestamp));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadDeltaUpdate
bool Normal::Realtime::SessionCaptureFileStream::ReadDeltaUpdate(double playbackTime, ByRef<double> timestamp, ByRef<int> sender, ByRef<::ArrayW<uint8_t>> data, ByRef<bool> reliable, ByRef<uint> updateID, ByRef<bool> incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playbackTime, byref(timestamp), byref(sender), byref(data), byref(reliable), byref(updateID), byref(incoming));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.SkipToTime
void Normal::Realtime::SessionCaptureFileStream::SkipToTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::SkipToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadNextUpdateDeltaTimestamp
void Normal::Realtime::SessionCaptureFileStream::ReadNextUpdateDeltaTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadNextUpdateDeltaTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextUpdateDeltaTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.PrematurelyReachedEndOfStream
void Normal::Realtime::SessionCaptureFileStream::PrematurelyReachedEndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::PrematurelyReachedEndOfStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrematurelyReachedEndOfStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteVarint32ToStream
void Normal::Realtime::SessionCaptureFileStream::WriteVarint32ToStream(::System::IO::Stream* stream, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteVarint32ToStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "WriteVarint32ToStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, value);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadVarint32FromStream
bool Normal::Realtime::SessionCaptureFileStream::ReadVarint32FromStream(::System::IO::Stream* stream, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadVarint32FromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "ReadVarint32FromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, byref(value));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteDoubleToStream
void Normal::Realtime::SessionCaptureFileStream::WriteDoubleToStream(::System::IO::Stream* stream, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteDoubleToStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "WriteDoubleToStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, value);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadDoubleFromStream
double Normal::Realtime::SessionCaptureFileStream::ReadDoubleFromStream(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadDoubleFromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "ReadDoubleFromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.CombineSenderReliableAndIncoming
uint Normal::Realtime::SessionCaptureFileStream::CombineSenderReliableAndIncoming(int sender, bool reliable, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::CombineSenderReliableAndIncoming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "CombineSenderReliableAndIncoming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(incoming)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, reliable, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.SplitSenderReliableAndIncoming
void Normal::Realtime::SessionCaptureFileStream::SplitSenderReliableAndIncoming(uint value, ByRef<int> sender, ByRef<bool> reliable, ByRef<bool> incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::SplitSenderReliableAndIncoming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "SplitSenderReliableAndIncoming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(sender), byref(reliable), byref(incoming));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Finalize
void Normal::Realtime::SessionCaptureFileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Write
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::Mode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCaptureFileStream::Mode>("Normal.Realtime", "SessionCaptureFileStream/Mode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Write
void Normal::Realtime::SessionCaptureFileStream::Mode::_set_Write(::Normal::Realtime::SessionCaptureFileStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCaptureFileStream/Mode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Read
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::Mode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCaptureFileStream::Mode>("Normal.Realtime", "SessionCaptureFileStream/Mode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Read
void Normal::Realtime::SessionCaptureFileStream::Mode::_set_Read(::Normal::Realtime::SessionCaptureFileStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCaptureFileStream/Mode", "Read", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::SessionCaptureFileStream::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner
#include "Normal/Realtime/CoroutineRunner.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext> _activeCoroutines
::System::Collections::Generic::HashSet_1<::Normal::Realtime::CoroutineRunner::CoroutineContext*>*& Normal::Realtime::CoroutineRunner::dyn__activeCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::dyn__activeCoroutines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeCoroutines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::CoroutineRunner::CoroutineContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.RunCoroutine
::Normal::Realtime::CoroutineRunner::CoroutineContext* Normal::Realtime::CoroutineRunner::RunCoroutine(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::RunCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::CoroutineRunner::CoroutineContext*, false>(this, ___internal__method, coroutineContext);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.CoroutineCompletedOrCancelled
void Normal::Realtime::CoroutineRunner::CoroutineCompletedOrCancelled(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineCompletedOrCancelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineCompletedOrCancelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineContext);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.OnDestroy
void Normal::Realtime::CoroutineRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State _state
::Normal::Realtime::CoroutineRunner::CoroutineContext::State& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator _coroutineEnumerator
::System::Collections::IEnumerator*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineEnumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
::UnityEngine::Coroutine*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner _coroutineRunner
::Normal::Realtime::CoroutineRunner*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineRunner"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <cleanupAction>k__BackingField
::System::Action*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn_$cleanupAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn_$cleanupAction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cleanupAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.get_state
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::CoroutineRunner::CoroutineContext::State, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.get_cleanupAction
::System::Action* Normal::Realtime::CoroutineRunner::CoroutineContext::get_cleanupAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::get_cleanupAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleanupAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.set_cleanupAction
void Normal::Realtime::CoroutineRunner::CoroutineContext::set_cleanupAction(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::set_cleanupAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleanupAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.Bind
void Normal::Realtime::CoroutineRunner::CoroutineContext::Bind(::System::Collections::IEnumerator* coroutineEnumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineEnumerator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineEnumerator);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.CompleteAndCleanUp
void Normal::Realtime::CoroutineRunner::CoroutineContext::CompleteAndCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::CompleteAndCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteAndCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.CancelAndCleanUp
void Normal::Realtime::CoroutineRunner::CoroutineContext::CancelAndCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::CancelAndCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAndCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._Cancel
void Normal::Realtime::CoroutineRunner::CoroutineContext::_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._StartWithCoroutineRunner
void Normal::Realtime::CoroutineRunner::CoroutineContext::_StartWithCoroutineRunner(::Normal::Realtime::CoroutineRunner* coroutineRunner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_StartWithCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_StartWithCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineRunner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineRunner);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._OnDestroy
void Normal::Realtime::CoroutineRunner::CoroutineContext::_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Created
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Created
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Created(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Bound
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Bound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Bound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Bound"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Bound
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Bound(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Bound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Bound", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Running
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Running"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Running
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Running(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Completed
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Completed
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Completed(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Cancelled
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Cancelled
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Cancelled(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Cancelled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::CoroutineRunner::CoroutineContext::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeExecutionOrder
#include "Normal/Realtime/RealtimeExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 RealtimeView
int Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeView"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RealtimeView
void Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeView(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeView", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RealtimeTransform
int Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeTransform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RealtimeTransform
void Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeTransform(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeTransform", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyDictionary`2<System.UInt32,Normal.Realtime.RealtimeModel> _modelDict
::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>*& Normal::Realtime::ImmutableModelCollection::dyn__modelDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::dyn__modelDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry[] _modelList
::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>& Normal::Realtime::ImmutableModelCollection::dyn__modelList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::dyn__modelList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelList"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.get_Item
::Normal::Realtime::RealtimeModel* Normal::Realtime::ImmutableModelCollection::get_Item(uint id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method, id);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.FlattenModelDictionary
::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry> Normal::Realtime::ImmutableModelCollection::FlattenModelDictionary(::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>* models) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::FlattenModelDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "ImmutableModelCollection", "FlattenModelDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(models)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, models);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, ::Normal::Realtime::RealtimeModel*>>* Normal::Realtime::ImmutableModelCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, ::Normal::Realtime::RealtimeModel*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Normal::Realtime::ImmutableModelCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.WriteLength
int Normal::Realtime::ImmutableModelCollection::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.Write
void Normal::Realtime::ImmutableModelCollection::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.Read
void Normal::Realtime::ImmutableModelCollection::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 propertyID
uint& Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_propertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_propertyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeModel model
::Normal::Realtime::RealtimeModel*& Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_model");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry..ctor
// ABORTED elsewhere.  Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::RealtimeModelListEntry(uint propertyID, ::Normal::Realtime::RealtimeModel* model)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate
#include "Normal/Realtime/RealtimeView_SceneViewWillRegisterDelegate.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeViewHierarchy
#include "Normal/Realtime/RealtimeViewHierarchy.hpp"
// Including type: Normal.Realtime.RealtimeComponentMap
#include "Normal/Realtime/RealtimeComponentMap.hpp"
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.IConfigurableComponentMap
#include "Normal/Realtime/IConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& Normal::Realtime::RealtimeView::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _sceneViewUUID
::ArrayW<uint8_t>& Normal::Realtime::RealtimeView::dyn__sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewUUID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _viewUUID
::StringW& Normal::Realtime::RealtimeView::dyn__viewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__viewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewPreventOwnershipTakeover
bool& Normal::Realtime::RealtimeView::dyn__sceneViewPreventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewPreventOwnershipTakeover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewPreventOwnershipTakeover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenOwnerOrLastClientLeaves
bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeaves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenOwnerOrLastClientLeaves"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated
bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenLastClientLeaves
bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenLastClientLeaves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenLastClientLeaves"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SerializableComponentIDPair[] _components
::ArrayW<::Normal::Realtime::SerializableComponentIDPair>& Normal::Realtime::RealtimeView::dyn__components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_components"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::SerializableComponentIDPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SerializableViewIDPair[] _childViews
::ArrayW<::Normal::Realtime::SerializableViewIDPair>& Normal::Realtime::RealtimeView::dyn__childViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__childViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViews"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::SerializableViewIDPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeViewHierarchy _hierarchy
::Normal::Realtime::RealtimeViewHierarchy*& Normal::Realtime::RealtimeView::dyn__hierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__hierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchy"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewHierarchy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeComponentMap _realtimeComponents
::Normal::Realtime::RealtimeComponentMap*& Normal::Realtime::RealtimeView::dyn__realtimeComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtimeComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeComponents"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeComponentMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeViewMap _realtimeChildViews
::Normal::Realtime::RealtimeViewMap*& Normal::Realtime::RealtimeView::dyn__realtimeChildViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtimeChildViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeChildViews"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Normal.Realtime.RealtimeViewModel model
::Normal::Realtime::RealtimeViewModel*& Normal::Realtime::RealtimeView::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn_model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate sceneViewWillRegisterWithRealtime
::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate*& Normal::Realtime::RealtimeView::dyn_sceneViewWillRegisterWithRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn_sceneViewWillRegisterWithRealtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewWillRegisterWithRealtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isViewSetOnComponents
bool& Normal::Realtime::RealtimeView::dyn__isViewSetOnComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__isViewSetOnComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isViewSetOnComponents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_hierarchy
::Normal::Realtime::RealtimeViewHierarchy* Normal::Realtime::RealtimeView::get_hierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_hierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewHierarchy*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_viewUUID
::StringW Normal::Realtime::RealtimeView::get_viewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_viewUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isChildView
bool Normal::Realtime::RealtimeView::get_isChildView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isChildView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isChildView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootView
bool Normal::Realtime::RealtimeView::get_isRootView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isPrefabView
bool Normal::Realtime::RealtimeView::get_isPrefabView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isPrefabView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPrefabView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isSceneView
bool Normal::Realtime::RealtimeView::get_isSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootSceneView
bool Normal::Realtime::RealtimeView::get_isRootSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootPrefabView
bool Normal::Realtime::RealtimeView::get_isRootPrefabView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootPrefabView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootPrefabView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_realtimeView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_realtime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeView::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_room");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerID
int Normal::Realtime::RealtimeView::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedByWorld
bool Normal::Realtime::RealtimeView::get_isOwnedByWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedByWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedByWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocally
bool Normal::Realtime::RealtimeView::get_isOwnedLocally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotely
bool Normal::Realtime::RealtimeView::get_isOwnedRemotely() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotely");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotely", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerIDSelf
int Normal::Realtime::RealtimeView::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerIDSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerIDInHierarchy
int Normal::Realtime::RealtimeView::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerIDInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isUnownedSelf
bool Normal::Realtime::RealtimeView::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isUnownedSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isUnownedInHierarchy
bool Normal::Realtime::RealtimeView::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isUnownedInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocallySelf
bool Normal::Realtime::RealtimeView::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocallySelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::RealtimeView::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocallyInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotelySelf
bool Normal::Realtime::RealtimeView::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotelySelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::RealtimeView::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotelyInHierarchy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_preventOwnershipTakeover
bool Normal::Realtime::RealtimeView::get_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_preventOwnershipTakeover
void Normal::Realtime::RealtimeView::set_preventOwnershipTakeover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenOwnerOrLastClientLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenOwnerOrLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenLastClientLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenLastClientLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenOwnerLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenOwnerLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenOwnerLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.IsParentView
bool Normal::Realtime::RealtimeView::IsParentView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::IsParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeView.GetRootView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::GetRootView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::GetRootView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.GetParentView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::GetParentView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::GetParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnBeforeSerialize
void Normal::Realtime::RealtimeView::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.StripSceneViewUUIDFromPrefabs
void Normal::Realtime::RealtimeView::StripSceneViewUUIDFromPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::StripSceneViewUUIDFromPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripSceneViewUUIDFromPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnAfterDeserialize
void Normal::Realtime::RealtimeView::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.MigrateSceneViewUUIDType
void Normal::Realtime::RealtimeView::MigrateSceneViewUUIDType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::MigrateSceneViewUUIDType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MigrateSceneViewUUIDType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.MigrateSceneViewLifetime
void Normal::Realtime::RealtimeView::MigrateSceneViewLifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::MigrateSceneViewLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MigrateSceneViewLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RebuildRealtimeGraph
void Normal::Realtime::RealtimeView::RebuildRealtimeGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RebuildRealtimeGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildRealtimeGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RebuildRealtimeComponentMap
void Normal::Realtime::RealtimeView::RebuildRealtimeComponentMap(::Normal::Realtime::IConfigurableComponentMap* map, ::ArrayW<::Normal::Realtime::IConfigurableComponent*> components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RebuildRealtimeComponentMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildRealtimeComponentMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, components);
}
// Autogenerated method: Normal.Realtime.RealtimeView.FindNextUnusedComponentID
void Normal::Realtime::RealtimeView::FindNextUnusedComponentID(::Normal::Realtime::IConfigurableComponentMap* components, ByRef<uint> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::FindNextUnusedComponentID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "FindNextUnusedComponentID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, components, byref(id));
}
// Autogenerated method: Normal.Realtime.RealtimeView.FindRealtimeViewsInChildren
::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>* Normal::Realtime::RealtimeView::FindRealtimeViewsInChildren(::UnityEngine::Transform* transform, ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>* views) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::FindRealtimeViewsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "FindRealtimeViewsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(views)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, views);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Awake
void Normal::Realtime::RealtimeView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Start
void Normal::Realtime::RealtimeView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnDestroy
void Normal::Realtime::RealtimeView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Reset
void Normal::Realtime::RealtimeView::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ResolveSceneViewRealtime
void Normal::Realtime::RealtimeView::ResolveSceneViewRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ResolveSceneViewRealtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSceneViewRealtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRootSceneViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateRootSceneViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRootSceneViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRootSceneViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRootPrefabViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateRootPrefabViewModel(::StringW prefabName, int ownerID, ::Normal::Realtime::Serialization::MetaModel::LifetimeFlags lifetimeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRootPrefabViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRootPrefabViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownerID), ::il2cpp_utils::ExtractType(lifetimeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method, prefabName, ownerID, lifetimeFlags);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateChildViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateChildViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateChildViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateComponentsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateComponentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateComponentsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComponentsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateChildViewsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateChildViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateChildViewsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildViewsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRealtimeModelCollection
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateRealtimeModelCollection(::Normal::Realtime::IConfigurableComponentMap* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRealtimeModelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "CreateRealtimeModelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, components);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.CreateModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.CreateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.SetModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.SetModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.SetView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.IConfigurableComponent.SetView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RequestOwnership
void Normal::Realtime::RealtimeView::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RequestOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetOwnership
void Normal::Realtime::RealtimeView::SetOwnership(int clientID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ClearOwnership
void Normal::Realtime::RealtimeView::ClearOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ClearOwnership");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ThrowIfModelMissing
void Normal::Realtime::RealtimeView::ThrowIfModelMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ThrowIfModelMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfModelMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.InstantiateViewPrefab
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::InstantiateViewPrefab(::Normal::Realtime::RealtimeViewModel* model, ::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::InstantiateViewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "InstantiateViewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(realtime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, model, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetViewOnComponents
void Normal::Realtime::RealtimeView::SetViewOnComponents(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetViewOnComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewOnComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recursive);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetRealtime
void Normal::Realtime::RealtimeView::SetRealtime(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetRealtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetRealtimeOnChildViews
void Normal::Realtime::RealtimeView::SetRealtimeOnChildViews(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetRealtimeOnChildViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtimeOnChildViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.BindModelsToComponentMap
void Normal::Realtime::RealtimeView::BindModelsToComponentMap(::Normal::Realtime::ImmutableModelCollection* models, ::Normal::Realtime::IConfigurableComponentMap* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::BindModelsToComponentMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "BindModelsToComponentMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(models), ::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, models, components);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate
#include "Normal/Realtime/RealtimeView_SceneViewWillRegisterDelegate.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.Invoke
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::Invoke(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::BeginInvoke(::Normal::Realtime::RealtimeView* realtimeView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, realtimeView, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.EndInvoke
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewHierarchy
#include "Normal/Realtime/RealtimeViewHierarchy.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: Normal.Realtime.IRealtimeComponent
#include "Normal/Realtime/IRealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeView root
::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewHierarchy::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeView parent
::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewHierarchy::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.IReadOnlyCollection`1<Normal.Realtime.RealtimeView> children
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::RealtimeViewHierarchy::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.IReadOnlyCollection`1<Normal.Realtime.IRealtimeComponent> components
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::IRealtimeComponent*>*& Normal::Realtime::RealtimeViewHierarchy::dyn_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "components"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::IRealtimeComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewHierarchy.GetParentView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeViewHierarchy::GetParentView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::GetParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewHierarchy", "GetParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeViewHierarchy.IngestChildViewMap
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>* Normal::Realtime::RealtimeViewHierarchy::IngestChildViewMap(::Normal::Realtime::RealtimeViewMap* views) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::IngestChildViewMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewHierarchy", "IngestChildViewMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(views)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, views);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeViewModel_PropertyID.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeView <realtimeView>k__BackingField
::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewModel::dyn_$realtimeView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn_$realtimeView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtimeView>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sceneViewUUID
::StringW& Normal::Realtime::RealtimeViewModel::dyn__sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _prefabName
::StringW& Normal::Realtime::RealtimeViewModel::dyn__prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__prefabName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ImmutableModelCollection _componentsModel
::Normal::Realtime::ImmutableModelCollection*& Normal::Realtime::RealtimeViewModel::dyn__componentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__componentsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_componentsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ImmutableModelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _cachedComponentsModel
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedComponentsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate> _cachedComponentsModelDeltaUpdates
::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>*& Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModelDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModelDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedComponentsModelDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ImmutableModelCollection _childViewsModel
::Normal::Realtime::ImmutableModelCollection*& Normal::Realtime::RealtimeViewModel::dyn__childViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__childViewsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViewsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ImmutableModelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _cachedChildViewsModel
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedChildViewsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate> _cachedChildViewsModelDeltaUpdates
::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>*& Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModelDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModelDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedChildViewsModelDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeViewModel::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.set_realtimeView
void Normal::Realtime::RealtimeViewModel::set_realtimeView(::Normal::Realtime::RealtimeView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::set_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_sceneViewUUID
::StringW Normal::Realtime::RealtimeViewModel::get_sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_sceneViewUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneViewUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_prefabName
::StringW Normal::Realtime::RealtimeViewModel::get_prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_prefabName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_componentsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeViewModel::get_componentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_componentsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_componentsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_childViewsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeViewModel::get_childViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_childViewsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childViewsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetChildModels
void Normal::Realtime::RealtimeViewModel::SetChildModels(::Normal::Realtime::ImmutableModelCollection* componentsModel, ::Normal::Realtime::ImmutableModelCollection* childViewsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetChildModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentsModel), ::il2cpp_utils::ExtractType(childViewsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentsModel, childViewsModel);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetChildModelsAndDeserializeCacheIfNeeded
void Normal::Realtime::RealtimeViewModel::SetChildModelsAndDeserializeCacheIfNeeded(::Normal::Realtime::ImmutableModelCollection* componentsModel, ::Normal::Realtime::ImmutableModelCollection* childViewsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetChildModelsAndDeserializeCacheIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildModelsAndDeserializeCacheIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentsModel), ::il2cpp_utils::ExtractType(childViewsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentsModel, childViewsModel);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetRealtimeView
void Normal::Realtime::RealtimeViewModel::SetRealtimeView(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.CreateComponentsModelAndChildViewsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::CreateComponentsModelAndChildViewsModelIfNeeded(::StringW prefabName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CreateComponentsModelAndChildViewsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComponentsModelAndChildViewsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabName);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.DeserializeCachedComponentsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::DeserializeCachedComponentsModelIfNeeded(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::DeserializeCachedComponentsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeCachedComponentsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.DeserializeCachedChildViewsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::DeserializeCachedChildViewsModelIfNeeded(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::DeserializeCachedChildViewsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeCachedChildViewsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.WriteLength
int Normal::Realtime::RealtimeViewModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.Write
void Normal::Realtime::RealtimeViewModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.Read
void Normal::Realtime::RealtimeViewModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 updateID
uint& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_updateID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double packetRoomTime
double& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_packetRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_packetRoomTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetRoomTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.ReadBuffer buffer
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate..ctor
// ABORTED elsewhere.  Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::CachedDeltaUpdate(uint updateID, double packetRoomTime, ::Normal::Realtime::Serialization::ReadBuffer* buffer)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeViewModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID SceneViewUUID
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_SceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_SceneViewUUID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "SceneViewUUID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID SceneViewUUID
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_SceneViewUUID(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_SceneViewUUID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "SceneViewUUID", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID PrefabName
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_PrefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_PrefabName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "PrefabName"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID PrefabName
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_PrefabName(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_PrefabName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "PrefabName", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID Components
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_Components");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "Components"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID Components
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_Components(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_Components");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "Components", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID ChildViews
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_ChildViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_ChildViews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "ChildViews"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID ChildViews
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_ChildViews(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_ChildViews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "ChildViews", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Normal::Realtime::RealtimeViewModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfigurableComponentMap
#include "Normal/Realtime/IConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_count
int Normal::Realtime::IConfigurableComponentMap::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_componentIDs
::System::Collections::Generic::IEnumerable_1<uint>* Normal::Realtime::IConfigurableComponentMap::get_componentIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_componentIDs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_componentIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<uint>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_components
::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>* Normal::Realtime::IConfigurableComponentMap::get_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_components");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_components", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_Item
::Normal::Realtime::IConfigurableComponent* Normal::Realtime::IConfigurableComponentMap::get_Item(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IConfigurableComponent*, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.ContainsComponentID
bool Normal::Realtime::IConfigurableComponentMap::ContainsComponentID(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::ContainsComponentID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsComponentID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.ContainsComponent
bool Normal::Realtime::IConfigurableComponentMap::ContainsComponent(::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::ContainsComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.Add
void Normal::Realtime::IConfigurableComponentMap::Add(uint componentID, ::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.Deprecate
void Normal::Realtime::IConfigurableComponentMap::Deprecate(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::Deprecate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deprecate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ConfigurableComponentMap
#include "Normal/Realtime/ConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,Normal.Realtime.IConfigurableComponent> _storage
::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::IConfigurableComponent*>*& Normal::Realtime::ConfigurableComponentMap::dyn__storage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::dyn__storage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storage"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::IConfigurableComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_count
int Normal::Realtime::ConfigurableComponentMap::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_componentIDs
::System::Collections::Generic::IEnumerable_1<uint>* Normal::Realtime::ConfigurableComponentMap::get_componentIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_componentIDs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_componentIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<uint>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_components
::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>* Normal::Realtime::ConfigurableComponentMap::get_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_components");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_components", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_Item
::Normal::Realtime::IConfigurableComponent* Normal::Realtime::ConfigurableComponentMap::get_Item(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IConfigurableComponent*, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.ContainsComponentID
bool Normal::Realtime::ConfigurableComponentMap::ContainsComponentID(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::ContainsComponentID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsComponentID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.ContainsComponent
bool Normal::Realtime::ConfigurableComponentMap::ContainsComponent(::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::ContainsComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.Add
void Normal::Realtime::ConfigurableComponentMap::Add(uint componentID, ::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.Deprecate
void Normal::Realtime::ConfigurableComponentMap::Deprecate(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::Deprecate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deprecate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SerializableViewIDPair
#include "Normal/Realtime/SerializableViewIDPair.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 viewID
int& Normal::Realtime::SerializableViewIDPair::dyn_viewID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::dyn_viewID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
::Normal::Realtime::RealtimeView*& Normal::Realtime::SerializableViewIDPair::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::dyn_view");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SerializableViewIDPair..ctor
Normal::Realtime::SerializableViewIDPair::SerializableViewIDPair(uint viewID, ::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewID, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeViewMap.Serialize
::ArrayW<::Normal::Realtime::SerializableViewIDPair> Normal::Realtime::RealtimeViewMap::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::SerializableViewIDPair>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewMap.Deserialize
::Normal::Realtime::RealtimeViewMap* Normal::Realtime::RealtimeViewMap::Deserialize(::ArrayW<::Normal::Realtime::SerializableViewIDPair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewMap", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Normal.Realtime.RealtimeViewMap.<Serialize>b__0_0
::Normal::Realtime::SerializableViewIDPair Normal::Realtime::RealtimeViewMap::$Serialize$b__0_0(uint id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::<Serialize>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Serialize>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SerializableViewIDPair, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SerializableComponentIDPair
#include "Normal/Realtime/SerializableComponentIDPair.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 componentID
int& Normal::Realtime::SerializableComponentIDPair::dyn_componentID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::dyn_componentID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component component
::UnityEngine::Component*& Normal::Realtime::SerializableComponentIDPair::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::dyn_component");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SerializableComponentIDPair..ctor
Normal::Realtime::SerializableComponentIDPair::SerializableComponentIDPair(uint componentID, ::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeComponentMap
#include "Normal/Realtime/RealtimeComponentMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.Serialize
::ArrayW<::Normal::Realtime::SerializableComponentIDPair> Normal::Realtime::RealtimeComponentMap::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::SerializableComponentIDPair>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.Deserialize
::Normal::Realtime::RealtimeComponentMap* Normal::Realtime::RealtimeComponentMap::Deserialize(::ArrayW<::Normal::Realtime::SerializableComponentIDPair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeComponentMap", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeComponentMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.<Serialize>b__0_0
::Normal::Realtime::SerializableComponentIDPair Normal::Realtime::RealtimeComponentMap::$Serialize$b__0_0(uint key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::<Serialize>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Serialize>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SerializableComponentIDPair, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Utility.Extensions
#include "Normal/Realtime/Utility/Extensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioInputStream
::System::IntPtr& Normal::Realtime::Native::AudioInputStream::dyn__nativeAudioInputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::dyn__nativeAudioInputStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioInputStream"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Dispose
void Normal::Realtime::Native::AudioInputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Dispose
void Normal::Realtime::Native::AudioInputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.ClientID
int Normal::Realtime::Native::AudioInputStream::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.StreamID
int Normal::Realtime::Native::AudioInputStream::StreamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::StreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Close
void Normal::Realtime::Native::AudioInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.SendRawAudioData
bool Normal::Realtime::Native::AudioInputStream::SendRawAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::SendRawAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRawAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.SendQueuedMessages
void Normal::Realtime::Native::AudioInputStream::SendQueuedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::SendQueuedMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendQueuedMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Finalize
void Normal::Realtime::Native::AudioInputStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioOutputStream
::System::IntPtr& Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioOutputStream"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioOutputStreamIdentifier
::System::IntPtr& Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStreamIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStreamIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioOutputStreamIdentifier"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.get_nativePointerIsNull
bool Normal::Realtime::Native::AudioOutputStream::get_nativePointerIsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::get_nativePointerIsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nativePointerIsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.AudioOutputStreamMatchesIdentifier
bool Normal::Realtime::Native::AudioOutputStream::AudioOutputStreamMatchesIdentifier(::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::AudioOutputStreamMatchesIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AudioOutputStreamMatchesIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Dispose
void Normal::Realtime::Native::AudioOutputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Dispose
void Normal::Realtime::Native::AudioOutputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.ClientID
int Normal::Realtime::Native::AudioOutputStream::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.StreamID
int Normal::Realtime::Native::AudioOutputStream::StreamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::StreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.SampleRate
int Normal::Realtime::Native::AudioOutputStream::SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.SetSampleRate
void Normal::Realtime::Native::AudioOutputStream::SetSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::SetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleRate);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Channels
int Normal::Realtime::Native::AudioOutputStream::Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.IsOpen
bool Normal::Realtime::Native::AudioOutputStream::IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.GetAudioData
bool Normal::Realtime::Native::AudioOutputStream::GetAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::GetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Finalize
void Normal::Realtime::Native::AudioOutputStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.AudioPreprocessor
#include "Normal/Realtime/Native/AudioPreprocessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioPreprocessor
::System::IntPtr& Normal::Realtime::Native::AudioPreprocessor::dyn__nativeAudioPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::dyn__nativeAudioPreprocessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioPreprocessor"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Dispose
void Normal::Realtime::Native::AudioPreprocessor::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Dispose
void Normal::Realtime::Native::AudioPreprocessor::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.ProcessRecordSamples
bool Normal::Realtime::Native::AudioPreprocessor::ProcessRecordSamples(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::ProcessRecordSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRecordSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.ProcessPlaybackFrame
bool Normal::Realtime::Native::AudioPreprocessor::ProcessPlaybackFrame(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::ProcessPlaybackFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPlaybackFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Finalize
void Normal::Realtime::Native::AudioPreprocessor::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client
#include "Normal/Realtime/Native/Client.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState
#include "Normal/Realtime/Native/Client_ClientState.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived
#include "Normal/Realtime/Native/Client_PersistenceMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived
#include "Normal/Realtime/Native/Client_RPCMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated
#include "Normal/Realtime/Native/Client_AudioOutputStreamCreated.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed
#include "Normal/Realtime/Native/Client_AudioOutputStreamClosed.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: Normal.Realtime.Native.NetworkInfo
#include "Normal/Realtime/Native/NetworkInfo.hpp"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 __numberOfClients
int Normal::Realtime::Native::Client::_get___numberOfClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_get___numberOfClients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Native", "Client", "__numberOfClients"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 __numberOfClients
void Normal::Realtime::Native::Client::_set___numberOfClients(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_set___numberOfClients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client", "__numberOfClients", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object __numberOfClientsLock
::Il2CppObject* Normal::Realtime::Native::Client::_get___numberOfClientsLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_get___numberOfClientsLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Normal.Realtime.Native", "Client", "__numberOfClientsLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object __numberOfClientsLock
void Normal::Realtime::Native::Client::_set___numberOfClientsLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_set___numberOfClientsLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client", "__numberOfClientsLock", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived persistenceMessageReceived
::Normal::Realtime::Native::Client::PersistenceMessageReceived*& Normal::Realtime::Native::Client::dyn_persistenceMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_persistenceMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistenceMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::PersistenceMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived rpcMessageReceived
::Normal::Realtime::Native::Client::RPCMessageReceived*& Normal::Realtime::Native::Client::dyn_rpcMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_rpcMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::RPCMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated audioOutputStreamCreated
::Normal::Realtime::Native::Client::AudioOutputStreamCreated*& Normal::Realtime::Native::Client::dyn_audioOutputStreamCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_audioOutputStreamCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutputStreamCreated"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::AudioOutputStreamCreated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed audioOutputStreamClosed
::Normal::Realtime::Native::Client::AudioOutputStreamClosed*& Normal::Realtime::Native::Client::dyn_audioOutputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_audioOutputStreamClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutputStreamClosed"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::AudioOutputStreamClosed**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeClient
::System::IntPtr& Normal::Realtime::Native::Client::dyn__nativeClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__nativeClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeClient"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.Native.AudioOutputStream> _audioOutputStreams
::System::Collections::Generic::List_1<::Normal::Realtime::Native::AudioOutputStream*>*& Normal::Realtime::Native::Client::dyn__audioOutputStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__audioOutputStreams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioOutputStreams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::Native::AudioOutputStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _persistenceMessageBuffer
::ArrayW<uint8_t>& Normal::Realtime::Native::Client::dyn__persistenceMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__persistenceMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_persistenceMessageBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _rpcMessageBuffer
::ArrayW<uint8_t>& Normal::Realtime::Native::Client::dyn__rpcMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__rpcMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcMessageBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_persistenceMessageReceived
void Normal::Realtime::Native::Client::add_persistenceMessageReceived(::Normal::Realtime::Native::Client::PersistenceMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_persistenceMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_persistenceMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_persistenceMessageReceived
void Normal::Realtime::Native::Client::remove_persistenceMessageReceived(::Normal::Realtime::Native::Client::PersistenceMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_persistenceMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_persistenceMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_rpcMessageReceived
void Normal::Realtime::Native::Client::add_rpcMessageReceived(::Normal::Realtime::Native::Client::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_rpcMessageReceived
void Normal::Realtime::Native::Client::remove_rpcMessageReceived(::Normal::Realtime::Native::Client::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_audioOutputStreamCreated
void Normal::Realtime::Native::Client::add_audioOutputStreamCreated(::Normal::Realtime::Native::Client::AudioOutputStreamCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_audioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_audioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_audioOutputStreamCreated
void Normal::Realtime::Native::Client::remove_audioOutputStreamCreated(::Normal::Realtime::Native::Client::AudioOutputStreamCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_audioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_audioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_audioOutputStreamClosed
void Normal::Realtime::Native::Client::add_audioOutputStreamClosed(::Normal::Realtime::Native::Client::AudioOutputStreamClosed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_audioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_audioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_audioOutputStreamClosed
void Normal::Realtime::Native::Client::remove_audioOutputStreamClosed(::Normal::Realtime::Native::Client::AudioOutputStreamClosed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_audioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_audioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client..cctor
void Normal::Realtime::Native::Client::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.SetUpNetworkStackIfNeeded
bool Normal::Realtime::Native::Client::SetUpNetworkStackIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SetUpNetworkStackIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", "SetUpNetworkStackIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.TearDownNetworkStackIfNeeded
bool Normal::Realtime::Native::Client::TearDownNetworkStackIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::TearDownNetworkStackIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", "TearDownNetworkStackIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Dispose
void Normal::Realtime::Native::Client::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Dispose
void Normal::Realtime::Native::Client::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Client.GetNetworkStatistics
::Normal::Realtime::Native::NetworkInfo Normal::Realtime::Native::Client::GetNetworkStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::GetNetworkStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::NetworkInfo, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.StartConnection
::StringW Normal::Realtime::Native::Client::StartConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::StartConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Connect
void Normal::Realtime::Native::Client::Connect(::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Native.Client.Disconnect
void Normal::Realtime::Native::Client::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveIncomingMessages
void Normal::Realtime::Native::Client::ReceiveIncomingMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveIncomingMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveIncomingMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.BumpAutoDisconnectTime
void Normal::Realtime::Native::Client::BumpAutoDisconnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::BumpAutoDisconnectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BumpAutoDisconnectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.State
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::Client::ClientState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ClientID
int Normal::Realtime::Native::Client::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.RoomTime
double Normal::Realtime::Native::Client::RoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.CreateAudioInputStream
::Normal::Realtime::Native::AudioInputStream* Normal::Realtime::Native::Client::CreateAudioInputStream(bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::CreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioInputStream*, false>(this, ___internal__method, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveAudioEventMessages
void Normal::Realtime::Native::Client::ReceiveAudioEventMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveAudioEventMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveAudioEventMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveAudioOutputStreamCreated
void Normal::Realtime::Native::Client::ReceiveAudioOutputStreamCreated(::System::IntPtr nativeAudioOutputStream, ::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveAudioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveAudioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStream), ::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeAudioOutputStream, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceivedAudioOutputStreamClosed
void Normal::Realtime::Native::Client::ReceivedAudioOutputStreamClosed(::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceivedAudioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedAudioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.Client.GetAudioOutputStream
::Normal::Realtime::Native::AudioOutputStream* Normal::Realtime::Native::Client::GetAudioOutputStream(int clientID, int streamID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::GetAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(streamID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioOutputStream*, false>(this, ___internal__method, clientID, streamID);
}
// Autogenerated method: Normal.Realtime.Native.Client.SendPersistenceMessage
bool Normal::Realtime::Native::Client::SendPersistenceMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SendPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceivePersistenceMessages
void Normal::Realtime::Native::Client::ReceivePersistenceMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceivePersistenceMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivePersistenceMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.SendRPCMessage
bool Normal::Realtime::Native::Client::SendRPCMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveRPCMessages
void Normal::Realtime::Native::Client::ReceiveRPCMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveRPCMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRPCMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Finalize
void Normal::Realtime::Native::Client::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState
#include "Normal/Realtime/Native/Client_ClientState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState New
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "New"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState New
void Normal::Realtime::Native::Client::ClientState::_set_New(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "New", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connecting
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connecting
void Normal::Realtime::Native::Client::ClientState::_set_Connecting(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connected
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connected
void Normal::Realtime::Native::Client::ClientState::_set_Connected(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Disconnected
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Disconnected
void Normal::Realtime::Native::Client::ClientState::_set_Disconnected(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Failed
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Failed
void Normal::Realtime::Native::Client::ClientState::_set_Failed(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Closed
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Closed
void Normal::Realtime::Native::Client::ClientState::_set_Closed(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::Native::Client::ClientState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived
#include "Normal/Realtime/Native/Client_PersistenceMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.Invoke
void Normal::Realtime::Native::Client::PersistenceMessageReceived::Invoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::PersistenceMessageReceived::BeginInvoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.EndInvoke
void Normal::Realtime::Native::Client::PersistenceMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
