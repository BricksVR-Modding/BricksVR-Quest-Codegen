// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeModelEvent
  struct RealtimeModelEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::RealtimeModelEvent, "Normal.Realtime", "RealtimeModelEvent");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.RealtimeModelEvent
  // [TokenAttribute] Offset: FFFFFFFF
  struct RealtimeModelEvent/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RealtimeModelEvent
    constexpr RealtimeModelEvent(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
    static constexpr const int OnWillWrite = 0;
    // Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
    static ::Normal::Realtime::RealtimeModelEvent _get_OnWillWrite();
    // Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
    static void _set_OnWillWrite(::Normal::Realtime::RealtimeModelEvent value);
    // static field const value: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
    static constexpr const int OnDidWrite = 1;
    // Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
    static ::Normal::Realtime::RealtimeModelEvent _get_OnDidWrite();
    // Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
    static void _set_OnDidWrite(::Normal::Realtime::RealtimeModelEvent value);
    // static field const value: static public Normal.Realtime.RealtimeModelEvent OnWillRead
    static constexpr const int OnWillRead = 2;
    // Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
    static ::Normal::Realtime::RealtimeModelEvent _get_OnWillRead();
    // Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
    static void _set_OnWillRead(::Normal::Realtime::RealtimeModelEvent value);
    // static field const value: static public Normal.Realtime.RealtimeModelEvent OnDidRead
    static constexpr const int OnDidRead = 3;
    // Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
    static ::Normal::Realtime::RealtimeModelEvent _get_OnDidRead();
    // Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
    static void _set_OnDidRead(::Normal::Realtime::RealtimeModelEvent value);
    // static field const value: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
    static constexpr const int OnDidReadProperties = 4;
    // Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
    static ::Normal::Realtime::RealtimeModelEvent _get_OnDidReadProperties();
    // Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
    static void _set_OnDidReadProperties(::Normal::Realtime::RealtimeModelEvent value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Normal.Realtime.RealtimeModelEvent
  #pragma pack(pop)
  static check_size<sizeof(RealtimeModelEvent), 0 + sizeof(int)> __Normal_Realtime_RealtimeModelEventSizeCheck;
  static_assert(sizeof(RealtimeModelEvent) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
