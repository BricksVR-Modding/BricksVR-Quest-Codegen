// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: ChunkedBrick
#include "GlobalNamespace/ChunkedBrick.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SetConnectorStatesTask
  struct SetConnectorStatesTask;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SetConnectorStatesTask, "", "SetConnectorStatesTask");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: SetConnectorStatesTask
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct SetConnectorStatesTask/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly ChunkedBrick ChunkedBrick
    // Size: 0x20
    // Offset: 0x0
    ::GlobalNamespace::ChunkedBrick ChunkedBrick;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ChunkedBrick) == 0x20);
    // public readonly System.Boolean Enabled
    // Size: 0x1
    // Offset: 0x20
    bool Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: SetConnectorStatesTask
    constexpr SetConnectorStatesTask(::GlobalNamespace::ChunkedBrick ChunkedBrick_ = {}, bool Enabled_ = {}) noexcept : ChunkedBrick{ChunkedBrick_}, Enabled{Enabled_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public readonly ChunkedBrick ChunkedBrick
    ::GlobalNamespace::ChunkedBrick& dyn_ChunkedBrick();
    // Get instance field reference: public readonly System.Boolean Enabled
    bool& dyn_Enabled();
    // public System.Void .ctor(ChunkedBrick brick, System.Boolean enabled)
    // Offset: 0x10B8FC4
    // ABORTED: conflicts with another method.  SetConnectorStatesTask(::GlobalNamespace::ChunkedBrick brick, bool enabled);
  }; // SetConnectorStatesTask
  #pragma pack(pop)
  static check_size<sizeof(SetConnectorStatesTask), 32 + sizeof(bool)> __GlobalNamespace_SetConnectorStatesTaskSizeCheck;
  static_assert(sizeof(SetConnectorStatesTask) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SetConnectorStatesTask::SetConnectorStatesTask
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
