// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UpdateConnectorLayerWhenHeld
  class UpdateConnectorLayerWhenHeld;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UpdateConnectorLayerWhenHeld);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UpdateConnectorLayerWhenHeld*, "", "UpdateConnectorLayerWhenHeld");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UpdateConnectorLayerWhenHeld
  // [TokenAttribute] Offset: FFFFFFFF
  class UpdateConnectorLayerWhenHeld : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject maleConnectorParent
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* maleConnectorParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject femaleConnectorParent
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* femaleConnectorParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] connectors
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::GameObject*> connectors;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject maleConnectorParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_maleConnectorParent();
    // Get instance field reference: public UnityEngine.GameObject femaleConnectorParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_femaleConnectorParent();
    // Get instance field reference: public UnityEngine.GameObject[] connectors
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_connectors();
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UpdateConnectorLayerWhenHeld* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UpdateConnectorLayerWhenHeld*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x924550
    void Awake();
    // private System.Void OnGrab(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x924680
    void OnGrab(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // private System.Void OnRelease(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x9246F0
    void OnRelease(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // private System.Void OnValidate()
    // Offset: 0x924760
    void OnValidate();
  }; // UpdateConnectorLayerWhenHeld
  #pragma pack(pop)
  static check_size<sizeof(UpdateConnectorLayerWhenHeld), 40 + sizeof(::ArrayW<::UnityEngine::GameObject*>)> __GlobalNamespace_UpdateConnectorLayerWhenHeldSizeCheck;
  static_assert(sizeof(UpdateConnectorLayerWhenHeld) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UpdateConnectorLayerWhenHeld::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::UpdateConnectorLayerWhenHeld::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateConnectorLayerWhenHeld::*)()>(&GlobalNamespace::UpdateConnectorLayerWhenHeld::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateConnectorLayerWhenHeld*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UpdateConnectorLayerWhenHeld::OnGrab
// Il2CppName: OnGrab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateConnectorLayerWhenHeld::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&GlobalNamespace::UpdateConnectorLayerWhenHeld::OnGrab)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateConnectorLayerWhenHeld*), "OnGrab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UpdateConnectorLayerWhenHeld::OnRelease
// Il2CppName: OnRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateConnectorLayerWhenHeld::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&GlobalNamespace::UpdateConnectorLayerWhenHeld::OnRelease)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateConnectorLayerWhenHeld*), "OnRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UpdateConnectorLayerWhenHeld::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateConnectorLayerWhenHeld::*)()>(&GlobalNamespace::UpdateConnectorLayerWhenHeld::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateConnectorLayerWhenHeld*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
