// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Steamworks.SteamInterface
#include "Steamworks/SteamInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Forward declaring namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: SteamId
  struct SteamId;
  // Forward declaring type: ChatEntryType
  struct ChatEntryType;
}
// Completed forward declares
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: ISteamMatchmaking
  class ISteamMatchmaking;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::ISteamMatchmaking);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::ISteamMatchmaking*, "Steamworks", "ISteamMatchmaking");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.ISteamMatchmaking
  // [TokenAttribute] Offset: FFFFFFFF
  class ISteamMatchmaking : public ::Steamworks::SteamInterface {
    public:
    // System.Void .ctor(System.Boolean IsGameServer)
    // Offset: 0xE374F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ISteamMatchmaking* New_ctor(bool IsGameServer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmaking::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ISteamMatchmaking*, creationType>(IsGameServer)));
    }
    // static System.IntPtr SteamAPI_SteamMatchmaking_v009()
    // Offset: 0xE37524
    static ::System::IntPtr SteamAPI_SteamMatchmaking_v009();
    // static private System.Int32 _GetLobbyChatEntry(System.IntPtr self, Steamworks.SteamId steamIDLobby, System.Int32 iChatID, ref Steamworks.SteamId pSteamIDUser, System.IntPtr pvData, System.Int32 cubData, ref Steamworks.ChatEntryType peChatEntryType)
    // Offset: 0xE3759C
    static int _GetLobbyChatEntry(::System::IntPtr self, ::Steamworks::SteamId steamIDLobby, int iChatID, ByRef<::Steamworks::SteamId> pSteamIDUser, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType);
    // System.Int32 GetLobbyChatEntry(Steamworks.SteamId steamIDLobby, System.Int32 iChatID, ref Steamworks.SteamId pSteamIDUser, System.IntPtr pvData, System.Int32 cubData, ref Steamworks.ChatEntryType peChatEntryType)
    // Offset: 0xE37664
    int GetLobbyChatEntry(::Steamworks::SteamId steamIDLobby, int iChatID, ByRef<::Steamworks::SteamId> pSteamIDUser, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType);
    // public override System.IntPtr GetUserInterfacePointer()
    // Offset: 0xE37598
    // Implemented from: Steamworks.SteamInterface
    // Base method: System.IntPtr SteamInterface::GetUserInterfacePointer()
    ::System::IntPtr GetUserInterfacePointer();
  }; // Steamworks.ISteamMatchmaking
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::ISteamMatchmaking::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Steamworks::ISteamMatchmaking::SteamAPI_SteamMatchmaking_v009
// Il2CppName: SteamAPI_SteamMatchmaking_v009
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Steamworks::ISteamMatchmaking::SteamAPI_SteamMatchmaking_v009)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamMatchmaking*), "SteamAPI_SteamMatchmaking_v009", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamMatchmaking::_GetLobbyChatEntry
// Il2CppName: _GetLobbyChatEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::Steamworks::SteamId, int, ByRef<::Steamworks::SteamId>, ::System::IntPtr, int, ByRef<::Steamworks::ChatEntryType>)>(&Steamworks::ISteamMatchmaking::_GetLobbyChatEntry)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* steamIDLobby = &::il2cpp_utils::GetClassFromName("Steamworks", "SteamId")->byval_arg;
    static auto* iChatID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pSteamIDUser = &::il2cpp_utils::GetClassFromName("Steamworks", "SteamId")->this_arg;
    static auto* pvData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* cubData = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* peChatEntryType = &::il2cpp_utils::GetClassFromName("Steamworks", "ChatEntryType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamMatchmaking*), "_GetLobbyChatEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, steamIDLobby, iChatID, pSteamIDUser, pvData, cubData, peChatEntryType});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamMatchmaking::GetLobbyChatEntry
// Il2CppName: GetLobbyChatEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Steamworks::ISteamMatchmaking::*)(::Steamworks::SteamId, int, ByRef<::Steamworks::SteamId>, ::System::IntPtr, int, ByRef<::Steamworks::ChatEntryType>)>(&Steamworks::ISteamMatchmaking::GetLobbyChatEntry)> {
  static const MethodInfo* get() {
    static auto* steamIDLobby = &::il2cpp_utils::GetClassFromName("Steamworks", "SteamId")->byval_arg;
    static auto* iChatID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pSteamIDUser = &::il2cpp_utils::GetClassFromName("Steamworks", "SteamId")->this_arg;
    static auto* pvData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* cubData = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* peChatEntryType = &::il2cpp_utils::GetClassFromName("Steamworks", "ChatEntryType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamMatchmaking*), "GetLobbyChatEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDLobby, iChatID, pSteamIDUser, pvData, cubData, peChatEntryType});
  }
};
// Writing MetadataGetter for method: Steamworks::ISteamMatchmaking::GetUserInterfacePointer
// Il2CppName: GetUserInterfacePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (Steamworks::ISteamMatchmaking::*)()>(&Steamworks::ISteamMatchmaking::GetUserInterfacePointer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::ISteamMatchmaking*), "GetUserInterfacePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
