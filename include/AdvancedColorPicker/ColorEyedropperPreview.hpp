// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Coroutine
  class Coroutine;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Skipping declaration: EyedropperPreviewType because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: VertexHelper
  class VertexHelper;
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorEyedropperPreview
  class ColorEyedropperPreview;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorEyedropperPreview);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorEyedropperPreview*, "AdvancedColorPicker", "ColorEyedropperPreview");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorEyedropperPreview
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: 71D1EC
  class ColorEyedropperPreview : public ::UnityEngine::UI::MaskableGraphic {
    public:
    // Nested type: ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType
    struct EyedropperPreviewType;
    // Nested type: ::AdvancedColorPicker::ColorEyedropperPreview::$ReadScreenColor$d__40
    class $ReadScreenColor$d__40;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType
    // [TokenAttribute] Offset: FFFFFFFF
    struct EyedropperPreviewType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: EyedropperPreviewType
      constexpr EyedropperPreviewType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelSize
      static constexpr const int PixelSize = 0;
      // Get static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelSize
      static ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType _get_PixelSize();
      // Set static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelSize
      static void _set_PixelSize(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType value);
      // static field const value: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountHorizontal
      static constexpr const int PixelAmountHorizontal = 1;
      // Get static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountHorizontal
      static ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType _get_PixelAmountHorizontal();
      // Set static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountHorizontal
      static void _set_PixelAmountHorizontal(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType value);
      // static field const value: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountVertical
      static constexpr const int PixelAmountVertical = 2;
      // Get static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountVertical
      static ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType _get_PixelAmountVertical();
      // Set static field: static public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType PixelAmountVertical
      static void _set_PixelAmountVertical(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType
    #pragma pack(pop)
    static check_size<sizeof(ColorEyedropperPreview::EyedropperPreviewType), 0 + sizeof(int)> __AdvancedColorPicker_ColorEyedropperPreview_EyedropperPreviewTypeSizeCheck;
    static_assert(sizeof(ColorEyedropperPreview::EyedropperPreviewType) == 0x4);
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType type
    // Size: 0x4
    // Offset: 0xC0
    ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType type;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType) == 0x4);
    // private System.Single pixelSize
    // Size: 0x4
    // Offset: 0xC4
    float pixelSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single borderSize
    // Size: 0x4
    // Offset: 0xC8
    float borderSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single horizontalPixels
    // Size: 0x4
    // Offset: 0xCC
    float horizontalPixels;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single verticalPixels
    // Size: 0x4
    // Offset: 0xD0
    float verticalPixels;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color32 selectionBoxColor
    // Size: 0x4
    // Offset: 0xD4
    ::UnityEngine::Color32 selectionBoxColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color32) == 0x4);
    // private System.Boolean activated
    // Size: 0x1
    // Offset: 0xD8
    bool activated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: activated and: coroutine
    char __padding6[0x7] = {};
    // private UnityEngine.Coroutine coroutine
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::Coroutine* coroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Color32[] pixelsToDisplay
    // Size: 0x8
    // Offset: 0xE8
    ::ArrayW<::UnityEngine::Color32> pixelsToDisplay;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Color32>) == 0x8);
    public:
    // Get instance field reference: private AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType type
    ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType& dyn_type();
    // Get instance field reference: private System.Single pixelSize
    float& dyn_pixelSize();
    // Get instance field reference: private System.Single borderSize
    float& dyn_borderSize();
    // Get instance field reference: private System.Single horizontalPixels
    float& dyn_horizontalPixels();
    // Get instance field reference: private System.Single verticalPixels
    float& dyn_verticalPixels();
    // Get instance field reference: private UnityEngine.Color32 selectionBoxColor
    ::UnityEngine::Color32& dyn_selectionBoxColor();
    // Get instance field reference: private System.Boolean activated
    bool& dyn_activated();
    // Get instance field reference: private UnityEngine.Coroutine coroutine
    ::UnityEngine::Coroutine*& dyn_coroutine();
    // Get instance field reference: private UnityEngine.Color32[] pixelsToDisplay
    ::ArrayW<::UnityEngine::Color32>& dyn_pixelsToDisplay();
    // private UnityEngine.Color32 get_InactiveColor()
    // Offset: 0xE1619C
    ::UnityEngine::Color32 get_InactiveColor();
    // public AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType get_Type()
    // Offset: 0xE161D8
    ::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType get_Type();
    // public System.Void set_Type(AdvancedColorPicker.ColorEyedropperPreview/AdvancedColorPicker.EyedropperPreviewType value)
    // Offset: 0xE161E0
    void set_Type(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType value);
    // public System.Single get_PixelSize()
    // Offset: 0xE16418
    float get_PixelSize();
    // public System.Void set_PixelSize(System.Single value)
    // Offset: 0xE16420
    void set_PixelSize(float value);
    // public System.Single get_BorderSize()
    // Offset: 0xE164C4
    float get_BorderSize();
    // public System.Void set_BorderSize(System.Single value)
    // Offset: 0xE164CC
    void set_BorderSize(float value);
    // public System.Single get_HorizontalPixels()
    // Offset: 0xE1656C
    float get_HorizontalPixels();
    // public System.Void set_HorizontalPixels(System.Single value)
    // Offset: 0xE16574
    void set_HorizontalPixels(float value);
    // public System.Single get_VerticalPixels()
    // Offset: 0xE1661C
    float get_VerticalPixels();
    // public System.Void set_VerticalPixels(System.Single value)
    // Offset: 0xE16624
    void set_VerticalPixels(float value);
    // public System.Int32 get_ExpectedVertices()
    // Offset: 0xE166CC
    int get_ExpectedVertices();
    // public UnityEngine.Color32 get_SelectionBoxColor()
    // Offset: 0xE16768
    ::UnityEngine::Color32 get_SelectionBoxColor();
    // public System.Void set_SelectionBoxColor(UnityEngine.Color32 value)
    // Offset: 0xE16770
    void set_SelectionBoxColor(::UnityEngine::Color32 value);
    // public System.Boolean get_Activated()
    // Offset: 0xE167BC
    bool get_Activated();
    // public System.Void set_Activated(System.Boolean value)
    // Offset: 0xE167C4
    void set_Activated(bool value);
    // private System.Void CalculateOtherValues()
    // Offset: 0xE161F8
    void CalculateOtherValues();
    // private System.Collections.IEnumerator ReadScreenColor()
    // Offset: 0xE1683C
    ::System::Collections::IEnumerator* ReadScreenColor();
    // private System.Boolean SetQuadPositions(UnityEngine.UIVertex[] verts, UnityEngine.Vector3 center, UnityEngine.Rect inside)
    // Offset: 0xE178F4
    bool SetQuadPositions(::ArrayW<::UnityEngine::UIVertex> verts, ::UnityEngine::Vector3 center, ::UnityEngine::Rect inside);
    // private System.Boolean SetQuadPositions(UnityEngine.UIVertex[] verts, UnityEngine.Vector3 center, UnityEngine.Rect inside, System.Single offset)
    // Offset: 0xE17950
    bool SetQuadPositions(::ArrayW<::UnityEngine::UIVertex> verts, ::UnityEngine::Vector3 center, ::UnityEngine::Rect inside, float offset);
    // private System.Void SetQuadColors(UnityEngine.UIVertex[] verts, UnityEngine.Color32 color)
    // Offset: 0xE178FC
    void SetQuadColors(::ArrayW<::UnityEngine::UIVertex> verts, ::UnityEngine::Color32 color);
    // public System.Void .ctor()
    // Offset: 0xE17C14
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::.ctor()
    // Base method: System.Void Graphic::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorEyedropperPreview* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorEyedropperPreview::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorEyedropperPreview*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0xE167F4
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xE168AC
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnDisable()
    void OnDisable();
    // public override System.Void SetNativeSize()
    // Offset: 0xE168EC
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::SetNativeSize()
    void SetNativeSize();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0xE16B1C
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
    // protected override System.Void OnPopulateMesh(UnityEngine.UI.VertexHelper vh)
    // Offset: 0xE16B4C
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnPopulateMesh(UnityEngine.UI.VertexHelper vh)
    void OnPopulateMesh(::UnityEngine::UI::VertexHelper* vh);
  }; // AdvancedColorPicker.ColorEyedropperPreview
  #pragma pack(pop)
  static check_size<sizeof(ColorEyedropperPreview), 232 + sizeof(::ArrayW<::UnityEngine::Color32>)> __AdvancedColorPicker_ColorEyedropperPreviewSizeCheck;
  static_assert(sizeof(ColorEyedropperPreview) == 0xF0);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType, "AdvancedColorPicker", "ColorEyedropperPreview/EyedropperPreviewType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_InactiveColor
// Il2CppName: get_InactiveColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_InactiveColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_InactiveColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_Type
// Il2CppName: set_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(::AdvancedColorPicker::ColorEyedropperPreview::EyedropperPreviewType)>(&AdvancedColorPicker::ColorEyedropperPreview::set_Type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorEyedropperPreview/EyedropperPreviewType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_PixelSize
// Il2CppName: get_PixelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_PixelSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_PixelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_PixelSize
// Il2CppName: set_PixelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(float)>(&AdvancedColorPicker::ColorEyedropperPreview::set_PixelSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_PixelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_BorderSize
// Il2CppName: get_BorderSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_BorderSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_BorderSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_BorderSize
// Il2CppName: set_BorderSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(float)>(&AdvancedColorPicker::ColorEyedropperPreview::set_BorderSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_BorderSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_HorizontalPixels
// Il2CppName: get_HorizontalPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_HorizontalPixels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_HorizontalPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_HorizontalPixels
// Il2CppName: set_HorizontalPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(float)>(&AdvancedColorPicker::ColorEyedropperPreview::set_HorizontalPixels)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_HorizontalPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_VerticalPixels
// Il2CppName: get_VerticalPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_VerticalPixels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_VerticalPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_VerticalPixels
// Il2CppName: set_VerticalPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(float)>(&AdvancedColorPicker::ColorEyedropperPreview::set_VerticalPixels)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_VerticalPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_ExpectedVertices
// Il2CppName: get_ExpectedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_ExpectedVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_ExpectedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_SelectionBoxColor
// Il2CppName: get_SelectionBoxColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_SelectionBoxColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_SelectionBoxColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_SelectionBoxColor
// Il2CppName: set_SelectionBoxColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(::UnityEngine::Color32)>(&AdvancedColorPicker::ColorEyedropperPreview::set_SelectionBoxColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_SelectionBoxColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::get_Activated
// Il2CppName: get_Activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::get_Activated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "get_Activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::set_Activated
// Il2CppName: set_Activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(bool)>(&AdvancedColorPicker::ColorEyedropperPreview::set_Activated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "set_Activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::CalculateOtherValues
// Il2CppName: CalculateOtherValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::CalculateOtherValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "CalculateOtherValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::ReadScreenColor
// Il2CppName: ReadScreenColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::ReadScreenColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "ReadScreenColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::SetQuadPositions
// Il2CppName: SetQuadPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::ColorEyedropperPreview::*)(::ArrayW<::UnityEngine::UIVertex>, ::UnityEngine::Vector3, ::UnityEngine::Rect)>(&AdvancedColorPicker::ColorEyedropperPreview::SetQuadPositions)> {
  static const MethodInfo* get() {
    static auto* verts = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "UIVertex"), 1)->byval_arg;
    static auto* center = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* inside = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "SetQuadPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{verts, center, inside});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::SetQuadPositions
// Il2CppName: SetQuadPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::ColorEyedropperPreview::*)(::ArrayW<::UnityEngine::UIVertex>, ::UnityEngine::Vector3, ::UnityEngine::Rect, float)>(&AdvancedColorPicker::ColorEyedropperPreview::SetQuadPositions)> {
  static const MethodInfo* get() {
    static auto* verts = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "UIVertex"), 1)->byval_arg;
    static auto* center = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* inside = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "SetQuadPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{verts, center, inside, offset});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::SetQuadColors
// Il2CppName: SetQuadColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(::ArrayW<::UnityEngine::UIVertex>, ::UnityEngine::Color32)>(&AdvancedColorPicker::ColorEyedropperPreview::SetQuadColors)> {
  static const MethodInfo* get() {
    static auto* verts = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "UIVertex"), 1)->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "SetQuadColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{verts, color});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::SetNativeSize
// Il2CppName: SetNativeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::SetNativeSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "SetNativeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)()>(&AdvancedColorPicker::ColorEyedropperPreview::OnRectTransformDimensionsChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropperPreview::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropperPreview::*)(::UnityEngine::UI::VertexHelper*)>(&AdvancedColorPicker::ColorEyedropperPreview::OnPopulateMesh)> {
  static const MethodInfo* get() {
    static auto* vh = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "VertexHelper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropperPreview*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vh});
  }
};
