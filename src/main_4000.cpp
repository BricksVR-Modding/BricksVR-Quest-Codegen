// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
::StringW& TMPro::TMP_SpriteCharacter::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteCharacter::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HashCode
int& TMPro::TMP_SpriteCharacter::dyn_m_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteCharacter::dyn_m_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_name
::StringW TMPro::TMP_SpriteCharacter::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteCharacter::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.set_name
void TMPro::TMP_SpriteCharacter::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteCharacter::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_hashCode
int TMPro::TMP_SpriteCharacter::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteCharacter::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite sprite
::UnityEngine::Sprite*& TMPro::TMP_SpriteGlyph::dyn_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SpriteGlyph::dyn_sprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static TMPro.TMP_Style k_NormalStyle
::TMPro::TMP_Style* TMPro::TMP_Style::_get_k_NormalStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::_get_k_NormalStyle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Style*>("TMPro", "TMP_Style", "k_NormalStyle"));
}
// Autogenerated static field setter
// Set static field: static TMPro.TMP_Style k_NormalStyle
void TMPro::TMP_Style::_set_k_NormalStyle(::TMPro::TMP_Style* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::_set_k_NormalStyle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Style", "k_NormalStyle", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
::StringW& TMPro::TMP_Style::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HashCode
int& TMPro::TMP_Style::dyn_m_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_OpeningDefinition
::StringW& TMPro::TMP_Style::dyn_m_OpeningDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_OpeningDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpeningDefinition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ClosingDefinition
::StringW& TMPro::TMP_Style::dyn_m_ClosingDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_ClosingDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClosingDefinition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_OpeningTagArray
::ArrayW<int>& TMPro::TMP_Style::dyn_m_OpeningTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_OpeningTagArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpeningTagArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_ClosingTagArray
::ArrayW<int>& TMPro::TMP_Style::dyn_m_ClosingTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_ClosingTagArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClosingTagArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32[] m_OpeningTagUnicodeArray
::ArrayW<uint>& TMPro::TMP_Style::dyn_m_OpeningTagUnicodeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_OpeningTagUnicodeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpeningTagUnicodeArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32[] m_ClosingTagUnicodeArray
::ArrayW<uint>& TMPro::TMP_Style::dyn_m_ClosingTagUnicodeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::dyn_m_ClosingTagUnicodeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClosingTagUnicodeArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Style.get_NormalStyle
::TMPro::TMP_Style* TMPro::TMP_Style::get_NormalStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_NormalStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Style", "get_NormalStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Style*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_name
::StringW TMPro::TMP_Style::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_name
void TMPro::TMP_Style::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_hashCode
int TMPro::TMP_Style::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_hashCode
void TMPro::TMP_Style::set_hashCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::set_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningDefinition
::StringW TMPro::TMP_Style::get_styleOpeningDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_styleOpeningDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingDefinition
::StringW TMPro::TMP_Style::get_styleClosingDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_styleClosingDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningTagArray
::ArrayW<int> TMPro::TMP_Style::get_styleOpeningTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_styleOpeningTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingTagArray
::ArrayW<int> TMPro::TMP_Style::get_styleClosingTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::get_styleClosingTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.RefreshStyle
void TMPro::TMP_Style::RefreshStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Style::RefreshStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Style> m_StyleList
::System::Collections::Generic::List_1<::TMPro::TMP_Style*>*& TMPro::TMP_StyleSheet::dyn_m_StyleList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::dyn_m_StyleList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Style*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_Style> m_StyleLookupDictionary
::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_Style*>*& TMPro::TMP_StyleSheet::dyn_m_StyleLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::dyn_m_StyleLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleLookupDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_Style*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_StyleSheet.get_styles
::System::Collections::Generic::List_1<::TMPro::TMP_Style*>* TMPro::TMP_StyleSheet::get_styles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::get_styles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_Style*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.Reset
void TMPro::TMP_StyleSheet::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyle
::TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyle(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::GetStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Style*, false>(this, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyle
::TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyle(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::GetStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Style*, false>(this, ___internal__method, name);
}
// Autogenerated method: TMPro.TMP_StyleSheet.RefreshStyles
void TMPro::TMP_StyleSheet::RefreshStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::RefreshStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.LoadStyleDictionaryInternal
void TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadStyleDictionaryInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontAsset m_fontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_SubMesh::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SpriteAsset m_spriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::TMP_SubMesh::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
::UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_sharedMaterial
::UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackMaterial
::UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_fallbackMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackSourceMaterial
::UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_fallbackSourceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackSourceMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultMaterial
bool& TMPro::TMP_SubMesh::dyn_m_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_isDefaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding
float& TMPro::TMP_SubMesh::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
::UnityEngine::Renderer*& TMPro::TMP_SubMesh::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter m_meshFilter
::UnityEngine::MeshFilter*& TMPro::TMP_SubMesh::dyn_m_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
::UnityEngine::Mesh*& TMPro::TMP_SubMesh::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro m_TextComponent
::TMPro::TextMeshPro*& TMPro::TMP_SubMesh::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TMP_SubMesh::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fontAsset
::TMPro::TMP_FontAsset* TMPro::TMP_SubMesh::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fontAsset
void TMPro::TMP_SubMesh::set_fontAsset(::TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_spriteAsset
::TMPro::TMP_SpriteAsset* TMPro::TMP_SubMesh::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_spriteAsset
void TMPro::TMP_SubMesh::set_spriteAsset(::TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_material
::UnityEngine::Material* TMPro::TMP_SubMesh::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_material
void TMPro::TMP_SubMesh::set_material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_sharedMaterial
::UnityEngine::Material* TMPro::TMP_SubMesh::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_sharedMaterial
void TMPro::TMP_SubMesh::set_sharedMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackMaterial
::UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackMaterial
void TMPro::TMP_SubMesh::set_fallbackMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackSourceMaterial
::UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackSourceMaterial
void TMPro::TMP_SubMesh::set_fallbackSourceMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_isDefaultMaterial
bool TMPro::TMP_SubMesh::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_isDefaultMaterial
void TMPro::TMP_SubMesh::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_padding
float TMPro::TMP_SubMesh::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_padding
void TMPro::TMP_SubMesh::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_renderer
::UnityEngine::Renderer* TMPro::TMP_SubMesh::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_meshFilter
::UnityEngine::MeshFilter* TMPro::TMP_SubMesh::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_mesh
::UnityEngine::Mesh* TMPro::TMP_SubMesh::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_mesh
void TMPro::TMP_SubMesh::set_mesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_textComponent
::TMPro::TMP_Text* TMPro::TMP_SubMesh::get_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::get_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.AddSubTextObject
::TMPro::TMP_SubMesh* TMPro::TMP_SubMesh::AddSubTextObject(::TMPro::TextMeshPro* textComponent, ::TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMesh", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SubMesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnEnable
void TMPro::TMP_SubMesh::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDisable
void TMPro::TMP_SubMesh::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDestroy
void TMPro::TMP_SubMesh::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.DestroySelf
void TMPro::TMP_SubMesh::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetMaterial
::UnityEngine::Material* TMPro::TMP_SubMesh::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.CreateMaterialInstance
::UnityEngine::Material* TMPro::TMP_SubMesh::CreateMaterialInstance(::UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetSharedMaterial
::UnityEngine::Material* TMPro::TMP_SubMesh::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetSharedMaterial
void TMPro::TMP_SubMesh::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetPaddingForMaterial
float TMPro::TMP_SubMesh::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMeshPadding
void TMPro::TMP_SubMesh::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetVerticesDirty
void TMPro::TMP_SubMesh::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::SetVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetMaterialDirty
void TMPro::TMP_SubMesh::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::SetMaterialDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMaterial
void TMPro::TMP_SubMesh::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMesh::UpdateMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontAsset m_fontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_SubMeshUI::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SpriteAsset m_spriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::TMP_SubMeshUI::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
::UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_sharedMaterial
::UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackMaterial
::UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_fallbackMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackSourceMaterial
::UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_fallbackSourceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackSourceMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultMaterial
bool& TMPro::TMP_SubMeshUI::dyn_m_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_isDefaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding
float& TMPro::TMP_SubMeshUI::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
::UnityEngine::Mesh*& TMPro::TMP_SubMeshUI::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_TextComponent
::TMPro::TextMeshProUGUI*& TMPro::TMP_SubMeshUI::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TMP_SubMeshUI::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_materialDirty
bool& TMPro::TMP_SubMeshUI::dyn_m_materialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_materialDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_materialReferenceIndex
int& TMPro::TMP_SubMeshUI::dyn_m_materialReferenceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_materialReferenceIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialReferenceIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_RootCanvasTransform
::UnityEngine::Transform*& TMPro::TMP_SubMeshUI::dyn_m_RootCanvasTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::dyn_m_RootCanvasTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RootCanvasTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fontAsset
::TMPro::TMP_FontAsset* TMPro::TMP_SubMeshUI::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fontAsset
void TMPro::TMP_SubMeshUI::set_fontAsset(::TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_spriteAsset
::TMPro::TMP_SpriteAsset* TMPro::TMP_SubMeshUI::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_spriteAsset
void TMPro::TMP_SubMeshUI::set_spriteAsset(::TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_sharedMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_sharedMaterial
void TMPro::TMP_SubMeshUI::set_sharedMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackMaterial
void TMPro::TMP_SubMeshUI::set_fallbackMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackSourceMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackSourceMaterial
void TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_isDefaultMaterial
bool TMPro::TMP_SubMeshUI::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_isDefaultMaterial
void TMPro::TMP_SubMeshUI::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_padding
float TMPro::TMP_SubMeshUI::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_padding
void TMPro::TMP_SubMeshUI::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mesh
::UnityEngine::Mesh* TMPro::TMP_SubMeshUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_mesh
void TMPro::TMP_SubMeshUI::set_mesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_textComponent
::TMPro::TMP_Text* TMPro::TMP_SubMeshUI::get_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.AddSubTextObject
::TMPro::TMP_SubMeshUI* TMPro::TMP_SubMeshUI::AddSubTextObject(::TMPro::TextMeshProUGUI* textComponent, ::TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMeshUI", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SubMeshUI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMeshPadding
void TMPro::TMP_SubMeshUI::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetPivotDirty
void TMPro::TMP_SubMeshUI::SetPivotDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetPivotDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPivotDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetRootCanvasTransform
::UnityEngine::Transform* TMPro::TMP_SubMeshUI::GetRootCanvasTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetRootCanvasTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootCanvasTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RefreshMaterial
void TMPro::TMP_SubMeshUI::RefreshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::RefreshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.CreateMaterialInstance
::UnityEngine::Material* TMPro::TMP_SubMeshUI::CreateMaterialInstance(::UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetSharedMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetSharedMaterial
void TMPro::TMP_SubMeshUI::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mainTexture
::UnityEngine::Texture* TMPro::TMP_SubMeshUI::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_material
::UnityEngine::Material* TMPro::TMP_SubMeshUI::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_material
void TMPro::TMP_SubMeshUI::set_material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_materialForRendering
::UnityEngine::Material* TMPro::TMP_SubMeshUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnEnable
void TMPro::TMP_SubMeshUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDisable
void TMPro::TMP_SubMeshUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDestroy
void TMPro::TMP_SubMeshUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnTransformParentChanged
void TMPro::TMP_SubMeshUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetModifiedMaterial
::UnityEngine::Material* TMPro::TMP_SubMeshUI::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetAllDirty
void TMPro::TMP_SubMeshUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetVerticesDirty
void TMPro::TMP_SubMeshUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetLayoutDirty
void TMPro::TMP_SubMeshUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetMaterialDirty
void TMPro::TMP_SubMeshUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Cull
void TMPro::TMP_SubMeshUI::Cull(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateGeometry
void TMPro::TMP_SubMeshUI::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Rebuild
void TMPro::TMP_SubMeshUI::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMaterial
void TMPro::TMP_SubMeshUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RecalculateClipping
void TMPro::TMP_SubMeshUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_SubMeshUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITextElement
#include "TMPro/ITextElement.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITextElement.get_sharedMaterial
::UnityEngine::Material* TMPro::ITextElement::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITextElement::get_sharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ITextElement.Rebuild
void TMPro::ITextElement::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITextElement::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.ITextElement.GetInstanceID
int TMPro::ITextElement::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITextElement::GetInstanceID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopLeft
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopLeft
void TMPro::TextAlignmentOptions::_set_TopLeft(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Top
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Top
void TMPro::TextAlignmentOptions::_set_Top(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopRight
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopRight
void TMPro::TextAlignmentOptions::_set_TopRight(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopJustified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_TopJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopJustified
void TMPro::TextAlignmentOptions::_set_TopJustified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_TopJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopFlush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_TopFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopFlush
void TMPro::TextAlignmentOptions::_set_TopFlush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_TopFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_TopGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopGeoAligned
void TMPro::TextAlignmentOptions::_set_TopGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_TopGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Left
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Left
void TMPro::TextAlignmentOptions::_set_Left(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Center
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Center
void TMPro::TextAlignmentOptions::_set_Center(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Right
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Right
void TMPro::TextAlignmentOptions::_set_Right(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Justified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Justified
void TMPro::TextAlignmentOptions::_set_Justified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Flush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Flush
void TMPro::TextAlignmentOptions::_set_Flush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CenterGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CenterGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CenterGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
void TMPro::TextAlignmentOptions::_set_CenterGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CenterGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CenterGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomLeft
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomLeft
void TMPro::TextAlignmentOptions::_set_BottomLeft(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Bottom
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Bottom
void TMPro::TextAlignmentOptions::_set_Bottom(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomRight
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomRight
void TMPro::TextAlignmentOptions::_set_BottomRight(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomJustified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BottomJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomJustified
void TMPro::TextAlignmentOptions::_set_BottomJustified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BottomJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomFlush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BottomFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomFlush
void TMPro::TextAlignmentOptions::_set_BottomFlush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BottomFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BottomGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
void TMPro::TextAlignmentOptions::_set_BottomGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BottomGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineLeft
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BaselineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineLeft
void TMPro::TextAlignmentOptions::_set_BaselineLeft(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BaselineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Baseline
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Baseline
void TMPro::TextAlignmentOptions::_set_Baseline(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineRight
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BaselineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineRight
void TMPro::TextAlignmentOptions::_set_BaselineRight(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BaselineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineJustified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BaselineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineJustified
void TMPro::TextAlignmentOptions::_set_BaselineJustified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BaselineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineFlush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BaselineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineFlush
void TMPro::TextAlignmentOptions::_set_BaselineFlush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BaselineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_BaselineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
void TMPro::TextAlignmentOptions::_set_BaselineGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_BaselineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineLeft
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_MidlineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineLeft
void TMPro::TextAlignmentOptions::_set_MidlineLeft(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_MidlineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Midline
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Midline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Midline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Midline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Midline
void TMPro::TextAlignmentOptions::_set_Midline(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Midline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Midline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineRight
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_MidlineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineRight
void TMPro::TextAlignmentOptions::_set_MidlineRight(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_MidlineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineJustified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_MidlineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineJustified
void TMPro::TextAlignmentOptions::_set_MidlineJustified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_MidlineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineFlush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_MidlineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineFlush
void TMPro::TextAlignmentOptions::_set_MidlineFlush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_MidlineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_MidlineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
void TMPro::TextAlignmentOptions::_set_MidlineGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_MidlineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineLeft
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CaplineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineLeft
void TMPro::TextAlignmentOptions::_set_CaplineLeft(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CaplineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Capline
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Capline
void TMPro::TextAlignmentOptions::_set_Capline(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Capline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineRight
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CaplineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineRight
void TMPro::TextAlignmentOptions::_set_CaplineRight(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CaplineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineJustified
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CaplineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineJustified
void TMPro::TextAlignmentOptions::_set_CaplineJustified(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CaplineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineFlush
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CaplineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineFlush
void TMPro::TextAlignmentOptions::_set_CaplineFlush(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CaplineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_CaplineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
void TMPro::TextAlignmentOptions::_set_CaplineGeoAligned(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_CaplineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Converted
::TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Converted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_get_Converted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Converted"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Converted
void TMPro::TextAlignmentOptions::_set_Converted(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::_set_Converted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Converted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.HorizontalAlignmentOptions
#include "TMPro/HorizontalAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Left
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Left
void TMPro::HorizontalAlignmentOptions::_set_Left(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Center
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Center
void TMPro::HorizontalAlignmentOptions::_set_Center(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Right
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Right
void TMPro::HorizontalAlignmentOptions::_set_Right(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Justified
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Justified
void TMPro::HorizontalAlignmentOptions::_set_Justified(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Flush
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Flush
void TMPro::HorizontalAlignmentOptions::_set_Flush(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.HorizontalAlignmentOptions Geometry
::TMPro::HorizontalAlignmentOptions TMPro::HorizontalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::HorizontalAlignmentOptions>("TMPro", "HorizontalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.HorizontalAlignmentOptions Geometry
void TMPro::HorizontalAlignmentOptions::_set_Geometry(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "HorizontalAlignmentOptions", "Geometry", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::HorizontalAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HorizontalAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.VerticalAlignmentOptions
#include "TMPro/VerticalAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Top
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Top
void TMPro::VerticalAlignmentOptions::_set_Top(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Middle
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Middle
void TMPro::VerticalAlignmentOptions::_set_Middle(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Bottom
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Bottom
void TMPro::VerticalAlignmentOptions::_set_Bottom(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Baseline
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Baseline
void TMPro::VerticalAlignmentOptions::_set_Baseline(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Geometry
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Geometry
void TMPro::VerticalAlignmentOptions::_set_Geometry(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Geometry", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VerticalAlignmentOptions Capline
::TMPro::VerticalAlignmentOptions TMPro::VerticalAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::VerticalAlignmentOptions>("TMPro", "VerticalAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VerticalAlignmentOptions Capline
void TMPro::VerticalAlignmentOptions::_set_Capline(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VerticalAlignmentOptions", "Capline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::VerticalAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VerticalAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextRenderFlags
#include "TMPro/TextRenderFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags DontRender
::TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_DontRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextRenderFlags::_get_DontRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "DontRender"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags DontRender
void TMPro::TextRenderFlags::_set_DontRender(::TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextRenderFlags::_set_DontRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "DontRender", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags Render
::TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextRenderFlags::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "Render"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags Render
void TMPro::TextRenderFlags::_set_Render(::TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextRenderFlags::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "Render", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextRenderFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextRenderFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElementType
#include "TMPro/TMP_TextElementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Character
::TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Character
void TMPro::TMP_TextElementType::_set_Character(::TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Sprite
::TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Sprite
void TMPro::TMP_TextElementType::_set_Sprite(::TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Sprite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_TextElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingTypes
#include "TMPro/MaskingTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskOff
::TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_get_MaskOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskOff"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskOff
void TMPro::MaskingTypes::_set_MaskOff(::TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_set_MaskOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskOff", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskHard
::TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_get_MaskHard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskHard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskHard
void TMPro::MaskingTypes::_set_MaskHard(::TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_set_MaskHard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskHard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskSoft
::TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_get_MaskSoft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskSoft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskSoft
void TMPro::MaskingTypes::_set_MaskSoft(::TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::_set_MaskSoft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskSoft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::MaskingTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextOverflowModes
#include "TMPro/TextOverflowModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Overflow
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Overflow
void TMPro::TextOverflowModes::_set_Overflow(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Overflow", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Ellipsis
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Ellipsis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Ellipsis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Ellipsis"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Ellipsis
void TMPro::TextOverflowModes::_set_Ellipsis(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Ellipsis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Ellipsis", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Masking
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Masking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Masking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Masking"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Masking
void TMPro::TextOverflowModes::_set_Masking(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Masking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Masking", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Truncate
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Truncate
void TMPro::TextOverflowModes::_set_Truncate(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes ScrollRect
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_ScrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_ScrollRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "ScrollRect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes ScrollRect
void TMPro::TextOverflowModes::_set_ScrollRect(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_ScrollRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "ScrollRect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Page
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Page");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Page"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Page
void TMPro::TextOverflowModes::_set_Page(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Page");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Page", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Linked
::TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Linked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_get_Linked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Linked"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Linked
void TMPro::TextOverflowModes::_set_Linked(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::_set_Linked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Linked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextOverflowModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextOverflowModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingOffsetMode
#include "TMPro/MaskingOffsetMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Percentage
::TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingOffsetMode::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Percentage
void TMPro::MaskingOffsetMode::_set_Percentage(::TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingOffsetMode::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Pixel
::TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Pixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingOffsetMode::_get_Pixel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Pixel"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Pixel
void TMPro::MaskingOffsetMode::_set_Pixel(::TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingOffsetMode::_set_Pixel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Pixel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::MaskingOffsetMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaskingOffsetMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextureMappingOptions
#include "TMPro/TextureMappingOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Character
::TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Character
void TMPro::TextureMappingOptions::_set_Character(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Line
::TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Line"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Line
void TMPro::TextureMappingOptions::_set_Line(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Paragraph
::TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Paragraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_get_Paragraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Paragraph"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Paragraph
void TMPro::TextureMappingOptions::_set_Paragraph(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_set_Paragraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Paragraph", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions MatchAspect
::TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_MatchAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_get_MatchAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "MatchAspect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions MatchAspect
void TMPro::TextureMappingOptions::_set_MatchAspect(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::_set_MatchAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "MatchAspect", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextureMappingOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextureMappingOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Normal
::TMPro::FontStyles TMPro::FontStyles::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Normal
void TMPro::FontStyles::_set_Normal(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Bold
::TMPro::FontStyles TMPro::FontStyles::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Bold
void TMPro::FontStyles::_set_Bold(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Italic
::TMPro::FontStyles TMPro::FontStyles::_get_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Italic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Italic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Italic
void TMPro::FontStyles::_set_Italic(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Italic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Italic", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Underline
::TMPro::FontStyles TMPro::FontStyles::_get_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Underline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Underline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Underline
void TMPro::FontStyles::_set_Underline(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Underline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Underline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles LowerCase
::TMPro::FontStyles TMPro::FontStyles::_get_LowerCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_LowerCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "LowerCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles LowerCase
void TMPro::FontStyles::_set_LowerCase(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_LowerCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "LowerCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles UpperCase
::TMPro::FontStyles TMPro::FontStyles::_get_UpperCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_UpperCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "UpperCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles UpperCase
void TMPro::FontStyles::_set_UpperCase(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_UpperCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "UpperCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles SmallCaps
::TMPro::FontStyles TMPro::FontStyles::_get_SmallCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_SmallCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "SmallCaps"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles SmallCaps
void TMPro::FontStyles::_set_SmallCaps(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_SmallCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "SmallCaps", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Strikethrough
::TMPro::FontStyles TMPro::FontStyles::_get_Strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Strikethrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Strikethrough"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Strikethrough
void TMPro::FontStyles::_set_Strikethrough(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Strikethrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Strikethrough", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Superscript
::TMPro::FontStyles TMPro::FontStyles::_get_Superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Superscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Superscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Superscript
void TMPro::FontStyles::_set_Superscript(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Superscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Superscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Subscript
::TMPro::FontStyles TMPro::FontStyles::_get_Subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Subscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Subscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Subscript
void TMPro::FontStyles::_set_Subscript(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Subscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Subscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Highlight
::TMPro::FontStyles TMPro::FontStyles::_get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_get_Highlight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontStyles>("TMPro", "FontStyles", "Highlight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Highlight
void TMPro::FontStyles::_set_Highlight(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::_set_Highlight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Highlight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Thin
::TMPro::FontWeight TMPro::FontWeight::_get_Thin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Thin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Thin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Thin
void TMPro::FontWeight::_set_Thin(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Thin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Thin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight ExtraLight
::TMPro::FontWeight TMPro::FontWeight::_get_ExtraLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_ExtraLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "ExtraLight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight ExtraLight
void TMPro::FontWeight::_set_ExtraLight(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_ExtraLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "ExtraLight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Light
::TMPro::FontWeight TMPro::FontWeight::_get_Light() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Light");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Light"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Light
void TMPro::FontWeight::_set_Light(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Light");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Light", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Regular
::TMPro::FontWeight TMPro::FontWeight::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Regular
void TMPro::FontWeight::_set_Regular(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Medium
::TMPro::FontWeight TMPro::FontWeight::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Medium
void TMPro::FontWeight::_set_Medium(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight SemiBold
::TMPro::FontWeight TMPro::FontWeight::_get_SemiBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_SemiBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "SemiBold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight SemiBold
void TMPro::FontWeight::_set_SemiBold(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_SemiBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "SemiBold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Bold
::TMPro::FontWeight TMPro::FontWeight::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Bold
void TMPro::FontWeight::_set_Bold(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Heavy
::TMPro::FontWeight TMPro::FontWeight::_get_Heavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Heavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Heavy"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Heavy
void TMPro::FontWeight::_set_Heavy(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Heavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Heavy", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Black
::TMPro::FontWeight TMPro::FontWeight::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontWeight>("TMPro", "FontWeight", "Black"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Black
void TMPro::FontWeight::_set_Black(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Black", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontWeight::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontWeight::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_Text/TMPro.CharacterSubstitution
#include "TMPro/TMP_Text_CharacterSubstitution.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Text/TMPro.<>c
#include "TMPro/TMP_Text_--c.hpp"
// Including type: TMPro.ITextPreprocessor
#include "TMPro/ITextPreprocessor.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected TMPro.MaterialReference[] m_materialReferences
::ArrayW<::TMPro::MaterialReference> TMPro::TMP_Text::_get_m_materialReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_materialReferences");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::TMPro::MaterialReference>>("TMPro", "TMP_Text", "m_materialReferences"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.MaterialReference[] m_materialReferences
void TMPro::TMP_Text::_set_m_materialReferences(::ArrayW<::TMPro::MaterialReference> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_materialReferences");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_materialReferences", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_materialReferenceIndexLookup
::System::Collections::Generic::Dictionary_2<int, int>* TMPro::TMP_Text::_get_m_materialReferenceIndexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_materialReferenceIndexLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, int>*>("TMPro", "TMP_Text", "m_materialReferenceIndexLookup")));
}
// Autogenerated static field setter
// Set static field: static protected System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_materialReferenceIndexLookup
void TMPro::TMP_Text::_set_m_materialReferenceIndexLookup(::System::Collections::Generic::Dictionary_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_materialReferenceIndexLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_materialReferenceIndexLookup", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.TMP_TextProcessingStack`1<TMPro.MaterialReference> m_materialReferenceStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::MaterialReference> TMPro::TMP_Text::_get_m_materialReferenceStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_materialReferenceStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_TextProcessingStack_1<::TMPro::MaterialReference>>("TMPro", "TMP_Text", "m_materialReferenceStack"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.TMP_TextProcessingStack`1<TMPro.MaterialReference> m_materialReferenceStack
void TMPro::TMP_Text::_set_m_materialReferenceStack(::TMPro::TMP_TextProcessingStack_1<::TMPro::MaterialReference> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_materialReferenceStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_materialReferenceStack", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Color32 s_colorWhite
::UnityEngine::Color32 TMPro::TMP_Text::_get_s_colorWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_s_colorWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color32>("TMPro", "TMP_Text", "s_colorWhite"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Color32 s_colorWhite
void TMPro::TMP_Text::_set_s_colorWhite(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_s_colorWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "s_colorWhite", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`3<System.Int32,System.String,TMPro.TMP_FontAsset> OnFontAssetRequest
::System::Func_3<int, ::StringW, ::TMPro::TMP_FontAsset*>* TMPro::TMP_Text::_get_OnFontAssetRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_OnFontAssetRequest");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<int, ::StringW, ::TMPro::TMP_FontAsset*>*>("TMPro", "TMP_Text", "OnFontAssetRequest")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`3<System.Int32,System.String,TMPro.TMP_FontAsset> OnFontAssetRequest
void TMPro::TMP_Text::_set_OnFontAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_OnFontAssetRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "OnFontAssetRequest", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`3<System.Int32,System.String,TMPro.TMP_SpriteAsset> OnSpriteAssetRequest
::System::Func_3<int, ::StringW, ::TMPro::TMP_SpriteAsset*>* TMPro::TMP_Text::_get_OnSpriteAssetRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_OnSpriteAssetRequest");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<int, ::StringW, ::TMPro::TMP_SpriteAsset*>*>("TMPro", "TMP_Text", "OnSpriteAssetRequest")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`3<System.Int32,System.String,TMPro.TMP_SpriteAsset> OnSpriteAssetRequest
void TMPro::TMP_Text::_set_OnSpriteAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_SpriteAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_OnSpriteAssetRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "OnSpriteAssetRequest", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] m_htmlTag
::ArrayW<::Il2CppChar> TMPro::TMP_Text::_get_m_htmlTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_htmlTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("TMPro", "TMP_Text", "m_htmlTag"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] m_htmlTag
void TMPro::TMP_Text::_set_m_htmlTag(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_htmlTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_htmlTag", value));
}
// Autogenerated static field getter
// Get static field: static private TMPro.RichTextTagAttribute[] m_xmlAttribute
::ArrayW<::TMPro::RichTextTagAttribute> TMPro::TMP_Text::_get_m_xmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_xmlAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::TMPro::RichTextTagAttribute>>("TMPro", "TMP_Text", "m_xmlAttribute"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.RichTextTagAttribute[] m_xmlAttribute
void TMPro::TMP_Text::_set_m_xmlAttribute(::ArrayW<::TMPro::RichTextTagAttribute> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_xmlAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_xmlAttribute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] m_attributeParameterValues
::ArrayW<float> TMPro::TMP_Text::_get_m_attributeParameterValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_attributeParameterValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("TMPro", "TMP_Text", "m_attributeParameterValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] m_attributeParameterValues
void TMPro::TMP_Text::_set_m_attributeParameterValues(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_attributeParameterValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_attributeParameterValues", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.WordWrapState m_SavedWordWrapState
::TMPro::WordWrapState TMPro::TMP_Text::_get_m_SavedWordWrapState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_SavedWordWrapState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::WordWrapState>("TMPro", "TMP_Text", "m_SavedWordWrapState"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.WordWrapState m_SavedWordWrapState
void TMPro::TMP_Text::_set_m_SavedWordWrapState(::TMPro::WordWrapState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_SavedWordWrapState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_SavedWordWrapState", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.WordWrapState m_SavedLineState
::TMPro::WordWrapState TMPro::TMP_Text::_get_m_SavedLineState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_SavedLineState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::WordWrapState>("TMPro", "TMP_Text", "m_SavedLineState"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.WordWrapState m_SavedLineState
void TMPro::TMP_Text::_set_m_SavedLineState(::TMPro::WordWrapState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_SavedLineState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_SavedLineState", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.WordWrapState m_SavedEllipsisState
::TMPro::WordWrapState TMPro::TMP_Text::_get_m_SavedEllipsisState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_SavedEllipsisState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::WordWrapState>("TMPro", "TMP_Text", "m_SavedEllipsisState"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.WordWrapState m_SavedEllipsisState
void TMPro::TMP_Text::_set_m_SavedEllipsisState(::TMPro::WordWrapState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_SavedEllipsisState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_SavedEllipsisState", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.WordWrapState m_SavedLastValidState
::TMPro::WordWrapState TMPro::TMP_Text::_get_m_SavedLastValidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_SavedLastValidState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::WordWrapState>("TMPro", "TMP_Text", "m_SavedLastValidState"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.WordWrapState m_SavedLastValidState
void TMPro::TMP_Text::_set_m_SavedLastValidState(::TMPro::WordWrapState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_SavedLastValidState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_SavedLastValidState", value));
}
// Autogenerated static field getter
// Get static field: static protected TMPro.WordWrapState m_SavedSoftLineBreakState
::TMPro::WordWrapState TMPro::TMP_Text::_get_m_SavedSoftLineBreakState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_SavedSoftLineBreakState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::WordWrapState>("TMPro", "TMP_Text", "m_SavedSoftLineBreakState"));
}
// Autogenerated static field setter
// Set static field: static protected TMPro.WordWrapState m_SavedSoftLineBreakState
void TMPro::TMP_Text::_set_m_SavedSoftLineBreakState(::TMPro::WordWrapState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_SavedSoftLineBreakState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_SavedSoftLineBreakState", value));
}
// Autogenerated static field getter
// Get static field: static TMPro.TMP_TextProcessingStack`1<TMPro.WordWrapState> m_EllipsisInsertionCandidateStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::WordWrapState> TMPro::TMP_Text::_get_m_EllipsisInsertionCandidateStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_m_EllipsisInsertionCandidateStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_TextProcessingStack_1<::TMPro::WordWrapState>>("TMPro", "TMP_Text", "m_EllipsisInsertionCandidateStack"));
}
// Autogenerated static field setter
// Set static field: static TMPro.TMP_TextProcessingStack`1<TMPro.WordWrapState> m_EllipsisInsertionCandidateStack
void TMPro::TMP_Text::_set_m_EllipsisInsertionCandidateStack(::TMPro::TMP_TextProcessingStack_1<::TMPro::WordWrapState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_m_EllipsisInsertionCandidateStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "m_EllipsisInsertionCandidateStack", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ParseTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_Text::_get_k_ParseTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_ParseTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_Text", "k_ParseTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ParseTextMarker
void TMPro::TMP_Text::_set_k_ParseTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_ParseTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_ParseTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_InsertNewLineMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_Text::_get_k_InsertNewLineMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_InsertNewLineMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_Text", "k_InsertNewLineMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_InsertNewLineMarker
void TMPro::TMP_Text::_set_k_InsertNewLineMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_InsertNewLineMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_InsertNewLineMarker", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
::UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargePositiveVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargePositiveVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargePositiveVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
void TMPro::TMP_Text::_set_k_LargePositiveVector2(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargePositiveVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
::UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargeNegativeVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargeNegativeVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargeNegativeVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
void TMPro::TMP_Text::_set_k_LargeNegativeVector2(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargeNegativeVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargePositiveFloat
float TMPro::TMP_Text::_get_k_LargePositiveFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargePositiveFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargePositiveFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargePositiveFloat
void TMPro::TMP_Text::_set_k_LargePositiveFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargePositiveFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargeNegativeFloat
float TMPro::TMP_Text::_get_k_LargeNegativeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargeNegativeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargeNegativeFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargeNegativeFloat
void TMPro::TMP_Text::_set_k_LargeNegativeFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargeNegativeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargePositiveInt
int TMPro::TMP_Text::_get_k_LargePositiveInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargePositiveInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargePositiveInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargePositiveInt
void TMPro::TMP_Text::_set_k_LargePositiveInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargePositiveInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveInt", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargeNegativeInt
int TMPro::TMP_Text::_get_k_LargeNegativeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_get_k_LargeNegativeInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargeNegativeInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargeNegativeInt
void TMPro::TMP_Text::_set_k_LargeNegativeInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::_set_k_LargeNegativeInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeInt", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.String m_text
::StringW& TMPro::TMP_Text::dyn_m_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsTextBackingStringDirty
bool& TMPro::TMP_Text::dyn_m_IsTextBackingStringDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_IsTextBackingStringDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsTextBackingStringDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.ITextPreprocessor m_TextPreprocessor
::TMPro::ITextPreprocessor*& TMPro::TMP_Text::dyn_m_TextPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextPreprocessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextPreprocessor"))->offset;
  return *reinterpret_cast<::TMPro::ITextPreprocessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRightToLeft
bool& TMPro::TMP_Text::dyn_m_isRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isRightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_fontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_Text::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_currentFontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_Text::dyn_m_currentFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_currentFontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentFontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isSDFShader
bool& TMPro::TMP_Text::dyn_m_isSDFShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isSDFShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSDFShader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_sharedMaterial
::UnityEngine::Material*& TMPro::TMP_Text::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_currentMaterial
::UnityEngine::Material*& TMPro::TMP_Text::dyn_m_currentMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_currentMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_currentMaterialIndex
int& TMPro::TMP_Text::dyn_m_currentMaterialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_currentMaterialIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentMaterialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material[] m_fontSharedMaterials
::ArrayW<::UnityEngine::Material*>& TMPro::TMP_Text::dyn_m_fontSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontSharedMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSharedMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_fontMaterial
::UnityEngine::Material*& TMPro::TMP_Text::dyn_m_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material[] m_fontMaterials
::ArrayW<::UnityEngine::Material*>& TMPro::TMP_Text::dyn_m_fontMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isMaterialDirty
bool& TMPro::TMP_Text::dyn_m_isMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isMaterialDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMaterialDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_fontColor32
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_fontColor32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontColor32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColor32"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color m_fontColor
::UnityEngine::Color& TMPro::TMP_Text::dyn_m_fontColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_underlineColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_underlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_underlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_underlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_strikethroughColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_strikethroughColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_strikethroughColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_strikethroughColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableVertexGradient
bool& TMPro::TMP_Text::dyn_m_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_enableVertexGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableVertexGradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.ColorMode m_colorMode
::TMPro::ColorMode& TMPro::TMP_Text::dyn_m_colorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_colorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorMode"))->offset;
  return *reinterpret_cast<::TMPro::ColorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.VertexGradient m_fontColorGradient
::TMPro::VertexGradient& TMPro::TMP_Text::dyn_m_fontColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColorGradient"))->offset;
  return *reinterpret_cast<::TMPro::VertexGradient*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ColorGradient m_fontColorGradientPreset
::TMPro::TMP_ColorGradient*& TMPro::TMP_Text::dyn_m_fontColorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontColorGradientPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColorGradientPreset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_ColorGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_spriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_tintAllSprites
bool& TMPro::TMP_Text::dyn_m_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_tintAllSprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tintAllSprites"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_tintSprite
bool& TMPro::TMP_Text::dyn_m_tintSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_tintSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tintSprite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_spriteColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_spriteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_StyleSheet m_StyleSheet
::TMPro::TMP_StyleSheet*& TMPro::TMP_Text::dyn_m_StyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_StyleSheet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleSheet"))->offset;
  return *reinterpret_cast<::TMPro::TMP_StyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Style m_TextStyle
::TMPro::TMP_Style*& TMPro::TMP_Text::dyn_m_TextStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextStyle"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Style**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_TextStyleHashCode
int& TMPro::TMP_Text::dyn_m_TextStyleHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextStyleHashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextStyleHashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_overrideHtmlColors
bool& TMPro::TMP_Text::dyn_m_overrideHtmlColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_overrideHtmlColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overrideHtmlColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_faceColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_faceColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_faceColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_outlineColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_outlineWidth
float& TMPro::TMP_Text::dyn_m_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_outlineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outlineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSize
float& TMPro::TMP_Text::dyn_m_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_currentFontSize
float& TMPro::TMP_Text::dyn_m_currentFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_currentFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeBase
float& TMPro::TMP_Text::dyn_m_fontSizeBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontSizeBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeBase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Single> m_sizeStack
::TMPro::TMP_TextProcessingStack_1<float>& TMPro::TMP_Text::dyn_m_sizeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_sizeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sizeStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontWeight m_fontWeight
::TMPro::FontWeight& TMPro::TMP_Text::dyn_m_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontWeight"))->offset;
  return *reinterpret_cast<::TMPro::FontWeight*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontWeight m_FontWeightInternal
::TMPro::FontWeight& TMPro::TMP_Text::dyn_m_FontWeightInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_FontWeightInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightInternal"))->offset;
  return *reinterpret_cast<::TMPro::FontWeight*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<TMPro.FontWeight> m_FontWeightStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::FontWeight>& TMPro::TMP_Text::dyn_m_FontWeightStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_FontWeightStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::TMPro::FontWeight>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableAutoSizing
bool& TMPro::TMP_Text::dyn_m_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_enableAutoSizing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableAutoSizing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxFontSize
float& TMPro::TMP_Text::dyn_m_maxFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minFontSize
float& TMPro::TMP_Text::dyn_m_minFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_minFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_AutoSizeIterationCount
int& TMPro::TMP_Text::dyn_m_AutoSizeIterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_AutoSizeIterationCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutoSizeIterationCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_AutoSizeMaxIterationCount
int& TMPro::TMP_Text::dyn_m_AutoSizeMaxIterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_AutoSizeMaxIterationCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutoSizeMaxIterationCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_IsAutoSizePointSizeSet
bool& TMPro::TMP_Text::dyn_m_IsAutoSizePointSizeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_IsAutoSizePointSizeSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsAutoSizePointSizeSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeMin
float& TMPro::TMP_Text::dyn_m_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontSizeMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeMax
float& TMPro::TMP_Text::dyn_m_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontSizeMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontStyles m_fontStyle
::TMPro::FontStyles& TMPro::TMP_Text::dyn_m_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontStyle"))->offset;
  return *reinterpret_cast<::TMPro::FontStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontStyles m_FontStyleInternal
::TMPro::FontStyles& TMPro::TMP_Text::dyn_m_FontStyleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_FontStyleInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontStyleInternal"))->offset;
  return *reinterpret_cast<::TMPro::FontStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontStyleStack m_fontStyleStack
::TMPro::TMP_FontStyleStack& TMPro::TMP_Text::dyn_m_fontStyleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontStyleStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontStyleStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontStyleStack*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isUsingBold
bool& TMPro::TMP_Text::dyn_m_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isUsingBold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isUsingBold"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.HorizontalAlignmentOptions m_HorizontalAlignment
::TMPro::HorizontalAlignmentOptions& TMPro::TMP_Text::dyn_m_HorizontalAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_HorizontalAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAlignment"))->offset;
  return *reinterpret_cast<::TMPro::HorizontalAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.VerticalAlignmentOptions m_VerticalAlignment
::TMPro::VerticalAlignmentOptions& TMPro::TMP_Text::dyn_m_VerticalAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_VerticalAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAlignment"))->offset;
  return *reinterpret_cast<::TMPro::VerticalAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextAlignmentOptions m_textAlignment
::TMPro::TextAlignmentOptions& TMPro::TMP_Text::dyn_m_textAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_textAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textAlignment"))->offset;
  return *reinterpret_cast<::TMPro::TextAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.HorizontalAlignmentOptions m_lineJustification
::TMPro::HorizontalAlignmentOptions& TMPro::TMP_Text::dyn_m_lineJustification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineJustification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineJustification"))->offset;
  return *reinterpret_cast<::TMPro::HorizontalAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<TMPro.HorizontalAlignmentOptions> m_lineJustificationStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::HorizontalAlignmentOptions>& TMPro::TMP_Text::dyn_m_lineJustificationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineJustificationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineJustificationStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::TMPro::HorizontalAlignmentOptions>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] m_textContainerLocalCorners
::ArrayW<::UnityEngine::Vector3>& TMPro::TMP_Text::dyn_m_textContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_textContainerLocalCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textContainerLocalCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_characterSpacing
float& TMPro::TMP_Text::dyn_m_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_characterSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_characterSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_cSpacing
float& TMPro::TMP_Text::dyn_m_cSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_cSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_monoSpacing
float& TMPro::TMP_Text::dyn_m_monoSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_monoSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_wordSpacing
float& TMPro::TMP_Text::dyn_m_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_wordSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wordSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacing
float& TMPro::TMP_Text::dyn_m_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacingDelta
float& TMPro::TMP_Text::dyn_m_lineSpacingDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineSpacingDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacingDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineHeight
float& TMPro::TMP_Text::dyn_m_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_IsDrivenLineSpacing
bool& TMPro::TMP_Text::dyn_m_IsDrivenLineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_IsDrivenLineSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsDrivenLineSpacing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacingMax
float& TMPro::TMP_Text::dyn_m_lineSpacingMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineSpacingMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacingMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_paragraphSpacing
float& TMPro::TMP_Text::dyn_m_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_paragraphSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paragraphSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_charWidthMaxAdj
float& TMPro::TMP_Text::dyn_m_charWidthMaxAdj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_charWidthMaxAdj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charWidthMaxAdj"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_charWidthAdjDelta
float& TMPro::TMP_Text::dyn_m_charWidthAdjDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_charWidthAdjDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charWidthAdjDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableWordWrapping
bool& TMPro::TMP_Text::dyn_m_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_enableWordWrapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableWordWrapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCharacterWrappingEnabled
bool& TMPro::TMP_Text::dyn_m_isCharacterWrappingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isCharacterWrappingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCharacterWrappingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isNonBreakingSpace
bool& TMPro::TMP_Text::dyn_m_isNonBreakingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isNonBreakingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isNonBreakingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isIgnoringAlignment
bool& TMPro::TMP_Text::dyn_m_isIgnoringAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isIgnoringAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isIgnoringAlignment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_wordWrappingRatios
float& TMPro::TMP_Text::dyn_m_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_wordWrappingRatios");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wordWrappingRatios"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextOverflowModes m_overflowMode
::TMPro::TextOverflowModes& TMPro::TMP_Text::dyn_m_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_overflowMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overflowMode"))->offset;
  return *reinterpret_cast<::TMPro::TextOverflowModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstOverflowCharacterIndex
int& TMPro::TMP_Text::dyn_m_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_firstOverflowCharacterIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstOverflowCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text m_linkedTextComponent
::TMPro::TMP_Text*& TMPro::TMP_Text::dyn_m_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_linkedTextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_linkedTextComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Text parentLinkedComponent
::TMPro::TMP_Text*& TMPro::TMP_Text::dyn_parentLinkedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_parentLinkedComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentLinkedComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isTextTruncated
bool& TMPro::TMP_Text::dyn_m_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isTextTruncated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isTextTruncated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableKerning
bool& TMPro::TMP_Text::dyn_m_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_enableKerning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableKerning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_GlyphHorizontalAdvanceAdjustment
float& TMPro::TMP_Text::dyn_m_GlyphHorizontalAdvanceAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_GlyphHorizontalAdvanceAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphHorizontalAdvanceAdjustment"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableExtraPadding
bool& TMPro::TMP_Text::dyn_m_enableExtraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_enableExtraPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableExtraPadding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkPaddingRequired
bool& TMPro::TMP_Text::dyn_checkPaddingRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_checkPaddingRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkPaddingRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRichText
bool& TMPro::TMP_Text::dyn_m_isRichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isRichText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRichText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_parseCtrlCharacters
bool& TMPro::TMP_Text::dyn_m_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_parseCtrlCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_parseCtrlCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isOverlay
bool& TMPro::TMP_Text::dyn_m_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isOrthographic
bool& TMPro::TMP_Text::dyn_m_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isOrthographic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isOrthographic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCullingEnabled
bool& TMPro::TMP_Text::dyn_m_isCullingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isCullingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCullingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isMaskingEnabled
bool& TMPro::TMP_Text::dyn_m_isMaskingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isMaskingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMaskingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isMaskUpdateRequired
bool& TMPro::TMP_Text::dyn_isMaskUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_isMaskUpdateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMaskUpdateRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ignoreCulling
bool& TMPro::TMP_Text::dyn_m_ignoreCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ignoreCulling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ignoreCulling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextureMappingOptions m_horizontalMapping
::TMPro::TextureMappingOptions& TMPro::TMP_Text::dyn_m_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_horizontalMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_horizontalMapping"))->offset;
  return *reinterpret_cast<::TMPro::TextureMappingOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextureMappingOptions m_verticalMapping
::TMPro::TextureMappingOptions& TMPro::TMP_Text::dyn_m_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_verticalMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_verticalMapping"))->offset;
  return *reinterpret_cast<::TMPro::TextureMappingOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_uvLineOffset
float& TMPro::TMP_Text::dyn_m_uvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_uvLineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uvLineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextRenderFlags m_renderMode
::TMPro::TextRenderFlags& TMPro::TMP_Text::dyn_m_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_renderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderMode"))->offset;
  return *reinterpret_cast<::TMPro::TextRenderFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.VertexSortingOrder m_geometrySortingOrder
::TMPro::VertexSortingOrder& TMPro::TMP_Text::dyn_m_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_geometrySortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_geometrySortingOrder"))->offset;
  return *reinterpret_cast<::TMPro::VertexSortingOrder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_IsTextObjectScaleStatic
bool& TMPro::TMP_Text::dyn_m_IsTextObjectScaleStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_IsTextObjectScaleStatic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsTextObjectScaleStatic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_VertexBufferAutoSizeReduction
bool& TMPro::TMP_Text::dyn_m_VertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_VertexBufferAutoSizeReduction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VertexBufferAutoSizeReduction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstVisibleCharacter
int& TMPro::TMP_Text::dyn_m_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_firstVisibleCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstVisibleCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleCharacters
int& TMPro::TMP_Text::dyn_m_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxVisibleCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleCharacters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleWords
int& TMPro::TMP_Text::dyn_m_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxVisibleWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleWords"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleLines
int& TMPro::TMP_Text::dyn_m_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxVisibleLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_useMaxVisibleDescender
bool& TMPro::TMP_Text::dyn_m_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_useMaxVisibleDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useMaxVisibleDescender"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_pageToDisplay
int& TMPro::TMP_Text::dyn_m_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_pageToDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pageToDisplay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isNewPage
bool& TMPro::TMP_Text::dyn_m_isNewPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isNewPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isNewPage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector4 m_margin
::UnityEngine::Vector4& TMPro::TMP_Text::dyn_m_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_margin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_margin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginLeft
float& TMPro::TMP_Text::dyn_m_marginLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_marginLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginLeft"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginRight
float& TMPro::TMP_Text::dyn_m_marginRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_marginRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginRight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginWidth
float& TMPro::TMP_Text::dyn_m_marginWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_marginWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginHeight
float& TMPro::TMP_Text::dyn_m_marginHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_marginHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_width
float& TMPro::TMP_Text::dyn_m_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextInfo m_textInfo
::TMPro::TMP_TextInfo*& TMPro::TMP_Text::dyn_m_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textInfo"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_havePropertiesChanged
bool& TMPro::TMP_Text::dyn_m_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_havePropertiesChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_havePropertiesChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isUsingLegacyAnimationComponent
bool& TMPro::TMP_Text::dyn_m_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isUsingLegacyAnimationComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isUsingLegacyAnimationComponent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform m_transform
::UnityEngine::Transform*& TMPro::TMP_Text::dyn_m_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_rectTransform
::UnityEngine::RectTransform*& TMPro::TMP_Text::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_PreviousRectTransformSize
::UnityEngine::Vector2& TMPro::TMP_Text::dyn_m_PreviousRectTransformSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_PreviousRectTransformSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousRectTransformSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_PreviousPivotPosition
::UnityEngine::Vector2& TMPro::TMP_Text::dyn_m_PreviousPivotPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_PreviousPivotPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousPivotPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <autoSizeTextContainer>k__BackingField
bool& TMPro::TMP_Text::dyn_$autoSizeTextContainer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_$autoSizeTextContainer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<autoSizeTextContainer>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_autoSizeTextContainer
bool& TMPro::TMP_Text::dyn_m_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_autoSizeTextContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoSizeTextContainer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Mesh m_mesh
::UnityEngine::Mesh*& TMPro::TMP_Text::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isVolumetricText
bool& TMPro::TMP_Text::dyn_m_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isVolumetricText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isVolumetricText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TMPro.TMP_TextInfo> OnPreRenderText
::System::Action_1<::TMPro::TMP_TextInfo*>*& TMPro::TMP_Text::dyn_OnPreRenderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_OnPreRenderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRenderText"))->offset;
  return *reinterpret_cast<::System::Action_1<::TMPro::TMP_TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAnimator m_spriteAnimator
::TMPro::TMP_SpriteAnimator*& TMPro::TMP_Text::dyn_m_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAnimator"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_flexibleHeight
float& TMPro::TMP_Text::dyn_m_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_flexibleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flexibleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_flexibleWidth
float& TMPro::TMP_Text::dyn_m_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_flexibleWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flexibleWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minWidth
float& TMPro::TMP_Text::dyn_m_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_minWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minHeight
float& TMPro::TMP_Text::dyn_m_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_minHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxWidth
float& TMPro::TMP_Text::dyn_m_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxHeight
float& TMPro::TMP_Text::dyn_m_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.LayoutElement m_LayoutElement
::UnityEngine::UI::LayoutElement*& TMPro::TMP_Text::dyn_m_LayoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_LayoutElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutElement"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::LayoutElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_preferredWidth
float& TMPro::TMP_Text::dyn_m_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_preferredWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preferredWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_renderedWidth
float& TMPro::TMP_Text::dyn_m_renderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_renderedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderedWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isPreferredWidthDirty
bool& TMPro::TMP_Text::dyn_m_isPreferredWidthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isPreferredWidthDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPreferredWidthDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_preferredHeight
float& TMPro::TMP_Text::dyn_m_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_preferredHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preferredHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_renderedHeight
float& TMPro::TMP_Text::dyn_m_renderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_renderedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderedHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isPreferredHeightDirty
bool& TMPro::TMP_Text::dyn_m_isPreferredHeightDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isPreferredHeightDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPreferredHeightDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCalculatingPreferredValues
bool& TMPro::TMP_Text::dyn_m_isCalculatingPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isCalculatingPreferredValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCalculatingPreferredValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_layoutPriority
int& TMPro::TMP_Text::dyn_m_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_layoutPriority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_layoutPriority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isLayoutDirty
bool& TMPro::TMP_Text::dyn_m_isLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isLayoutDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLayoutDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isAwake
bool& TMPro::TMP_Text::dyn_m_isAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isAwake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isWaitingOnResourceLoad
bool& TMPro::TMP_Text::dyn_m_isWaitingOnResourceLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isWaitingOnResourceLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isWaitingOnResourceLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Text/TMPro.TextInputSources m_inputSource
::TMPro::TMP_Text::TextInputSources& TMPro::TMP_Text::dyn_m_inputSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_inputSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inputSource"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text::TextInputSources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontScaleMultiplier
float& TMPro::TMP_Text::dyn_m_fontScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_fontScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontScaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single tag_LineIndent
float& TMPro::TMP_Text::dyn_tag_LineIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_tag_LineIndent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_LineIndent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single tag_Indent
float& TMPro::TMP_Text::dyn_tag_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_tag_Indent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_Indent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Single> m_indentStack
::TMPro::TMP_TextProcessingStack_1<float>& TMPro::TMP_Text::dyn_m_indentStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_indentStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indentStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean tag_NoParsing
bool& TMPro::TMP_Text::dyn_tag_NoParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_tag_NoParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_NoParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isParsingText
bool& TMPro::TMP_Text::dyn_m_isParsingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isParsingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isParsingText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Matrix4x4 m_FXMatrix
::UnityEngine::Matrix4x4& TMPro::TMP_Text::dyn_m_FXMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_FXMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FXMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isFXMatrixSet
bool& TMPro::TMP_Text::dyn_m_isFXMatrixSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_isFXMatrixSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFXMatrixSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Text/TMPro.UnicodeChar[] m_TextProcessingArray
::ArrayW<::TMPro::TMP_Text::UnicodeChar>& TMPro::TMP_Text::dyn_m_TextProcessingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextProcessingArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextProcessingArray"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_Text::UnicodeChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_InternalTextProcessingArraySize
int& TMPro::TMP_Text::dyn_m_InternalTextProcessingArraySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_InternalTextProcessingArraySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalTextProcessingArraySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_CharacterInfo[] m_internalCharacterInfo
::ArrayW<::TMPro::TMP_CharacterInfo>& TMPro::TMP_Text::dyn_m_internalCharacterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_internalCharacterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_internalCharacterInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_CharacterInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_totalCharacterCount
int& TMPro::TMP_Text::dyn_m_totalCharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_totalCharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalCharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_characterCount
int& TMPro::TMP_Text::dyn_m_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_characterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_characterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstCharacterOfLine
int& TMPro::TMP_Text::dyn_m_firstCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_firstCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstVisibleCharacterOfLine
int& TMPro::TMP_Text::dyn_m_firstVisibleCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_firstVisibleCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstVisibleCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lastCharacterOfLine
int& TMPro::TMP_Text::dyn_m_lastCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lastCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lastVisibleCharacterOfLine
int& TMPro::TMP_Text::dyn_m_lastVisibleCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lastVisibleCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastVisibleCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lineNumber
int& TMPro::TMP_Text::dyn_m_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lineVisibleCharacterCount
int& TMPro::TMP_Text::dyn_m_lineVisibleCharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineVisibleCharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineVisibleCharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_pageNumber
int& TMPro::TMP_Text::dyn_m_pageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_pageNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pageNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_PageAscender
float& TMPro::TMP_Text::dyn_m_PageAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_PageAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PageAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxTextAscender
float& TMPro::TMP_Text::dyn_m_maxTextAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxTextAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxTextAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxCapHeight
float& TMPro::TMP_Text::dyn_m_maxCapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxCapHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCapHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ElementAscender
float& TMPro::TMP_Text::dyn_m_ElementAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ElementAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ElementAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ElementDescender
float& TMPro::TMP_Text::dyn_m_ElementDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ElementDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ElementDescender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxLineAscender
float& TMPro::TMP_Text::dyn_m_maxLineAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxLineAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxLineAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxLineDescender
float& TMPro::TMP_Text::dyn_m_maxLineDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_maxLineDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxLineDescender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_startOfLineAscender
float& TMPro::TMP_Text::dyn_m_startOfLineAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_startOfLineAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startOfLineAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_startOfLineDescender
float& TMPro::TMP_Text::dyn_m_startOfLineDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_startOfLineDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startOfLineDescender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineOffset
float& TMPro::TMP_Text::dyn_m_lineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_lineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.Extents m_meshExtents
::TMPro::Extents& TMPro::TMP_Text::dyn_m_meshExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_meshExtents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshExtents"))->offset;
  return *reinterpret_cast<::TMPro::Extents*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_htmlColor
::UnityEngine::Color32& TMPro::TMP_Text::dyn_m_htmlColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_htmlColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_htmlColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> m_colorStack
::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_colorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_colorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> m_underlineColorStack
::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_underlineColorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_underlineColorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_underlineColorStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> m_strikethroughColorStack
::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_strikethroughColorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_strikethroughColorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_strikethroughColorStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<TMPro.HighlightState> m_HighlightStateStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::HighlightState>& TMPro::TMP_Text::dyn_m_HighlightStateStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_HighlightStateStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HighlightStateStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::TMPro::HighlightState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ColorGradient m_colorGradientPreset
::TMPro::TMP_ColorGradient*& TMPro::TMP_Text::dyn_m_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_colorGradientPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorGradientPreset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_ColorGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<TMPro.TMP_ColorGradient> m_colorGradientStack
::TMPro::TMP_TextProcessingStack_1<::TMPro::TMP_ColorGradient*>& TMPro::TMP_Text::dyn_m_colorGradientStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_colorGradientStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorGradientStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<::TMPro::TMP_ColorGradient*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_colorGradientPresetIsTinted
bool& TMPro::TMP_Text::dyn_m_colorGradientPresetIsTinted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_colorGradientPresetIsTinted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorGradientPresetIsTinted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_tabSpacing
float& TMPro::TMP_Text::dyn_m_tabSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_tabSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tabSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_spacing
float& TMPro::TMP_Text::dyn_m_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Int32>[] m_TextStyleStacks
::ArrayW<::TMPro::TMP_TextProcessingStack_1<int>>& TMPro::TMP_Text::dyn_m_TextStyleStacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextStyleStacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextStyleStacks"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_TextProcessingStack_1<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_TextStyleStackDepth
int& TMPro::TMP_Text::dyn_m_TextStyleStackDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextStyleStackDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextStyleStackDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Int32> m_ItalicAngleStack
::TMPro::TMP_TextProcessingStack_1<int>& TMPro::TMP_Text::dyn_m_ItalicAngleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ItalicAngleStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItalicAngleStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_ItalicAngle
int& TMPro::TMP_Text::dyn_m_ItalicAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ItalicAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItalicAngle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Int32> m_actionStack
::TMPro::TMP_TextProcessingStack_1<int>& TMPro::TMP_Text::dyn_m_actionStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_actionStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_padding
float& TMPro::TMP_Text::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_baselineOffset
float& TMPro::TMP_Text::dyn_m_baselineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_baselineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baselineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextProcessingStack`1<System.Single> m_baselineOffsetStack
::TMPro::TMP_TextProcessingStack_1<float>& TMPro::TMP_Text::dyn_m_baselineOffsetStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_baselineOffsetStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baselineOffsetStack"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextProcessingStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_xAdvance
float& TMPro::TMP_Text::dyn_m_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_xAdvance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextElementType m_textElementType
::TMPro::TMP_TextElementType& TMPro::TMP_Text::dyn_m_textElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_textElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textElementType"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextElementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextElement m_cached_TextElement
::TMPro::TMP_TextElement*& TMPro::TMP_Text::dyn_m_cached_TextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_cached_TextElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cached_TextElement"))->offset;
  return *reinterpret_cast<::TMPro::TMP_TextElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text/TMPro.SpecialCharacter m_Ellipsis
::TMPro::TMP_Text::SpecialCharacter& TMPro::TMP_Text::dyn_m_Ellipsis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_Ellipsis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ellipsis"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text::SpecialCharacter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text/TMPro.SpecialCharacter m_Underline
::TMPro::TMP_Text::SpecialCharacter& TMPro::TMP_Text::dyn_m_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_Underline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Underline"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text::SpecialCharacter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_defaultSpriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_defaultSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_defaultSpriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultSpriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_currentSpriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_currentSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_currentSpriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentSpriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteCount
int& TMPro::TMP_Text::dyn_m_spriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteIndex
int& TMPro::TMP_Text::dyn_m_spriteIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteAnimationID
int& TMPro::TMP_Text::dyn_m_spriteAnimationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_spriteAnimationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAnimationID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ignoreActiveState
bool& TMPro::TMP_Text::dyn_m_ignoreActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_ignoreActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ignoreActiveState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text/TMPro.TextBackingContainer m_TextBackingArray
::TMPro::TMP_Text::TextBackingContainer& TMPro::TMP_Text::dyn_m_TextBackingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_m_TextBackingArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextBackingArray"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text::TextBackingContainer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Decimal[] k_Power
::ArrayW<::System::Decimal>& TMPro::TMP_Text::dyn_k_Power() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::dyn_k_Power");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k_Power"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Decimal>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Text.get_text
::StringW TMPro::TMP_Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_text
void TMPro::TMP_Text::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textPreprocessor
::TMPro::ITextPreprocessor* TMPro::TMP_Text::get_textPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_textPreprocessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textPreprocessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::ITextPreprocessor*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_textPreprocessor
void TMPro::TMP_Text::set_textPreprocessor(::TMPro::ITextPreprocessor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_textPreprocessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textPreprocessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isRightToLeftText
bool TMPro::TMP_Text::get_isRightToLeftText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isRightToLeftText
void TMPro::TMP_Text::set_isRightToLeftText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_font
::TMPro::TMP_FontAsset* TMPro::TMP_Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_font
void TMPro::TMP_Text::set_font(::TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterial
::UnityEngine::Material* TMPro::TMP_Text::get_fontSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterial
void TMPro::TMP_Text::set_fontSharedMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TMP_Text::get_fontSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterials
void TMPro::TMP_Text::set_fontSharedMaterials(::ArrayW<::UnityEngine::Material*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterial
::UnityEngine::Material* TMPro::TMP_Text::get_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterial
void TMPro::TMP_Text::set_fontMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TMP_Text::get_fontMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterials
void TMPro::TMP_Text::set_fontMaterials(::ArrayW<::UnityEngine::Material*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_alpha
float TMPro::TMP_Text::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alpha
void TMPro::TMP_Text::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableVertexGradient
bool TMPro::TMP_Text::get_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableVertexGradient
void TMPro::TMP_Text::set_enableVertexGradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradient
::TMPro::VertexGradient TMPro::TMP_Text::get_colorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::VertexGradient, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradient
void TMPro::TMP_Text::set_colorGradient(::TMPro::VertexGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradientPreset
::TMPro::TMP_ColorGradient* TMPro::TMP_Text::get_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_ColorGradient*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradientPreset
void TMPro::TMP_Text::set_colorGradientPreset(::TMPro::TMP_ColorGradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAsset
::TMPro::TMP_SpriteAsset* TMPro::TMP_Text::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_spriteAsset
void TMPro::TMP_Text::set_spriteAsset(::TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_tintAllSprites
bool TMPro::TMP_Text::get_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_tintAllSprites
void TMPro::TMP_Text::set_tintAllSprites(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_styleSheet
::TMPro::TMP_StyleSheet* TMPro::TMP_Text::get_styleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_styleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_StyleSheet*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_styleSheet
void TMPro::TMP_Text::set_styleSheet(::TMPro::TMP_StyleSheet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_styleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_styleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textStyle
::TMPro::TMP_Style* TMPro::TMP_Text::get_textStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_textStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Style*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_textStyle
void TMPro::TMP_Text::set_textStyle(::TMPro::TMP_Style* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_textStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overrideColorTags
bool TMPro::TMP_Text::get_overrideColorTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overrideColorTags
void TMPro::TMP_Text::set_overrideColorTags(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_faceColor
::UnityEngine::Color32 TMPro::TMP_Text::get_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_faceColor
void TMPro::TMP_Text::set_faceColor(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineColor
::UnityEngine::Color32 TMPro::TMP_Text::get_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineColor
void TMPro::TMP_Text::set_outlineColor(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineWidth
float TMPro::TMP_Text::get_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineWidth
void TMPro::TMP_Text::set_outlineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSize
float TMPro::TMP_Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSize
void TMPro::TMP_Text::set_fontSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontWeight
::TMPro::FontWeight TMPro::TMP_Text::get_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::FontWeight, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontWeight
void TMPro::TMP_Text::set_fontWeight(::TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pixelsPerUnit
float TMPro::TMP_Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableAutoSizing
bool TMPro::TMP_Text::get_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableAutoSizing
void TMPro::TMP_Text::set_enableAutoSizing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMin
float TMPro::TMP_Text::get_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMin
void TMPro::TMP_Text::set_fontSizeMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMax
float TMPro::TMP_Text::get_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMax
void TMPro::TMP_Text::set_fontSizeMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontStyle
::TMPro::FontStyles TMPro::TMP_Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::FontStyles, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontStyle
void TMPro::TMP_Text::set_fontStyle(::TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingBold
bool TMPro::TMP_Text::get_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isUsingBold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingBold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_horizontalAlignment
::TMPro::HorizontalAlignmentOptions TMPro::TMP_Text::get_horizontalAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_horizontalAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::HorizontalAlignmentOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_horizontalAlignment
void TMPro::TMP_Text::set_horizontalAlignment(::TMPro::HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_horizontalAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_verticalAlignment
::TMPro::VerticalAlignmentOptions TMPro::TMP_Text::get_verticalAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_verticalAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::VerticalAlignmentOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_verticalAlignment
void TMPro::TMP_Text::set_verticalAlignment(::TMPro::VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_verticalAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_alignment
::TMPro::TextAlignmentOptions TMPro::TMP_Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextAlignmentOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alignment
void TMPro::TMP_Text::set_alignment(::TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterSpacing
float TMPro::TMP_Text::get_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterSpacing
void TMPro::TMP_Text::set_characterSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordSpacing
float TMPro::TMP_Text::get_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordSpacing
void TMPro::TMP_Text::set_wordSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacing
float TMPro::TMP_Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacing
void TMPro::TMP_Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacingAdjustment
float TMPro::TMP_Text::get_lineSpacingAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacingAdjustment
void TMPro::TMP_Text::set_lineSpacingAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_paragraphSpacing
float TMPro::TMP_Text::get_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_paragraphSpacing
void TMPro::TMP_Text::set_paragraphSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterWidthAdjustment
float TMPro::TMP_Text::get_characterWidthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterWidthAdjustment
void TMPro::TMP_Text::set_characterWidthAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableWordWrapping
bool TMPro::TMP_Text::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableWordWrapping
void TMPro::TMP_Text::set_enableWordWrapping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordWrappingRatios
float TMPro::TMP_Text::get_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordWrappingRatios
void TMPro::TMP_Text::set_wordWrappingRatios(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overflowMode
::TMPro::TextOverflowModes TMPro::TMP_Text::get_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextOverflowModes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overflowMode
void TMPro::TMP_Text::set_overflowMode(::TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextOverflowing
bool TMPro::TMP_Text::get_isTextOverflowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isTextOverflowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextOverflowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_firstOverflowCharacterIndex
int TMPro::TMP_Text::get_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_firstOverflowCharacterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstOverflowCharacterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_linkedTextComponent
::TMPro::TMP_Text* TMPro::TMP_Text::get_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_linkedTextComponent
void TMPro::TMP_Text::set_linkedTextComponent(::TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextTruncated
bool TMPro::TMP_Text::get_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isTextTruncated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextTruncated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableKerning
bool TMPro::TMP_Text::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableKerning
void TMPro::TMP_Text::set_enableKerning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_extraPadding
bool TMPro::TMP_Text::get_extraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_extraPadding
void TMPro::TMP_Text::set_extraPadding(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_richText
bool TMPro::TMP_Text::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_richText
void TMPro::TMP_Text::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_parseCtrlCharacters
bool TMPro::TMP_Text::get_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_parseCtrlCharacters
void TMPro::TMP_Text::set_parseCtrlCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOverlay
bool TMPro::TMP_Text::get_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOverlay
void TMPro::TMP_Text::set_isOverlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOrthographic
bool TMPro::TMP_Text::get_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOrthographic
void TMPro::TMP_Text::set_isOrthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableCulling
bool TMPro::TMP_Text::get_enableCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableCulling
void TMPro::TMP_Text::set_enableCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreVisibility
bool TMPro::TMP_Text::get_ignoreVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreVisibility
void TMPro::TMP_Text::set_ignoreVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_horizontalMapping
::TMPro::TextureMappingOptions TMPro::TMP_Text::get_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_horizontalMapping
void TMPro::TMP_Text::set_horizontalMapping(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_verticalMapping
::TMPro::TextureMappingOptions TMPro::TMP_Text::get_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_verticalMapping
void TMPro::TMP_Text::set_verticalMapping(::TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mappingUvLineOffset
float TMPro::TMP_Text::get_mappingUvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_mappingUvLineOffset
void TMPro::TMP_Text::set_mappingUvLineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_renderMode
::TMPro::TextRenderFlags TMPro::TMP_Text::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextRenderFlags, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_renderMode
void TMPro::TMP_Text::set_renderMode(::TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_geometrySortingOrder
::TMPro::VertexSortingOrder TMPro::TMP_Text::get_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::VertexSortingOrder, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_geometrySortingOrder
void TMPro::TMP_Text::set_geometrySortingOrder(::TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextObjectScaleStatic
bool TMPro::TMP_Text::get_isTextObjectScaleStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isTextObjectScaleStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextObjectScaleStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isTextObjectScaleStatic
void TMPro::TMP_Text::set_isTextObjectScaleStatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isTextObjectScaleStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTextObjectScaleStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_vertexBufferAutoSizeReduction
bool TMPro::TMP_Text::get_vertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_vertexBufferAutoSizeReduction
void TMPro::TMP_Text::set_vertexBufferAutoSizeReduction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_firstVisibleCharacter
int TMPro::TMP_Text::get_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_firstVisibleCharacter
void TMPro::TMP_Text::set_firstVisibleCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleCharacters
int TMPro::TMP_Text::get_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleCharacters
void TMPro::TMP_Text::set_maxVisibleCharacters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleWords
int TMPro::TMP_Text::get_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleWords
void TMPro::TMP_Text::set_maxVisibleWords(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleLines
int TMPro::TMP_Text::get_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleLines
void TMPro::TMP_Text::set_maxVisibleLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_useMaxVisibleDescender
bool TMPro::TMP_Text::get_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_useMaxVisibleDescender
void TMPro::TMP_Text::set_useMaxVisibleDescender(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pageToDisplay
int TMPro::TMP_Text::get_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_pageToDisplay
void TMPro::TMP_Text::set_pageToDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_margin
::UnityEngine::Vector4 TMPro::TMP_Text::get_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_margin
void TMPro::TMP_Text::set_margin(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textInfo
::TMPro::TMP_TextInfo* TMPro::TMP_Text::get_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_textInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_havePropertiesChanged
bool TMPro::TMP_Text::get_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_havePropertiesChanged
void TMPro::TMP_Text::set_havePropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingLegacyAnimationComponent
bool TMPro::TMP_Text::get_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isUsingLegacyAnimationComponent
void TMPro::TMP_Text::set_isUsingLegacyAnimationComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_autoSizeTextContainer
bool TMPro::TMP_Text::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_autoSizeTextContainer
void TMPro::TMP_Text::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mesh
::UnityEngine::Mesh* TMPro::TMP_Text::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_isVolumetricText
bool TMPro::TMP_Text::get_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isVolumetricText
void TMPro::TMP_Text::set_isVolumetricText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_bounds
::UnityEngine::Bounds TMPro::TMP_Text::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_textBounds
::UnityEngine::Bounds TMPro::TMP_Text::get_textBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_textBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAnimator
::TMPro::TMP_SpriteAnimator* TMPro::TMP_Text::get_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_spriteAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteAnimator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleHeight
float TMPro::TMP_Text::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleWidth
float TMPro::TMP_Text::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minWidth
float TMPro::TMP_Text::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minHeight
float TMPro::TMP_Text::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxWidth
float TMPro::TMP_Text::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxHeight
float TMPro::TMP_Text::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutElement
::UnityEngine::UI::LayoutElement* TMPro::TMP_Text::get_layoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_layoutElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::LayoutElement*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredWidth
float TMPro::TMP_Text::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredHeight
float TMPro::TMP_Text::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedWidth
float TMPro::TMP_Text::get_renderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_renderedWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedHeight
float TMPro::TMP_Text::get_renderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_renderedHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutPriority
int TMPro::TMP_Text::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.add_OnFontAssetRequest
void TMPro::TMP_Text::add_OnFontAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::add_OnFontAssetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", "add_OnFontAssetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.remove_OnFontAssetRequest
void TMPro::TMP_Text::remove_OnFontAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::remove_OnFontAssetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", "remove_OnFontAssetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.add_OnSpriteAssetRequest
void TMPro::TMP_Text::add_OnSpriteAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_SpriteAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::add_OnSpriteAssetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", "add_OnSpriteAssetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.remove_OnSpriteAssetRequest
void TMPro::TMP_Text::remove_OnSpriteAssetRequest(::System::Func_3<int, ::StringW, ::TMPro::TMP_SpriteAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::remove_OnSpriteAssetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", "remove_OnSpriteAssetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.add_OnPreRenderText
void TMPro::TMP_Text::add_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::add_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.remove_OnPreRenderText
void TMPro::TMP_Text::remove_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::remove_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.LoadFontAsset
void TMPro::TMP_Text::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterial
void TMPro::TMP_Text::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterial
::UnityEngine::Material* TMPro::TMP_Text::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.SetFontBaseMaterial
void TMPro::TMP_Text::SetFontBaseMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetFontBaseMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFontBaseMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TMP_Text::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterials
void TMPro::TMP_Text::SetSharedMaterials(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TMP_Text::GetMaterials(::ArrayW<::UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TMP_Text.CreateMaterialInstance
::UnityEngine::Material* TMPro::TMP_Text::CreateMaterialInstance(::UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CreateMaterialInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_Text.SetVertexColorGradient
void TMPro::TMP_Text::SetVertexColorGradient(::TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetVertexColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(::TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(::ArrayW<int> order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetFaceColor
void TMPro::TMP_Text::SetFaceColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineColor
void TMPro::TMP_Text::SetOutlineColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineThickness
void TMPro::TMP_Text::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TMP_Text.SetShaderDepth
void TMPro::TMP_Text::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetCulling
void TMPro::TMP_Text::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.UpdateCulling
void TMPro::TMP_Text::UpdateCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::UpdateCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetTextContainerLocalCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TMP_Text::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate(bool ignoreActiveState, bool forceTextReparsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreActiveState), ::il2cpp_utils::ExtractType(forceTextReparsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreActiveState, forceTextReparsing);
}
// Autogenerated method: TMPro.TMP_Text.UpdateGeometry
void TMPro::TMP_Text::UpdateGeometry(::UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData(::TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetVertices
void TMPro::TMP_Text::SetVertices(::ArrayW<::UnityEngine::Vector3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: TMPro.TMP_Text.UpdateMeshPadding
void TMPro::TMP_Text::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeColor
void TMPro::TMP_Text::InternalCrossFadeColor(::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeAlpha
void TMPro::TMP_Text::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text.ParseInputText
void TMPro::TMP_Text::ParseInputText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ParseInputText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInputText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.PopulateTextBackingArray
void TMPro::TMP_Text::PopulateTextBackingArray(::StringW sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PopulateTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.PopulateTextBackingArray
void TMPro::TMP_Text::PopulateTextBackingArray(::StringW sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PopulateTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.PopulateTextBackingArray
void TMPro::TMP_Text::PopulateTextBackingArray(::System::Text::StringBuilder* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PopulateTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.PopulateTextBackingArray
void TMPro::TMP_Text::PopulateTextBackingArray(::ArrayW<::Il2CppChar> sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PopulateTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.PopulateTextProcessingArray
void TMPro::TMP_Text::PopulateTextProcessingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PopulateTextProcessingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateTextProcessingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetTextInternal
void TMPro::TMP_Text::SetTextInternal(::StringW sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetTextInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, bool syncTextInputBox) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(syncTextInputBox)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, syncTextInputBox);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2, float arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2, arg3);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2, float arg3, float arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2, float arg3, float arg4, float arg5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4), ::il2cpp_utils::ExtractType(arg5)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2, arg3, arg4, arg5);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4), ::il2cpp_utils::ExtractType(arg5), ::il2cpp_utils::ExtractType(arg6)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::StringW sourceText, float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4), ::il2cpp_utils::ExtractType(arg5), ::il2cpp_utils::ExtractType(arg6), ::il2cpp_utils::ExtractType(arg7)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::System::Text::StringBuilder* sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::System::Text::StringBuilder* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::ArrayW<::Il2CppChar> sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::ArrayW<::Il2CppChar> sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::ArrayW<::Il2CppChar> sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::ArrayW<::Il2CppChar> sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.GetStyle
::TMPro::TMP_Style* TMPro::TMP_Text::GetStyle(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Style*, false>(this, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<::TMPro::TMP_Text::TextBackingContainer> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<::ArrayW<int>> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
void TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<::TMPro::TMP_Text::TextBackingContainer> sourceText, int srcIndex, ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
void TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<::ArrayW<int>> sourceText, int srcIndex, ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.InsertOpeningStyleTag
bool TMPro::TMP_Text::InsertOpeningStyleTag(::TMPro::TMP_Style* style, int srcIndex, ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InsertOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, style, srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.InsertClosingStyleTag
void TMPro::TMP_Text::InsertClosingStyleTag(ByRef<::ArrayW<::TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InsertClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.GetMarkupTagHashCode
int TMPro::TMP_Text::GetMarkupTagHashCode(::ArrayW<int> tagDefinition, int readIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetMarkupTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkupTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagDefinition), ::il2cpp_utils::ExtractType(readIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tagDefinition, readIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetMarkupTagHashCode
int TMPro::TMP_Text::GetMarkupTagHashCode(::TMPro::TMP_Text::TextBackingContainer tagDefinition, int readIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetMarkupTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkupTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagDefinition), ::il2cpp_utils::ExtractType(readIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tagDefinition, readIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetStyleHashCode
int TMPro::TMP_Text::GetStyleHashCode(ByRef<::ArrayW<int>> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetStyleHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.GetStyleHashCode
int TMPro::TMP_Text::GetStyleHashCode(ByRef<::TMPro::TMP_Text::TextBackingContainer> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetStyleHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.AddFloatToInternalTextBackingArray
void TMPro::TMP_Text::AddFloatToInternalTextBackingArray(float value, int padding, int precision, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::AddFloatToInternalTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFloatToInternalTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(writeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, padding, precision, byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.AddIntegerToInternalTextBackingArray
void TMPro::TMP_Text::AddIntegerToInternalTextBackingArray(double number, int padding, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::AddIntegerToInternalTextBackingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIntegerToInternalTextBackingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(writeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number, padding, byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.InternalTextBackingArrayToString
::StringW TMPro::TMP_Text::InternalTextBackingArrayToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InternalTextBackingArrayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTextBackingArrayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetArraySizes
int TMPro::TMP_Text::SetArraySizes(::ArrayW<::TMPro::TMP_Text::UnicodeChar> unicodeChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodeChars)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unicodeChars);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::StringW text, float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, text, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth(::UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight(::UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
::UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.CalculatePreferredValues
::UnityEngine::Vector2 TMPro::TMP_Text::CalculatePreferredValues(ByRef<float> fontSize, ::UnityEngine::Vector2 marginSize, bool isTextAutoSizingEnabled, bool isWordWrappingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CalculatePreferredValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontSize), ::il2cpp_utils::ExtractType(marginSize), ::il2cpp_utils::ExtractType(isTextAutoSizingEnabled), ::il2cpp_utils::ExtractType(isWordWrappingEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, byref(fontSize), marginSize, isTextAutoSizingEnabled, isWordWrappingEnabled);
}
// Autogenerated method: TMPro.TMP_Text.GetCompoundBounds
::UnityEngine::Bounds TMPro::TMP_Text::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetCanvasSpaceClippingRect
::UnityEngine::Rect TMPro::TMP_Text::GetCanvasSpaceClippingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetCanvasSpaceClippingRect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasSpaceClippingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
::UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
::UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.AdjustLineOffset
void TMPro::TMP_Text::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::AdjustLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TMP_Text.ResizeLineExtents
void TMPro::TMP_Text::ResizeLineExtents(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ResizeLineExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeLineExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_Text.GetTextInfo
::TMPro::TMP_TextInfo* TMPro::TMP_Text::GetTextInfo(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.ComputeMarginSize
void TMPro::TMP_Text::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.InsertNewLine
void TMPro::TMP_Text::InsertNewLine(int i, float baseScale, float currentElementScale, float currentEmScale, float glyphAdjustment, float boldSpacingAdjustment, float characterSpacingAdjustment, float width, float lineGap, ByRef<bool> isMaxVisibleDescenderSet, ByRef<float> maxVisibleDescender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InsertNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(baseScale), ::il2cpp_utils::ExtractType(currentElementScale), ::il2cpp_utils::ExtractType(currentEmScale), ::il2cpp_utils::ExtractType(glyphAdjustment), ::il2cpp_utils::ExtractType(boldSpacingAdjustment), ::il2cpp_utils::ExtractType(characterSpacingAdjustment), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(lineGap), ::il2cpp_utils::ExtractType(isMaxVisibleDescenderSet), ::il2cpp_utils::ExtractType(maxVisibleDescender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, baseScale, currentElementScale, currentEmScale, glyphAdjustment, boldSpacingAdjustment, characterSpacingAdjustment, width, lineGap, byref(isMaxVisibleDescenderSet), byref(maxVisibleDescender));
}
// Autogenerated method: TMPro.TMP_Text.SaveWordWrappingState
void TMPro::TMP_Text::SaveWordWrappingState(ByRef<::TMPro::WordWrapState> state, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SaveWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(state), index, count);
}
// Autogenerated method: TMPro.TMP_Text.RestoreWordWrappingState
int TMPro::TMP_Text::RestoreWordWrappingState(ByRef<::TMPro::WordWrapState> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::RestoreWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: TMPro.TMP_Text.SaveGlyphVertexInfo
void TMPro::TMP_Text::SaveGlyphVertexInfo(float padding, float style_padding, ::UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SaveGlyphVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveGlyphVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(style_padding), ::il2cpp_utils::ExtractType(vertexColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padding, style_padding, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.SaveSpriteVertexInfo
void TMPro::TMP_Text::SaveSpriteVertexInfo(::UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SaveSpriteVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveSpriteVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4), ::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, index_X4, isVolumetric);
}
// Autogenerated method: TMPro.TMP_Text.FillSpriteVertexBuffers
void TMPro::TMP_Text::FillSpriteVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::FillSpriteVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSpriteVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.DrawUnderlineMesh
void TMPro::TMP_Text::DrawUnderlineMesh(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<int> index, float startScale, float endScale, float maxScale, float sdfScale, ::UnityEngine::Color32 underlineColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::DrawUnderlineMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawUnderlineMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startScale), ::il2cpp_utils::ExtractType(endScale), ::il2cpp_utils::ExtractType(maxScale), ::il2cpp_utils::ExtractType(sdfScale), ::il2cpp_utils::ExtractType(underlineColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, byref(index), startScale, endScale, maxScale, sdfScale, underlineColor);
}
// Autogenerated method: TMPro.TMP_Text.DrawTextHighlight
void TMPro::TMP_Text::DrawTextHighlight(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<int> index, ::UnityEngine::Color32 highlightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::DrawTextHighlight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawTextHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(highlightColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, byref(index), highlightColor);
}
// Autogenerated method: TMPro.TMP_Text.LoadDefaultSettings
void TMPro::TMP_Text::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetSpecialCharacters
void TMPro::TMP_Text::GetSpecialCharacters(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.GetEllipsisSpecialCharacter
void TMPro::TMP_Text::GetEllipsisSpecialCharacter(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetEllipsisSpecialCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEllipsisSpecialCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.GetUnderlineSpecialCharacter
void TMPro::TMP_Text::GetUnderlineSpecialCharacter(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUnderlineSpecialCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnderlineSpecialCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceTagWithCharacter
void TMPro::TMP_Text::ReplaceTagWithCharacter(::ArrayW<int> chars, int insertionIndex, int tagLength, ::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReplaceTagWithCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceTagWithCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(insertionIndex), ::il2cpp_utils::ExtractType(tagLength), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, insertionIndex, tagLength, c);
}
// Autogenerated method: TMPro.TMP_Text.GetFontAssetForWeight
::TMPro::TMP_FontAsset* TMPro::TMP_Text::GetFontAssetForWeight(int fontWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetFontAssetForWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFontAssetForWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontWeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(this, ___internal__method, fontWeight);
}
// Autogenerated method: TMPro.TMP_Text.GetTextElement
::TMPro::TMP_TextElement* TMPro::TMP_Text::GetTextElement(uint unicode, ::TMPro::TMP_FontAsset* fontAsset, ::TMPro::FontStyles fontStyle, ::TMPro::FontWeight fontWeight, ByRef<bool> isUsingAlternativeTypeface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetTextElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextElement*, false>(this, ___internal__method, unicode, fontAsset, fontStyle, fontWeight, byref(isUsingAlternativeTypeface));
}
// Autogenerated method: TMPro.TMP_Text.SetActiveSubMeshes
void TMPro::TMP_Text::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.DestroySubMeshObjects
void TMPro::TMP_Text::DestroySubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::DestroySubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh(bool uploadGeometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadGeometry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uploadGeometry);
}
// Autogenerated method: TMPro.TMP_Text.GetParsedText
::StringW TMPro::TMP_Text::GetParsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetParsedText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.IsSelfOrLinkedAncestor
bool TMPro::TMP_Text::IsSelfOrLinkedAncestor(::TMPro::TMP_Text* targetTextComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::IsSelfOrLinkedAncestor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelfOrLinkedAncestor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetTextComponent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetTextComponent);
}
// Autogenerated method: TMPro.TMP_Text.ReleaseLinkedTextComponent
void TMPro::TMP_Text::ReleaseLinkedTextComponent(::TMPro::TMP_Text* targetTextComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ReleaseLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseLinkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetTextComponent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTextComponent);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
::UnityEngine::Vector2 TMPro::TMP_Text::PackUV(float x, float y, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, x, y, scale);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
float TMPro::TMP_Text::PackUV(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: TMPro.TMP_Text.InternalUpdate
void TMPro::TMP_Text::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.HexToInt
int TMPro::TMP_Text::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::StringW text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::ArrayW<int> text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::ArrayW<uint> text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::TMPro::TMP_Text::TextBackingContainer text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::StringW text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::ArrayW<int> text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::ArrayW<uint> text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::TMPro::TMP_Text::TextBackingContainer text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
::UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::ArrayW<::Il2CppChar> hexChars, int tagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(tagCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method, hexChars, tagCount);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
::UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::ArrayW<::Il2CppChar> hexChars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method, hexChars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.GetAttributeParameters
int TMPro::TMP_Text::GetAttributeParameters(::ArrayW<::Il2CppChar> chars, int startIndex, int length, ByRef<::ArrayW<float>> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::GetAttributeParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startIndex, length, byref(parameters));
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::ArrayW<::Il2CppChar> chars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, chars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::ArrayW<::Il2CppChar> chars, int startIndex, int length, ByRef<int> lastIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, chars, startIndex, length, byref(lastIndex));
}
// Autogenerated method: TMPro.TMP_Text.ValidateHtmlTag
bool TMPro::TMP_Text::ValidateHtmlTag(::ArrayW<::TMPro::TMP_Text::UnicodeChar> chars, int startIndex, ByRef<int> endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::ValidateHtmlTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateHtmlTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, chars, startIndex, byref(endIndex));
}
// Autogenerated method: TMPro.TMP_Text.get_color
::UnityEngine::Color TMPro::TMP_Text::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_color
void TMPro::TMP_Text::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::set_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_transform
::UnityEngine::Transform* TMPro::TMP_Text::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_rectTransform
::UnityEngine::RectTransform* TMPro::TMP_Text::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text..cctor
void TMPro::TMP_Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeColor
void TMPro::TMP_Text::CrossFadeColor(::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeAlpha
void TMPro::TMP_Text::CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.CharacterSubstitution
#include "TMPro/TMP_Text_CharacterSubstitution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
int& TMPro::TMP_Text::CharacterSubstitution::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CharacterSubstitution::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unicode
uint& TMPro::TMP_Text::CharacterSubstitution::dyn_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::CharacterSubstitution::dyn_unicode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unicode"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.CharacterSubstitution..ctor
// ABORTED elsewhere.  TMPro::TMP_Text::CharacterSubstitution::CharacterSubstitution(int index, uint unicode)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.TextInputSources
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources TextInputBox
::TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_TextInputBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_get_TextInputBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "TextInputBox"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources TextInputBox
void TMPro::TMP_Text::TextInputSources::_set_TextInputBox(::TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_set_TextInputBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "TextInputBox", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetText
::TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_get_SetText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetText"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetText
void TMPro::TMP_Text::TextInputSources::_set_SetText(::TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_set_SetText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetText", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetTextArray
::TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetTextArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_get_SetTextArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetTextArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetTextArray
void TMPro::TMP_Text::TextInputSources::_set_SetTextArray(::TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_set_SetTextArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetTextArray", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources TextString
::TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_TextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_get_TextString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "TextString"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources TextString
void TMPro::TMP_Text::TextInputSources::_set_TextString(::TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::_set_TextString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "TextString", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_Text::TextInputSources::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextInputSources::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.SpecialCharacter
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Character character
::TMPro::TMP_Character*& TMPro::TMP_Text::SpecialCharacter::dyn_character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SpecialCharacter::dyn_character");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "character"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Character**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_FontAsset fontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_Text::SpecialCharacter::dyn_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SpecialCharacter::dyn_fontAsset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
::UnityEngine::Material*& TMPro::TMP_Text::SpecialCharacter::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SpecialCharacter::dyn_material");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialIndex
int& TMPro::TMP_Text::SpecialCharacter::dyn_materialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SpecialCharacter::dyn_materialIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.SpecialCharacter..ctor
TMPro::TMP_Text::SpecialCharacter::SpecialCharacter(::TMPro::TMP_Character* character, int materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::SpecialCharacter::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(materialIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character, materialIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.TextBackingContainer
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] m_Array
::ArrayW<uint>& TMPro::TMP_Text::TextBackingContainer::dyn_m_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::dyn_m_Array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Array"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Count
int& TMPro::TMP_Text::TextBackingContainer::dyn_m_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::dyn_m_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.get_Capacity
int TMPro::TMP_Text::TextBackingContainer::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.get_Count
int TMPro::TMP_Text::TextBackingContainer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.set_Count
void TMPro::TMP_Text::TextBackingContainer::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.get_Item
uint TMPro::TMP_Text::TextBackingContainer::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, index);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.set_Item
void TMPro::TMP_Text::TextBackingContainer::set_Item(int index, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer..ctor
TMPro::TMP_Text::TextBackingContainer::TextBackingContainer(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.TextBackingContainer.Resize
void TMPro::TMP_Text::TextBackingContainer::Resize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::TextBackingContainer::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.<>c
#include "TMPro/TMP_Text_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_Text/TMPro.<>c <>9
::TMPro::TMP_Text::$$c* TMPro::TMP_Text::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::TMP_Text::$$c*>("TMPro", "TMP_Text/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_Text/TMPro.<>c <>9
void TMPro::TMP_Text::$$c::_set_$$9(::TMPro::TMP_Text::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<TMPro.TMP_TextInfo> <>9__622_0
::System::Action_1<::TMPro::TMP_TextInfo*>* TMPro::TMP_Text::$$c::_get_$$9__622_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::_get_$$9__622_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::TMPro::TMP_TextInfo*>*>("TMPro", "TMP_Text/<>c", "<>9__622_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<TMPro.TMP_TextInfo> <>9__622_0
void TMPro::TMP_Text::$$c::_set_$$9__622_0(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::_set_$$9__622_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/<>c", "<>9__622_0", value)));
}
// Autogenerated method: TMPro.TMP_Text/TMPro.<>c..cctor
void TMPro::TMP_Text::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text/TMPro.<>c.<.ctor>b__622_0
void TMPro::TMP_Text::$$c::$_ctor$b__622_0(::TMPro::TMP_TextInfo* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Text::$$c::<.ctor>b__622_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__622_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextElementType
#include "TMPro/TextElementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Character
::TMPro::TextElementType TMPro::TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextElementType>("TMPro", "TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Character
void TMPro::TextElementType::_set_Character(::TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Sprite
::TMPro::TextElementType TMPro::TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextElementType>("TMPro", "TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Sprite
void TMPro::TextElementType::_set_Sprite(::TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Sprite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& TMPro::TextElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: TMPro.TMP_Asset
#include "TMPro/TMP_Asset.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextElementType m_ElementType
::TMPro::TextElementType& TMPro::TMP_TextElement::dyn_m_ElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_ElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ElementType"))->offset;
  return *reinterpret_cast<::TMPro::TextElementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_Unicode
uint& TMPro::TMP_TextElement::dyn_m_Unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_Unicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Unicode"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Asset m_TextAsset
::TMPro::TMP_Asset*& TMPro::TMP_TextElement::dyn_m_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_TextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Asset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.TextCore.Glyph m_Glyph
::UnityEngine::TextCore::Glyph*& TMPro::TMP_TextElement::dyn_m_Glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_Glyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Glyph"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::Glyph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_GlyphIndex
uint& TMPro::TMP_TextElement::dyn_m_GlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_GlyphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Scale
float& TMPro::TMP_TextElement::dyn_m_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::dyn_m_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextElement.get_elementType
::TMPro::TextElementType TMPro::TMP_TextElement::get_elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_elementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextElementType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.get_unicode
uint TMPro::TMP_TextElement::get_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_unicode
void TMPro::TMP_TextElement::set_unicode(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::set_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_textAsset
::TMPro::TMP_Asset* TMPro::TMP_TextElement::get_textAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_textAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Asset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_textAsset
void TMPro::TMP_TextElement::set_textAsset(::TMPro::TMP_Asset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::set_textAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyph
::UnityEngine::TextCore::Glyph* TMPro::TMP_TextElement::get_glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::Glyph*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyph
void TMPro::TMP_TextElement::set_glyph(::UnityEngine::TextCore::Glyph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::set_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyphIndex
uint TMPro::TMP_TextElement::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyphIndex
void TMPro::TMP_TextElement::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_scale
float TMPro::TMP_TextElement::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_scale
void TMPro::TMP_TextElement::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement_Legacy
#include "TMPro/TMP_TextElement_Legacy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& TMPro::TMP_TextElement_Legacy::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& TMPro::TMP_TextElement_Legacy::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& TMPro::TMP_TextElement_Legacy::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& TMPro::TMP_TextElement_Legacy::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& TMPro::TMP_TextElement_Legacy::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xOffset
float& TMPro::TMP_TextElement_Legacy::dyn_xOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_xOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yOffset
float& TMPro::TMP_TextElement_Legacy::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xAdvance
float& TMPro::TMP_TextElement_Legacy::dyn_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_xAdvance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scale
float& TMPro::TMP_TextElement_Legacy::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextElement_Legacy::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.Vector2 k_InfinityVectorPositive
::UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Vector2 k_InfinityVectorPositive
void TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Vector2 k_InfinityVectorNegative
::UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Vector2 k_InfinityVectorNegative
void TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Text textComponent
::TMPro::TMP_Text*& TMPro::TMP_TextInfo::dyn_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_textComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 characterCount
int& TMPro::TMP_TextInfo::dyn_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_characterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spriteCount
int& TMPro::TMP_TextInfo::dyn_spriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_spriteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spaceCount
int& TMPro::TMP_TextInfo::dyn_spaceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_spaceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spaceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wordCount
int& TMPro::TMP_TextInfo::dyn_wordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_wordCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkCount
int& TMPro::TMP_TextInfo::dyn_linkCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_linkCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineCount
int& TMPro::TMP_TextInfo::dyn_lineCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_lineCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pageCount
int& TMPro::TMP_TextInfo::dyn_pageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_pageCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialCount
int& TMPro::TMP_TextInfo::dyn_materialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_materialCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_CharacterInfo[] characterInfo
::ArrayW<::TMPro::TMP_CharacterInfo>& TMPro::TMP_TextInfo::dyn_characterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_characterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_CharacterInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_WordInfo[] wordInfo
::ArrayW<::TMPro::TMP_WordInfo>& TMPro::TMP_TextInfo::dyn_wordInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_wordInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wordInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_WordInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_LinkInfo[] linkInfo
::ArrayW<::TMPro::TMP_LinkInfo>& TMPro::TMP_TextInfo::dyn_linkInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_linkInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_LinkInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_LineInfo[] lineInfo
::ArrayW<::TMPro::TMP_LineInfo>& TMPro::TMP_TextInfo::dyn_lineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_lineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_LineInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_PageInfo[] pageInfo
::ArrayW<::TMPro::TMP_PageInfo>& TMPro::TMP_TextInfo::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_PageInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_MeshInfo[] meshInfo
::ArrayW<::TMPro::TMP_MeshInfo>& TMPro::TMP_TextInfo::dyn_meshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_meshInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_MeshInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_MeshInfo[] m_CachedMeshInfo
::ArrayW<::TMPro::TMP_MeshInfo>& TMPro::TMP_TextInfo::dyn_m_CachedMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::dyn_m_CachedMeshInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedMeshInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_MeshInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextInfo..cctor
void TMPro::TMP_TextInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.Clear
void TMPro::TMP_TextInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearAllData
void TMPro::TMP_TextInfo::ClearAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearAllData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearMeshInfo
void TMPro::TMP_TextInfo::ClearMeshInfo(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearAllMeshInfo
void TMPro::TMP_TextInfo::ClearAllMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearAllMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ResetVertexLayout
void TMPro::TMP_TextInfo::ResetVertexLayout(bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ResetVertexLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetVertexLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isVolumetric);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearUnusedVertices
void TMPro::TMP_TextInfo::ClearUnusedVertices(::ArrayW<::TMPro::MaterialReference> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearLineInfo
void TMPro::TMP_TextInfo::ClearLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearPageInfo
void TMPro::TMP_TextInfo::ClearPageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::ClearPageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.CopyMeshInfoVertexData
::ArrayW<::TMPro::TMP_MeshInfo> TMPro::TMP_TextInfo::CopyMeshInfoVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextInfo::CopyMeshInfoVertexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyMeshInfoVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::TMPro::TMP_MeshInfo>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextParsingUtilities
#include "TMPro/TMP_TextParsingUtilities.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
::TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_TextParsingUtilities*>("TMPro", "TMP_TextParsingUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
void TMPro::TMP_TextParsingUtilities::_set_s_Instance(::TMPro::TMP_TextParsingUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringL
::StringW TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringL
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringU
::StringW TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringU
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.get_instance
::TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextParsingUtilities*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities..cctor
void TMPro::TMP_TextParsingUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCode
int TMPro::TMP_TextParsingUtilities::GetHashCode(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCodeCaseSensitive
int TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCodeCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsHighSurrogate
bool TMPro::TMP_TextParsingUtilities::IsHighSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsLowSurrogate
bool TMPro::TMP_TextParsingUtilities::IsLowSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ConvertToUTF32
uint TMPro::TMP_TextParsingUtilities::ConvertToUTF32(uint highSurrogate, uint lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextParsingUtilities::ConvertToUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ConvertToUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontStyleStack
#include "TMPro/TMP_FontStyleStack.hpp"
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte bold
uint8_t& TMPro::TMP_FontStyleStack::dyn_bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_bold");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bold"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte italic
uint8_t& TMPro::TMP_FontStyleStack::dyn_italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_italic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "italic"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte underline
uint8_t& TMPro::TMP_FontStyleStack::dyn_underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_underline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underline"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte strikethrough
uint8_t& TMPro::TMP_FontStyleStack::dyn_strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_strikethrough");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethrough"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte highlight
uint8_t& TMPro::TMP_FontStyleStack::dyn_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_highlight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highlight"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte superscript
uint8_t& TMPro::TMP_FontStyleStack::dyn_superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_superscript");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "superscript"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte subscript
uint8_t& TMPro::TMP_FontStyleStack::dyn_subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_subscript");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscript"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte uppercase
uint8_t& TMPro::TMP_FontStyleStack::dyn_uppercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_uppercase");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uppercase"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte lowercase
uint8_t& TMPro::TMP_FontStyleStack::dyn_lowercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_lowercase");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowercase"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte smallcaps
uint8_t& TMPro::TMP_FontStyleStack::dyn_smallcaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::dyn_smallcaps");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smallcaps"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Clear
void TMPro::TMP_FontStyleStack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Add
uint8_t TMPro::TMP_FontStyleStack::Add(::TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, style);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Remove
uint8_t TMPro::TMP_FontStyleStack::Remove(::TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontStyleStack::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition None
::TMPro::CaretPosition TMPro::CaretPosition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::CaretPosition>("TMPro", "CaretPosition", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition None
void TMPro::CaretPosition::_set_None(::TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Left
::TMPro::CaretPosition TMPro::CaretPosition::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::CaretPosition>("TMPro", "CaretPosition", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Left
void TMPro::CaretPosition::_set_Left(::TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Right
::TMPro::CaretPosition TMPro::CaretPosition::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::CaretPosition>("TMPro", "CaretPosition", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Right
void TMPro::CaretPosition::_set_Right(::TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::CaretPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretInfo
#include "TMPro/CaretInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
int& TMPro::CaretInfo::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretInfo::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.CaretPosition position
::TMPro::CaretPosition& TMPro::CaretInfo::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::CaretInfo::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::TMPro::CaretPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.CaretInfo..ctor
// ABORTED elsewhere.  TMPro::CaretInfo::CaretInfo(int index, ::TMPro::CaretPosition position)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextUtilities
#include "TMPro/TMP_TextUtilities.hpp"
// Including type: TMPro.TMP_TextUtilities/TMPro.LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] m_rectWorldCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TMP_TextUtilities::_get_m_rectWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_get_m_rectWorldCorners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("TMPro", "TMP_TextUtilities", "m_rectWorldCorners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] m_rectWorldCorners
void TMPro::TMP_TextUtilities::_set_m_rectWorldCorners(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_set_m_rectWorldCorners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "m_rectWorldCorners", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringL
::StringW TMPro::TMP_TextUtilities::_get_k_lookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_get_k_lookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_TextUtilities", "k_lookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringL
void TMPro::TMP_TextUtilities::_set_k_lookupStringL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_set_k_lookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringU
::StringW TMPro::TMP_TextUtilities::_get_k_lookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_get_k_lookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_TextUtilities", "k_lookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringU
void TMPro::TMP_TextUtilities::_set_k_lookupStringU(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::_set_k_lookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextUtilities..cctor
void TMPro::TMP_TextUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(::TMPro::TMP_Text* textComponent, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textComponent, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(::TMPro::TMP_Text* textComponent, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera, ByRef<::TMPro::CaretPosition> cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractIndependentType<::TMPro::CaretPosition&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textComponent, position, camera, byref(cursor));
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLine
int TMPro::TMP_TextUtilities::FindNearestLine(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindNearestLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacterOnLine
int TMPro::TMP_TextUtilities::FindNearestCharacterOnLine(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, int line, ::UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindNearestCharacterOnLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacterOnLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, line, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IsIntersectingRectTransform
bool TMPro::TMP_TextUtilities::IsIntersectingRectTransform(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::IsIntersectingRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IsIntersectingRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingCharacter
int TMPro::TMP_TextUtilities::FindIntersectingCharacter(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindIntersectingCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacter
int TMPro::TMP_TextUtilities::FindNearestCharacter(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindNearestCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingWord
int TMPro::TMP_TextUtilities::FindIntersectingWord(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindIntersectingWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestWord
int TMPro::TMP_TextUtilities::FindNearestWord(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindNearestWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLine
int TMPro::TMP_TextUtilities::FindIntersectingLine(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindIntersectingLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLink
int TMPro::TMP_TextUtilities::FindIntersectingLink(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindIntersectingLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLink
int TMPro::TMP_TextUtilities::FindNearestLink(::TMPro::TMP_Text* text, ::UnityEngine::Vector3 position, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::FindNearestLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.PointIntersectRectangle
bool TMPro::TMP_TextUtilities::PointIntersectRectangle(::UnityEngine::Vector3 m, ::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::PointIntersectRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "PointIntersectRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m, a, b, c, d);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle
bool TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle(::UnityEngine::Transform* transform, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector3> worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, screenPoint, cam, byref(worldPoint));
}
// Autogenerated method: TMPro.TMP_TextUtilities.IntersectLinePlane
bool TMPro::TMP_TextUtilities::IntersectLinePlane(::TMPro::TMP_TextUtilities::LineSegment line, ::UnityEngine::Vector3 point, ::UnityEngine::Vector3 normal, ByRef<::UnityEngine::Vector3> intersectingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::IntersectLinePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IntersectLinePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, line, point, normal, byref(intersectingPoint));
}
// Autogenerated method: TMPro.TMP_TextUtilities.DistanceToLine
float TMPro::TMP_TextUtilities::DistanceToLine(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::DistanceToLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "DistanceToLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, point);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToLowerFast
::Il2CppChar TMPro::TMP_TextUtilities::ToLowerFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::ToLowerFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToLowerFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperFast
::Il2CppChar TMPro::TMP_TextUtilities::ToUpperFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::ToUpperFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperASCIIFast
uint TMPro::TMP_TextUtilities::ToUpperASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetHashCode
int TMPro::TMP_TextUtilities::GetHashCode(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCode
int TMPro::TMP_TextUtilities::GetSimpleHashCode(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::GetSimpleHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase
uint TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCodeLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.HexToInt
int TMPro::TMP_TextUtilities::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_TextUtilities.StringHexToInt
int TMPro::TMP_TextUtilities::StringHexToInt(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::StringHexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "StringHexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextUtilities/TMPro.LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Point1
::UnityEngine::Vector3& TMPro::TMP_TextUtilities::LineSegment::dyn_Point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::LineSegment::dyn_Point1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Point2
::UnityEngine::Vector3& TMPro::TMP_TextUtilities::LineSegment::dyn_Point2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_TextUtilities::LineSegment::dyn_Point2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextUtilities/TMPro.LineSegment..ctor
// ABORTED elsewhere.  TMPro::TMP_TextUtilities::LineSegment::LineSegment(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateManager
#include "TMPro/TMP_UpdateManager.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateManager s_Instance
::TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_UpdateManager*>("TMPro", "TMP_UpdateManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateManager s_Instance
void TMPro::TMP_UpdateManager::_set_s_Instance(::TMPro::TMP_UpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextObjectForUpdateMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_UpdateManager::_get_k_RegisterTextObjectForUpdateMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_k_RegisterTextObjectForUpdateMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_UpdateManager", "k_RegisterTextObjectForUpdateMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextObjectForUpdateMarker
void TMPro::TMP_UpdateManager::_set_k_RegisterTextObjectForUpdateMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_k_RegisterTextObjectForUpdateMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "k_RegisterTextObjectForUpdateMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextElementForGraphicRebuildMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_UpdateManager::_get_k_RegisterTextElementForGraphicRebuildMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_k_RegisterTextElementForGraphicRebuildMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_UpdateManager", "k_RegisterTextElementForGraphicRebuildMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextElementForGraphicRebuildMarker
void TMPro::TMP_UpdateManager::_set_k_RegisterTextElementForGraphicRebuildMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_k_RegisterTextElementForGraphicRebuildMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "k_RegisterTextElementForGraphicRebuildMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextElementForCullingUpdateMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_UpdateManager::_get_k_RegisterTextElementForCullingUpdateMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_k_RegisterTextElementForCullingUpdateMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_UpdateManager", "k_RegisterTextElementForCullingUpdateMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_RegisterTextElementForCullingUpdateMarker
void TMPro::TMP_UpdateManager::_set_k_RegisterTextElementForCullingUpdateMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_k_RegisterTextElementForCullingUpdateMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "k_RegisterTextElementForCullingUpdateMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_UnregisterTextObjectForUpdateMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_UpdateManager::_get_k_UnregisterTextObjectForUpdateMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_k_UnregisterTextObjectForUpdateMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_UpdateManager", "k_UnregisterTextObjectForUpdateMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_UnregisterTextObjectForUpdateMarker
void TMPro::TMP_UpdateManager::_set_k_UnregisterTextObjectForUpdateMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_k_UnregisterTextObjectForUpdateMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "k_UnregisterTextObjectForUpdateMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_UnregisterTextElementForGraphicRebuildMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_UpdateManager::_get_k_UnregisterTextElementForGraphicRebuildMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_get_k_UnregisterTextElementForGraphicRebuildMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_UpdateManager", "k_UnregisterTextElementForGraphicRebuildMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_UnregisterTextElementForGraphicRebuildMarker
void TMPro::TMP_UpdateManager::_set_k_UnregisterTextElementForGraphicRebuildMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::_set_k_UnregisterTextElementForGraphicRebuildMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "k_UnregisterTextElementForGraphicRebuildMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Int32> m_LayoutQueueLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateManager::dyn_m_LayoutQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_LayoutQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutQueueLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_LayoutRebuildQueue
::System::Collections::Generic::List_1<::TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_LayoutRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_LayoutRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutRebuildQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Int32> m_GraphicQueueLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateManager::dyn_m_GraphicQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_GraphicQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicQueueLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_GraphicRebuildQueue
::System::Collections::Generic::List_1<::TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_GraphicRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_GraphicRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicRebuildQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Int32> m_InternalUpdateLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateManager::dyn_m_InternalUpdateLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_InternalUpdateLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalUpdateLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_InternalUpdateQueue
::System::Collections::Generic::List_1<::TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_InternalUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_InternalUpdateQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalUpdateQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Int32> m_CullingUpdateLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateManager::dyn_m_CullingUpdateLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_CullingUpdateLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CullingUpdateLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_CullingUpdateQueue
::System::Collections::Generic::List_1<::TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_CullingUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::dyn_m_CullingUpdateQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CullingUpdateQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_UpdateManager.get_instance
::TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_UpdateManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager..cctor
void TMPro::TMP_UpdateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate(::TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate(::TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForCullingUpdate
void TMPro::TMP_UpdateManager::RegisterTextElementForCullingUpdate(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::RegisterTextElementForCullingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForCullingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForCullingUpdate
void TMPro::TMP_UpdateManager::InternalRegisterTextElementForCullingUpdate(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalRegisterTextElementForCullingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForCullingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnCameraPreCull
void TMPro::TMP_UpdateManager::OnCameraPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::OnCameraPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.DoRebuilds
void TMPro::TMP_UpdateManager::DoRebuilds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::DoRebuilds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoRebuilds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate(::TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextElementForRebuild
void TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild(::TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate(::TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateRegistry
#include "TMPro/TMP_UpdateRegistry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateRegistry s_Instance
::TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_UpdateRegistry*>("TMPro", "TMP_UpdateRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateRegistry s_Instance
void TMPro::TMP_UpdateRegistry::_set_s_Instance(::TMPro::TMP_UpdateRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateRegistry", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UI.ICanvasElement> m_LayoutRebuildQueue
::System::Collections::Generic::List_1<::UnityEngine::UI::ICanvasElement*>*& TMPro::TMP_UpdateRegistry::dyn_m_LayoutRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::dyn_m_LayoutRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutRebuildQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::ICanvasElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> m_LayoutQueueLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateRegistry::dyn_m_LayoutQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::dyn_m_LayoutQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutQueueLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UI.ICanvasElement> m_GraphicRebuildQueue
::System::Collections::Generic::List_1<::UnityEngine::UI::ICanvasElement*>*& TMPro::TMP_UpdateRegistry::dyn_m_GraphicRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::dyn_m_GraphicRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicRebuildQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::ICanvasElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> m_GraphicQueueLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_UpdateRegistry::dyn_m_GraphicQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::dyn_m_GraphicQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicQueueLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.get_instance
::TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_UpdateRegistry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForCanvasRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForCanvasRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForMeshRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForMeshRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.UnRegisterCanvasElementForRebuild
void TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild(::UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DistanceTransform_EventTypes
#include "TMPro/Compute_DistanceTransform_EventTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
::TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DistanceTransform_EventTypes::_get_Processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Processing"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
void TMPro::Compute_DistanceTransform_EventTypes::_set_Processing(::TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DistanceTransform_EventTypes::_set_Processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Processing", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
::TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DistanceTransform_EventTypes::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
void TMPro::Compute_DistanceTransform_EventTypes::_set_Completed(::TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DistanceTransform_EventTypes::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Completed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::Compute_DistanceTransform_EventTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DistanceTransform_EventTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_EventManager
#include "TMPro/TMPro_EventManager.hpp"
// Including type: TMPro.FastAction`2
#include "TMPro/FastAction_2.hpp"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: TMPro.FastAction`3
#include "TMPro/FastAction_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.FastAction`1
#include "TMPro/FastAction_1.hpp"
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
::TMPro::FastAction_2<::Il2CppObject*, ::TMPro::Compute_DT_EventArgs*>* TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<::Il2CppObject*, ::TMPro::Compute_DT_EventArgs*>*>("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT(::TMPro::FastAction_2<::Il2CppObject*, ::TMPro::Compute_DT_EventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
::TMPro::FastAction_2<bool, ::UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<bool, ::UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT(::TMPro::FastAction_2<bool, ::UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> FONT_PROPERTY_EVENT
::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<bool, ::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> FONT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT(::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<bool, ::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT(::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TEXTMESHPRO_PROPERTY_EVENT
::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<bool, ::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TEXTMESHPRO_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT(::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
::TMPro::FastAction_3<::UnityEngine::GameObject*, ::UnityEngine::Material*, ::UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_3<::UnityEngine::GameObject*, ::UnityEngine::Material*, ::UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
void TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT(::TMPro::FastAction_3<::UnityEngine::GameObject*, ::UnityEngine::Material*, ::UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
::TMPro::FastAction_1<bool>* TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FastAction_1<bool>*>("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT(::TMPro::FastAction_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> COLOR_GRADIENT_PROPERTY_EVENT
::TMPro::FastAction_1<::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FastAction_1<::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> COLOR_GRADIENT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT(::TMPro::FastAction_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
::TMPro::FastAction* TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FastAction*>("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT(::TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
::TMPro::FastAction* TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FastAction*>("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
void TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT(::TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TEXTMESHPRO_UGUI_PROPERTY_EVENT
::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::FastAction_2<bool, ::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TEXTMESHPRO_UGUI_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT(::TMPro::FastAction_2<bool, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
::TMPro::FastAction_1<::UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FastAction_1<::UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT(::TMPro::FastAction_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT", value));
}
// Autogenerated method: TMPro.TMPro_EventManager..cctor
void TMPro::TMPro_EventManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, ::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_MATERIAL_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged, mat);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_FONT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED(bool isChanged, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_FONT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_SPRITE_ASSET_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_SPRITE_ASSET_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_DRAG_AND_DROP_MATERIAL_CHANGED
void TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED(::UnityEngine::GameObject* sender, ::UnityEngine::Material* currentMaterial, ::UnityEngine::Material* newMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_DRAG_AND_DROP_MATERIAL_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(currentMaterial), ::il2cpp_utils::ExtractType(newMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, currentMaterial, newMaterial);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_STYLE_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_STYLE_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COLOR_GRADIENT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_COLOR_GRADIENT_PROPERTY_CHANGED(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_COLOR_GRADIENT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COLOR_GRADIENT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_CHANGED(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TMP_SETTINGS_CHANGED
void TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TMP_SETTINGS_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_RESOURCES_LOADED
void TMPro::TMPro_EventManager::ON_RESOURCES_LOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_RESOURCES_LOADED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_RESOURCES_LOADED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT(::Il2CppObject* Sender, ::TMPro::Compute_DT_EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COMPUTE_DT_EVENT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.Compute_DistanceTransform_EventTypes EventType
::TMPro::Compute_DistanceTransform_EventTypes& TMPro::Compute_DT_EventArgs::dyn_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DT_EventArgs::dyn_EventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventType"))->offset;
  return *reinterpret_cast<::TMPro::Compute_DistanceTransform_EventTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ProgressPercentage
float& TMPro::Compute_DT_EventArgs::dyn_ProgressPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DT_EventArgs::dyn_ProgressPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] Colors
::ArrayW<::UnityEngine::Color>& TMPro::Compute_DT_EventArgs::dyn_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Compute_DT_EventArgs::dyn_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMPro_ExtensionMethods
#include "TMPro/TMPro_ExtensionMethods.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ToIntArray
::ArrayW<int> TMPro::TMPro_ExtensionMethods::ToIntArray(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ArrayToString
::StringW TMPro::TMPro_ExtensionMethods::ArrayToString(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::ArrayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "ArrayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::StringW TMPro::TMPro_ExtensionMethods::IntToString(::ArrayW<int> unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.UintToString
::StringW TMPro::TMPro_ExtensionMethods::UintToString(::System::Collections::Generic::List_1<uint>* unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::UintToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "UintToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::StringW TMPro::TMPro_ExtensionMethods::IntToString(::ArrayW<int> unicodes, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicodes, start, length);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(::UnityEngine::Color32 a, ::UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(::UnityEngine::Color32 a, ::UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(::UnityEngine::Color a, ::UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(::UnityEngine::Color a, ::UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Multiply
::UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Multiply(::UnityEngine::Color32 c1, ::UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
::UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(::UnityEngine::Color32 c1, ::UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
::UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(::UnityEngine::Color32 c1, float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(tint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, tint);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.MinAlpha
::UnityEngine::Color TMPro::TMPro_ExtensionMethods::MinAlpha(::UnityEngine::Color c1, ::UnityEngine::Color c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::MinAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "MinAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2, accuracy);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(::UnityEngine::Quaternion q1, ::UnityEngine::Quaternion q2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q1), ::il2cpp_utils::ExtractType(q2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q1, q2, accuracy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Math
#include "TMPro/TMP_Math.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MAX
float TMPro::TMP_Math::_get_FLOAT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_FLOAT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MAX
void TMPro::TMP_Math::_set_FLOAT_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_FLOAT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MIN
float TMPro::TMP_Math::_get_FLOAT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_FLOAT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MIN
void TMPro::TMP_Math::_set_FLOAT_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_FLOAT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MAX
int TMPro::TMP_Math::_get_INT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_INT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MAX
void TMPro::TMP_Math::_set_INT_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_INT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MIN
int TMPro::TMP_Math::_get_INT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_INT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MIN
void TMPro::TMP_Math::_set_INT_MIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_INT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_UNSET
float TMPro::TMP_Math::_get_FLOAT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_FLOAT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_UNSET
void TMPro::TMP_Math::_set_FLOAT_UNSET(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_FLOAT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_UNSET
int TMPro::TMP_Math::_get_INT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_INT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_UNSET
void TMPro::TMP_Math::_set_INT_UNSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_INT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MAX_16BIT
::UnityEngine::Vector2 TMPro::TMP_Math::_get_MAX_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_MAX_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_Math", "MAX_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MAX_16BIT
void TMPro::TMP_Math::_set_MAX_16BIT(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_MAX_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MAX_16BIT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MIN_16BIT
::UnityEngine::Vector2 TMPro::TMP_Math::_get_MIN_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_get_MIN_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_Math", "MIN_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MIN_16BIT
void TMPro::TMP_Math::_set_MIN_16BIT(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::_set_MIN_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MIN_16BIT", value));
}
// Autogenerated method: TMPro.TMP_Math..cctor
void TMPro::TMP_Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Math.Approximately
bool TMPro::TMP_Math::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMP_Math.Mod
int TMPro::TMP_Math::Mod(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Math::Mod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", "Mod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags None
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags None
void TMPro::TMP_VertexDataUpdateFlags::_set_None(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_Vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Vertices"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
void TMPro::TMP_VertexDataUpdateFlags::_set_Vertices(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_Vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Vertices", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_Uv0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv0"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv0(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_Uv0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv0", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_Uv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv2"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv2(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_Uv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv2", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_Uv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv4"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv4(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_Uv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv4", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Colors32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_Colors32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Colors32"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
void TMPro::TMP_VertexDataUpdateFlags::_set_Colors32(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_Colors32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Colors32", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags All
::TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags All
void TMPro::TMP_VertexDataUpdateFlags::_set_All(::TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_VertexDataUpdateFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_VertexDataUpdateFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.VertexGradient
#include "TMPro/VertexGradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topLeft
::UnityEngine::Color& TMPro::VertexGradient::dyn_topLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VertexGradient::dyn_topLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topRight
::UnityEngine::Color& TMPro::VertexGradient::dyn_topRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VertexGradient::dyn_topRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomLeft
::UnityEngine::Color& TMPro::VertexGradient::dyn_bottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VertexGradient::dyn_bottomLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomRight
::UnityEngine::Color& TMPro::VertexGradient::dyn_bottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VertexGradient::dyn_bottomRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.VertexGradient..ctor
TMPro::VertexGradient::VertexGradient(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::VertexGradient::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.VertexGradient..ctor
// ABORTED elsewhere.  TMPro::VertexGradient::VertexGradient(::UnityEngine::Color color0, ::UnityEngine::Color color1, ::UnityEngine::Color color2, ::UnityEngine::Color color3)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_LinkInfo
#include "TMPro/TMP_LinkInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Text textComponent
::TMPro::TMP_Text*& TMPro::TMP_LinkInfo::dyn_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_textComponent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
int& TMPro::TMP_LinkInfo::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_hashCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkIdFirstCharacterIndex
int& TMPro::TMP_LinkInfo::dyn_linkIdFirstCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_linkIdFirstCharacterIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkIdFirstCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkIdLength
int& TMPro::TMP_LinkInfo::dyn_linkIdLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_linkIdLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkIdLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkTextfirstCharacterIndex
int& TMPro::TMP_LinkInfo::dyn_linkTextfirstCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_linkTextfirstCharacterIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkTextfirstCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkTextLength
int& TMPro::TMP_LinkInfo::dyn_linkTextLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_linkTextLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkTextLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char[] linkID
::ArrayW<::Il2CppChar>& TMPro::TMP_LinkInfo::dyn_linkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::dyn_linkID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkID"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_LinkInfo.SetLinkID
void TMPro::TMP_LinkInfo::SetLinkID(::ArrayW<::Il2CppChar> text, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::SetLinkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLinkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, startIndex, length);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkText
::StringW TMPro::TMP_LinkInfo::GetLinkText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::GetLinkText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLinkText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkID
::StringW TMPro::TMP_LinkInfo::GetLinkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_LinkInfo::GetLinkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLinkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_WordInfo
#include "TMPro/TMP_WordInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Text textComponent
::TMPro::TMP_Text*& TMPro::TMP_WordInfo::dyn_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_WordInfo::dyn_textComponent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 firstCharacterIndex
int& TMPro::TMP_WordInfo::dyn_firstCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_WordInfo::dyn_firstCharacterIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastCharacterIndex
int& TMPro::TMP_WordInfo::dyn_lastCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_WordInfo::dyn_lastCharacterIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 characterCount
int& TMPro::TMP_WordInfo::dyn_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_WordInfo::dyn_characterCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_WordInfo.GetWord
::StringW TMPro::TMP_WordInfo::GetWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_WordInfo::GetWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Extents
#include "TMPro/Extents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static TMPro.Extents zero
::TMPro::Extents TMPro::Extents::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::Extents>("TMPro", "Extents", "zero"));
}
// Autogenerated static field setter
// Set static field: static TMPro.Extents zero
void TMPro::Extents::_set_zero(::TMPro::Extents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Extents", "zero", value));
}
// Autogenerated static field getter
// Get static field: static TMPro.Extents uninitialized
::TMPro::Extents TMPro::Extents::_get_uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::_get_uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::Extents>("TMPro", "Extents", "uninitialized"));
}
// Autogenerated static field setter
// Set static field: static TMPro.Extents uninitialized
void TMPro::Extents::_set_uninitialized(::TMPro::Extents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::_set_uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Extents", "uninitialized", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 min
::UnityEngine::Vector2& TMPro::Extents::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::dyn_min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 max
::UnityEngine::Vector2& TMPro::Extents::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::dyn_max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.Extents..ctor
// ABORTED elsewhere.  TMPro::Extents::Extents(::UnityEngine::Vector2 min, ::UnityEngine::Vector2 max)
// Autogenerated method: TMPro.Extents..cctor
void TMPro::Extents::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "Extents", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.Extents.ToString
::StringW TMPro::Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Extents::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Mesh_Extents
#include "TMPro/Mesh_Extents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 min
::UnityEngine::Vector2& TMPro::Mesh_Extents::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::dyn_min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 max
::UnityEngine::Vector2& TMPro::Mesh_Extents::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::dyn_max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.Mesh_Extents..ctor
// ABORTED elsewhere.  TMPro::Mesh_Extents::Mesh_Extents(::UnityEngine::Vector2 min, ::UnityEngine::Vector2 max)
// Autogenerated method: TMPro.Mesh_Extents.ToString
::StringW TMPro::Mesh_Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::Mesh_Extents::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
void TMPro::TextMeshPro::_set_k_GenerateTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SetArraySizesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SetArraySizesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SetArraySizesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
void TMPro::TextMeshPro::_set_k_SetArraySizesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SetArraySizesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SetArraySizesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ParseMarkupTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ParseMarkupTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ParseMarkupTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
void TMPro::TextMeshPro::_set_k_ParseMarkupTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ParseMarkupTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ParseMarkupTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_CharacterLookupMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_CharacterLookupMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_CharacterLookupMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
void TMPro::TextMeshPro::_set_k_CharacterLookupMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_CharacterLookupMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_CharacterLookupMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleGPOSFeaturesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleGPOSFeaturesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleGPOSFeaturesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
void TMPro::TextMeshPro::_set_k_HandleGPOSFeaturesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleGPOSFeaturesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleGPOSFeaturesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_CalculateVerticesPositionMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_CalculateVerticesPositionMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_CalculateVerticesPositionMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
void TMPro::TextMeshPro::_set_k_CalculateVerticesPositionMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_CalculateVerticesPositionMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_CalculateVerticesPositionMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ComputeTextMetricsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ComputeTextMetricsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ComputeTextMetricsMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
void TMPro::TextMeshPro::_set_k_ComputeTextMetricsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ComputeTextMetricsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ComputeTextMetricsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleVisibleCharacterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleVisibleCharacterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleVisibleCharacterMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
void TMPro::TextMeshPro::_set_k_HandleVisibleCharacterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleVisibleCharacterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleVisibleCharacterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleWhiteSpacesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleWhiteSpacesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleWhiteSpacesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
void TMPro::TextMeshPro::_set_k_HandleWhiteSpacesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleWhiteSpacesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleWhiteSpacesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleHorizontalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleHorizontalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleHorizontalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
void TMPro::TextMeshPro::_set_k_HandleHorizontalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleHorizontalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleHorizontalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleVerticalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleVerticalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleVerticalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
void TMPro::TextMeshPro::_set_k_HandleVerticalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleVerticalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleVerticalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SaveGlyphVertexDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SaveGlyphVertexDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SaveGlyphVertexDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
void TMPro::TextMeshPro::_set_k_SaveGlyphVertexDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SaveGlyphVertexDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SaveGlyphVertexDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_ComputeCharacterAdvanceMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_ComputeCharacterAdvanceMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_ComputeCharacterAdvanceMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
void TMPro::TextMeshPro::_set_k_ComputeCharacterAdvanceMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_ComputeCharacterAdvanceMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_ComputeCharacterAdvanceMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleCarriageReturnMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleCarriageReturnMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleCarriageReturnMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
void TMPro::TextMeshPro::_set_k_HandleCarriageReturnMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleCarriageReturnMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleCarriageReturnMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_HandleLineTerminationMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_HandleLineTerminationMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_HandleLineTerminationMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
void TMPro::TextMeshPro::_set_k_HandleLineTerminationMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_HandleLineTerminationMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_HandleLineTerminationMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SavePageInfoMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SavePageInfoMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SavePageInfoMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
void TMPro::TextMeshPro::_set_k_SavePageInfoMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SavePageInfoMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SavePageInfoMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_SaveProcessingStatesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_SaveProcessingStatesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_SaveProcessingStatesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
void TMPro::TextMeshPro::_set_k_SaveProcessingStatesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_SaveProcessingStatesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_SaveProcessingStatesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_get_k_GenerateTextPhaseIIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
void TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::_set_k_GenerateTextPhaseIIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshPro", "k_GenerateTextPhaseIIIMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasFontAssetChanged
bool& TMPro::TextMeshPro::dyn_m_hasFontAssetChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_hasFontAssetChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasFontAssetChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_previousLossyScaleY
float& TMPro::TextMeshPro::dyn_m_previousLossyScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_previousLossyScaleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousLossyScaleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
::UnityEngine::Renderer*& TMPro::TextMeshPro::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter m_meshFilter
::UnityEngine::MeshFilter*& TMPro::TextMeshPro::dyn_m_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_CanvasRenderer
::UnityEngine::CanvasRenderer*& TMPro::TextMeshPro::dyn_m_CanvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_CanvasRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isFirstAllocation
bool& TMPro::TextMeshPro::dyn_m_isFirstAllocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_isFirstAllocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFirstAllocation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_characters
int& TMPro::TextMeshPro::dyn_m_max_characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_max_characters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_characters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_numberOfLines
int& TMPro::TextMeshPro::dyn_m_max_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_max_numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SubMesh[] m_subTextObjects
::ArrayW<::TMPro::TMP_SubMesh*>& TMPro::TextMeshPro::dyn_m_subTextObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_subTextObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subTextObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_SubMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.MaskingTypes m_maskType
::TMPro::MaskingTypes& TMPro::TextMeshPro::dyn_m_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_maskType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maskType"))->offset;
  return *reinterpret_cast<::TMPro::MaskingTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_EnvMapMatrix
::UnityEngine::Matrix4x4& TMPro::TextMeshPro::dyn_m_EnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_EnvMapMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnvMapMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RectTransformCorners
::ArrayW<::UnityEngine::Vector3>& TMPro::TextMeshPro::dyn_m_RectTransformCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_RectTransformCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransformCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TextMeshPro::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingLayer
int& TMPro::TextMeshPro::dyn__SortingLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingLayerID
int& TMPro::TextMeshPro::dyn__SortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingLayerID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingLayerID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SortingOrder
int& TMPro::TextMeshPro::dyn__SortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn__SortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SortingOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TMPro.TMP_TextInfo> OnPreRenderText
::System::Action_1<::TMPro::TMP_TextInfo*>*& TMPro::TextMeshPro::dyn_OnPreRenderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_OnPreRenderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRenderText"))->offset;
  return *reinterpret_cast<::System::Action_1<::TMPro::TMP_TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentAutoSizeMode
bool& TMPro::TextMeshPro::dyn_m_currentAutoSizeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::dyn_m_currentAutoSizeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentAutoSizeMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingLayerID
int TMPro::TextMeshPro::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingLayerID
void TMPro::TextMeshPro::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingOrder
int TMPro::TextMeshPro::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingOrder
void TMPro::TextMeshPro::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_textContainer
::TMPro::TextContainer* TMPro::TextMeshPro::get_textContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_textContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_renderer
::UnityEngine::Renderer* TMPro::TextMeshPro::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_meshFilter
::UnityEngine::MeshFilter* TMPro::TextMeshPro::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_maskType
::TMPro::MaskingTypes TMPro::TextMeshPro::get_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::MaskingTypes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_maskType
void TMPro::TextMeshPro::set_maskType(::TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateEnvMapMatrix
void TMPro::TextMeshPro::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes maskType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maskType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maskType);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(::UnityEngine::Vector4 coords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(::UnityEngine::Vector4 coords, float softX, float softY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords), ::il2cpp_utils::ExtractType(softX), ::il2cpp_utils::ExtractType(softY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coords, softX, softY);
}
// Autogenerated method: TMPro.TextMeshPro.EnableMasking
void TMPro::TextMeshPro::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.DisableMasking
void TMPro::TextMeshPro::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMask
void TMPro::TextMeshPro::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CreateMaterialInstance
void TMPro::TextMeshPro::CreateMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetPerspectiveCorrection
void TMPro::TextMeshPro::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnPreRenderObject
void TMPro::TextMeshPro::OnPreRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnPreRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GenerateTextMesh
void TMPro::TextMeshPro::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMeshFilters
void TMPro::TextMeshPro::SetMeshFilters(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMeshFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubTextObjectRenderers
void TMPro::TextMeshPro::SetActiveSubTextObjectRenderers(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetActiveSubTextObjectRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubTextObjectRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSubMeshSortingLayerID
void TMPro::TextMeshPro::UpdateSubMeshSortingLayerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSubMeshSortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubMeshSortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSubMeshSortingOrder
void TMPro::TextMeshPro::UpdateSubMeshSortingOrder(int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSubMeshSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubMeshSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSDFScale
void TMPro::TextMeshPro::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes type, ::UnityEngine::Vector4 maskCoords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, maskCoords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(::TMPro::MaskingTypes type, ::UnityEngine::Vector4 maskCoords, float softnessX, float softnessY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords), ::il2cpp_utils::ExtractType(softnessX), ::il2cpp_utils::ExtractType(softnessY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, maskCoords, softnessX, softnessY);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateFontAsset
void TMPro::TextMeshPro::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputHorizontal
void TMPro::TextMeshPro::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputVertical
void TMPro::TextMeshPro::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_autoSizeTextContainer
bool TMPro::TextMeshPro::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_autoSizeTextContainer
void TMPro::TextMeshPro::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_transform
::UnityEngine::Transform* TMPro::TextMeshPro::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_mesh
::UnityEngine::Mesh* TMPro::TextMeshPro::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.add_OnPreRenderText
void TMPro::TextMeshPro::add_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::add_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.remove_OnPreRenderText
void TMPro::TextMeshPro::remove_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::remove_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro..cctor
void TMPro::TextMeshPro::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextMeshPro", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Awake
void TMPro::TextMeshPro::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnEnable
void TMPro::TextMeshPro::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDisable
void TMPro::TextMeshPro::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDestroy
void TMPro::TextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.LoadFontAsset
void TMPro::TextMeshPro::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterial
::UnityEngine::Material* TMPro::TextMeshPro::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshPro::GetMaterials(::ArrayW<::UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterial
void TMPro::TextMeshPro::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshPro::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterials
void TMPro::TextMeshPro::SetSharedMaterials(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineThickness
void TMPro::TextMeshPro::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshPro.SetFaceColor
void TMPro::TextMeshPro::SetFaceColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineColor
void TMPro::TextMeshPro::SetOutlineColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetShaderDepth
void TMPro::TextMeshPro::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetCulling
void TMPro::TextMeshPro::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetArraySizes
int TMPro::TextMeshPro::SetArraySizes(::ArrayW<::TMPro::TMP_Text::UnicodeChar> unicodeChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodeChars)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unicodeChars);
}
// Autogenerated method: TMPro.TextMeshPro.ComputeMarginSize
void TMPro::TextMeshPro::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDidApplyAnimationProperties
void TMPro::TextMeshPro::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnTransformParentChanged
void TMPro::TextMeshPro::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnRectTransformDimensionsChange
void TMPro::TextMeshPro::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.InternalUpdate
void TMPro::TextMeshPro::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextContainerLocalCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextMeshPro::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubMeshes
void TMPro::TextMeshPro::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.DestroySubMeshObjects
void TMPro::TextMeshPro::DestroySubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::DestroySubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetCompoundBounds
::UnityEngine::Bounds TMPro::TextMeshPro::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetVerticesDirty
void TMPro::TextMeshPro::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetLayoutDirty
void TMPro::TextMeshPro::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaterialDirty
void TMPro::TextMeshPro::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetAllDirty
void TMPro::TextMeshPro::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Rebuild
void TMPro::TextMeshPro::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMaterial
void TMPro::TextMeshPro::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMeshPadding
void TMPro::TextMeshPro::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate(bool ignoreActiveState, bool forceTextReparsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreActiveState), ::il2cpp_utils::ExtractType(forceTextReparsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreActiveState, forceTextReparsing);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextInfo
::TMPro::TMP_TextInfo* TMPro::TextMeshPro::GetTextInfo(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshPro.ClearMesh
void TMPro::TextMeshPro::ClearMesh(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateGeometry
void TMPro::TextMeshPro::UpdateGeometry(::UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData(::TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89
#include "TMPro/TextMeshProUGUI_-DelayedGraphicRebuild-d__89.hpp"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90
#include "TMPro/TextMeshProUGUI_-DelayedMaterialRebuild-d__90.hpp"
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SetArraySizesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SetArraySizesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SetArraySizesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SetArraySizesMarker
void TMPro::TextMeshProUGUI::_set_k_SetArraySizesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SetArraySizesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SetArraySizesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ParseMarkupTextMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ParseMarkupTextMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ParseMarkupTextMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ParseMarkupTextMarker
void TMPro::TextMeshProUGUI::_set_k_ParseMarkupTextMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ParseMarkupTextMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ParseMarkupTextMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_CharacterLookupMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_CharacterLookupMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_CharacterLookupMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CharacterLookupMarker
void TMPro::TextMeshProUGUI::_set_k_CharacterLookupMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_CharacterLookupMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_CharacterLookupMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleGPOSFeaturesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleGPOSFeaturesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleGPOSFeaturesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleGPOSFeaturesMarker
void TMPro::TextMeshProUGUI::_set_k_HandleGPOSFeaturesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleGPOSFeaturesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleGPOSFeaturesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_CalculateVerticesPositionMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_CalculateVerticesPositionMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_CalculateVerticesPositionMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_CalculateVerticesPositionMarker
void TMPro::TextMeshProUGUI::_set_k_CalculateVerticesPositionMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_CalculateVerticesPositionMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_CalculateVerticesPositionMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ComputeTextMetricsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ComputeTextMetricsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ComputeTextMetricsMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeTextMetricsMarker
void TMPro::TextMeshProUGUI::_set_k_ComputeTextMetricsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ComputeTextMetricsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ComputeTextMetricsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleVisibleCharacterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleVisibleCharacterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleVisibleCharacterMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVisibleCharacterMarker
void TMPro::TextMeshProUGUI::_set_k_HandleVisibleCharacterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleVisibleCharacterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleVisibleCharacterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleWhiteSpacesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleWhiteSpacesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleWhiteSpacesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleWhiteSpacesMarker
void TMPro::TextMeshProUGUI::_set_k_HandleWhiteSpacesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleWhiteSpacesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleWhiteSpacesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleHorizontalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleHorizontalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleHorizontalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleHorizontalLineBreakingMarker
void TMPro::TextMeshProUGUI::_set_k_HandleHorizontalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleHorizontalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleHorizontalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleVerticalLineBreakingMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleVerticalLineBreakingMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleVerticalLineBreakingMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleVerticalLineBreakingMarker
void TMPro::TextMeshProUGUI::_set_k_HandleVerticalLineBreakingMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleVerticalLineBreakingMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleVerticalLineBreakingMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SaveGlyphVertexDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SaveGlyphVertexDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SaveGlyphVertexDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveGlyphVertexDataMarker
void TMPro::TextMeshProUGUI::_set_k_SaveGlyphVertexDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SaveGlyphVertexDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SaveGlyphVertexDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_ComputeCharacterAdvanceMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_ComputeCharacterAdvanceMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_ComputeCharacterAdvanceMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ComputeCharacterAdvanceMarker
void TMPro::TextMeshProUGUI::_set_k_ComputeCharacterAdvanceMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_ComputeCharacterAdvanceMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_ComputeCharacterAdvanceMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleCarriageReturnMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleCarriageReturnMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleCarriageReturnMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleCarriageReturnMarker
void TMPro::TextMeshProUGUI::_set_k_HandleCarriageReturnMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleCarriageReturnMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleCarriageReturnMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_HandleLineTerminationMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_HandleLineTerminationMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_HandleLineTerminationMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_HandleLineTerminationMarker
void TMPro::TextMeshProUGUI::_set_k_HandleLineTerminationMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_HandleLineTerminationMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_HandleLineTerminationMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SavePageInfoMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SavePageInfoMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SavePageInfoMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SavePageInfoMarker
void TMPro::TextMeshProUGUI::_set_k_SavePageInfoMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SavePageInfoMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SavePageInfoMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_SaveProcessingStatesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_SaveProcessingStatesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_SaveProcessingStatesMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_SaveProcessingStatesMarker
void TMPro::TextMeshProUGUI::_set_k_SaveProcessingStatesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_SaveProcessingStatesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_SaveProcessingStatesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
::Unity::Profiling::ProfilerMarker TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIIMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_get_k_GenerateTextPhaseIIIMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIIMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_GenerateTextPhaseIIIMarker
void TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIIMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::_set_k_GenerateTextPhaseIIIMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextMeshProUGUI", "k_GenerateTextPhaseIIIMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasFontAssetChanged
bool& TMPro::TextMeshProUGUI::dyn_m_hasFontAssetChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_hasFontAssetChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasFontAssetChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SubMeshUI[] m_subTextObjects
::ArrayW<::TMPro::TMP_SubMeshUI*>& TMPro::TextMeshProUGUI::dyn_m_subTextObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_subTextObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subTextObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_SubMeshUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_previousLossyScaleY
float& TMPro::TextMeshProUGUI::dyn_m_previousLossyScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_previousLossyScaleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousLossyScaleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RectTransformCorners
::ArrayW<::UnityEngine::Vector3>& TMPro::TextMeshProUGUI::dyn_m_RectTransformCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_RectTransformCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransformCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_canvasRenderer
::UnityEngine::CanvasRenderer*& TMPro::TextMeshProUGUI::dyn_m_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_canvasRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvasRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_canvas
::UnityEngine::Canvas*& TMPro::TextMeshProUGUI::dyn_m_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CanvasScaleFactor
float& TMPro::TextMeshProUGUI::dyn_m_CanvasScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_CanvasScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isFirstAllocation
bool& TMPro::TextMeshProUGUI::dyn_m_isFirstAllocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isFirstAllocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFirstAllocation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_max_characters
int& TMPro::TextMeshProUGUI::dyn_m_max_characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_max_characters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_max_characters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_baseMaterial
::UnityEngine::Material*& TMPro::TextMeshProUGUI::dyn_m_baseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_baseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baseMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isScrollRegionSet
bool& TMPro::TextMeshProUGUI::dyn_m_isScrollRegionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isScrollRegionSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isScrollRegionSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_maskOffset
::UnityEngine::Vector4& TMPro::TextMeshProUGUI::dyn_m_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_maskOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maskOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_EnvMapMatrix
::UnityEngine::Matrix4x4& TMPro::TextMeshProUGUI::dyn_m_EnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_EnvMapMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnvMapMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TextMeshProUGUI::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRebuildingLayout
bool& TMPro::TextMeshProUGUI::dyn_m_isRebuildingLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_isRebuildingLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRebuildingLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DelayedGraphicRebuild
::UnityEngine::Coroutine*& TMPro::TextMeshProUGUI::dyn_m_DelayedGraphicRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_DelayedGraphicRebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedGraphicRebuild"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DelayedMaterialRebuild
::UnityEngine::Coroutine*& TMPro::TextMeshProUGUI::dyn_m_DelayedMaterialRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_DelayedMaterialRebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedMaterialRebuild"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_ClipRect
::UnityEngine::Rect& TMPro::TextMeshProUGUI::dyn_m_ClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_ClipRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ValidRect
bool& TMPro::TextMeshProUGUI::dyn_m_ValidRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_m_ValidRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidRect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TMPro.TMP_TextInfo> OnPreRenderText
::System::Action_1<::TMPro::TMP_TextInfo*>*& TMPro::TextMeshProUGUI::dyn_OnPreRenderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::dyn_OnPreRenderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRenderText"))->offset;
  return *reinterpret_cast<::System::Action_1<::TMPro::TMP_TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_maskOffset
::UnityEngine::Vector4 TMPro::TextMeshProUGUI::get_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_maskOffset
void TMPro::TextMeshProUGUI::set_maskOffset(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::set_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvas
::UnityEngine::Canvas* TMPro::TextMeshProUGUI::GetCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateEnvMapMatrix
void TMPro::TextMeshProUGUI::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.EnableMasking
void TMPro::TextMeshProUGUI::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DisableMasking
void TMPro::TextMeshProUGUI::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMask
void TMPro::TextMeshProUGUI::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetPerspectiveCorrection
void TMPro::TextMeshProUGUI::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMeshArrays
void TMPro::TextMeshProUGUI::SetMeshArrays(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnPreRenderCanvas
void TMPro::TextMeshProUGUI::OnPreRenderCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnPreRenderCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GenerateTextMesh
void TMPro::TextMeshProUGUI::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSDFScale
void TMPro::TextMeshProUGUI::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputHorizontal
void TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputVertical
void TMPro::TextMeshProUGUI::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DelayedGraphicRebuild
::System::Collections::IEnumerator* TMPro::TextMeshProUGUI::DelayedGraphicRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DelayedGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DelayedMaterialRebuild
::System::Collections::IEnumerator* TMPro::TextMeshProUGUI::DelayedMaterialRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DelayedMaterialRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedMaterialRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSubObjectPivot
void TMPro::TextMeshProUGUI::UpdateSubObjectPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateSubObjectPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubObjectPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateFontAsset
void TMPro::TextMeshProUGUI::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_materialForRendering
::UnityEngine::Material* TMPro::TextMeshProUGUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_autoSizeTextContainer
bool TMPro::TextMeshProUGUI::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_autoSizeTextContainer
void TMPro::TextMeshProUGUI::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_mesh
::UnityEngine::Mesh* TMPro::TextMeshProUGUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_canvasRenderer
::UnityEngine::CanvasRenderer* TMPro::TextMeshProUGUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.add_OnPreRenderText
void TMPro::TextMeshProUGUI::add_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::add_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.remove_OnPreRenderText
void TMPro::TextMeshProUGUI::remove_OnPreRenderText(::System::Action_1<::TMPro::TMP_TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::remove_OnPreRenderText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPreRenderText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI..cctor
void TMPro::TextMeshProUGUI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextMeshProUGUI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Awake
void TMPro::TextMeshProUGUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnEnable
void TMPro::TextMeshProUGUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDisable
void TMPro::TextMeshProUGUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDestroy
void TMPro::TextMeshProUGUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.LoadFontAsset
void TMPro::TextMeshProUGUI::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterial
::UnityEngine::Material* TMPro::TextMeshProUGUI::GetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshProUGUI::GetMaterials(::ArrayW<::UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterial
void TMPro::TextMeshProUGUI::SetSharedMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetSharedMaterials
::ArrayW<::UnityEngine::Material*> TMPro::TextMeshProUGUI::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterials
void TMPro::TextMeshProUGUI::SetSharedMaterials(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineThickness
void TMPro::TextMeshProUGUI::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetFaceColor
void TMPro::TextMeshProUGUI::SetFaceColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineColor
void TMPro::TextMeshProUGUI::SetOutlineColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetShaderDepth
void TMPro::TextMeshProUGUI::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetCulling
void TMPro::TextMeshProUGUI::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetArraySizes
int TMPro::TextMeshProUGUI::SetArraySizes(::ArrayW<::TMPro::TMP_Text::UnicodeChar> unicodeChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodeChars)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unicodeChars);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ComputeMarginSize
void TMPro::TextMeshProUGUI::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDidApplyAnimationProperties
void TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnCanvasHierarchyChanged
void TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnTransformParentChanged
void TMPro::TextMeshProUGUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnRectTransformDimensionsChange
void TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalUpdate
void TMPro::TextMeshProUGUI::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextContainerLocalCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextMeshProUGUI::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetActiveSubMeshes
void TMPro::TextMeshProUGUI::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DestroySubMeshObjects
void TMPro::TextMeshProUGUI::DestroySubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::DestroySubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCompoundBounds
::UnityEngine::Bounds TMPro::TextMeshProUGUI::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvasSpaceClippingRect
::UnityEngine::Rect TMPro::TextMeshProUGUI::GetCanvasSpaceClippingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetCanvasSpaceClippingRect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasSpaceClippingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetVerticesDirty
void TMPro::TextMeshProUGUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetLayoutDirty
void TMPro::TextMeshProUGUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMaterialDirty
void TMPro::TextMeshProUGUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetAllDirty
void TMPro::TextMeshProUGUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Rebuild
void TMPro::TextMeshProUGUI::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetModifiedMaterial
::UnityEngine::Material* TMPro::TextMeshProUGUI::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMaterial
void TMPro::TextMeshProUGUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateClipping
void TMPro::TextMeshProUGUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Cull
void TMPro::TextMeshProUGUI::Cull(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateCulling
void TMPro::TextMeshProUGUI::UpdateCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMeshPadding
void TMPro::TextMeshProUGUI::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeColor
void TMPro::TextMeshProUGUI::InternalCrossFadeColor(::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeAlpha
void TMPro::TextMeshProUGUI::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate(bool ignoreActiveState, bool forceTextReparsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreActiveState), ::il2cpp_utils::ExtractType(forceTextReparsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreActiveState, forceTextReparsing);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextInfo
::TMPro::TMP_TextInfo* TMPro::TextMeshProUGUI::GetTextInfo(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ClearMesh
void TMPro::TextMeshProUGUI::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateGeometry
void TMPro::TextMeshProUGUI::UpdateGeometry(::UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData(::TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89
#include "TMPro/TextMeshProUGUI_-DelayedGraphicRebuild-d__89.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI <>4__this
::TMPro::TextMeshProUGUI*& TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.IDisposable.Dispose
void TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.MoveNext
bool TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedGraphicRebuild>d__89.System.Collections.IEnumerator.Reset
void TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedGraphicRebuild$d__89::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90
#include "TMPro/TextMeshProUGUI_-DelayedMaterialRebuild-d__90.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI <>4__this
::TMPro::TextMeshProUGUI*& TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.IDisposable.Dispose
void TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.MoveNext
bool TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI/TMPro.<DelayedMaterialRebuild>d__90.System.Collections.IEnumerator.Reset
void TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextMeshProUGUI::$DelayedMaterialRebuild$d__90::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainerAnchors
#include "TMPro/TextContainerAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopLeft
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopLeft
void TMPro::TextContainerAnchors::_set_TopLeft(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Top
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Top
void TMPro::TextContainerAnchors::_set_Top(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopRight
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopRight
void TMPro::TextContainerAnchors::_set_TopRight(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Left
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Left
void TMPro::TextContainerAnchors::_set_Left(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Middle
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Middle
void TMPro::TextContainerAnchors::_set_Middle(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Right
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Right
void TMPro::TextContainerAnchors::_set_Right(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomLeft
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomLeft
void TMPro::TextContainerAnchors::_set_BottomLeft(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Bottom
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Bottom
void TMPro::TextContainerAnchors::_set_Bottom(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomRight
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomRight
void TMPro::TextContainerAnchors::_set_BottomRight(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Custom
::TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Custom
void TMPro::TextContainerAnchors::_set_Custom(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextContainerAnchors::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainerAnchors::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_defaultSize
::UnityEngine::Vector2 TMPro::TextContainer::_get_k_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::_get_k_defaultSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TextContainer", "k_defaultSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_defaultSize
void TMPro::TextContainer::_set_k_defaultSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::_set_k_defaultSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainer", "k_defaultSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasChanged
bool& TMPro::TextContainer::dyn_m_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_hasChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_pivot
::UnityEngine::Vector2& TMPro::TextContainer::dyn_m_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pivot"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextContainerAnchors m_anchorPosition
::TMPro::TextContainerAnchors& TMPro::TextContainer::dyn_m_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_anchorPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_anchorPosition"))->offset;
  return *reinterpret_cast<::TMPro::TextContainerAnchors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_rect
::UnityEngine::Rect& TMPro::TextContainer::dyn_m_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultWidth
bool& TMPro::TextContainer::dyn_m_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isDefaultWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultHeight
bool& TMPro::TextContainer::dyn_m_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isDefaultHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isAutoFitting
bool& TMPro::TextContainer::dyn_m_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_isAutoFitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isAutoFitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_corners
::ArrayW<::UnityEngine::Vector3>& TMPro::TextContainer::dyn_m_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_worldCorners
::ArrayW<::UnityEngine::Vector3>& TMPro::TextContainer::dyn_m_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_worldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_worldCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_margins
::UnityEngine::Vector4& TMPro::TextContainer::dyn_m_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_margins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_margins"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
::UnityEngine::RectTransform*& TMPro::TextContainer::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro m_textMeshPro
::TMPro::TextMeshPro*& TMPro::TextContainer::dyn_m_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::dyn_m_textMeshPro");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textMeshPro"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TextContainer.get_hasChanged
bool TMPro::TextContainer::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_hasChanged
void TMPro::TextContainer::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_pivot
::UnityEngine::Vector2 TMPro::TextContainer::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_pivot
void TMPro::TextContainer::set_pivot(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_anchorPosition
::TMPro::TextContainerAnchors TMPro::TextContainer::get_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainerAnchors, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_anchorPosition
void TMPro::TextContainer::set_anchorPosition(::TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rect
::UnityEngine::Rect TMPro::TextContainer::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_rect
void TMPro::TextContainer::set_rect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_size
::UnityEngine::Vector2 TMPro::TextContainer::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_size
void TMPro::TextContainer::set_size(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_width
float TMPro::TextContainer::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_width
void TMPro::TextContainer::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_height
float TMPro::TextContainer::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_height
void TMPro::TextContainer::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultWidth
bool TMPro::TextContainer::get_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isDefaultWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultHeight
bool TMPro::TextContainer::get_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isDefaultHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isAutoFitting
bool TMPro::TextContainer::get_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_isAutoFitting
void TMPro::TextContainer::set_isAutoFitting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_corners
::ArrayW<::UnityEngine::Vector3> TMPro::TextContainer::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_worldCorners
::ArrayW<::UnityEngine::Vector3> TMPro::TextContainer::get_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_worldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_margins
::UnityEngine::Vector4 TMPro::TextContainer::get_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_margins
void TMPro::TextContainer::set_margins(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::set_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rectTransform
::UnityEngine::RectTransform* TMPro::TextContainer::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_textMeshPro
::TMPro::TextMeshPro* TMPro::TextContainer::get_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::get_textMeshPro");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textMeshPro", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextMeshPro*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnContainerChanged
void TMPro::TextContainer::OnContainerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnContainerChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContainerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.SetRect
void TMPro::TextContainer::SetRect(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::SetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextContainer.UpdateCorners
void TMPro::TextContainer::UpdateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::UpdateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.GetPivot
::UnityEngine::Vector2 TMPro::TextContainer::GetPivot(::TMPro::TextContainerAnchors anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::GetPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, anchor);
}
// Autogenerated method: TMPro.TextContainer.GetAnchorPosition
::TMPro::TextContainerAnchors TMPro::TextContainer::GetAnchorPosition(::UnityEngine::Vector2 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::GetAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextContainerAnchors, false>(this, ___internal__method, pivot);
}
// Autogenerated method: TMPro.TextContainer..cctor
void TMPro::TextContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.Awake
void TMPro::TextContainer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnEnable
void TMPro::TextContainer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnDisable
void TMPro::TextContainer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnRectTransformDimensionsChange
void TMPro::TextContainer::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TextContainer::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.SpriteAssetImportFormats
#include "TMPro/SpriteAssetUtilities/SpriteAssetImportFormats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None(::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePackerJsonArray
::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePackerJsonArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePackerJsonArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePackerJsonArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePackerJsonArray
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePackerJsonArray(::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePackerJsonArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePackerJsonArray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteFrame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteSize.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Frame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_Frame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_Meta.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteDataObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single h
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteFrame.ToString
::StringW TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single h
float& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteSize.ToString
::StringW TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteSize::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_JsonArray_SpriteDataObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Frame> frames
::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Frame>*& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Frame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.SpriteAssetUtilities.TexturePacker_JsonArray/TMPro.SpriteAssetUtilities.Meta meta
::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Meta& TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::SpriteDataObject::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::TMPro::SpriteAssetUtilities::TexturePacker_JsonArray::Meta*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes
#include "UnityEngine/XR/Interaction/Toolkit/XRController_InteractionTypes.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_InputAxisNames
::ArrayW<::StringW> UnityEngine::XR::Interaction::Toolkit::XRController::_get_s_InputAxisNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::_get_s_InputAxisNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("UnityEngine.XR.Interaction.Toolkit", "XRController", "s_InputAxisNames"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_InputAxisNames
void UnityEngine::XR::Interaction::Toolkit::XRController::_set_s_InputAxisNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::_set_s_InputAxisNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController", "s_InputAxisNames", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType m_UpdateTrackingType
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UpdateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UpdateTrackingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateTrackingType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputTracking
bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputActions
bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_EnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_ControllerNode
::UnityEngine::XR::XRNode& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_SelectUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_ActivateUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes m_UIPressUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AxisToPressThreshold
float& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisToPressThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelPrefab
::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelTransform
::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AnimateModel
bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AnimateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AnimateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimateModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelSelectTransition
::StringW& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelDeSelectTransition
::StringW& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelDeSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelDeSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_SelectInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_ActivateInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionState m_UIPressInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice m_InputDevice
::UnityEngine::XR::InputDevice& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ModelGO
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ModelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerModel
bool& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_HideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_HideControllerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_updateTrackingType
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::get_updateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_updateTrackingType
void UnityEngine::XR::Interaction::Toolkit::XRController::set_updateTrackingType(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_enableInputTracking
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_enableInputTracking
void UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_enableInputActions
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_enableInputActions
void UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputActions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_controllerNode
::UnityEngine::XR::XRNode UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_controllerNode
void UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_selectUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_activateUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressUsage
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_uiPressUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_axisToPressThreshold
float UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_axisToPressThreshold
void UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelPrefab
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRController::get_modelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelPrefab
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelPrefab(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRController::get_modelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_animateModel
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_animateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_animateModel
void UnityEngine::XR::Interaction::Toolkit::XRController::set_animateModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRController::get_modelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_modelDeSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRController::get_modelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_modelDeSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRController::set_modelDeSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressInteractionState
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_inputDevice
::UnityEngine::XR::InputDevice UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDevice, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_hideControllerModel
bool UnityEngine::XR::Interaction::Toolkit::XRController::get_hideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_hideControllerModel
void UnityEngine::XR::Interaction::Toolkit::XRController::set_hideControllerModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.Awake
void UnityEngine::XR::Interaction::Toolkit::XRController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.PerformSetup
void UnityEngine::XR::Interaction::Toolkit::XRController::PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::PerformSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SetupModel
void UnityEngine::XR::Interaction::Toolkit::XRController::SetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SetupModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.ShouldUpdateTrackingInput
bool UnityEngine::XR::Interaction::Toolkit::XRController::ShouldUpdateTrackingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::ShouldUpdateTrackingInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldUpdateTrackingInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.Update
void UnityEngine::XR::Interaction::Toolkit::XRController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrackingInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.GetSimulator
bool UnityEngine::XR::Interaction::Toolkit::XRController::GetSimulator(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::GetSimulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSimulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionStateType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactionStateType);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.HandleInteractionAction
void UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction(::UnityEngine::XR::XRNode node, ::StringW usage, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState> interactionState, ::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractType(interactionState), ::il2cpp_utils::ExtractType(interactionStateType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, usage, byref(interactionState), interactionStateType);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInteractionType
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionType(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes interactionStateType, bool isInteractionStateOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionStateType), ::il2cpp_utils::ExtractType(isInteractionStateOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionStateType, isInteractionStateOn);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInteractionState
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionState> interactionState, bool isInteractionStateOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRController", "UpdateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionState), ::il2cpp_utils::ExtractType(isInteractionStateOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(interactionState), isInteractionStateOn);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateControllerModelAnimation
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerModelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerModelAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerModelAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateControllerPose
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerPose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController..cctor
void UnityEngine::XR::Interaction::Toolkit::XRController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes DPad
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_DPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_DPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "DPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes DPad
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_DPad(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_DPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "DPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Trigger
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Trigger
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Trigger(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Grip
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Grip
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Grip(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Grip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes IndexTouch
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_IndexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_IndexTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "IndexTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes IndexTouch
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_IndexTouch(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_IndexTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "IndexTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes ThumbTouch
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_ThumbTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_ThumbTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "ThumbTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes ThumbTouch
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_ThumbTouch(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_ThumbTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "ThumbTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType UpdateAndBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_UpdateAndBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_UpdateAndBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "UpdateAndBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType UpdateAndBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_UpdateAndBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_UpdateAndBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "UpdateAndBeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType Update
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType Update
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_Update(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType BeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.UpdateType BeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_BeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/UpdateType", "BeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes
#include "UnityEngine/XR/Interaction/Toolkit/XRController_InteractionTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes select
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "select"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes select
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_select(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "select", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes activate
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_activate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "activate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes activate
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_activate(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_activate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "activate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes uiPress
::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_uiPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_get_uiPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes>("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "uiPress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRController/UnityEngine.XR.Interaction.Toolkit.InteractionTypes uiPress
void UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_uiPress(::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::_set_uiPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRController/InteractionTypes", "uiPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::InteractionTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecorder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayOnStart
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerRecording m_Recording
::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Recording"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController m_Controller
::UnityEngine::XR::Interaction::Toolkit::XRController*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_CurrentTime
double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsRecording
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPlaying
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastPlaybackTime
double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlaybackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameIdx
int& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_playOnStart
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_playOnStart
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_controller
::UnityEngine::XR::Interaction::Toolkit::XRController* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_controller
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_controller(::UnityEngine::XR::Interaction::Toolkit::XRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recording
::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isRecording
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isPlaying
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isPlaying
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_currentTime
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Awake
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ToggleRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ToggleRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ToggleRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Update
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdateControllerRecordingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdateControllerRecordingUpdate(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame recordingFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdateControllerRecordingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerRecordingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingFrame);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ResetPlayback
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdatePlaybackTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaybackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame> m_Frames
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_frames
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>* UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(selectActive), ::il2cpp_utils::ExtractType(activateActive), ::il2cpp_utils::ExtractType(pressActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, position, rotation, selectActive, activateActive, pressActive);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.InitRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.SaveRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean selectActive
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_selectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_selectActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean activateActive
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_activateActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_activateActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pressActive
bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_pressActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::dyn_pressActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame..ctor
// ABORTED elsewhere.  UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::Frame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive)
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording/UnityEngine.XR.Interaction.Toolkit.Frame.ToString
::StringW UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::Frame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TintColor
::UnityEngine::Color& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnHover
bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnSelection
bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_TintRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_Interactable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintColor
::UnityEngine::Color UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnHover
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnHover
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnSelection
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnSelection
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintRenderers
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Destroy
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.SetTint
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnFirstHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnLastHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_HoveringInteractors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoveringInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isHovered>k__BackingField
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isHovered>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isSelected>k__BackingField
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isSelected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFirstHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnLastHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnActivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeactivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor,UnityEngine.GameObject> m_ReticleCache
::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoveringInteractors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoveringInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isHovered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isSelected
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onFirstHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onLastHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onActivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onDeactivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_customReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_customReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CustomForceDrop
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CustomForceDrop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CustomForceDrop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CustomForceDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RegisterWithInteractionMananger
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionMananger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionMananger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionMananger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHoverableBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelectableBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType VelocityTracking
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType VelocityTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Kinematic
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Kinematic
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Instantaneous
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType Instantaneous
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultTighteningAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultTighteningAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultSmoothingAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultSmoothingAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_VelocityPredictionFactor
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_VelocityPredictionFactor
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_AngularVelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_AngularVelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_ThrowSmoothingFrameCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_ThrowSmoothingFrameCount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultAttachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultAttachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AttachEaseInTime
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachEaseInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType m_MovementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackPosition
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothPosition
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothPositionAmount
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPositionAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenPosition
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackRotation
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothRotation
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothRotationAmount
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenRotation
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ThrowOnDetach
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowSmoothingDuration
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_ThrowSmoothingCurve
::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowVelocityScale
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowAngularVelocityScale
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowAngularVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GravityOnDetach
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasKinematic
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsedGravity
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_SelectingInteractor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectingInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InteractorLocalPosition
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_InteractorLocalRotation
::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetWorldPosition
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_TargetWorldRotation
::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentAttachEaseTime
float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentAttachEaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType m_CurrentMovementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentMovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DetachInLateUpdate
bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachInLateUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachVelocity
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachAngularVelocity
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachAngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ThrowSmoothingCurrentFrame
int& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurrentFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_ThrowSmoothingFrameTimes
::ArrayW<float>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingFrameTimes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ThrowSmoothingVelocityFrames
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ThrowSmoothingAngularVelocityFrames
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingAngularVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_RigidBody
::UnityEngine::Rigidbody*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPosition
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_LastRotation
::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_movementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_movementType
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPositionAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPositionAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenPosition
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotationAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotationAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenRotation
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_gravityOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_gravityOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachPosition
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachRotation
::UnityEngine::Quaternion UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateTarget
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget(float timeDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformInstantaneousUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformInstantaneousUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformKinematicUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformKinematicUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformVelocityTrackingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformVelocityTrackingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Teleport
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Teleport(::UnityEngine::Transform* teleportTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Teleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Teleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teleportTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, teleportTransform);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Detach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Detach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateInteractorLocalPose
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractorLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityStart
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityEnd
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.getSmoothedVelocityValue
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::getSmoothedVelocityValue(::ArrayW<::UnityEngine::Vector3> velocityFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::getSmoothedVelocityValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getSmoothedVelocityValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, velocityFrames);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHoverableBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelectableBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSimpleInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRSimpleInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider
#include "UnityEngine/XR/Interaction/Toolkit/IXRCustomReticleProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reticleInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> noPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linePoints), ::il2cpp_utils::ExtractType(noPoints)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(noPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetHitInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(positionInLine), ::il2cpp_utils::ExtractType(isValidTarget)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorLineVisual.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_MinLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MinLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_MaxLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MaxLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineWidth
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideInteractorLineLength
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideInteractorLineLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineLength
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_WidthCurve
::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WidthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_ValidColorGradient
::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_InvalidColorGradient
::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InvalidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothMovement
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FollowTightness
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FollowTightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SnapThresholdDistance
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapThresholdDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Reticle
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Reticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StopLineAtFirstRaycastHit
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StopLineAtFirstRaycastHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticlePos
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticleNormal
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_EndPositionInLine
int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapCurve
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapCurve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PreviousHit
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CurrentHit
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleToUse
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleToUse"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer m_LineRenderer
::UnityEngine::LineRenderer*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ILineRenderable m_LineRenderable
::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ILineRenderable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_TargetPoints
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoTargetPoints
int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoTargetPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RenderPoints
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoRenderPoints
int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_PreviousRenderPoints
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousRenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoPreviousRenderPoints
int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoPreviousRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ClearArray
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomReticleAttached
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticleAttached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_overrideInteractorLineLength
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_overrideInteractorLineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineLength
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_widthCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_widthCurve
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_validColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_validColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_invalidColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_invalidColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_smoothMovement
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_smoothMovement
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_followTightness
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_followTightness
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_snapThresholdDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_snapThresholdDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_reticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_reticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_stopLineAtFirstRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_stopLineAtFirstRaycastHit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.ClearLineRenderer
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateSettings
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.TryFindLineRenderer
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle(::UnityEngine::GameObject* reticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reticle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticle);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCustomReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorReticleVisual.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultMaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultMaxRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultMaxRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultMaxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultMaxRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultMaxRaycastDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultPrefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultPrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultPrefabScalingFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultPrefabScalingFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultPrefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultPrefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultPrefabScalingFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultPrefabScalingFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultEndpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultEndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultEndpointSmoothingTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultEndpointSmoothingTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultEndpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultEndpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultEndpointSmoothingTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultEndpointSmoothingTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_DefaultLayerMask
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_DefaultLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_DefaultLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultLayerMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_DefaultLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_DefaultLayerMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticlePrefab
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrefabScalingFactor
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrefabScalingFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UndoDistanceScaling
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UndoDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AlignPrefabWithSurfaceNormal
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlignPrefabWithSurfaceNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndpointSmoothingTime
float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndpointSmoothingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DrawWhileSelecting
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DrawWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleInstance
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_Interactor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndPoint
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndNormal
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_RaycastHits
::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReticleActive
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasSelectedInteractable
bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasSelectedInteractable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticlePrefab
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_prefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_prefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_undoDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_undoDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_alignPrefabWithSurfaceNormal
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_alignPrefabWithSurfaceNormal
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_endpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_endpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_drawWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_drawWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticleActive
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticleActive
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.SetupReticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.FindClosestHit
::UnityEngine::RaycastHit UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit> hits, int hitCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(hitCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, hitCount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.TryGetRaycastPoint
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint(ByRef<::UnityEngine::Vector3> raycastPos, ByRef<::UnityEngine::Vector3> raycastNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetRaycastPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastPos), ::il2cpp_utils::ExtractType(raycastNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastPos), byref(raycastNormal));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.UpdateReticleTarget
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticleTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.ActivateReticleAtTarget
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateReticleAtTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelect
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerOnSelect
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerOnSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectEnter
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectEnter
::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectExit
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectExit
::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverEnter
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverEnter
::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverExit
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverExit
::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectEnter
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterIntensity
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterDuration
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectExit
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitIntensity
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitDuration
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverEnter
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterIntensity
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterDuration
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverExit
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitIntensity
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitDuration
float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelectActive
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController m_Controller
::UnityEngine::XR::Interaction::Toolkit::XRController*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource m_EffectsAudioSource
::UnityEngine::AudioSource*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectsAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_toggleSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_toggleSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_toggleSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggleSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_toggleSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_toggleSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_toggleSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_toggleSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hideControllerOnSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hideControllerOnSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEnter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isUISelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUISelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CreateEffectsAudioSource
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEffectsAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectedInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_SelectTarget
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_HoverTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExit"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHover
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowSelect
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInteractions
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInteractions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequiresRegistration
bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequiresRegistration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_InteractionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_InteractionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_InteractionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_InteractionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_InteractionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectTarget
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingSelectedInteractable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_enableInteractions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_enableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHoverActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelectExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_overrideSelectedInteractableMovement
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_overrideSelectedInteractableMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_overrideSelectedInteractableMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSelectedInteractableMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EnableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* hoverTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.RegisterWithInteractionMananger
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionMananger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionMananger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionMananger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ClearHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ClearHoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ClearHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableDistanceSqrMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSortComparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.InteractableSortComparison
int UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.RemoveInteractableFromTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::RemoveInteractableFromTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::RemoveInteractableFromTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveInteractableFromTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__6_0
::System::Func_2<::UnityEngine::Collider*, bool>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__6_0
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__6_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <>9__10_0
::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <>9__10_0
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__10_0(::System::Predicate_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__10_0", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c.<Awake>b__6_0
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::$Awake$b__6_0(::UnityEngine::Collider* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::<Awake>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/UnityEngine.XR.Interaction.Toolkit.<>c.<GetValidTargets>b__10_0
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::$GetValidTargets$b__10_0(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::<GetValidTargets>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetValidTargets>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultMaxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultMaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultMaxRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultMaxRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultMaxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultMaxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultMaxRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultMaxRaycastDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultHoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_DefaultHoverTimeToSelect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultHoverTimeToSelect"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultHoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultHoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_DefaultHoverTimeToSelect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_DefaultHoverTimeToSelect", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_kMaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_kMaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "kMaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_kMaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_kMaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "kMaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MinLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MinLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] s_CachedLinePoints
::ArrayW<::UnityEngine::Vector3> UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] s_CachedLinePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject eventSystem
::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType m_LineType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ReferenceFrame
::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Velocity
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Acceleration
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AdditionalFlightTime
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AdditionalFlightTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointDistance
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointHeight
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointDistance
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointHeight
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleFrequency
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType m_HitDetectionType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitDetectionType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SphereCastRadius
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.QueryTriggerInteraction m_RaycastTriggerInteraction
::UnityEngine::QueryTriggerInteraction& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastTriggerInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryTriggerInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HoverToSelect
bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HoverTimeToSelect
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTimeToSelect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableUIInteraction
bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableUIInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_RaycastHits
::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer m_RaycastHitComparer
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_SamplePoints
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SamplePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoSamplePoints
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoSamplePoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_CurrentNearestObject
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentNearestObject"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastTimeHoveredObjectChanged
float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastTimeHoveredObjectChanged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PassedHoverTimeToSelect
bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PassedHoverTimeToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitCount
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitPositionInLine
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_ControlPoints
::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_InputModule
::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_lineType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_lineType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_referenceFrame
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_referenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_AdditionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_AdditionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hitDetectionType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hitDetectionType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sphereCastRadius
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sphereCastRadius
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastTriggerInteraction
::UnityEngine::QueryTriggerInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::QueryTriggerInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastTriggerInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverToSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_enableUIInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_enableUIInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_m_StartTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_m_StartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_m_StartTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_m_StartTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RebuildSamplePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSamplePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindOrCreateXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOrCreateXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> noPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linePoints), ::il2cpp_utils::ExtractType(noPoints)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(noPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetHitInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(positionInLine), ::il2cpp_utils::ExtractType(isValidTarget)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUIModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUIModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentUIRaycastResult
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult(ByRef<::UnityEngine::EventSystems::RaycastResult> result, ByRef<int> raycastPointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentUIRaycastResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::RaycastResult&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result), byref(raycastPointIndex));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateControlPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateBezierPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 control, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBezierPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t, start, control, end);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateProjectilePoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateProjectilePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(acceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t, start, velocity, acceleration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindReferenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CheckCollidersBetweenPoints
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCollidersBetweenPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_ValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.RaycastHitComparer.Compare
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType StraightLine
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType StraightLine
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType ProjectileCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType ProjectileCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType BezierCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.LineType BezierCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType Raycast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType Raycast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType SphereCast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/UnityEngine.XR.Interaction.Toolkit.HitDetectionType SphereCast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShowInteractableHoverMeshes
bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShowInteractableHoverMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_InteractableHoverMeshMaterial
::UnityEngine::Material*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverMeshMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SocketActive
bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SocketActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InteractableHoverScale
float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RecycleDelayTime
float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecycleDelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastRemoveTime
float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRemoveTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableDistanceSqrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableDistanceSqrMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableDistanceSqrMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,UnityEngine.MeshFilter[]> m_MeshFilterCache
::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeshFilterCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableSortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableSortComparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSortComparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_showInteractableHoverMeshes
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_showInteractableHoverMeshes
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverMeshMaterial
::UnityEngine::Material* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverMeshMaterial
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_socketActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_socketActive
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverScale
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverScale
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_recycleDelayTime
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_recycleDelayTime
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.InteractableSortComparison
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetInteractableAttachMatrix
::UnityEngine::Matrix4x4 UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* interactable, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteractableAttachMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, interactable, scale);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.DrawHoveredInteractables
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawHoveredInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHoverActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelectExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c__DisplayClass34_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_Interactors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_Interactables
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ColliderToInteractableMap
::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderToInteractableMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_HoverTargetList
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverTargetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverTargetList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTargetList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractorValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> sortedTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_sortedTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_sortedTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_interactors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_interactables
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.LateUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.FixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.TryGetInteractableForCollider
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method, collider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceSelect
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceDrop
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceDrop(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceDrop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceSwap
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSwap(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* oldInteractor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* newInteractor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldInteractor), ::il2cpp_utils::ExtractType(newInteractor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldInteractor, newInteractor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorSelectValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorSelectValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorHoverValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorHoverValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c__DisplayClass34_0.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 interactorPos
::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::dyn_interactorPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::dyn_interactorPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactorPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0.<InteractorSelectValidTargets>b__0
int UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::$InteractorSelectValidTargets$b__0(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* a, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::<InteractorSelectValidTargets>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InteractorSelectValidTargets>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 k_ControllerRecorder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_ControllerRecorder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Controllers
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Controllers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_ControllerInteractionManager
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerInteractionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerInteractionManager"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_ControllerInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerInteractionManager(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerInteractionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerInteractionManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_InteractionManager
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_InteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactors
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactables
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_LineVisual
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_LineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_BeforeRenderOrder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_BeforeRenderOrder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Fixed
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Fixed
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Dynamic
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Dynamic
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Late
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase Late
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase OnBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionSystem m_System
::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_System"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> startLocomotion
::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> endLocomotion
::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.get_system
::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.set_system
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.Awake
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.CanBeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.BeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.EndLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
