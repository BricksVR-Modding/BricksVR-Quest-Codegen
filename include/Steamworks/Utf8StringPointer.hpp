// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: Utf8StringPointer
  struct Utf8StringPointer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::Utf8StringPointer, "Steamworks", "Utf8StringPointer");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Steamworks.Utf8StringPointer
  // [TokenAttribute] Offset: FFFFFFFF
  struct Utf8StringPointer/*, public ::System::ValueType*/ {
    public:
    public:
    // System.IntPtr ptr
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: Utf8StringPointer
    constexpr Utf8StringPointer(::System::IntPtr ptr_ = {}) noexcept : ptr{ptr_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return ptr;
    }
    // Get instance field reference: System.IntPtr ptr
    [[deprecated]] ::System::IntPtr& dyn_ptr();
  }; // Steamworks.Utf8StringPointer
  #pragma pack(pop)
  static check_size<sizeof(Utf8StringPointer), 0 + sizeof(::System::IntPtr)> __Steamworks_Utf8StringPointerSizeCheck;
  static_assert(sizeof(Utf8StringPointer) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
