// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractable
  class XRBaseInteractable;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0*, "UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c__DisplayClass34_0");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class XRInteractionManager::$$c__DisplayClass34_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Vector3 interactorPos
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 interactorPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating conversion operator: operator ::UnityEngine::Vector3
    constexpr operator ::UnityEngine::Vector3() const noexcept {
      return interactorPos;
    }
    // Get instance field reference: public UnityEngine.Vector3 interactorPos
    [[deprecated]] ::UnityEngine::Vector3& dyn_interactorPos();
    // System.Int32 <InteractorSelectValidTargets>b__0(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable a, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable b)
    // Offset: 0x5FBEA0
    int $InteractorSelectValidTargets$b__0(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* a, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* b);
    // public System.Void .ctor()
    // Offset: 0x1DD400
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRInteractionManager::$$c__DisplayClass34_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRInteractionManager::$$c__DisplayClass34_0*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/UnityEngine.XR.Interaction.Toolkit.<>c__DisplayClass34_0
  #pragma pack(pop)
  static check_size<sizeof(XRInteractionManager::$$c__DisplayClass34_0), 16 + sizeof(::UnityEngine::Vector3)> __UnityEngine_XR_Interaction_Toolkit_XRInteractionManager_$$c__DisplayClass34_0SizeCheck;
  static_assert(sizeof(XRInteractionManager::$$c__DisplayClass34_0) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::$InteractorSelectValidTargets$b__0
// Il2CppName: <InteractorSelectValidTargets>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::$InteractorSelectValidTargets$b__0)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0*), "<InteractorSelectValidTargets>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c__DisplayClass34_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
