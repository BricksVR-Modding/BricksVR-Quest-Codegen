// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Normal.Realtime.Utility
namespace Normal::Realtime::Utility {
  // Forward declaring type: Extensions
  class Extensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Utility::Extensions);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Utility::Extensions*, "Normal.Realtime.Utility", "Extensions");
// Type namespace: Normal.Realtime.Utility
namespace Normal::Realtime::Utility {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Utility.Extensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Extensions : public ::Il2CppObject {
    public:
    // static public System.Void Deconstruct(System.Collections.Generic.KeyValuePair`2<TKey,TValue> source, out TKey key, out TValue value)
    // Offset: 0xFFFFFFFF
    template<class TKey, class TValue>
    static void Deconstruct(::System::Collections::Generic::KeyValuePair_2<TKey, TValue> source, ByRef<TKey> key, ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Utility::Extensions::Deconstruct");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Utility", "Extensions", "Deconstruct", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<TKey&>(), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, source, byref(key), byref(value));
    }
  }; // Normal.Realtime.Utility.Extensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Utility::Extensions::Deconstruct
// Il2CppName: Deconstruct
// Cannot write MetadataGetter for generic methods!
