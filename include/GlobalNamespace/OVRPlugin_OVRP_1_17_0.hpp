// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPlugin::OVRP_1_17_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::OVRP_1_17_0*, "", "OVRPlugin/OVRP_1_17_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_17_0
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPlugin::OVRP_1_17_0 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version version
    static ::System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(::System::Version* value);
    // static private System.Void .cctor()
    // Offset: 0x396070
    static void _cctor();
    // static public OVRPlugin/Result ovrp_GetExternalCameraPose(OVRPlugin/CameraDevice camera, out OVRPlugin/Posef cameraPose)
    // Offset: 0x3965A0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetExternalCameraPose(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Posef> cameraPose);
    // static public OVRPlugin/Result ovrp_ConvertPoseToCameraSpace(OVRPlugin/CameraDevice camera, ref OVRPlugin/Posef trackingSpacePose, out OVRPlugin/Posef cameraSpacePose)
    // Offset: 0x3960E0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_ConvertPoseToCameraSpace(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Posef> trackingSpacePose, ByRef<::GlobalNamespace::OVRPlugin::Posef> cameraSpacePose);
    // static public OVRPlugin/Result ovrp_GetCameraDeviceIntrinsicsParameters(OVRPlugin/CameraDevice camera, out OVRPlugin/Bool supportIntrinsics, out OVRPlugin/CameraDeviceIntrinsicsParameters intrinsicsParameters)
    // Offset: 0x396470
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDeviceIntrinsicsParameters(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Bool> supportIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceIntrinsicsParameters> intrinsicsParameters);
    // static public OVRPlugin/Result ovrp_DoesCameraDeviceSupportDepth(OVRPlugin/CameraDevice camera, out OVRPlugin/Bool supportDepth)
    // Offset: 0x396180
    static ::GlobalNamespace::OVRPlugin::Result ovrp_DoesCameraDeviceSupportDepth(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Bool> supportDepth);
    // static public OVRPlugin/Result ovrp_GetCameraDeviceDepthSensingMode(OVRPlugin/CameraDevice camera, out OVRPlugin/CameraDeviceDepthSensingMode depthSensoringMode)
    // Offset: 0x3963E0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDeviceDepthSensingMode(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode> depthSensoringMode);
    // static public OVRPlugin/Result ovrp_SetCameraDeviceDepthSensingMode(OVRPlugin/CameraDevice camera, OVRPlugin/CameraDeviceDepthSensingMode depthSensoringMode)
    // Offset: 0x3966C0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetCameraDeviceDepthSensingMode(::GlobalNamespace::OVRPlugin::CameraDevice camera, ::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode depthSensoringMode);
    // static public OVRPlugin/Result ovrp_GetCameraDevicePreferredDepthQuality(OVRPlugin/CameraDevice camera, out OVRPlugin/CameraDeviceDepthQuality depthQuality)
    // Offset: 0x396510
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDevicePreferredDepthQuality(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality> depthQuality);
    // static public OVRPlugin/Result ovrp_SetCameraDevicePreferredDepthQuality(OVRPlugin/CameraDevice camera, OVRPlugin/CameraDeviceDepthQuality depthQuality)
    // Offset: 0x396750
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetCameraDevicePreferredDepthQuality(::GlobalNamespace::OVRPlugin::CameraDevice camera, ::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality depthQuality);
    // static public OVRPlugin/Result ovrp_IsCameraDeviceDepthFrameAvailable(OVRPlugin/CameraDevice camera, out OVRPlugin/Bool available)
    // Offset: 0x396630
    static ::GlobalNamespace::OVRPlugin::Result ovrp_IsCameraDeviceDepthFrameAvailable(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Bool> available);
    // static public OVRPlugin/Result ovrp_GetCameraDeviceDepthFrameSize(OVRPlugin/CameraDevice camera, out OVRPlugin/Sizei depthFrameSize)
    // Offset: 0x396350
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDeviceDepthFrameSize(::GlobalNamespace::OVRPlugin::CameraDevice camera, ByRef<::GlobalNamespace::OVRPlugin::Sizei> depthFrameSize);
    // static public OVRPlugin/Result ovrp_GetCameraDeviceDepthFramePixels(OVRPlugin/CameraDevice cameraDevice, out System.IntPtr depthFramePixels, out System.Int32 depthFrameRowPitch)
    // Offset: 0x3962B0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDeviceDepthFramePixels(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, ByRef<::System::IntPtr> depthFramePixels, ByRef<int> depthFrameRowPitch);
    // static public OVRPlugin/Result ovrp_GetCameraDeviceDepthConfidencePixels(OVRPlugin/CameraDevice cameraDevice, out System.IntPtr depthConfidencePixels, out System.Int32 depthConfidenceRowPitch)
    // Offset: 0x396210
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetCameraDeviceDepthConfidencePixels(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, ByRef<::System::IntPtr> depthConfidencePixels, ByRef<int> depthConfidenceRowPitch);
  }; // OVRPlugin/OVRP_1_17_0
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetExternalCameraPose
// Il2CppName: ovrp_GetExternalCameraPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Posef>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetExternalCameraPose)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* cameraPose = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Posef")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetExternalCameraPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, cameraPose});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_ConvertPoseToCameraSpace
// Il2CppName: ovrp_ConvertPoseToCameraSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Posef>, ByRef<::GlobalNamespace::OVRPlugin::Posef>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_ConvertPoseToCameraSpace)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* trackingSpacePose = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Posef")->this_arg;
    static auto* cameraSpacePose = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Posef")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_ConvertPoseToCameraSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, trackingSpacePose, cameraSpacePose});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceIntrinsicsParameters
// Il2CppName: ovrp_GetCameraDeviceIntrinsicsParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Bool>, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceIntrinsicsParameters>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceIntrinsicsParameters)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* supportIntrinsics = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    static auto* intrinsicsParameters = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDeviceIntrinsicsParameters")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDeviceIntrinsicsParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, supportIntrinsics, intrinsicsParameters});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_DoesCameraDeviceSupportDepth
// Il2CppName: ovrp_DoesCameraDeviceSupportDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Bool>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_DoesCameraDeviceSupportDepth)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* supportDepth = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_DoesCameraDeviceSupportDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, supportDepth});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthSensingMode
// Il2CppName: ovrp_GetCameraDeviceDepthSensingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthSensingMode)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthSensoringMode = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDeviceDepthSensingMode")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDeviceDepthSensingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, depthSensoringMode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_SetCameraDeviceDepthSensingMode
// Il2CppName: ovrp_SetCameraDeviceDepthSensingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_SetCameraDeviceDepthSensingMode)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthSensoringMode = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDeviceDepthSensingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_SetCameraDeviceDepthSensingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, depthSensoringMode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDevicePreferredDepthQuality
// Il2CppName: ovrp_GetCameraDevicePreferredDepthQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDevicePreferredDepthQuality)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthQuality = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDeviceDepthQuality")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDevicePreferredDepthQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, depthQuality});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_SetCameraDevicePreferredDepthQuality
// Il2CppName: ovrp_SetCameraDevicePreferredDepthQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_SetCameraDevicePreferredDepthQuality)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthQuality = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDeviceDepthQuality")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_SetCameraDevicePreferredDepthQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, depthQuality});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_IsCameraDeviceDepthFrameAvailable
// Il2CppName: ovrp_IsCameraDeviceDepthFrameAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Bool>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_IsCameraDeviceDepthFrameAvailable)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* available = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_IsCameraDeviceDepthFrameAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, available});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthFrameSize
// Il2CppName: ovrp_GetCameraDeviceDepthFrameSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Sizei>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthFrameSize)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthFrameSize = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Sizei")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDeviceDepthFrameSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, depthFrameSize});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthFramePixels
// Il2CppName: ovrp_GetCameraDeviceDepthFramePixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::System::IntPtr>, ByRef<int>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthFramePixels)> {
  static const MethodInfo* get() {
    static auto* cameraDevice = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthFramePixels = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* depthFrameRowPitch = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDeviceDepthFramePixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameraDevice, depthFramePixels, depthFrameRowPitch});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthConfidencePixels
// Il2CppName: ovrp_GetCameraDeviceDepthConfidencePixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::CameraDevice, ByRef<::System::IntPtr>, ByRef<int>)>(&GlobalNamespace::OVRPlugin::OVRP_1_17_0::ovrp_GetCameraDeviceDepthConfidencePixels)> {
  static const MethodInfo* get() {
    static auto* cameraDevice = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/CameraDevice")->byval_arg;
    static auto* depthConfidencePixels = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* depthConfidenceRowPitch = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_17_0*), "ovrp_GetCameraDeviceDepthConfidencePixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameraDevice, depthConfidencePixels, depthConfidenceRowPitch});
  }
};
