// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Skipping declaration: XRBaseInteractable because it is already included!
  // Forward declaring type: XRGrabInteractable
  class XRGrabInteractable;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRSocketInteractor
  class XRSocketInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*, "UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0xB0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 724638
  class XRSocketInteractor : public ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // [HeaderAttribute] Offset: 0x725C2C
    // private System.Boolean m_ShowInteractableHoverMeshes
    // Size: 0x1
    // Offset: 0x74
    bool m_ShowInteractableHoverMeshes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ShowInteractableHoverMeshes and: m_InteractableHoverMeshMaterial
    char __padding0[0x3] = {};
    // private UnityEngine.Material m_InteractableHoverMeshMaterial
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Material* m_InteractableHoverMeshMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.Boolean m_SocketActive
    // Size: 0x1
    // Offset: 0x80
    bool m_SocketActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_SocketActive and: m_InteractableHoverScale
    char __padding2[0x3] = {};
    // private System.Single m_InteractableHoverScale
    // Size: 0x4
    // Offset: 0x84
    float m_InteractableHoverScale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_RecycleDelayTime
    // Size: 0x4
    // Offset: 0x88
    float m_RecycleDelayTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_LastRemoveTime
    // Size: 0x4
    // Offset: 0x8C
    float m_LastRemoveTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* m_ValidTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>* m_InteractableDistanceSqrMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,UnityEngine.MeshFilter[]> m_MeshFilterCache
    // Size: 0x8
    // Offset: 0xA0
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>* m_MeshFilterCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>*) == 0x8);
    // private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
    // Size: 0x8
    // Offset: 0xA8
    ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* m_InteractableSortComparison;
    // Field size check
    static_assert(sizeof(::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*) == 0x8);
    public:
    // Get instance field reference: private System.Boolean m_ShowInteractableHoverMeshes
    bool& dyn_m_ShowInteractableHoverMeshes();
    // Get instance field reference: private UnityEngine.Material m_InteractableHoverMeshMaterial
    ::UnityEngine::Material*& dyn_m_InteractableHoverMeshMaterial();
    // Get instance field reference: private System.Boolean m_SocketActive
    bool& dyn_m_SocketActive();
    // Get instance field reference: private System.Single m_InteractableHoverScale
    float& dyn_m_InteractableHoverScale();
    // Get instance field reference: private System.Single m_RecycleDelayTime
    float& dyn_m_RecycleDelayTime();
    // Get instance field reference: private System.Single m_LastRemoveTime
    float& dyn_m_LastRemoveTime();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& dyn_m_ValidTargets();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& dyn_m_InteractableDistanceSqrMap();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,UnityEngine.MeshFilter[]> m_MeshFilterCache
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::ArrayW<::UnityEngine::MeshFilter*>>*& dyn_m_MeshFilterCache();
    // Get instance field reference: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
    ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& dyn_m_InteractableSortComparison();
    // public System.Boolean get_showInteractableHoverMeshes()
    // Offset: 0xFE3EEC
    bool get_showInteractableHoverMeshes();
    // public System.Void set_showInteractableHoverMeshes(System.Boolean value)
    // Offset: 0xFE3EF4
    void set_showInteractableHoverMeshes(bool value);
    // private UnityEngine.Material get_interactableHoverMeshMaterial()
    // Offset: 0xFE3F00
    ::UnityEngine::Material* get_interactableHoverMeshMaterial();
    // private System.Void set_interactableHoverMeshMaterial(UnityEngine.Material value)
    // Offset: 0xFE3F08
    void set_interactableHoverMeshMaterial(::UnityEngine::Material* value);
    // public System.Boolean get_socketActive()
    // Offset: 0xFE3F10
    bool get_socketActive();
    // public System.Void set_socketActive(System.Boolean value)
    // Offset: 0xFE3F18
    void set_socketActive(bool value);
    // public System.Single get_interactableHoverScale()
    // Offset: 0xFE3F24
    float get_interactableHoverScale();
    // public System.Void set_interactableHoverScale(System.Single value)
    // Offset: 0xFE3F2C
    void set_interactableHoverScale(float value);
    // public System.Single get_recycleDelayTime()
    // Offset: 0xFE3F34
    float get_recycleDelayTime();
    // public System.Void set_recycleDelayTime(System.Single value)
    // Offset: 0xFE3F3C
    void set_recycleDelayTime(float value);
    // private System.Int32 InteractableSortComparison(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable x, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable y)
    // Offset: 0xFE3F44
    int InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y);
    // protected System.Void OnTriggerEnter(UnityEngine.Collider col)
    // Offset: 0xFE4460
    void OnTriggerEnter(::UnityEngine::Collider* col);
    // protected System.Void OnTriggerExit(UnityEngine.Collider col)
    // Offset: 0xFE4570
    void OnTriggerExit(::UnityEngine::Collider* col);
    // private UnityEngine.Matrix4x4 GetInteractableAttachMatrix(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable interactable, UnityEngine.Vector3 scale)
    // Offset: 0xFE4680
    ::UnityEngine::Matrix4x4 GetInteractableAttachMatrix(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* interactable, ::UnityEngine::Vector3 scale);
    // protected System.Void DrawHoveredInteractables()
    // Offset: 0xFE4980
    void DrawHoveredInteractables();
    // public override System.Boolean get_isHoverActive()
    // Offset: 0xFE4F08
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::get_isHoverActive()
    bool get_isHoverActive();
    // public override System.Boolean get_isSelectActive()
    // Offset: 0xFE4F10
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::get_isSelectActive()
    bool get_isSelectActive();
    // public override System.Boolean get_isSelectExclusive()
    // Offset: 0xFE4F18
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::get_isSelectExclusive()
    bool get_isSelectExclusive();
    // public override System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType> get_selectedInteractableMovementTypeOverride()
    // Offset: 0xFE4F20
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType> XRBaseInteractor::get_selectedInteractableMovementTypeOverride()
    ::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> get_selectedInteractableMovementTypeOverride();
    // public System.Void .ctor()
    // Offset: 0xFE50A0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRSocketInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRSocketInteractor*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0xFE3FE8
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::Awake()
    void Awake();
    // protected internal override System.Void OnHoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xFE4264
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnHoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    void OnHoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal override System.Void OnHoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xFE4314
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnHoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    void OnHoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal override System.Void OnSelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xFE438C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnSelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    void OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public override System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase updatePhase)
    // Offset: 0xFE43BC
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase updatePhase)
    void ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public override System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0xFE4D20
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    void GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // public override System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xFE4F7C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public override System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xFE5058
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
  }; // UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
  #pragma pack(pop)
  static check_size<sizeof(XRSocketInteractor), 168 + sizeof(::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)> __UnityEngine_XR_Interaction_Toolkit_XRSocketInteractorSizeCheck;
  static_assert(sizeof(XRSocketInteractor) == 0xB0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes
// Il2CppName: get_showInteractableHoverMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_showInteractableHoverMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes
// Il2CppName: set_showInteractableHoverMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_showInteractableHoverMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial
// Il2CppName: get_interactableHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_interactableHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial
// Il2CppName: set_interactableHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Material*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_interactableHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive
// Il2CppName: get_socketActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_socketActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive
// Il2CppName: set_socketActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_socketActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale
// Il2CppName: get_interactableHoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_interactableHoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale
// Il2CppName: set_interactableHoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_interactableHoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime
// Il2CppName: get_recycleDelayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_recycleDelayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime
// Il2CppName: set_recycleDelayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_recycleDelayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison
// Il2CppName: InteractableSortComparison
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InteractableSortComparison)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "InteractableSortComparison", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* col = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{col});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* col = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{col});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix
// Il2CppName: GetInteractableAttachMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*, ::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetInteractableAttachMatrix)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "GetInteractableAttachMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables
// Il2CppName: DrawHoveredInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "DrawHoveredInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive
// Il2CppName: get_isHoverActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isHoverActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive
// Il2CppName: get_isSelectActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isSelectActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive
// Il2CppName: get_isSelectExclusive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectExclusive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isSelectExclusive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride
// Il2CppName: get_selectedInteractableMovementTypeOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter
// Il2CppName: OnHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEnter)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit
// Il2CppName: OnHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExit)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit
// Il2CppName: OnSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExit)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor
// Il2CppName: ProcessInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "ProcessInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
