// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: RoomEnter
  struct RoomEnter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::RoomEnter, "Steamworks", "RoomEnter");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.RoomEnter
  // [TokenAttribute] Offset: FFFFFFFF
  struct RoomEnter/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RoomEnter
    constexpr RoomEnter(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Steamworks.RoomEnter Success
    static constexpr const int Success = 1;
    // Get static field: static public Steamworks.RoomEnter Success
    static ::Steamworks::RoomEnter _get_Success();
    // Set static field: static public Steamworks.RoomEnter Success
    static void _set_Success(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter DoesntExist
    static constexpr const int DoesntExist = 2;
    // Get static field: static public Steamworks.RoomEnter DoesntExist
    static ::Steamworks::RoomEnter _get_DoesntExist();
    // Set static field: static public Steamworks.RoomEnter DoesntExist
    static void _set_DoesntExist(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter NotAllowed
    static constexpr const int NotAllowed = 3;
    // Get static field: static public Steamworks.RoomEnter NotAllowed
    static ::Steamworks::RoomEnter _get_NotAllowed();
    // Set static field: static public Steamworks.RoomEnter NotAllowed
    static void _set_NotAllowed(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter Full
    static constexpr const int Full = 4;
    // Get static field: static public Steamworks.RoomEnter Full
    static ::Steamworks::RoomEnter _get_Full();
    // Set static field: static public Steamworks.RoomEnter Full
    static void _set_Full(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter Error
    static constexpr const int Error = 5;
    // Get static field: static public Steamworks.RoomEnter Error
    static ::Steamworks::RoomEnter _get_Error();
    // Set static field: static public Steamworks.RoomEnter Error
    static void _set_Error(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter Banned
    static constexpr const int Banned = 6;
    // Get static field: static public Steamworks.RoomEnter Banned
    static ::Steamworks::RoomEnter _get_Banned();
    // Set static field: static public Steamworks.RoomEnter Banned
    static void _set_Banned(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter Limited
    static constexpr const int Limited = 7;
    // Get static field: static public Steamworks.RoomEnter Limited
    static ::Steamworks::RoomEnter _get_Limited();
    // Set static field: static public Steamworks.RoomEnter Limited
    static void _set_Limited(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter ClanDisabled
    static constexpr const int ClanDisabled = 8;
    // Get static field: static public Steamworks.RoomEnter ClanDisabled
    static ::Steamworks::RoomEnter _get_ClanDisabled();
    // Set static field: static public Steamworks.RoomEnter ClanDisabled
    static void _set_ClanDisabled(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter CommunityBan
    static constexpr const int CommunityBan = 9;
    // Get static field: static public Steamworks.RoomEnter CommunityBan
    static ::Steamworks::RoomEnter _get_CommunityBan();
    // Set static field: static public Steamworks.RoomEnter CommunityBan
    static void _set_CommunityBan(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter MemberBlockedYou
    static constexpr const int MemberBlockedYou = 10;
    // Get static field: static public Steamworks.RoomEnter MemberBlockedYou
    static ::Steamworks::RoomEnter _get_MemberBlockedYou();
    // Set static field: static public Steamworks.RoomEnter MemberBlockedYou
    static void _set_MemberBlockedYou(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter YouBlockedMember
    static constexpr const int YouBlockedMember = 11;
    // Get static field: static public Steamworks.RoomEnter YouBlockedMember
    static ::Steamworks::RoomEnter _get_YouBlockedMember();
    // Set static field: static public Steamworks.RoomEnter YouBlockedMember
    static void _set_YouBlockedMember(::Steamworks::RoomEnter value);
    // static field const value: static public Steamworks.RoomEnter RatelimitExceeded
    static constexpr const int RatelimitExceeded = 15;
    // Get static field: static public Steamworks.RoomEnter RatelimitExceeded
    static ::Steamworks::RoomEnter _get_RatelimitExceeded();
    // Set static field: static public Steamworks.RoomEnter RatelimitExceeded
    static void _set_RatelimitExceeded(::Steamworks::RoomEnter value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Steamworks.RoomEnter
  #pragma pack(pop)
  static check_size<sizeof(RoomEnter), 0 + sizeof(int)> __Steamworks_RoomEnterSizeCheck;
  static_assert(sizeof(RoomEnter) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
