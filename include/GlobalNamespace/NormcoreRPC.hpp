// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: Realtime
  class Realtime;
  // Forward declaring type: Room
  class Room;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NormcoreRPC
  class NormcoreRPC;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NormcoreRPC);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NormcoreRPC*, "", "NormcoreRPC");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NormcoreRPC
  // [TokenAttribute] Offset: FFFFFFFF
  class NormcoreRPC : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::NormcoreRPC::RPCMessage
    class RPCMessage;
    // Nested type: ::GlobalNamespace::NormcoreRPC::Brick
    class Brick;
    public:
    // public Normal.Realtime.Realtime _realtime
    // Size: 0x8
    // Offset: 0x18
    ::Normal::Realtime::Realtime* realtime;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::Realtime*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public Normal.Realtime.Realtime _realtime
    [[deprecated("Use field access instead!")]] ::Normal::Realtime::Realtime*& dyn__realtime();
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NormcoreRPC* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NormcoreRPC*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x8083D0
    void Start();
    // private System.Void RpcMessageReceived(Normal.Realtime.Room room, System.Int32 senderId, System.Byte[] data, System.Boolean reliable)
    // Offset: 0x8082B0
    void RpcMessageReceived(::Normal::Realtime::Room* room, int senderId, ::ArrayW<uint8_t> data, bool reliable);
    // private System.Void <Start>b__1_0(Normal.Realtime.Realtime realtime)
    // Offset: 0x808450
    void $Start$b__1_0(::Normal::Realtime::Realtime* realtime);
  }; // NormcoreRPC
  #pragma pack(pop)
  static check_size<sizeof(NormcoreRPC), 24 + sizeof(::Normal::Realtime::Realtime*)> __GlobalNamespace_NormcoreRPCSizeCheck;
  static_assert(sizeof(NormcoreRPC) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NormcoreRPC::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::NormcoreRPC::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormcoreRPC::*)()>(&GlobalNamespace::NormcoreRPC::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormcoreRPC*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormcoreRPC::RpcMessageReceived
// Il2CppName: RpcMessageReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormcoreRPC::*)(::Normal::Realtime::Room*, int, ::ArrayW<uint8_t>, bool)>(&GlobalNamespace::NormcoreRPC::RpcMessageReceived)> {
  static const MethodInfo* get() {
    static auto* room = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "Room")->byval_arg;
    static auto* senderId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* reliable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormcoreRPC*), "RpcMessageReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{room, senderId, data, reliable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormcoreRPC::$Start$b__1_0
// Il2CppName: <Start>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormcoreRPC::*)(::Normal::Realtime::Realtime*)>(&GlobalNamespace::NormcoreRPC::$Start$b__1_0)> {
  static const MethodInfo* get() {
    static auto* realtime = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "Realtime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormcoreRPC*), "<Start>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{realtime});
  }
};
