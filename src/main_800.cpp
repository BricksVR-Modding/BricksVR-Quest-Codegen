// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated]] uint64_t& Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState <State>k__BackingField
[[deprecated]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
::Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::OrgScopedID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::OrgScopedID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::Party::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User LeaderOptional
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_LeaderOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_LeaderOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Leader
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_Leader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Leader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leader"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::PartyID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PartyUpdateAction Action
[[deprecated]] ::Oculus::Platform::PartyUpdateAction& Oculus::Platform::Models::PartyUpdateNotification::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PartyUpdateAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 PartyId
[[deprecated]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PartyId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderId
[[deprecated]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UpdateTimestamp
[[deprecated]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTimestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserAlias
[[deprecated]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserName
[[deprecated]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Id
[[deprecated]] ::StringW& Oculus::Platform::Models::Pid::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Pid::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated]] uint64_t& Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.UInt64> pingTimeUsec
[[deprecated]] ::System::Nullable_1<uint64_t>& Oculus::Platform::Models::PingResult::dyn_pingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_pingTimeUsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTimeUsec"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PlatformInitializeResult Result
[[deprecated]] ::Oculus::Platform::PlatformInitializeResult& Oculus::Platform::Models::PlatformInitialize::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PlatformInitialize::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PlatformInitializeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated]] ::StringW& Oculus::Platform::Models::Product::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String FormattedPrice
[[deprecated]] ::StringW& Oculus::Platform::Models::Product::dyn_FormattedPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_FormattedPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormattedPrice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated]] ::StringW& Oculus::Platform::Models::Product::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated]] ::StringW& Oculus::Platform::Models::Product::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime ExpirationTime
[[deprecated]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime GrantTime
[[deprecated]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_GrantTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_GrantTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrantTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::Purchase::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated]] ::StringW& Oculus::Platform::Models::Purchase::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ApplicationID
[[deprecated]] uint64_t& Oculus::Platform::Models::Room::dyn_ApplicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ApplicationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> DataStore
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::Room::dyn_DataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_DataStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataStore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated]] ::StringW& Oculus::Platform::Models::Room::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::Room::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsMembershipLocked
[[deprecated]] bool& Oculus::Platform::Models::Room::dyn_IsMembershipLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_IsMembershipLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsMembershipLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinPolicy JoinPolicy
[[deprecated]] ::Oculus::Platform::RoomJoinPolicy& Oculus::Platform::Models::Room::dyn_JoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_JoinPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinPolicy"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinability Joinability
[[deprecated]] ::Oculus::Platform::RoomJoinability& Oculus::Platform::Models::Room::dyn_Joinability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Joinability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joinability"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinability*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsersOptional
[[deprecated]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsers
[[deprecated]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxUsers
[[deprecated]] uint& Oculus::Platform::Models::Room::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated]] ::StringW& Oculus::Platform::Models::Room::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User OwnerOptional
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_OwnerOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_OwnerOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Owner
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Owner"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList TeamsOptional
[[deprecated]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_TeamsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_TeamsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList Teams
[[deprecated]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_Teams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Teams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teams"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomType Type
[[deprecated]] ::Oculus::Platform::RoomType& Oculus::Platform::Models::Room::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 Version
[[deprecated]] uint& Oculus::Platform::Models::Room::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime SentTime
[[deprecated]] ::System::DateTime& Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean HasPermission
[[deprecated]] bool& Oculus::Platform::Models::SystemPermission::dyn_HasPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_HasPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PermissionGrantStatus PermissionGrantStatus
[[deprecated]] ::Oculus::Platform::PermissionGrantStatus& Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionGrantStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PermissionGrantStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList AssignedUsers
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Team::dyn_AssignedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_AssignedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MaxUsers
[[deprecated]] int& Oculus::Platform::Models::Team::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MinUsers
[[deprecated]] int& Oculus::Platform::Models::Team::dyn_MinUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MinUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated]] ::StringW& Oculus::Platform::Models::Team::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String InviteToken
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_InviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_InviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::UserAndRoom::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.AvatarLogger
#include "Oculus/Avatar/AvatarLogger.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String LogAvatar
::StringW Oculus::Avatar::AvatarLogger::_get_LogAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_LogAvatar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "LogAvatar"));
}
// Autogenerated static field setter
// Set static field: static public System.String LogAvatar
void Oculus::Avatar::AvatarLogger::_set_LogAvatar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_LogAvatar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "LogAvatar", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Tab
::StringW Oculus::Avatar::AvatarLogger::_get_Tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_Tab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "Tab"));
}
// Autogenerated static field setter
// Set static field: static public System.String Tab
void Oculus::Avatar::AvatarLogger::_set_Tab(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_Tab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "Tab", value));
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogWarning
void Oculus::Avatar::AvatarLogger::LogWarning(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI
#include "Oculus/Avatar/CAPI.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ovrAvatarMessageType
#include "GlobalNamespace/ovrAvatarMessageType.hpp"
// Including type: ovrAvatarMessage_AvatarSpecification
#include "GlobalNamespace/ovrAvatarMessage_AvatarSpecification.hpp"
// Including type: ovrAvatarMessage_AssetLoaded
#include "GlobalNamespace/ovrAvatarMessage_AssetLoaded.hpp"
// Including type: ovrAvatarLookAndFeelVersion
#include "GlobalNamespace/ovrAvatarLookAndFeelVersion.hpp"
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
// Including type: ovrAvatarCapabilities
#include "GlobalNamespace/ovrAvatarCapabilities.hpp"
// Including type: ovrAvatarVisemes
#include "GlobalNamespace/ovrAvatarVisemes.hpp"
// Including type: ovrAvatarHandInputState
#include "GlobalNamespace/ovrAvatarHandInputState.hpp"
// Including type: ovrAvatarControllerType
#include "GlobalNamespace/ovrAvatarControllerType.hpp"
// Including type: ovrAvatarComponent
#include "GlobalNamespace/ovrAvatarComponent.hpp"
// Including type: ovrAvatarBaseComponent
#include "GlobalNamespace/ovrAvatarBaseComponent.hpp"
// Including type: ovrAvatarBodyComponent
#include "GlobalNamespace/ovrAvatarBodyComponent.hpp"
// Including type: ovrAvatarControllerComponent
#include "GlobalNamespace/ovrAvatarControllerComponent.hpp"
// Including type: ovrAvatarHandComponent
#include "GlobalNamespace/ovrAvatarHandComponent.hpp"
// Including type: ovrAvatarAssetType
#include "GlobalNamespace/ovrAvatarAssetType.hpp"
// Including type: ovrAvatarMeshAssetData
#include "GlobalNamespace/ovrAvatarMeshAssetData.hpp"
// Including type: ovrAvatarMeshAssetDataV2
#include "GlobalNamespace/ovrAvatarMeshAssetDataV2.hpp"
// Including type: ovrAvatarTextureAssetData
#include "GlobalNamespace/ovrAvatarTextureAssetData.hpp"
// Including type: ovrAvatarMaterialState
#include "GlobalNamespace/ovrAvatarMaterialState.hpp"
// Including type: ovrAvatarRenderPartType
#include "GlobalNamespace/ovrAvatarRenderPartType.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRender
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRender.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: ovrAvatarHandGesture
#include "GlobalNamespace/ovrAvatarHandGesture.hpp"
// Including type: ovrAvatarExpressiveParameters
#include "GlobalNamespace/ovrAvatarExpressiveParameters.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2.hpp"
// Including type: ovrAvatarBlendShapeParams
#include "GlobalNamespace/ovrAvatarBlendShapeParams.hpp"
// Including type: ovrAvatarRenderPart_ProjectorRender
#include "GlobalNamespace/ovrAvatarRenderPart_ProjectorRender.hpp"
// Including type: ovrAvatarGazeTargets
#include "GlobalNamespace/ovrAvatarGazeTargets.hpp"
// Including type: ovrAvatarLights
#include "GlobalNamespace/ovrAvatarLights.hpp"
// Including type: ovrAvatarLogLevel
#include "GlobalNamespace/ovrAvatarLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LibFile
::StringW Oculus::Avatar::CAPI::_get_LibFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_LibFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "LibFile"));
}
// Autogenerated static field setter
// Set static field: static private System.String LibFile
void Oculus::Avatar::CAPI::_set_LibFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_LibFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "LibFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version AvatarSDKVersion
::System::Version* Oculus::Avatar::CAPI::_get_AvatarSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_AvatarSDKVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI", "AvatarSDKVersion"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version AvatarSDKVersion
void Oculus::Avatar::CAPI::_set_AvatarSDKVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_AvatarSDKVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "AvatarSDKVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeVisemeData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeVisemeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeVisemeData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeVisemeData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeVisemeData
void Oculus::Avatar::CAPI::_set_nativeVisemeData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeVisemeData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeVisemeData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeGazeTargetsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeGazeTargetsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeGazeTargetsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeGazeTargetsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeGazeTargetsData
void Oculus::Avatar::CAPI::_set_nativeGazeTargetsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeGazeTargetsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeGazeTargetsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeAvatarLightsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeAvatarLightsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeAvatarLightsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeAvatarLightsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeAvatarLightsData
void Oculus::Avatar::CAPI::_set_nativeAvatarLightsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeAvatarLightsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeAvatarLightsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr DebugLineCountData
::System::IntPtr Oculus::Avatar::CAPI::_get_DebugLineCountData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_DebugLineCountData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "DebugLineCountData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr DebugLineCountData
void Oculus::Avatar::CAPI::_set_DebugLineCountData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_DebugLineCountData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "DebugLineCountData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] scratchBufferFloat
::ArrayW<float> Oculus::Avatar::CAPI::_get_scratchBufferFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_scratchBufferFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Oculus.Avatar", "CAPI", "scratchBufferFloat"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] scratchBufferFloat
void Oculus::Avatar::CAPI::_set_scratchBufferFloat(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_scratchBufferFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "scratchBufferFloat", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject debugLineGo
::UnityEngine::GameObject* Oculus::Avatar::CAPI::_get_debugLineGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_debugLineGo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("Oculus.Avatar", "CAPI", "debugLineGo"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject debugLineGo
void Oculus::Avatar::CAPI::_set_debugLineGo(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_debugLineGo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "debugLineGo", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SDKRuntimePrefix
::StringW Oculus::Avatar::CAPI::_get_SDKRuntimePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_SDKRuntimePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "SDKRuntimePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String SDKRuntimePrefix
void Oculus::Avatar::CAPI::_set_SDKRuntimePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_SDKRuntimePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "SDKRuntimePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ovrPluginDLL
::StringW Oculus::Avatar::CAPI::_get_ovrPluginDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "ovrPluginDLL"));
}
// Autogenerated static field setter
// Set static field: static private System.String ovrPluginDLL
void Oculus::Avatar::CAPI::_set_ovrPluginDLL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginDLL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version ovrPluginVersion
::System::Version* Oculus::Avatar::CAPI::_get_ovrPluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI", "ovrPluginVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version ovrPluginVersion
void Oculus::Avatar::CAPI::_set_ovrPluginVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginVersion", value));
}
// Autogenerated method: Oculus.Avatar.CAPI..cctor
void Oculus::Avatar::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Initialize
void Oculus::Avatar::CAPI::ovrAvatar_Initialize(::StringW appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Avatar.CAPI.Initialize
void Oculus::Avatar::CAPI::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.Shutdown
void Oculus::Avatar::CAPI::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Shutdown
void Oculus::Avatar::CAPI::ovrAvatar_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Pop
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetType
::GlobalNamespace::ovrAvatarMessageType Oculus::Avatar::CAPI::ovrAvatarMessage_GetType(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification
::GlobalNamespace::ovrAvatarMessage_AvatarSpecification Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AvatarSpecification, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded
::GlobalNamespace::ovrAvatarMessage_AssetLoaded Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AssetLoaded, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Free
void Oculus::Avatar::CAPI::ovrAvatarMessage_Free(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Destroy
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetCombineMeshes
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes(::System::IntPtr specificationRequest, bool useCombinedMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetCombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(useCombinedMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, useCombinedMesh);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLevelOfDetail
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLevelOfDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(lod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecification
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecificationFromSpecRequest
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecificationFromSpecRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetExpressiveFlag
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag(::System::IntPtr specificationRequest, bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetExpressiveFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, enable);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_Create(::System::IntPtr avatarSpecification, ::GlobalNamespace::ovrAvatarCapabilities capabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecification), ::il2cpp_utils::ExtractType(capabilities)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarSpecification, capabilities);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Destroy
void Oculus::Avatar::CAPI::ovrAvatar_Destroy(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateBody
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform headPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(headPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, headPose);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization(::System::IntPtr avatar, ::ArrayW<float> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmData);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization_Native
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native(::System::IntPtr avatar, uint pcmDataSize, ByRef<::ArrayW<float>> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmDataSize), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmDataSize, byref(pcmData));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHands
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHandsWithType
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight, ::GlobalNamespace::ovrAvatarControllerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHandsWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight, type);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_Finalize
void Oculus::Avatar::CAPI::ovrAvatarPose_Finalize(::System::IntPtr avatar, float elapsedSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_Finalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(elapsedSeconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, elapsedSeconds);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Count
uint Oculus::Avatar::CAPI::ovrAvatarComponent_Count(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr avatar, uint index, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr componentPtr, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentPtr), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentPtr, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBaseComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBodyComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoading
void Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading(uint64_t assetID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoadingLOD
bool Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD(uint64_t assetId, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoadingLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId), ::il2cpp_utils::ExtractType(lod)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetId, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetType
::GlobalNamespace::ovrAvatarAssetType Oculus::Avatar::CAPI::ovrAvatarAsset_GetType(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarAssetType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData
::GlobalNamespace::ovrAvatarMeshAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData
::GlobalNamespace::ovrAvatarMeshAssetDataV2 Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetDataV2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeName
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshLastIndex
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshLastIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeVertices
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetAvatar
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs
::ArrayW<uint64_t> Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native(::System::IntPtr assetHandle, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData
void Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData(::System::IntPtr avatar, ByRef<uint64_t> textureID, ByRef<::UnityEngine::Vector4> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureID), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(textureID), byref(offset));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native(::System::IntPtr avatar, ::System::IntPtr textureIDPtr, ::System::IntPtr offsetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureIDPtr), ::il2cpp_utils::ExtractType(offsetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, textureIDPtr, offsetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData
::GlobalNamespace::ovrAvatarTextureAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTextureAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetType
::GlobalNamespace::ovrAvatarRenderPartType Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPartType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState
::GlobalNamespace::ovrAvatarPBSMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarPBSMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetExpressiveParameters
::GlobalNamespace::ovrAvatarExpressiveParameters Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetExpressiveParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarExpressiveParameters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitOnsetSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed(::System::IntPtr avatar, float onsetSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitOnsetSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(onsetSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, onsetSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitFalloffSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed(::System::IntPtr avatar, float falloffSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitFalloffSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(falloffSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, falloffSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemeMultiplier
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier(::System::IntPtr avatar, float visemeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemeMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemeMultiplier);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams
void Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams(::System::IntPtr renderPart, ByRef<::GlobalNamespace::ovrAvatarBlendShapeParams> blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, byref(blendParams));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender
::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates
::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native(::System::IntPtr avatar, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAssetCount
uint Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAssetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAsset
uint64_t Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdatePoseFromPacket
void Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket(::System::IntPtr avatar, ::System::IntPtr packet, float secondsFromStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdatePoseFromPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(secondsFromStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, packet, secondsFromStart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_BeginRecording
void Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_BeginRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_EndRecording
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_EndRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetSize
uint Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetDurationSeconds
float Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetDurationSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Free
void Oculus::Avatar::CAPI::ovrAvatarPacket_Free(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Write
bool Oculus::Avatar::CAPI::ovrAvatarPacket_Write(::System::IntPtr packet, uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Read
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_Read(uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetInternalForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetInternalForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarBlendShapeParams blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, blendParams);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic_Native
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native(::System::IntPtr avatar, ::System::IntPtr state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, state);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarVisemes visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes_Native
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native(::System::IntPtr avatar, ::System::IntPtr visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateWorldTransform
void Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateWorldTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, transform);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets(::GlobalNamespace::ovrAvatarGazeTargets targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native(::System::IntPtr targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets(uint targetCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights(::GlobalNamespace::ovrAvatarLights lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native(::System::IntPtr lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveLights
void Oculus::Avatar::CAPI::ovrAvatar_RemoveLights(uint lightCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.LoggingCallback
void Oculus::Avatar::CAPI::LoggingCallback(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "LoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RegisterLoggingCallback
void Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback(::Oculus::Avatar::CAPI::LoggingDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RegisterLoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLoggingLevel
void Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel(::GlobalNamespace::ovrAvatarLogLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLoggingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugTransforms_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugTransforms_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugLines_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugLines_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_DrawDebugLines
void Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_DrawDebugLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetDebugDrawContext
void Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetDebugDrawContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: Oculus.Avatar.CAPI.SendEvent
bool Oculus::Avatar::CAPI::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: Oculus.Avatar.CAPI._ovrp_GetVersion
::System::IntPtr Oculus::Avatar::CAPI::_ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrp_GetVersion
::StringW Oculus::Avatar::CAPI::ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.Invoke
void Oculus::Avatar::CAPI::LoggingDelegate::Invoke(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke(::System::IntPtr str, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, str, callback, object);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.EndInvoke
void Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Success
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Success
void Oculus::Avatar::CAPI::Result::_set_Success(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure
void Oculus::Avatar::CAPI::Result::_set_Failure(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidParameter
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidParameter
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotInitialized
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotInitialized
void Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidOperation
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidOperation
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_Unsupported
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_Unsupported
void Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotYetImplemented
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotYetImplemented
void Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_OperationFailed
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_OperationFailed
void Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InsufficientSize
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InsufficientSize
void Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Avatar::CAPI::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version", value));
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0..cctor
void Oculus::Avatar::CAPI::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0.ovrp_SendEvent2
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Avatar::CAPI::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
[[deprecated]] ::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
[[deprecated]] ::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
[[deprecated]] ::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
[[deprecated]] bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated]] int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
[[deprecated]] float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
[[deprecated]] float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
[[deprecated]] int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated]] ::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
[[deprecated]] ::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
[[deprecated]] int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
[[deprecated]] ::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
[[deprecated]] float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
[[deprecated]] int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass75_0
#include "OVR/AudioManager_--c__DisplayClass75_0.hpp"
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
[[deprecated]] bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
[[deprecated]] bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
[[deprecated]] bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
[[deprecated]] ::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
[[deprecated]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
[[deprecated]] bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
[[deprecated]] int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
[[deprecated]] float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
[[deprecated]] float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
[[deprecated]] float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
[[deprecated]] float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
[[deprecated]] ::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
[[deprecated]] float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
[[deprecated]] ::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
[[deprecated]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
[[deprecated]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
[[deprecated]] ::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass75_0
#include "OVR/AudioManager_--c__DisplayClass75_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass75_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass75_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c__DisplayClass75_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass75_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass75_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/OVR.<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/OVR.<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__75_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__75_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__75_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__75_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__75_1
void OVR::AudioManager::$$c::_set_$$9__75_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__75_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__75_1", value)));
}
// Autogenerated method: OVR.AudioManager/OVR.<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c.<FindFreeEmitter>b__75_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__75_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__75_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__75_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
[[deprecated]] ::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
[[deprecated]] float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
[[deprecated]] float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
[[deprecated]] float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated]] float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated]] float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
[[deprecated]] ::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
[[deprecated]] bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/OVR.FadeState state
[[deprecated]] ::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated]] ::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
[[deprecated]] ::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
[[deprecated]] float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
[[deprecated]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated]] float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
[[deprecated]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
[[deprecated]] int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
[[deprecated]] ::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
[[deprecated]] ::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
[[deprecated]] ::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/OVR.FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
[[deprecated]] ::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
[[deprecated]] bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
[[deprecated]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
[[deprecated]] bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
[[deprecated]] bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated]] float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
[[deprecated]] bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
[[deprecated]] float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
[[deprecated]] ::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated]] ::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
[[deprecated]] ::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated]] float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
[[deprecated]] ::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
[[deprecated]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
[[deprecated]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated]] float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
[[deprecated]] float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated]] ::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
[[deprecated]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
[[deprecated]] bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
[[deprecated]] ::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
[[deprecated]] ::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
[[deprecated]] bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
[[deprecated]] ::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
[[deprecated]] int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated]] int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
[[deprecated]] ::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated]] bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
[[deprecated]] ::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ICallbackData
#include "Steamworks/ICallbackData.hpp"
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ICallbackData.get_CallbackType
::Steamworks::CallbackType Steamworks::ICallbackData::get_CallbackType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ICallbackData::get_CallbackType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::ICallbackData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::CallbackType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Dispatch
#include "Steamworks/Dispatch.hpp"
// Including type: Steamworks.Dispatch/Steamworks.CallbackMsg_t
#include "Steamworks/Dispatch_CallbackMsg_t.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Steamworks.ICallbackData
#include "Steamworks/ICallbackData.hpp"
// Including type: Steamworks.Dispatch/Steamworks.<>c
#include "Steamworks/Dispatch_--c.hpp"
// Including type: Steamworks.Dispatch/Steamworks.<LoopClientAsync>d__22
#include "Steamworks/Dispatch_-LoopClientAsync-d__22.hpp"
// Including type: Steamworks.Dispatch/Steamworks.<>c__DisplayClass29_0`1
#include "Steamworks/Dispatch_--c__DisplayClass29_0_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`3<Steamworks.CallbackType,System.String,System.Boolean> OnDebugCallback
::System::Action_3<::Steamworks::CallbackType, ::StringW, bool>* Steamworks::Dispatch::_get_OnDebugCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_OnDebugCallback");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::Steamworks::CallbackType, ::StringW, bool>*>("Steamworks", "Dispatch", "OnDebugCallback")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`3<Steamworks.CallbackType,System.String,System.Boolean> OnDebugCallback
void Steamworks::Dispatch::_set_OnDebugCallback(::System::Action_3<::Steamworks::CallbackType, ::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_OnDebugCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "OnDebugCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Exception> OnException
::System::Action_1<::System::Exception*>* Steamworks::Dispatch::_get_OnException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_OnException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Exception*>*>("Steamworks", "Dispatch", "OnException"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Exception> OnException
void Steamworks::Dispatch::_set_OnException(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_OnException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "OnException", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xBBA20
// Autogenerated static field getter
// Get static field: static private Steamworks.Data.HSteamPipe <ClientPipe>k__BackingField
::Steamworks::Data::HSteamPipe Steamworks::Dispatch::_get_$ClientPipe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_$ClientPipe$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Steamworks::Data::HSteamPipe>("Steamworks", "Dispatch", "<ClientPipe>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Steamworks.Data.HSteamPipe <ClientPipe>k__BackingField
void Steamworks::Dispatch::_set_$ClientPipe$k__BackingField(::Steamworks::Data::HSteamPipe value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_$ClientPipe$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "<ClientPipe>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xBB920
// Autogenerated static field getter
// Get static field: static private Steamworks.Data.HSteamPipe <ServerPipe>k__BackingField
::Steamworks::Data::HSteamPipe Steamworks::Dispatch::_get_$ServerPipe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_$ServerPipe$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Steamworks::Data::HSteamPipe>("Steamworks", "Dispatch", "<ServerPipe>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Steamworks.Data.HSteamPipe <ServerPipe>k__BackingField
void Steamworks::Dispatch::_set_$ServerPipe$k__BackingField(::Steamworks::Data::HSteamPipe value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_$ServerPipe$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "<ServerPipe>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean runningFrame
bool Steamworks::Dispatch::_get_runningFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_runningFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Steamworks", "Dispatch", "runningFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean runningFrame
void Steamworks::Dispatch::_set_runningFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_runningFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "runningFrame", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Action`1<System.IntPtr>> actionsToCall
::System::Collections::Generic::List_1<::System::Action_1<::System::IntPtr>*>* Steamworks::Dispatch::_get_actionsToCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_actionsToCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::Action_1<::System::IntPtr>*>*>("Steamworks", "Dispatch", "actionsToCall"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Action`1<System.IntPtr>> actionsToCall
void Steamworks::Dispatch::_set_actionsToCall(::System::Collections::Generic::List_1<::System::Action_1<::System::IntPtr>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_actionsToCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "actionsToCall", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback> ResultCallbacks
::System::Collections::Generic::Dictionary_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>* Steamworks::Dispatch::_get_ResultCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_ResultCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>*>("Steamworks", "Dispatch", "ResultCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback> ResultCallbacks
void Steamworks::Dispatch::_set_ResultCallbacks(::System::Collections::Generic::Dictionary_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_ResultCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "ResultCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Steamworks.CallbackType,System.Collections.Generic.List`1<Steamworks.Dispatch/Steamworks.Callback>> Callbacks
::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Collections::Generic::List_1<::Steamworks::Dispatch::Callback>*>* Steamworks::Dispatch::_get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_get_Callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Collections::Generic::List_1<::Steamworks::Dispatch::Callback>*>*>("Steamworks", "Dispatch", "Callbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Steamworks.CallbackType,System.Collections.Generic.List`1<Steamworks.Dispatch/Steamworks.Callback>> Callbacks
void Steamworks::Dispatch::_set_Callbacks(::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Collections::Generic::List_1<::Steamworks::Dispatch::Callback>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::_set_Callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Dispatch", "Callbacks", value));
}
// Autogenerated method: Steamworks.Dispatch.get_ClientPipe
::Steamworks::Data::HSteamPipe Steamworks::Dispatch::get_ClientPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::get_ClientPipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "get_ClientPipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Data::HSteamPipe, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch.set_ClientPipe
void Steamworks::Dispatch::set_ClientPipe(::Steamworks::Data::HSteamPipe value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::set_ClientPipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "set_ClientPipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Steamworks.Dispatch.get_ServerPipe
::Steamworks::Data::HSteamPipe Steamworks::Dispatch::get_ServerPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::get_ServerPipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "get_ServerPipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Data::HSteamPipe, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch..cctor
void Steamworks::Dispatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch.SteamAPI_ManualDispatch_Init
void Steamworks::Dispatch::SteamAPI_ManualDispatch_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::SteamAPI_ManualDispatch_Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "SteamAPI_ManualDispatch_Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch.SteamAPI_ManualDispatch_RunFrame
void Steamworks::Dispatch::SteamAPI_ManualDispatch_RunFrame(::Steamworks::Data::HSteamPipe pipe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::SteamAPI_ManualDispatch_RunFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "SteamAPI_ManualDispatch_RunFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipe);
}
// Autogenerated method: Steamworks.Dispatch.SteamAPI_ManualDispatch_GetNextCallback
bool Steamworks::Dispatch::SteamAPI_ManualDispatch_GetNextCallback(::Steamworks::Data::HSteamPipe pipe, ByRef<::Steamworks::Dispatch::CallbackMsg_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::SteamAPI_ManualDispatch_GetNextCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "SteamAPI_ManualDispatch_GetNextCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipe), ::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipe, byref(msg));
}
// Autogenerated method: Steamworks.Dispatch.SteamAPI_ManualDispatch_FreeLastCallback
bool Steamworks::Dispatch::SteamAPI_ManualDispatch_FreeLastCallback(::Steamworks::Data::HSteamPipe pipe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::SteamAPI_ManualDispatch_FreeLastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "SteamAPI_ManualDispatch_FreeLastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipe)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipe);
}
// Autogenerated method: Steamworks.Dispatch.Init
void Steamworks::Dispatch::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch.Frame
void Steamworks::Dispatch::Frame(::Steamworks::Data::HSteamPipe pipe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipe);
}
// Autogenerated method: Steamworks.Dispatch.ProcessCallback
void Steamworks::Dispatch::ProcessCallback(::Steamworks::Dispatch::CallbackMsg_t msg, bool isServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::ProcessCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "ProcessCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(isServer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg, isServer);
}
// Autogenerated method: Steamworks.Dispatch.CallbackToString
::StringW Steamworks::Dispatch::CallbackToString(::Steamworks::CallbackType type, ::System::IntPtr data, int expectedsize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::CallbackToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "CallbackToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(expectedsize)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, data, expectedsize);
}
// Autogenerated method: Steamworks.Dispatch.ProcessResult
void Steamworks::Dispatch::ProcessResult(::Steamworks::Dispatch::CallbackMsg_t msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::ProcessResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "ProcessResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Steamworks.Dispatch.LoopClientAsync
void Steamworks::Dispatch::LoopClientAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::LoopClientAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "LoopClientAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch.ShutdownClient
void Steamworks::Dispatch::ShutdownClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::ShutdownClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch", "ShutdownClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Dispatch/Steamworks.<>c
#include "Steamworks/Dispatch_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Steamworks.Dispatch/Steamworks.<>c <>9
::Steamworks::Dispatch::$$c* Steamworks::Dispatch::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Steamworks::Dispatch::$$c*>("Steamworks", "Dispatch/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Steamworks.Dispatch/Steamworks.<>c <>9
void Steamworks::Dispatch::$$c::_set_$$9(::Steamworks::Dispatch::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Int32> <>9__20_0
::System::Func_2<::System::Reflection::FieldInfo*, int>* Steamworks::Dispatch::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, int>*>("Steamworks", "Dispatch/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Int32> <>9__20_0
void Steamworks::Dispatch::$$c::_set_$$9__20_0(::System::Func_2<::System::Reflection::FieldInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9__20_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<Steamworks.Dispatch/Steamworks.Callback> <>9__31_3
::System::Predicate_1<::Steamworks::Dispatch::Callback>* Steamworks::Dispatch::$$c::_get_$$9__31_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9__31_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Steamworks::Dispatch::Callback>*>("Steamworks", "Dispatch/<>c", "<>9__31_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<Steamworks.Dispatch/Steamworks.Callback> <>9__31_3
void Steamworks::Dispatch::$$c::_set_$$9__31_3(::System::Predicate_1<::Steamworks::Dispatch::Callback>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9__31_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9__31_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,System.Boolean> <>9__31_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, bool>* Steamworks::Dispatch::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, bool>*>("Steamworks", "Dispatch/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,System.Boolean> <>9__31_0
void Steamworks::Dispatch::$$c::_set_$$9__31_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9__31_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,System.UInt64> <>9__31_1
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, uint64_t>* Steamworks::Dispatch::$$c::_get_$$9__31_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9__31_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, uint64_t>*>("Steamworks", "Dispatch/<>c", "<>9__31_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,System.UInt64> <>9__31_1
void Steamworks::Dispatch::$$c::_set_$$9__31_1(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9__31_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9__31_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,Steamworks.Dispatch/Steamworks.ResultCallback> <>9__31_2
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, ::Steamworks::Dispatch::ResultCallback>* Steamworks::Dispatch::$$c::_get_$$9__31_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_get_$$9__31_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, ::Steamworks::Dispatch::ResultCallback>*>("Steamworks", "Dispatch/<>c", "<>9__31_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.UInt64,Steamworks.Dispatch/Steamworks.ResultCallback>,Steamworks.Dispatch/Steamworks.ResultCallback> <>9__31_2
void Steamworks::Dispatch::$$c::_set_$$9__31_2(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback>, ::Steamworks::Dispatch::ResultCallback>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::_set_$$9__31_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Steamworks", "Dispatch/<>c", "<>9__31_2", value)));
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c..cctor
void Steamworks::Dispatch::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "Dispatch/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c.<CallbackToString>b__20_0
int Steamworks::Dispatch::$$c::$CallbackToString$b__20_0(::System::Reflection::FieldInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::<CallbackToString>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CallbackToString>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c.<ShutdownClient>b__31_3
bool Steamworks::Dispatch::$$c::$ShutdownClient$b__31_3(::Steamworks::Dispatch::Callback x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::<ShutdownClient>b__31_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShutdownClient>b__31_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c.<ShutdownClient>b__31_0
bool Steamworks::Dispatch::$$c::$ShutdownClient$b__31_0(::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::<ShutdownClient>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShutdownClient>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c.<ShutdownClient>b__31_1
uint64_t Steamworks::Dispatch::$$c::$ShutdownClient$b__31_1(::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::<ShutdownClient>b__31_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShutdownClient>b__31_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, x);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<>c.<ShutdownClient>b__31_2
::Steamworks::Dispatch::ResultCallback Steamworks::Dispatch::$$c::$ShutdownClient$b__31_2(::System::Collections::Generic::KeyValuePair_2<uint64_t, ::Steamworks::Dispatch::ResultCallback> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$$c::<ShutdownClient>b__31_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShutdownClient>b__31_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Dispatch::ResultCallback, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Dispatch/Steamworks.<LoopClientAsync>d__22
#include "Steamworks/Dispatch_-LoopClientAsync-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$t__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::TaskAwaiter& Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$LoopClientAsync$d__22::dyn_$$u__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<LoopClientAsync>d__22.MoveNext
void Steamworks::Dispatch::$LoopClientAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$LoopClientAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::Dispatch::$LoopClientAsync$d__22*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.Dispatch/Steamworks.<LoopClientAsync>d__22.SetStateMachine
void Steamworks::Dispatch::$LoopClientAsync$d__22::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Dispatch::$LoopClientAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::Dispatch::$LoopClientAsync$d__22*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.SteamAPI
#include "Steamworks/SteamAPI.hpp"
// Including type: Steamworks.SteamAPI/Steamworks.Native
#include "Steamworks/SteamAPI_Native.hpp"
// Including type: Steamworks.Data.HSteamPipe
#include "Steamworks/Data/HSteamPipe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.SteamAPI.Init
bool Steamworks::SteamAPI::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.SteamAPI.GetHSteamPipe
::Steamworks::Data::HSteamPipe Steamworks::SteamAPI::GetHSteamPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::GetHSteamPipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI", "GetHSteamPipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Data::HSteamPipe, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.SteamAPI.RestartAppIfNecessary
bool Steamworks::SteamAPI::RestartAppIfNecessary(uint unOwnAppID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::RestartAppIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI", "RestartAppIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unOwnAppID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unOwnAppID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.SteamAPI/Steamworks.Native
#include "Steamworks/SteamAPI_Native.hpp"
// Including type: Steamworks.Data.HSteamPipe
#include "Steamworks/Data/HSteamPipe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.SteamAPI/Steamworks.Native.SteamAPI_Init
bool Steamworks::SteamAPI::Native::SteamAPI_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::Native::SteamAPI_Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI/Native", "SteamAPI_Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.SteamAPI/Steamworks.Native.SteamAPI_GetHSteamPipe
::Steamworks::Data::HSteamPipe Steamworks::SteamAPI::Native::SteamAPI_GetHSteamPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::Native::SteamAPI_GetHSteamPipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI/Native", "SteamAPI_GetHSteamPipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Data::HSteamPipe, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.SteamAPI/Steamworks.Native.SteamAPI_RestartAppIfNecessary
bool Steamworks::SteamAPI::Native::SteamAPI_RestartAppIfNecessary(uint unOwnAppID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamAPI::Native::SteamAPI_RestartAppIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "SteamAPI/Native", "SteamAPI_RestartAppIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unOwnAppID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unOwnAppID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.CallbackType
#include "Steamworks/CallbackType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamServersConnected
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamServersConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamServersConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamServersConnected"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamServersConnected
void Steamworks::CallbackType::_set_SteamServersConnected(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamServersConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamServersConnected", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamServerConnectFailure
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamServerConnectFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamServerConnectFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamServerConnectFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamServerConnectFailure
void Steamworks::CallbackType::_set_SteamServerConnectFailure(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamServerConnectFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamServerConnectFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamServersDisconnected
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamServersDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamServersDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamServersDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamServersDisconnected
void Steamworks::CallbackType::_set_SteamServersDisconnected(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamServersDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamServersDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ClientGameServerDeny
::Steamworks::CallbackType Steamworks::CallbackType::_get_ClientGameServerDeny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ClientGameServerDeny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ClientGameServerDeny"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ClientGameServerDeny
void Steamworks::CallbackType::_set_ClientGameServerDeny(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ClientGameServerDeny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ClientGameServerDeny", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSPolicyResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSPolicyResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSPolicyResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSPolicyResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSPolicyResponse
void Steamworks::CallbackType::_set_GSPolicyResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSPolicyResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSPolicyResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType IPCFailure
::Steamworks::CallbackType Steamworks::CallbackType::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType IPCFailure
void Steamworks::CallbackType::_set_IPCFailure(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LicensesUpdated
::Steamworks::CallbackType Steamworks::CallbackType::_get_LicensesUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LicensesUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LicensesUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LicensesUpdated
void Steamworks::CallbackType::_set_LicensesUpdated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LicensesUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LicensesUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ValidateAuthTicketResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_ValidateAuthTicketResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ValidateAuthTicketResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ValidateAuthTicketResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ValidateAuthTicketResponse
void Steamworks::CallbackType::_set_ValidateAuthTicketResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ValidateAuthTicketResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ValidateAuthTicketResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MicroTxnAuthorizationResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_MicroTxnAuthorizationResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MicroTxnAuthorizationResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MicroTxnAuthorizationResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MicroTxnAuthorizationResponse
void Steamworks::CallbackType::_set_MicroTxnAuthorizationResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MicroTxnAuthorizationResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MicroTxnAuthorizationResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType EncryptedAppTicketResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_EncryptedAppTicketResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_EncryptedAppTicketResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "EncryptedAppTicketResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType EncryptedAppTicketResponse
void Steamworks::CallbackType::_set_EncryptedAppTicketResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_EncryptedAppTicketResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "EncryptedAppTicketResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GetAuthSessionTicketResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_GetAuthSessionTicketResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GetAuthSessionTicketResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GetAuthSessionTicketResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GetAuthSessionTicketResponse
void Steamworks::CallbackType::_set_GetAuthSessionTicketResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GetAuthSessionTicketResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GetAuthSessionTicketResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameWebCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameWebCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameWebCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameWebCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameWebCallback
void Steamworks::CallbackType::_set_GameWebCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameWebCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameWebCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType StoreAuthURLResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_StoreAuthURLResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_StoreAuthURLResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "StoreAuthURLResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType StoreAuthURLResponse
void Steamworks::CallbackType::_set_StoreAuthURLResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_StoreAuthURLResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "StoreAuthURLResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MarketEligibilityResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_MarketEligibilityResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MarketEligibilityResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MarketEligibilityResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MarketEligibilityResponse
void Steamworks::CallbackType::_set_MarketEligibilityResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MarketEligibilityResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MarketEligibilityResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType DurationControl
::Steamworks::CallbackType Steamworks::CallbackType::_get_DurationControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_DurationControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "DurationControl"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType DurationControl
void Steamworks::CallbackType::_set_DurationControl(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_DurationControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "DurationControl", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSClientApprove
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSClientApprove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSClientApprove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSClientApprove"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSClientApprove
void Steamworks::CallbackType::_set_GSClientApprove(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSClientApprove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSClientApprove", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSClientDeny
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSClientDeny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSClientDeny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSClientDeny"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSClientDeny
void Steamworks::CallbackType::_set_GSClientDeny(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSClientDeny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSClientDeny", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSClientKick
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSClientKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSClientKick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSClientKick"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSClientKick
void Steamworks::CallbackType::_set_GSClientKick(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSClientKick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSClientKick", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSClientAchievementStatus
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSClientAchievementStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSClientAchievementStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSClientAchievementStatus"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSClientAchievementStatus
void Steamworks::CallbackType::_set_GSClientAchievementStatus(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSClientAchievementStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSClientAchievementStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSGameplayStats
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSGameplayStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSGameplayStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSGameplayStats"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSGameplayStats
void Steamworks::CallbackType::_set_GSGameplayStats(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSGameplayStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSGameplayStats", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSClientGroupStatus
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSClientGroupStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSClientGroupStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSClientGroupStatus"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSClientGroupStatus
void Steamworks::CallbackType::_set_GSClientGroupStatus(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSClientGroupStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSClientGroupStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSReputation
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSReputation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSReputation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSReputation"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSReputation
void Steamworks::CallbackType::_set_GSReputation(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSReputation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSReputation", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AssociateWithClanResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_AssociateWithClanResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AssociateWithClanResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AssociateWithClanResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AssociateWithClanResult
void Steamworks::CallbackType::_set_AssociateWithClanResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AssociateWithClanResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AssociateWithClanResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ComputeNewPlayerCompatibilityResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_ComputeNewPlayerCompatibilityResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ComputeNewPlayerCompatibilityResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ComputeNewPlayerCompatibilityResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ComputeNewPlayerCompatibilityResult
void Steamworks::CallbackType::_set_ComputeNewPlayerCompatibilityResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ComputeNewPlayerCompatibilityResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ComputeNewPlayerCompatibilityResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType PersonaStateChange
::Steamworks::CallbackType Steamworks::CallbackType::_get_PersonaStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_PersonaStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "PersonaStateChange"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType PersonaStateChange
void Steamworks::CallbackType::_set_PersonaStateChange(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_PersonaStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "PersonaStateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameOverlayActivated
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameOverlayActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameOverlayActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameOverlayActivated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameOverlayActivated
void Steamworks::CallbackType::_set_GameOverlayActivated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameOverlayActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameOverlayActivated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameServerChangeRequested
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameServerChangeRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameServerChangeRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameServerChangeRequested"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameServerChangeRequested
void Steamworks::CallbackType::_set_GameServerChangeRequested(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameServerChangeRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameServerChangeRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameLobbyJoinRequested
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameLobbyJoinRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameLobbyJoinRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameLobbyJoinRequested"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameLobbyJoinRequested
void Steamworks::CallbackType::_set_GameLobbyJoinRequested(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameLobbyJoinRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameLobbyJoinRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AvatarImageLoaded
::Steamworks::CallbackType Steamworks::CallbackType::_get_AvatarImageLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AvatarImageLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AvatarImageLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AvatarImageLoaded
void Steamworks::CallbackType::_set_AvatarImageLoaded(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AvatarImageLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AvatarImageLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ClanOfficerListResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_ClanOfficerListResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ClanOfficerListResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ClanOfficerListResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ClanOfficerListResponse
void Steamworks::CallbackType::_set_ClanOfficerListResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ClanOfficerListResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ClanOfficerListResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FriendRichPresenceUpdate
::Steamworks::CallbackType Steamworks::CallbackType::_get_FriendRichPresenceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FriendRichPresenceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FriendRichPresenceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FriendRichPresenceUpdate
void Steamworks::CallbackType::_set_FriendRichPresenceUpdate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FriendRichPresenceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FriendRichPresenceUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameRichPresenceJoinRequested
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameRichPresenceJoinRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameRichPresenceJoinRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameRichPresenceJoinRequested"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameRichPresenceJoinRequested
void Steamworks::CallbackType::_set_GameRichPresenceJoinRequested(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameRichPresenceJoinRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameRichPresenceJoinRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameConnectedClanChatMsg
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameConnectedClanChatMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameConnectedClanChatMsg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameConnectedClanChatMsg"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameConnectedClanChatMsg
void Steamworks::CallbackType::_set_GameConnectedClanChatMsg(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameConnectedClanChatMsg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameConnectedClanChatMsg", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameConnectedChatJoin
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameConnectedChatJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameConnectedChatJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameConnectedChatJoin"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameConnectedChatJoin
void Steamworks::CallbackType::_set_GameConnectedChatJoin(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameConnectedChatJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameConnectedChatJoin", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameConnectedChatLeave
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameConnectedChatLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameConnectedChatLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameConnectedChatLeave"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameConnectedChatLeave
void Steamworks::CallbackType::_set_GameConnectedChatLeave(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameConnectedChatLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameConnectedChatLeave", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType DownloadClanActivityCountsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_DownloadClanActivityCountsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_DownloadClanActivityCountsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "DownloadClanActivityCountsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType DownloadClanActivityCountsResult
void Steamworks::CallbackType::_set_DownloadClanActivityCountsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_DownloadClanActivityCountsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "DownloadClanActivityCountsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType JoinClanChatRoomCompletionResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_JoinClanChatRoomCompletionResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_JoinClanChatRoomCompletionResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "JoinClanChatRoomCompletionResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType JoinClanChatRoomCompletionResult
void Steamworks::CallbackType::_set_JoinClanChatRoomCompletionResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_JoinClanChatRoomCompletionResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "JoinClanChatRoomCompletionResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GameConnectedFriendChatMsg
::Steamworks::CallbackType Steamworks::CallbackType::_get_GameConnectedFriendChatMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GameConnectedFriendChatMsg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GameConnectedFriendChatMsg"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GameConnectedFriendChatMsg
void Steamworks::CallbackType::_set_GameConnectedFriendChatMsg(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GameConnectedFriendChatMsg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GameConnectedFriendChatMsg", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FriendsGetFollowerCount
::Steamworks::CallbackType Steamworks::CallbackType::_get_FriendsGetFollowerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FriendsGetFollowerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FriendsGetFollowerCount"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FriendsGetFollowerCount
void Steamworks::CallbackType::_set_FriendsGetFollowerCount(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FriendsGetFollowerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FriendsGetFollowerCount", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FriendsIsFollowing
::Steamworks::CallbackType Steamworks::CallbackType::_get_FriendsIsFollowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FriendsIsFollowing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FriendsIsFollowing"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FriendsIsFollowing
void Steamworks::CallbackType::_set_FriendsIsFollowing(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FriendsIsFollowing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FriendsIsFollowing", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FriendsEnumerateFollowingList
::Steamworks::CallbackType Steamworks::CallbackType::_get_FriendsEnumerateFollowingList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FriendsEnumerateFollowingList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FriendsEnumerateFollowingList"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FriendsEnumerateFollowingList
void Steamworks::CallbackType::_set_FriendsEnumerateFollowingList(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FriendsEnumerateFollowingList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FriendsEnumerateFollowingList", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SetPersonaNameResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_SetPersonaNameResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SetPersonaNameResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SetPersonaNameResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SetPersonaNameResponse
void Steamworks::CallbackType::_set_SetPersonaNameResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SetPersonaNameResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SetPersonaNameResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UnreadChatMessagesChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_UnreadChatMessagesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UnreadChatMessagesChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UnreadChatMessagesChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UnreadChatMessagesChanged
void Steamworks::CallbackType::_set_UnreadChatMessagesChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UnreadChatMessagesChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UnreadChatMessagesChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FavoritesListChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_FavoritesListChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FavoritesListChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FavoritesListChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FavoritesListChanged
void Steamworks::CallbackType::_set_FavoritesListChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FavoritesListChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FavoritesListChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyInvite
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyInvite"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyInvite
void Steamworks::CallbackType::_set_LobbyInvite(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyEnter
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyEnter"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyEnter
void Steamworks::CallbackType::_set_LobbyEnter(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyDataUpdate
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyDataUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyDataUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyDataUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyDataUpdate
void Steamworks::CallbackType::_set_LobbyDataUpdate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyDataUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyDataUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyChatUpdate
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyChatUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyChatUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyChatUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyChatUpdate
void Steamworks::CallbackType::_set_LobbyChatUpdate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyChatUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyChatUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyChatMsg
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyChatMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyChatMsg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyChatMsg"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyChatMsg
void Steamworks::CallbackType::_set_LobbyChatMsg(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyChatMsg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyChatMsg", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyGameCreated
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyGameCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyGameCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyGameCreated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyGameCreated
void Steamworks::CallbackType::_set_LobbyGameCreated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyGameCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyGameCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyMatchList
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyMatchList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyMatchList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyMatchList"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyMatchList
void Steamworks::CallbackType::_set_LobbyMatchList(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyMatchList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyMatchList", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyKicked
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyKicked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyKicked
void Steamworks::CallbackType::_set_LobbyKicked(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyKicked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LobbyCreated
::Steamworks::CallbackType Steamworks::CallbackType::_get_LobbyCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LobbyCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LobbyCreated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LobbyCreated
void Steamworks::CallbackType::_set_LobbyCreated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LobbyCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LobbyCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType PSNGameBootInviteResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_PSNGameBootInviteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_PSNGameBootInviteResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "PSNGameBootInviteResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType PSNGameBootInviteResult
void Steamworks::CallbackType::_set_PSNGameBootInviteResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_PSNGameBootInviteResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "PSNGameBootInviteResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FavoritesListAccountsUpdated
::Steamworks::CallbackType Steamworks::CallbackType::_get_FavoritesListAccountsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FavoritesListAccountsUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FavoritesListAccountsUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FavoritesListAccountsUpdated
void Steamworks::CallbackType::_set_FavoritesListAccountsUpdated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FavoritesListAccountsUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FavoritesListAccountsUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType IPCountry
::Steamworks::CallbackType Steamworks::CallbackType::_get_IPCountry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_IPCountry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "IPCountry"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType IPCountry
void Steamworks::CallbackType::_set_IPCountry(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_IPCountry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "IPCountry", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LowBatteryPower
::Steamworks::CallbackType Steamworks::CallbackType::_get_LowBatteryPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LowBatteryPower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LowBatteryPower"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LowBatteryPower
void Steamworks::CallbackType::_set_LowBatteryPower(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LowBatteryPower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LowBatteryPower", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamAPICallCompleted
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamAPICallCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamAPICallCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamAPICallCompleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamAPICallCompleted
void Steamworks::CallbackType::_set_SteamAPICallCompleted(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamAPICallCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamAPICallCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamShutdown
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamShutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamShutdown"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamShutdown
void Steamworks::CallbackType::_set_SteamShutdown(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamShutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamShutdown", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType CheckFileSignature
::Steamworks::CallbackType Steamworks::CallbackType::_get_CheckFileSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_CheckFileSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "CheckFileSignature"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType CheckFileSignature
void Steamworks::CallbackType::_set_CheckFileSignature(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_CheckFileSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "CheckFileSignature", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GamepadTextInputDismissed
::Steamworks::CallbackType Steamworks::CallbackType::_get_GamepadTextInputDismissed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GamepadTextInputDismissed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GamepadTextInputDismissed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GamepadTextInputDismissed
void Steamworks::CallbackType::_set_GamepadTextInputDismissed(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GamepadTextInputDismissed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GamepadTextInputDismissed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType DlcInstalled
::Steamworks::CallbackType Steamworks::CallbackType::_get_DlcInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_DlcInstalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "DlcInstalled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType DlcInstalled
void Steamworks::CallbackType::_set_DlcInstalled(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_DlcInstalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "DlcInstalled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RegisterActivationCodeResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_RegisterActivationCodeResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RegisterActivationCodeResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RegisterActivationCodeResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RegisterActivationCodeResponse
void Steamworks::CallbackType::_set_RegisterActivationCodeResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RegisterActivationCodeResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RegisterActivationCodeResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType NewUrlLaunchParameters
::Steamworks::CallbackType Steamworks::CallbackType::_get_NewUrlLaunchParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_NewUrlLaunchParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "NewUrlLaunchParameters"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType NewUrlLaunchParameters
void Steamworks::CallbackType::_set_NewUrlLaunchParameters(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_NewUrlLaunchParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "NewUrlLaunchParameters", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AppProofOfPurchaseKeyResponse
::Steamworks::CallbackType Steamworks::CallbackType::_get_AppProofOfPurchaseKeyResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AppProofOfPurchaseKeyResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AppProofOfPurchaseKeyResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AppProofOfPurchaseKeyResponse
void Steamworks::CallbackType::_set_AppProofOfPurchaseKeyResponse(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AppProofOfPurchaseKeyResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AppProofOfPurchaseKeyResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType FileDetailsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_FileDetailsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_FileDetailsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "FileDetailsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType FileDetailsResult
void Steamworks::CallbackType::_set_FileDetailsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_FileDetailsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "FileDetailsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserStatsReceived
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserStatsReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserStatsReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserStatsReceived"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserStatsReceived
void Steamworks::CallbackType::_set_UserStatsReceived(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserStatsReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserStatsReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserStatsStored
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserStatsStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserStatsStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserStatsStored"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserStatsStored
void Steamworks::CallbackType::_set_UserStatsStored(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserStatsStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserStatsStored", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserAchievementStored
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserAchievementStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserAchievementStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserAchievementStored"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserAchievementStored
void Steamworks::CallbackType::_set_UserAchievementStored(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserAchievementStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserAchievementStored", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LeaderboardFindResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_LeaderboardFindResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LeaderboardFindResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LeaderboardFindResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LeaderboardFindResult
void Steamworks::CallbackType::_set_LeaderboardFindResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LeaderboardFindResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LeaderboardFindResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LeaderboardScoresDownloaded
::Steamworks::CallbackType Steamworks::CallbackType::_get_LeaderboardScoresDownloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LeaderboardScoresDownloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LeaderboardScoresDownloaded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LeaderboardScoresDownloaded
void Steamworks::CallbackType::_set_LeaderboardScoresDownloaded(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LeaderboardScoresDownloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LeaderboardScoresDownloaded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LeaderboardScoreUploaded
::Steamworks::CallbackType Steamworks::CallbackType::_get_LeaderboardScoreUploaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LeaderboardScoreUploaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LeaderboardScoreUploaded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LeaderboardScoreUploaded
void Steamworks::CallbackType::_set_LeaderboardScoreUploaded(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LeaderboardScoreUploaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LeaderboardScoreUploaded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType NumberOfCurrentPlayers
::Steamworks::CallbackType Steamworks::CallbackType::_get_NumberOfCurrentPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_NumberOfCurrentPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "NumberOfCurrentPlayers"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType NumberOfCurrentPlayers
void Steamworks::CallbackType::_set_NumberOfCurrentPlayers(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_NumberOfCurrentPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "NumberOfCurrentPlayers", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserStatsUnloaded
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserStatsUnloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserStatsUnloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserStatsUnloaded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserStatsUnloaded
void Steamworks::CallbackType::_set_UserStatsUnloaded(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserStatsUnloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserStatsUnloaded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSStatsUnloaded
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSStatsUnloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSStatsUnloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSStatsUnloaded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSStatsUnloaded
void Steamworks::CallbackType::_set_GSStatsUnloaded(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSStatsUnloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSStatsUnloaded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserAchievementIconFetched
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserAchievementIconFetched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserAchievementIconFetched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserAchievementIconFetched"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserAchievementIconFetched
void Steamworks::CallbackType::_set_UserAchievementIconFetched(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserAchievementIconFetched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserAchievementIconFetched", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GlobalAchievementPercentagesReady
::Steamworks::CallbackType Steamworks::CallbackType::_get_GlobalAchievementPercentagesReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GlobalAchievementPercentagesReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GlobalAchievementPercentagesReady"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GlobalAchievementPercentagesReady
void Steamworks::CallbackType::_set_GlobalAchievementPercentagesReady(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GlobalAchievementPercentagesReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GlobalAchievementPercentagesReady", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType LeaderboardUGCSet
::Steamworks::CallbackType Steamworks::CallbackType::_get_LeaderboardUGCSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_LeaderboardUGCSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "LeaderboardUGCSet"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType LeaderboardUGCSet
void Steamworks::CallbackType::_set_LeaderboardUGCSet(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_LeaderboardUGCSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "LeaderboardUGCSet", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GlobalStatsReceived
::Steamworks::CallbackType Steamworks::CallbackType::_get_GlobalStatsReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GlobalStatsReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GlobalStatsReceived"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GlobalStatsReceived
void Steamworks::CallbackType::_set_GlobalStatsReceived(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GlobalStatsReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GlobalStatsReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType P2PSessionRequest
::Steamworks::CallbackType Steamworks::CallbackType::_get_P2PSessionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_P2PSessionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "P2PSessionRequest"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType P2PSessionRequest
void Steamworks::CallbackType::_set_P2PSessionRequest(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_P2PSessionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "P2PSessionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType P2PSessionConnectFail
::Steamworks::CallbackType Steamworks::CallbackType::_get_P2PSessionConnectFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_P2PSessionConnectFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "P2PSessionConnectFail"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType P2PSessionConnectFail
void Steamworks::CallbackType::_set_P2PSessionConnectFail(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_P2PSessionConnectFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "P2PSessionConnectFail", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamNetConnectionStatusChangedCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamNetConnectionStatusChangedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamNetConnectionStatusChangedCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamNetConnectionStatusChangedCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamNetConnectionStatusChangedCallback
void Steamworks::CallbackType::_set_SteamNetConnectionStatusChangedCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamNetConnectionStatusChangedCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamNetConnectionStatusChangedCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamNetAuthenticationStatus
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamNetAuthenticationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamNetAuthenticationStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamNetAuthenticationStatus"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamNetAuthenticationStatus
void Steamworks::CallbackType::_set_SteamNetAuthenticationStatus(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamNetAuthenticationStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamNetAuthenticationStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamRelayNetworkStatus
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamRelayNetworkStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamRelayNetworkStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamRelayNetworkStatus"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamRelayNetworkStatus
void Steamworks::CallbackType::_set_SteamRelayNetworkStatus(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamRelayNetworkStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamRelayNetworkStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageAppSyncedClient
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageAppSyncedClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageAppSyncedClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageAppSyncedClient"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageAppSyncedClient
void Steamworks::CallbackType::_set_RemoteStorageAppSyncedClient(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageAppSyncedClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageAppSyncedClient", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageAppSyncedServer
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageAppSyncedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageAppSyncedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageAppSyncedServer"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageAppSyncedServer
void Steamworks::CallbackType::_set_RemoteStorageAppSyncedServer(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageAppSyncedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageAppSyncedServer", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageAppSyncProgress
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageAppSyncProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageAppSyncProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageAppSyncProgress"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageAppSyncProgress
void Steamworks::CallbackType::_set_RemoteStorageAppSyncProgress(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageAppSyncProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageAppSyncProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageAppSyncStatusCheck
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageAppSyncStatusCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageAppSyncStatusCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageAppSyncStatusCheck"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageAppSyncStatusCheck
void Steamworks::CallbackType::_set_RemoteStorageAppSyncStatusCheck(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageAppSyncStatusCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageAppSyncStatusCheck", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageFileShareResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageFileShareResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageFileShareResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageFileShareResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageFileShareResult
void Steamworks::CallbackType::_set_RemoteStorageFileShareResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageFileShareResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageFileShareResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishFileResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishFileResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishFileResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishFileResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishFileResult
void Steamworks::CallbackType::_set_RemoteStoragePublishFileResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishFileResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishFileResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageDeletePublishedFileResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageDeletePublishedFileResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageDeletePublishedFileResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageDeletePublishedFileResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageDeletePublishedFileResult
void Steamworks::CallbackType::_set_RemoteStorageDeletePublishedFileResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageDeletePublishedFileResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageDeletePublishedFileResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserPublishedFilesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageEnumerateUserPublishedFilesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageEnumerateUserPublishedFilesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageEnumerateUserPublishedFilesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserPublishedFilesResult
void Steamworks::CallbackType::_set_RemoteStorageEnumerateUserPublishedFilesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageEnumerateUserPublishedFilesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageEnumerateUserPublishedFilesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageSubscribePublishedFileResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageSubscribePublishedFileResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageSubscribePublishedFileResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageSubscribePublishedFileResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageSubscribePublishedFileResult
void Steamworks::CallbackType::_set_RemoteStorageSubscribePublishedFileResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageSubscribePublishedFileResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageSubscribePublishedFileResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserSubscribedFilesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageEnumerateUserSubscribedFilesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageEnumerateUserSubscribedFilesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageEnumerateUserSubscribedFilesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserSubscribedFilesResult
void Steamworks::CallbackType::_set_RemoteStorageEnumerateUserSubscribedFilesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageEnumerateUserSubscribedFilesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageEnumerateUserSubscribedFilesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageUnsubscribePublishedFileResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageUnsubscribePublishedFileResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageUnsubscribePublishedFileResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageUnsubscribePublishedFileResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageUnsubscribePublishedFileResult
void Steamworks::CallbackType::_set_RemoteStorageUnsubscribePublishedFileResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageUnsubscribePublishedFileResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageUnsubscribePublishedFileResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageUpdatePublishedFileResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageUpdatePublishedFileResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageUpdatePublishedFileResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageUpdatePublishedFileResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageUpdatePublishedFileResult
void Steamworks::CallbackType::_set_RemoteStorageUpdatePublishedFileResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageUpdatePublishedFileResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageUpdatePublishedFileResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageDownloadUGCResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageDownloadUGCResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageDownloadUGCResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageDownloadUGCResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageDownloadUGCResult
void Steamworks::CallbackType::_set_RemoteStorageDownloadUGCResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageDownloadUGCResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageDownloadUGCResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageGetPublishedFileDetailsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageGetPublishedFileDetailsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageGetPublishedFileDetailsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageGetPublishedFileDetailsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageGetPublishedFileDetailsResult
void Steamworks::CallbackType::_set_RemoteStorageGetPublishedFileDetailsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageGetPublishedFileDetailsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageGetPublishedFileDetailsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageEnumerateWorkshopFilesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageEnumerateWorkshopFilesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageEnumerateWorkshopFilesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageEnumerateWorkshopFilesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageEnumerateWorkshopFilesResult
void Steamworks::CallbackType::_set_RemoteStorageEnumerateWorkshopFilesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageEnumerateWorkshopFilesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageEnumerateWorkshopFilesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageGetPublishedItemVoteDetailsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageGetPublishedItemVoteDetailsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageGetPublishedItemVoteDetailsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageGetPublishedItemVoteDetailsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageGetPublishedItemVoteDetailsResult
void Steamworks::CallbackType::_set_RemoteStorageGetPublishedItemVoteDetailsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageGetPublishedItemVoteDetailsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageGetPublishedItemVoteDetailsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishedFileSubscribed
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishedFileSubscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishedFileSubscribed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishedFileSubscribed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishedFileSubscribed
void Steamworks::CallbackType::_set_RemoteStoragePublishedFileSubscribed(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishedFileSubscribed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishedFileSubscribed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishedFileUnsubscribed
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishedFileUnsubscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishedFileUnsubscribed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishedFileUnsubscribed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishedFileUnsubscribed
void Steamworks::CallbackType::_set_RemoteStoragePublishedFileUnsubscribed(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishedFileUnsubscribed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishedFileUnsubscribed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishedFileDeleted
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishedFileDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishedFileDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishedFileDeleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishedFileDeleted
void Steamworks::CallbackType::_set_RemoteStoragePublishedFileDeleted(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishedFileDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishedFileDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageUpdateUserPublishedItemVoteResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageUpdateUserPublishedItemVoteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageUpdateUserPublishedItemVoteResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageUpdateUserPublishedItemVoteResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageUpdateUserPublishedItemVoteResult
void Steamworks::CallbackType::_set_RemoteStorageUpdateUserPublishedItemVoteResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageUpdateUserPublishedItemVoteResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageUpdateUserPublishedItemVoteResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageUserVoteDetails
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageUserVoteDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageUserVoteDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageUserVoteDetails"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageUserVoteDetails
void Steamworks::CallbackType::_set_RemoteStorageUserVoteDetails(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageUserVoteDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageUserVoteDetails", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserSharedWorkshopFilesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageEnumerateUserSharedWorkshopFilesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageEnumerateUserSharedWorkshopFilesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageEnumerateUserSharedWorkshopFilesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageEnumerateUserSharedWorkshopFilesResult
void Steamworks::CallbackType::_set_RemoteStorageEnumerateUserSharedWorkshopFilesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageEnumerateUserSharedWorkshopFilesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageEnumerateUserSharedWorkshopFilesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageSetUserPublishedFileActionResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageSetUserPublishedFileActionResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageSetUserPublishedFileActionResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageSetUserPublishedFileActionResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageSetUserPublishedFileActionResult
void Steamworks::CallbackType::_set_RemoteStorageSetUserPublishedFileActionResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageSetUserPublishedFileActionResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageSetUserPublishedFileActionResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageEnumeratePublishedFilesByUserActionResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageEnumeratePublishedFilesByUserActionResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageEnumeratePublishedFilesByUserActionResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageEnumeratePublishedFilesByUserActionResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageEnumeratePublishedFilesByUserActionResult
void Steamworks::CallbackType::_set_RemoteStorageEnumeratePublishedFilesByUserActionResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageEnumeratePublishedFilesByUserActionResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageEnumeratePublishedFilesByUserActionResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishFileProgress
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishFileProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishFileProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishFileProgress"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishFileProgress
void Steamworks::CallbackType::_set_RemoteStoragePublishFileProgress(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishFileProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishFileProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStoragePublishedFileUpdated
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStoragePublishedFileUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStoragePublishedFileUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStoragePublishedFileUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStoragePublishedFileUpdated
void Steamworks::CallbackType::_set_RemoteStoragePublishedFileUpdated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStoragePublishedFileUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStoragePublishedFileUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageFileWriteAsyncComplete
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageFileWriteAsyncComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageFileWriteAsyncComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageFileWriteAsyncComplete"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageFileWriteAsyncComplete
void Steamworks::CallbackType::_set_RemoteStorageFileWriteAsyncComplete(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageFileWriteAsyncComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageFileWriteAsyncComplete", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoteStorageFileReadAsyncComplete
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoteStorageFileReadAsyncComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoteStorageFileReadAsyncComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoteStorageFileReadAsyncComplete"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoteStorageFileReadAsyncComplete
void Steamworks::CallbackType::_set_RemoteStorageFileReadAsyncComplete(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoteStorageFileReadAsyncComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoteStorageFileReadAsyncComplete", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSStatsReceived
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSStatsReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSStatsReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSStatsReceived"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSStatsReceived
void Steamworks::CallbackType::_set_GSStatsReceived(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSStatsReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSStatsReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GSStatsStored
::Steamworks::CallbackType Steamworks::CallbackType::_get_GSStatsStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GSStatsStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GSStatsStored"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GSStatsStored
void Steamworks::CallbackType::_set_GSStatsStored(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GSStatsStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GSStatsStored", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTTPRequestCompleted
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTTPRequestCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTTPRequestCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTTPRequestCompleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTTPRequestCompleted
void Steamworks::CallbackType::_set_HTTPRequestCompleted(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTTPRequestCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTTPRequestCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTTPRequestHeadersReceived
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTTPRequestHeadersReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTTPRequestHeadersReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTTPRequestHeadersReceived"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTTPRequestHeadersReceived
void Steamworks::CallbackType::_set_HTTPRequestHeadersReceived(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTTPRequestHeadersReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTTPRequestHeadersReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTTPRequestDataReceived
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTTPRequestDataReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTTPRequestDataReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTTPRequestDataReceived"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTTPRequestDataReceived
void Steamworks::CallbackType::_set_HTTPRequestDataReceived(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTTPRequestDataReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTTPRequestDataReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ScreenshotReady
::Steamworks::CallbackType Steamworks::CallbackType::_get_ScreenshotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ScreenshotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ScreenshotReady"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ScreenshotReady
void Steamworks::CallbackType::_set_ScreenshotReady(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ScreenshotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ScreenshotReady", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ScreenshotRequested
::Steamworks::CallbackType Steamworks::CallbackType::_get_ScreenshotRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ScreenshotRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ScreenshotRequested"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ScreenshotRequested
void Steamworks::CallbackType::_set_ScreenshotRequested(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ScreenshotRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ScreenshotRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamUGCQueryCompleted
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamUGCQueryCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamUGCQueryCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamUGCQueryCompleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamUGCQueryCompleted
void Steamworks::CallbackType::_set_SteamUGCQueryCompleted(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamUGCQueryCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamUGCQueryCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamUGCRequestUGCDetailsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamUGCRequestUGCDetailsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamUGCRequestUGCDetailsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamUGCRequestUGCDetailsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamUGCRequestUGCDetailsResult
void Steamworks::CallbackType::_set_SteamUGCRequestUGCDetailsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamUGCRequestUGCDetailsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamUGCRequestUGCDetailsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType CreateItemResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_CreateItemResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_CreateItemResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "CreateItemResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType CreateItemResult
void Steamworks::CallbackType::_set_CreateItemResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_CreateItemResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "CreateItemResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SubmitItemUpdateResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_SubmitItemUpdateResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SubmitItemUpdateResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SubmitItemUpdateResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SubmitItemUpdateResult
void Steamworks::CallbackType::_set_SubmitItemUpdateResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SubmitItemUpdateResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SubmitItemUpdateResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ItemInstalled
::Steamworks::CallbackType Steamworks::CallbackType::_get_ItemInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ItemInstalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ItemInstalled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ItemInstalled
void Steamworks::CallbackType::_set_ItemInstalled(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ItemInstalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ItemInstalled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType DownloadItemResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_DownloadItemResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_DownloadItemResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "DownloadItemResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType DownloadItemResult
void Steamworks::CallbackType::_set_DownloadItemResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_DownloadItemResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "DownloadItemResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType UserFavoriteItemsListChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_UserFavoriteItemsListChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_UserFavoriteItemsListChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "UserFavoriteItemsListChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType UserFavoriteItemsListChanged
void Steamworks::CallbackType::_set_UserFavoriteItemsListChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_UserFavoriteItemsListChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "UserFavoriteItemsListChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SetUserItemVoteResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_SetUserItemVoteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SetUserItemVoteResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SetUserItemVoteResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SetUserItemVoteResult
void Steamworks::CallbackType::_set_SetUserItemVoteResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SetUserItemVoteResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SetUserItemVoteResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GetUserItemVoteResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_GetUserItemVoteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GetUserItemVoteResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GetUserItemVoteResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GetUserItemVoteResult
void Steamworks::CallbackType::_set_GetUserItemVoteResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GetUserItemVoteResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GetUserItemVoteResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType StartPlaytimeTrackingResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_StartPlaytimeTrackingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_StartPlaytimeTrackingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "StartPlaytimeTrackingResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType StartPlaytimeTrackingResult
void Steamworks::CallbackType::_set_StartPlaytimeTrackingResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_StartPlaytimeTrackingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "StartPlaytimeTrackingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType StopPlaytimeTrackingResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_StopPlaytimeTrackingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_StopPlaytimeTrackingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "StopPlaytimeTrackingResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType StopPlaytimeTrackingResult
void Steamworks::CallbackType::_set_StopPlaytimeTrackingResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_StopPlaytimeTrackingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "StopPlaytimeTrackingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AddUGCDependencyResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_AddUGCDependencyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AddUGCDependencyResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AddUGCDependencyResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AddUGCDependencyResult
void Steamworks::CallbackType::_set_AddUGCDependencyResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AddUGCDependencyResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AddUGCDependencyResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoveUGCDependencyResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoveUGCDependencyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoveUGCDependencyResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoveUGCDependencyResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoveUGCDependencyResult
void Steamworks::CallbackType::_set_RemoveUGCDependencyResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoveUGCDependencyResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoveUGCDependencyResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AddAppDependencyResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_AddAppDependencyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AddAppDependencyResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AddAppDependencyResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AddAppDependencyResult
void Steamworks::CallbackType::_set_AddAppDependencyResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AddAppDependencyResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AddAppDependencyResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RemoveAppDependencyResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_RemoveAppDependencyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RemoveAppDependencyResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RemoveAppDependencyResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RemoveAppDependencyResult
void Steamworks::CallbackType::_set_RemoveAppDependencyResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RemoveAppDependencyResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RemoveAppDependencyResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GetAppDependenciesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_GetAppDependenciesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GetAppDependenciesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GetAppDependenciesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GetAppDependenciesResult
void Steamworks::CallbackType::_set_GetAppDependenciesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GetAppDependenciesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GetAppDependenciesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType DeleteItemResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_DeleteItemResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_DeleteItemResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "DeleteItemResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType DeleteItemResult
void Steamworks::CallbackType::_set_DeleteItemResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_DeleteItemResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "DeleteItemResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamAppInstalled
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamAppInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamAppInstalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamAppInstalled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamAppInstalled
void Steamworks::CallbackType::_set_SteamAppInstalled(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamAppInstalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamAppInstalled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamAppUninstalled
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamAppUninstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamAppUninstalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamAppUninstalled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamAppUninstalled
void Steamworks::CallbackType::_set_SteamAppUninstalled(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamAppUninstalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamAppUninstalled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType PlaybackStatusHasChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_PlaybackStatusHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_PlaybackStatusHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "PlaybackStatusHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType PlaybackStatusHasChanged
void Steamworks::CallbackType::_set_PlaybackStatusHasChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_PlaybackStatusHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "PlaybackStatusHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType VolumeHasChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_VolumeHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_VolumeHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "VolumeHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType VolumeHasChanged
void Steamworks::CallbackType::_set_VolumeHasChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_VolumeHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "VolumeHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsVolume
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsVolume"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsVolume
void Steamworks::CallbackType::_set_MusicPlayerWantsVolume(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsVolume", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerSelectsQueueEntry
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerSelectsQueueEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerSelectsQueueEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerSelectsQueueEntry"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerSelectsQueueEntry
void Steamworks::CallbackType::_set_MusicPlayerSelectsQueueEntry(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerSelectsQueueEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerSelectsQueueEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerSelectsPlaylistEntry
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerSelectsPlaylistEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerSelectsPlaylistEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerSelectsPlaylistEntry"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerSelectsPlaylistEntry
void Steamworks::CallbackType::_set_MusicPlayerSelectsPlaylistEntry(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerSelectsPlaylistEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerSelectsPlaylistEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerRemoteWillActivate
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerRemoteWillActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerRemoteWillActivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerRemoteWillActivate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerRemoteWillActivate
void Steamworks::CallbackType::_set_MusicPlayerRemoteWillActivate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerRemoteWillActivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerRemoteWillActivate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerRemoteWillDeactivate
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerRemoteWillDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerRemoteWillDeactivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerRemoteWillDeactivate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerRemoteWillDeactivate
void Steamworks::CallbackType::_set_MusicPlayerRemoteWillDeactivate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerRemoteWillDeactivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerRemoteWillDeactivate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerRemoteToFront
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerRemoteToFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerRemoteToFront");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerRemoteToFront"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerRemoteToFront
void Steamworks::CallbackType::_set_MusicPlayerRemoteToFront(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerRemoteToFront");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerRemoteToFront", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWillQuit
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWillQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWillQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWillQuit"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWillQuit
void Steamworks::CallbackType::_set_MusicPlayerWillQuit(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWillQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWillQuit", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsPlay
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsPlay"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsPlay
void Steamworks::CallbackType::_set_MusicPlayerWantsPlay(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsPlay", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsPause
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsPause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsPause"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsPause
void Steamworks::CallbackType::_set_MusicPlayerWantsPause(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsPause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsPause", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsPlayPrevious
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsPlayPrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsPlayPrevious");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsPlayPrevious"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsPlayPrevious
void Steamworks::CallbackType::_set_MusicPlayerWantsPlayPrevious(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsPlayPrevious");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsPlayPrevious", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsPlayNext
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsPlayNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsPlayNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsPlayNext"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsPlayNext
void Steamworks::CallbackType::_set_MusicPlayerWantsPlayNext(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsPlayNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsPlayNext", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsShuffled
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsShuffled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsShuffled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsShuffled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsShuffled
void Steamworks::CallbackType::_set_MusicPlayerWantsShuffled(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsShuffled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsShuffled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsLooped
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsLooped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsLooped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsLooped"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsLooped
void Steamworks::CallbackType::_set_MusicPlayerWantsLooped(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsLooped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsLooped", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType MusicPlayerWantsPlayingRepeatStatus
::Steamworks::CallbackType Steamworks::CallbackType::_get_MusicPlayerWantsPlayingRepeatStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_MusicPlayerWantsPlayingRepeatStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "MusicPlayerWantsPlayingRepeatStatus"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType MusicPlayerWantsPlayingRepeatStatus
void Steamworks::CallbackType::_set_MusicPlayerWantsPlayingRepeatStatus(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_MusicPlayerWantsPlayingRepeatStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "MusicPlayerWantsPlayingRepeatStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_BrowserReady
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_BrowserReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_BrowserReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_BrowserReady"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_BrowserReady
void Steamworks::CallbackType::_set_HTML_BrowserReady(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_BrowserReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_BrowserReady", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_NeedsPaint
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_NeedsPaint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_NeedsPaint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_NeedsPaint"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_NeedsPaint
void Steamworks::CallbackType::_set_HTML_NeedsPaint(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_NeedsPaint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_NeedsPaint", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_StartRequest
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_StartRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_StartRequest"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_StartRequest
void Steamworks::CallbackType::_set_HTML_StartRequest(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_StartRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_StartRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_CloseBrowser
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_CloseBrowser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_CloseBrowser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_CloseBrowser"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_CloseBrowser
void Steamworks::CallbackType::_set_HTML_CloseBrowser(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_CloseBrowser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_CloseBrowser", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_URLChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_URLChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_URLChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_URLChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_URLChanged
void Steamworks::CallbackType::_set_HTML_URLChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_URLChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_URLChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_FinishedRequest
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_FinishedRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_FinishedRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_FinishedRequest"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_FinishedRequest
void Steamworks::CallbackType::_set_HTML_FinishedRequest(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_FinishedRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_FinishedRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_OpenLinkInNewTab
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_OpenLinkInNewTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_OpenLinkInNewTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_OpenLinkInNewTab"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_OpenLinkInNewTab
void Steamworks::CallbackType::_set_HTML_OpenLinkInNewTab(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_OpenLinkInNewTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_OpenLinkInNewTab", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_ChangedTitle
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_ChangedTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_ChangedTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_ChangedTitle"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_ChangedTitle
void Steamworks::CallbackType::_set_HTML_ChangedTitle(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_ChangedTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_ChangedTitle", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_SearchResults
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_SearchResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_SearchResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_SearchResults"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_SearchResults
void Steamworks::CallbackType::_set_HTML_SearchResults(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_SearchResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_SearchResults", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_CanGoBackAndForward
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_CanGoBackAndForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_CanGoBackAndForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_CanGoBackAndForward"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_CanGoBackAndForward
void Steamworks::CallbackType::_set_HTML_CanGoBackAndForward(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_CanGoBackAndForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_CanGoBackAndForward", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_HorizontalScroll
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_HorizontalScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_HorizontalScroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_HorizontalScroll"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_HorizontalScroll
void Steamworks::CallbackType::_set_HTML_HorizontalScroll(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_HorizontalScroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_HorizontalScroll", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_VerticalScroll
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_VerticalScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_VerticalScroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_VerticalScroll"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_VerticalScroll
void Steamworks::CallbackType::_set_HTML_VerticalScroll(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_VerticalScroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_VerticalScroll", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_LinkAtPosition
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_LinkAtPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_LinkAtPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_LinkAtPosition"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_LinkAtPosition
void Steamworks::CallbackType::_set_HTML_LinkAtPosition(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_LinkAtPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_LinkAtPosition", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_JSAlert
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_JSAlert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_JSAlert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_JSAlert"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_JSAlert
void Steamworks::CallbackType::_set_HTML_JSAlert(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_JSAlert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_JSAlert", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_JSConfirm
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_JSConfirm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_JSConfirm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_JSConfirm"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_JSConfirm
void Steamworks::CallbackType::_set_HTML_JSConfirm(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_JSConfirm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_JSConfirm", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_FileOpenDialog
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_FileOpenDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_FileOpenDialog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_FileOpenDialog"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_FileOpenDialog
void Steamworks::CallbackType::_set_HTML_FileOpenDialog(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_FileOpenDialog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_FileOpenDialog", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_NewWindow
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_NewWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_NewWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_NewWindow"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_NewWindow
void Steamworks::CallbackType::_set_HTML_NewWindow(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_NewWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_NewWindow", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_SetCursor
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_SetCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_SetCursor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_SetCursor"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_SetCursor
void Steamworks::CallbackType::_set_HTML_SetCursor(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_SetCursor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_SetCursor", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_StatusText
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_StatusText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_StatusText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_StatusText"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_StatusText
void Steamworks::CallbackType::_set_HTML_StatusText(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_StatusText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_StatusText", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_ShowToolTip
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_ShowToolTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_ShowToolTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_ShowToolTip"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_ShowToolTip
void Steamworks::CallbackType::_set_HTML_ShowToolTip(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_ShowToolTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_ShowToolTip", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_UpdateToolTip
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_UpdateToolTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_UpdateToolTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_UpdateToolTip"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_UpdateToolTip
void Steamworks::CallbackType::_set_HTML_UpdateToolTip(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_UpdateToolTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_UpdateToolTip", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_HideToolTip
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_HideToolTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_HideToolTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_HideToolTip"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_HideToolTip
void Steamworks::CallbackType::_set_HTML_HideToolTip(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_HideToolTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_HideToolTip", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType HTML_BrowserRestarted
::Steamworks::CallbackType Steamworks::CallbackType::_get_HTML_BrowserRestarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_HTML_BrowserRestarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "HTML_BrowserRestarted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType HTML_BrowserRestarted
void Steamworks::CallbackType::_set_HTML_BrowserRestarted(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_HTML_BrowserRestarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "HTML_BrowserRestarted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType BroadcastUploadStart
::Steamworks::CallbackType Steamworks::CallbackType::_get_BroadcastUploadStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_BroadcastUploadStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "BroadcastUploadStart"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType BroadcastUploadStart
void Steamworks::CallbackType::_set_BroadcastUploadStart(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_BroadcastUploadStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "BroadcastUploadStart", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType BroadcastUploadStop
::Steamworks::CallbackType Steamworks::CallbackType::_get_BroadcastUploadStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_BroadcastUploadStop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "BroadcastUploadStop"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType BroadcastUploadStop
void Steamworks::CallbackType::_set_BroadcastUploadStop(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_BroadcastUploadStop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "BroadcastUploadStop", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GetVideoURLResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_GetVideoURLResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GetVideoURLResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GetVideoURLResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GetVideoURLResult
void Steamworks::CallbackType::_set_GetVideoURLResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GetVideoURLResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GetVideoURLResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType GetOPFSettingsResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_GetOPFSettingsResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_GetOPFSettingsResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "GetOPFSettingsResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType GetOPFSettingsResult
void Steamworks::CallbackType::_set_GetOPFSettingsResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_GetOPFSettingsResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "GetOPFSettingsResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryResultReady
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryResultReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryResultReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryResultReady"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryResultReady
void Steamworks::CallbackType::_set_SteamInventoryResultReady(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryResultReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryResultReady", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryFullUpdate
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryFullUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryFullUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryFullUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryFullUpdate
void Steamworks::CallbackType::_set_SteamInventoryFullUpdate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryFullUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryFullUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryDefinitionUpdate
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryDefinitionUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryDefinitionUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryDefinitionUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryDefinitionUpdate
void Steamworks::CallbackType::_set_SteamInventoryDefinitionUpdate(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryDefinitionUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryDefinitionUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryEligiblePromoItemDefIDs
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryEligiblePromoItemDefIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryEligiblePromoItemDefIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryEligiblePromoItemDefIDs"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryEligiblePromoItemDefIDs
void Steamworks::CallbackType::_set_SteamInventoryEligiblePromoItemDefIDs(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryEligiblePromoItemDefIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryEligiblePromoItemDefIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryStartPurchaseResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryStartPurchaseResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryStartPurchaseResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryStartPurchaseResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryStartPurchaseResult
void Steamworks::CallbackType::_set_SteamInventoryStartPurchaseResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryStartPurchaseResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryStartPurchaseResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamInventoryRequestPricesResult
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamInventoryRequestPricesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamInventoryRequestPricesResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamInventoryRequestPricesResult"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamInventoryRequestPricesResult
void Steamworks::CallbackType::_set_SteamInventoryRequestPricesResult(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamInventoryRequestPricesResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamInventoryRequestPricesResult", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamParentalSettingsChanged
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamParentalSettingsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamParentalSettingsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamParentalSettingsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamParentalSettingsChanged
void Steamworks::CallbackType::_set_SteamParentalSettingsChanged(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamParentalSettingsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamParentalSettingsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SearchForGameProgressCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_SearchForGameProgressCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SearchForGameProgressCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SearchForGameProgressCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SearchForGameProgressCallback
void Steamworks::CallbackType::_set_SearchForGameProgressCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SearchForGameProgressCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SearchForGameProgressCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SearchForGameResultCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_SearchForGameResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SearchForGameResultCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SearchForGameResultCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SearchForGameResultCallback
void Steamworks::CallbackType::_set_SearchForGameResultCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SearchForGameResultCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SearchForGameResultCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RequestPlayersForGameProgressCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_RequestPlayersForGameProgressCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RequestPlayersForGameProgressCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RequestPlayersForGameProgressCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RequestPlayersForGameProgressCallback
void Steamworks::CallbackType::_set_RequestPlayersForGameProgressCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RequestPlayersForGameProgressCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RequestPlayersForGameProgressCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RequestPlayersForGameResultCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_RequestPlayersForGameResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RequestPlayersForGameResultCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RequestPlayersForGameResultCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RequestPlayersForGameResultCallback
void Steamworks::CallbackType::_set_RequestPlayersForGameResultCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RequestPlayersForGameResultCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RequestPlayersForGameResultCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType RequestPlayersForGameFinalResultCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_RequestPlayersForGameFinalResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_RequestPlayersForGameFinalResultCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "RequestPlayersForGameFinalResultCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType RequestPlayersForGameFinalResultCallback
void Steamworks::CallbackType::_set_RequestPlayersForGameFinalResultCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_RequestPlayersForGameFinalResultCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "RequestPlayersForGameFinalResultCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SubmitPlayerResultResultCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_SubmitPlayerResultResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SubmitPlayerResultResultCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SubmitPlayerResultResultCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SubmitPlayerResultResultCallback
void Steamworks::CallbackType::_set_SubmitPlayerResultResultCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SubmitPlayerResultResultCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SubmitPlayerResultResultCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType EndGameResultCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_EndGameResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_EndGameResultCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "EndGameResultCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType EndGameResultCallback
void Steamworks::CallbackType::_set_EndGameResultCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_EndGameResultCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "EndGameResultCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType JoinPartyCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_JoinPartyCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_JoinPartyCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "JoinPartyCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType JoinPartyCallback
void Steamworks::CallbackType::_set_JoinPartyCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_JoinPartyCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "JoinPartyCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType CreateBeaconCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_CreateBeaconCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_CreateBeaconCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "CreateBeaconCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType CreateBeaconCallback
void Steamworks::CallbackType::_set_CreateBeaconCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_CreateBeaconCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "CreateBeaconCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ReservationNotificationCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_ReservationNotificationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ReservationNotificationCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ReservationNotificationCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ReservationNotificationCallback
void Steamworks::CallbackType::_set_ReservationNotificationCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ReservationNotificationCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ReservationNotificationCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ChangeNumOpenSlotsCallback
::Steamworks::CallbackType Steamworks::CallbackType::_get_ChangeNumOpenSlotsCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ChangeNumOpenSlotsCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ChangeNumOpenSlotsCallback"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ChangeNumOpenSlotsCallback
void Steamworks::CallbackType::_set_ChangeNumOpenSlotsCallback(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ChangeNumOpenSlotsCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ChangeNumOpenSlotsCallback", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType AvailableBeaconLocationsUpdated
::Steamworks::CallbackType Steamworks::CallbackType::_get_AvailableBeaconLocationsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_AvailableBeaconLocationsUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "AvailableBeaconLocationsUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType AvailableBeaconLocationsUpdated
void Steamworks::CallbackType::_set_AvailableBeaconLocationsUpdated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_AvailableBeaconLocationsUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "AvailableBeaconLocationsUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType ActiveBeaconsUpdated
::Steamworks::CallbackType Steamworks::CallbackType::_get_ActiveBeaconsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_ActiveBeaconsUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "ActiveBeaconsUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType ActiveBeaconsUpdated
void Steamworks::CallbackType::_set_ActiveBeaconsUpdated(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_ActiveBeaconsUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "ActiveBeaconsUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamRemotePlaySessionConnected
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamRemotePlaySessionConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamRemotePlaySessionConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamRemotePlaySessionConnected"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamRemotePlaySessionConnected
void Steamworks::CallbackType::_set_SteamRemotePlaySessionConnected(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamRemotePlaySessionConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamRemotePlaySessionConnected", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CallbackType SteamRemotePlaySessionDisconnected
::Steamworks::CallbackType Steamworks::CallbackType::_get_SteamRemotePlaySessionDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_get_SteamRemotePlaySessionDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CallbackType>("Steamworks", "CallbackType", "SteamRemotePlaySessionDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CallbackType SteamRemotePlaySessionDisconnected
void Steamworks::CallbackType::_set_SteamRemotePlaySessionDisconnected(::Steamworks::CallbackType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::_set_SteamRemotePlaySessionDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackType", "SteamRemotePlaySessionDisconnected", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::CallbackType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.CallbackTypeFactory
#include "Steamworks/CallbackTypeFactory.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.Dictionary`2<Steamworks.CallbackType,System.Type> All
::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Type*>* Steamworks::CallbackTypeFactory::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackTypeFactory::_get_All");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Type*>*>("Steamworks", "CallbackTypeFactory", "All")));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.Dictionary`2<Steamworks.CallbackType,System.Type> All
void Steamworks::CallbackTypeFactory::_set_All(::System::Collections::Generic::Dictionary_2<::Steamworks::CallbackType, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackTypeFactory::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CallbackTypeFactory", "All", value));
}
// Autogenerated method: Steamworks.CallbackTypeFactory..cctor
void Steamworks::CallbackTypeFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CallbackTypeFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "CallbackTypeFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamApps
#include "Steamworks/ISteamApps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamApps.SteamAPI_SteamApps_v008
::System::IntPtr Steamworks::ISteamApps::SteamAPI_SteamApps_v008() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamApps::SteamAPI_SteamApps_v008");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamApps", "SteamAPI_SteamApps_v008", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamApps.SteamAPI_SteamGameServerApps_v008
::System::IntPtr Steamworks::ISteamApps::SteamAPI_SteamGameServerApps_v008() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamApps::SteamAPI_SteamGameServerApps_v008");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamApps", "SteamAPI_SteamGameServerApps_v008", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamApps.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamApps::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamApps::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamApps.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamApps::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamApps::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamFriends
#include "Steamworks/ISteamFriends.hpp"
// Including type: Steamworks.Utf8StringPointer
#include "Steamworks/Utf8StringPointer.hpp"
// Including type: Steamworks.SteamId
#include "Steamworks/SteamId.hpp"
// Including type: Steamworks.ChatEntryType
#include "Steamworks/ChatEntryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamFriends.SteamAPI_SteamFriends_v017
::System::IntPtr Steamworks::ISteamFriends::SteamAPI_SteamFriends_v017() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::SteamAPI_SteamFriends_v017");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamFriends", "SteamAPI_SteamFriends_v017", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamFriends._GetFriendPersonaName
::Steamworks::Utf8StringPointer Steamworks::ISteamFriends::_GetFriendPersonaName(::System::IntPtr self, ::Steamworks::SteamId steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::_GetFriendPersonaName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamFriends", "_GetFriendPersonaName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Utf8StringPointer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, steamIDFriend);
}
// Autogenerated method: Steamworks.ISteamFriends.GetFriendPersonaName
::StringW Steamworks::ISteamFriends::GetFriendPersonaName(::Steamworks::SteamId steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::GetFriendPersonaName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendPersonaName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: Steamworks.ISteamFriends._GetFriendMessage
int Steamworks::ISteamFriends::_GetFriendMessage(::System::IntPtr self, ::Steamworks::SteamId steamIDFriend, int iMessageID, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::_GetFriendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamFriends", "_GetFriendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(steamIDFriend), ::il2cpp_utils::ExtractType(iMessageID), ::il2cpp_utils::ExtractType(pvData), ::il2cpp_utils::ExtractType(cubData), ::il2cpp_utils::ExtractType(peChatEntryType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, steamIDFriend, iMessageID, pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: Steamworks.ISteamFriends.GetFriendMessage
int Steamworks::ISteamFriends::GetFriendMessage(::Steamworks::SteamId steamIDFriend, int iMessageID, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::GetFriendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend), ::il2cpp_utils::ExtractType(iMessageID), ::il2cpp_utils::ExtractType(pvData), ::il2cpp_utils::ExtractType(cubData), ::il2cpp_utils::ExtractType(peChatEntryType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend, iMessageID, pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: Steamworks.ISteamFriends.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamFriends::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamFriends::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamInput
#include "Steamworks/ISteamInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamInput.SteamAPI_SteamInput_v001
::System::IntPtr Steamworks::ISteamInput::SteamAPI_SteamInput_v001() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInput::SteamAPI_SteamInput_v001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInput", "SteamAPI_SteamInput_v001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamInput.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamInput::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInput::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamInventory
#include "Steamworks/ISteamInventory.hpp"
// Including type: Steamworks.Data.SteamInventoryResult_t
#include "Steamworks/Data/SteamInventoryResult_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamInventory.SteamAPI_SteamInventory_v003
::System::IntPtr Steamworks::ISteamInventory::SteamAPI_SteamInventory_v003() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::SteamAPI_SteamInventory_v003");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "SteamAPI_SteamInventory_v003", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamInventory.SteamAPI_SteamGameServerInventory_v003
::System::IntPtr Steamworks::ISteamInventory::SteamAPI_SteamGameServerInventory_v003() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::SteamAPI_SteamGameServerInventory_v003");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "SteamAPI_SteamGameServerInventory_v003", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamInventory._GetResultItems
bool Steamworks::ISteamInventory::_GetResultItems(::System::IntPtr self, ::Steamworks::Data::SteamInventoryResult_t resultHandle, ByRef<::ArrayW<::Steamworks::Data::SteamItemDetails_t>> pOutItemsArray, ByRef<uint> punOutItemsArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::_GetResultItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "_GetResultItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(resultHandle), ::il2cpp_utils::ExtractType(pOutItemsArray), ::il2cpp_utils::ExtractType(punOutItemsArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, resultHandle, byref(pOutItemsArray), byref(punOutItemsArraySize));
}
// Autogenerated method: Steamworks.ISteamInventory.GetResultItems
bool Steamworks::ISteamInventory::GetResultItems(::Steamworks::Data::SteamInventoryResult_t resultHandle, ByRef<::ArrayW<::Steamworks::Data::SteamItemDetails_t>> pOutItemsArray, ByRef<uint> punOutItemsArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::GetResultItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultHandle), ::il2cpp_utils::ExtractType(pOutItemsArray), ::il2cpp_utils::ExtractType(punOutItemsArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, resultHandle, byref(pOutItemsArray), byref(punOutItemsArraySize));
}
// Autogenerated method: Steamworks.ISteamInventory._GetResultItemProperty
bool Steamworks::ISteamInventory::_GetResultItemProperty(::System::IntPtr self, ::Steamworks::Data::SteamInventoryResult_t resultHandle, uint unItemIndex, ::StringW pchPropertyName, ::System::IntPtr pchValueBuffer, ByRef<uint> punValueBufferSizeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::_GetResultItemProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "_GetResultItemProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(resultHandle), ::il2cpp_utils::ExtractType(unItemIndex), ::il2cpp_utils::ExtractType(pchPropertyName), ::il2cpp_utils::ExtractType(pchValueBuffer), ::il2cpp_utils::ExtractType(punValueBufferSizeOut)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, resultHandle, unItemIndex, pchPropertyName, pchValueBuffer, byref(punValueBufferSizeOut));
}
// Autogenerated method: Steamworks.ISteamInventory.GetResultItemProperty
bool Steamworks::ISteamInventory::GetResultItemProperty(::Steamworks::Data::SteamInventoryResult_t resultHandle, uint unItemIndex, ::StringW pchPropertyName, ByRef<::StringW> pchValueBuffer, ByRef<uint> punValueBufferSizeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::GetResultItemProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultItemProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultHandle), ::il2cpp_utils::ExtractType(unItemIndex), ::il2cpp_utils::ExtractType(pchPropertyName), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractType(punValueBufferSizeOut)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, resultHandle, unItemIndex, pchPropertyName, byref(pchValueBuffer), byref(punValueBufferSizeOut));
}
// Autogenerated method: Steamworks.ISteamInventory._DestroyResult
void Steamworks::ISteamInventory::_DestroyResult(::System::IntPtr self, ::Steamworks::Data::SteamInventoryResult_t resultHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::_DestroyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "_DestroyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(resultHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, resultHandle);
}
// Autogenerated method: Steamworks.ISteamInventory.DestroyResult
void Steamworks::ISteamInventory::DestroyResult(::Steamworks::Data::SteamInventoryResult_t resultHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::DestroyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultHandle);
}
// Autogenerated method: Steamworks.ISteamInventory._GetItemDefinitionIDs
bool Steamworks::ISteamInventory::_GetItemDefinitionIDs(::System::IntPtr self, ByRef<::ArrayW<::Steamworks::Data::InventoryDefId>> pItemDefIDs, ByRef<uint> punItemDefIDsArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::_GetItemDefinitionIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamInventory", "_GetItemDefinitionIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(pItemDefIDs), ::il2cpp_utils::ExtractType(punItemDefIDsArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, byref(pItemDefIDs), byref(punItemDefIDsArraySize));
}
// Autogenerated method: Steamworks.ISteamInventory.GetItemDefinitionIDs
bool Steamworks::ISteamInventory::GetItemDefinitionIDs(ByRef<::ArrayW<::Steamworks::Data::InventoryDefId>> pItemDefIDs, ByRef<uint> punItemDefIDsArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::GetItemDefinitionIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetItemDefinitionIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pItemDefIDs), ::il2cpp_utils::ExtractType(punItemDefIDsArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pItemDefIDs), byref(punItemDefIDsArraySize));
}
// Autogenerated method: Steamworks.ISteamInventory.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamInventory::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamInventory.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamInventory::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamInventory::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamMatchmaking
#include "Steamworks/ISteamMatchmaking.hpp"
// Including type: Steamworks.SteamId
#include "Steamworks/SteamId.hpp"
// Including type: Steamworks.ChatEntryType
#include "Steamworks/ChatEntryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamMatchmaking.SteamAPI_SteamMatchmaking_v009
::System::IntPtr Steamworks::ISteamMatchmaking::SteamAPI_SteamMatchmaking_v009() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmaking::SteamAPI_SteamMatchmaking_v009");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamMatchmaking", "SteamAPI_SteamMatchmaking_v009", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamMatchmaking._GetLobbyChatEntry
int Steamworks::ISteamMatchmaking::_GetLobbyChatEntry(::System::IntPtr self, ::Steamworks::SteamId steamIDLobby, int iChatID, ByRef<::Steamworks::SteamId> pSteamIDUser, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmaking::_GetLobbyChatEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamMatchmaking", "_GetLobbyChatEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(steamIDLobby), ::il2cpp_utils::ExtractType(iChatID), ::il2cpp_utils::ExtractType(pSteamIDUser), ::il2cpp_utils::ExtractType(pvData), ::il2cpp_utils::ExtractType(cubData), ::il2cpp_utils::ExtractType(peChatEntryType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, steamIDLobby, iChatID, byref(pSteamIDUser), pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: Steamworks.ISteamMatchmaking.GetLobbyChatEntry
int Steamworks::ISteamMatchmaking::GetLobbyChatEntry(::Steamworks::SteamId steamIDLobby, int iChatID, ByRef<::Steamworks::SteamId> pSteamIDUser, ::System::IntPtr pvData, int cubData, ByRef<::Steamworks::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmaking::GetLobbyChatEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLobbyChatEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDLobby), ::il2cpp_utils::ExtractType(iChatID), ::il2cpp_utils::ExtractType(pSteamIDUser), ::il2cpp_utils::ExtractType(pvData), ::il2cpp_utils::ExtractType(cubData), ::il2cpp_utils::ExtractType(peChatEntryType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDLobby, iChatID, byref(pSteamIDUser), pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: Steamworks.ISteamMatchmaking.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamMatchmaking::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmaking::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamMatchmakingServers
#include "Steamworks/ISteamMatchmakingServers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamMatchmakingServers.SteamAPI_SteamMatchmakingServers_v002
::System::IntPtr Steamworks::ISteamMatchmakingServers::SteamAPI_SteamMatchmakingServers_v002() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmakingServers::SteamAPI_SteamMatchmakingServers_v002");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamMatchmakingServers", "SteamAPI_SteamMatchmakingServers_v002", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamMatchmakingServers.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamMatchmakingServers::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMatchmakingServers::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamMusic
#include "Steamworks/ISteamMusic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamMusic.SteamAPI_SteamMusic_v001
::System::IntPtr Steamworks::ISteamMusic::SteamAPI_SteamMusic_v001() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMusic::SteamAPI_SteamMusic_v001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamMusic", "SteamAPI_SteamMusic_v001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamMusic.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamMusic::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamMusic::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamNetworking
#include "Steamworks/ISteamNetworking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamNetworking.SteamAPI_SteamNetworking_v006
::System::IntPtr Steamworks::ISteamNetworking::SteamAPI_SteamNetworking_v006() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworking::SteamAPI_SteamNetworking_v006");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworking", "SteamAPI_SteamNetworking_v006", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworking.SteamAPI_SteamGameServerNetworking_v006
::System::IntPtr Steamworks::ISteamNetworking::SteamAPI_SteamGameServerNetworking_v006() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworking::SteamAPI_SteamGameServerNetworking_v006");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworking", "SteamAPI_SteamGameServerNetworking_v006", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworking.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamNetworking::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworking::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworking.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamNetworking::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworking::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamNetworkingSockets
#include "Steamworks/ISteamNetworkingSockets.hpp"
// Including type: Steamworks.Result
#include "Steamworks/Result.hpp"
// Including type: Steamworks.Data.Connection
#include "Steamworks/Data/Connection.hpp"
// Including type: Steamworks.Data.HSteamNetPollGroup
#include "Steamworks/Data/HSteamNetPollGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamNetworkingSockets.SteamAPI_SteamNetworkingSockets_v008
::System::IntPtr Steamworks::ISteamNetworkingSockets::SteamAPI_SteamNetworkingSockets_v008() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::SteamAPI_SteamNetworkingSockets_v008");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingSockets", "SteamAPI_SteamNetworkingSockets_v008", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.SteamAPI_SteamGameServerNetworkingSockets_v008
::System::IntPtr Steamworks::ISteamNetworkingSockets::SteamAPI_SteamGameServerNetworkingSockets_v008() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::SteamAPI_SteamGameServerNetworkingSockets_v008");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingSockets", "SteamAPI_SteamGameServerNetworkingSockets_v008", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets._AcceptConnection
::Steamworks::Result Steamworks::ISteamNetworkingSockets::_AcceptConnection(::System::IntPtr self, ::Steamworks::Data::Connection hConn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::_AcceptConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingSockets", "_AcceptConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(hConn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, hConn);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.AcceptConnection
::Steamworks::Result Steamworks::ISteamNetworkingSockets::AcceptConnection(::Steamworks::Data::Connection hConn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::AcceptConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hConn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::Result, false>(this, ___internal__method, hConn);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets._CloseConnection
bool Steamworks::ISteamNetworkingSockets::_CloseConnection(::System::IntPtr self, ::Steamworks::Data::Connection hPeer, int nReason, ::StringW pszDebug, bool bEnableLinger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::_CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingSockets", "_CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(hPeer), ::il2cpp_utils::ExtractType(nReason), ::il2cpp_utils::ExtractType(pszDebug), ::il2cpp_utils::ExtractType(bEnableLinger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, hPeer, nReason, pszDebug, bEnableLinger);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.CloseConnection
bool Steamworks::ISteamNetworkingSockets::CloseConnection(::Steamworks::Data::Connection hPeer, int nReason, ::StringW pszDebug, bool bEnableLinger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hPeer), ::il2cpp_utils::ExtractType(nReason), ::il2cpp_utils::ExtractType(pszDebug), ::il2cpp_utils::ExtractType(bEnableLinger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hPeer, nReason, pszDebug, bEnableLinger);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets._SetConnectionPollGroup
bool Steamworks::ISteamNetworkingSockets::_SetConnectionPollGroup(::System::IntPtr self, ::Steamworks::Data::Connection hConn, ::Steamworks::Data::HSteamNetPollGroup hPollGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::_SetConnectionPollGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingSockets", "_SetConnectionPollGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(hConn), ::il2cpp_utils::ExtractType(hPollGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, hConn, hPollGroup);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.SetConnectionPollGroup
bool Steamworks::ISteamNetworkingSockets::SetConnectionPollGroup(::Steamworks::Data::Connection hConn, ::Steamworks::Data::HSteamNetPollGroup hPollGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::SetConnectionPollGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionPollGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hConn), ::il2cpp_utils::ExtractType(hPollGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hConn, hPollGroup);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamNetworkingSockets::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworkingSockets.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamNetworkingSockets::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingSockets::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamNetworkingUtils
#include "Steamworks/ISteamNetworkingUtils.hpp"
// Including type: Steamworks.Data.NetIdentity
#include "Steamworks/Data/NetIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamNetworkingUtils.SteamAPI_SteamNetworkingUtils_v003
::System::IntPtr Steamworks::ISteamNetworkingUtils::SteamAPI_SteamNetworkingUtils_v003() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingUtils::SteamAPI_SteamNetworkingUtils_v003");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingUtils", "SteamAPI_SteamNetworkingUtils_v003", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamNetworkingUtils._SteamNetworkingIdentity_ToString
void Steamworks::ISteamNetworkingUtils::_SteamNetworkingIdentity_ToString(::System::IntPtr self, ByRef<::Steamworks::Data::NetIdentity> identity, ::System::IntPtr buf, uint cbBuf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingUtils::_SteamNetworkingIdentity_ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamNetworkingUtils", "_SteamNetworkingIdentity_ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(identity), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(cbBuf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, byref(identity), buf, cbBuf);
}
// Autogenerated method: Steamworks.ISteamNetworkingUtils.SteamNetworkingIdentity_ToString
void Steamworks::ISteamNetworkingUtils::SteamNetworkingIdentity_ToString(ByRef<::Steamworks::Data::NetIdentity> identity, ByRef<::StringW> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingUtils::SteamNetworkingIdentity_ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SteamNetworkingIdentity_ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(identity), byref(buf));
}
// Autogenerated method: Steamworks.ISteamNetworkingUtils.GetGlobalInterfacePointer
::System::IntPtr Steamworks::ISteamNetworkingUtils::GetGlobalInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamNetworkingUtils::GetGlobalInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamParentalSettings
#include "Steamworks/ISteamParentalSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamParentalSettings.SteamAPI_SteamParentalSettings_v001
::System::IntPtr Steamworks::ISteamParentalSettings::SteamAPI_SteamParentalSettings_v001() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamParentalSettings::SteamAPI_SteamParentalSettings_v001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamParentalSettings", "SteamAPI_SteamParentalSettings_v001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamParentalSettings.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamParentalSettings::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamParentalSettings::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamParties
#include "Steamworks/ISteamParties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamParties.SteamAPI_SteamParties_v002
::System::IntPtr Steamworks::ISteamParties::SteamAPI_SteamParties_v002() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamParties::SteamAPI_SteamParties_v002");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamParties", "SteamAPI_SteamParties_v002", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamParties.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamParties::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamParties::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamRemotePlay
#include "Steamworks/ISteamRemotePlay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamRemotePlay.SteamAPI_SteamRemotePlay_v001
::System::IntPtr Steamworks::ISteamRemotePlay::SteamAPI_SteamRemotePlay_v001() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamRemotePlay::SteamAPI_SteamRemotePlay_v001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamRemotePlay", "SteamAPI_SteamRemotePlay_v001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamRemotePlay.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamRemotePlay::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamRemotePlay::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamRemoteStorage
#include "Steamworks/ISteamRemoteStorage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamRemoteStorage.SteamAPI_SteamRemoteStorage_v014
::System::IntPtr Steamworks::ISteamRemoteStorage::SteamAPI_SteamRemoteStorage_v014() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamRemoteStorage::SteamAPI_SteamRemoteStorage_v014");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamRemoteStorage", "SteamAPI_SteamRemoteStorage_v014", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamRemoteStorage.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamRemoteStorage::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamRemoteStorage::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamScreenshots
#include "Steamworks/ISteamScreenshots.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamScreenshots.SteamAPI_SteamScreenshots_v003
::System::IntPtr Steamworks::ISteamScreenshots::SteamAPI_SteamScreenshots_v003() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamScreenshots::SteamAPI_SteamScreenshots_v003");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamScreenshots", "SteamAPI_SteamScreenshots_v003", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamScreenshots.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamScreenshots::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamScreenshots::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamUGC
#include "Steamworks/ISteamUGC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamUGC.SteamAPI_SteamUGC_v014
::System::IntPtr Steamworks::ISteamUGC::SteamAPI_SteamUGC_v014() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUGC::SteamAPI_SteamUGC_v014");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUGC", "SteamAPI_SteamUGC_v014", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUGC.SteamAPI_SteamGameServerUGC_v014
::System::IntPtr Steamworks::ISteamUGC::SteamAPI_SteamGameServerUGC_v014() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUGC::SteamAPI_SteamGameServerUGC_v014");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUGC", "SteamAPI_SteamGameServerUGC_v014", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUGC.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamUGC::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUGC::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUGC.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamUGC::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUGC::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamUser
#include "Steamworks/ISteamUser.hpp"
// Including type: Steamworks.SteamId
#include "Steamworks/SteamId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamUser.SteamAPI_SteamUser_v020
::System::IntPtr Steamworks::ISteamUser::SteamAPI_SteamUser_v020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::SteamAPI_SteamUser_v020");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUser", "SteamAPI_SteamUser_v020", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUser._GetSteamID
::Steamworks::SteamId Steamworks::ISteamUser::_GetSteamID(::System::IntPtr self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::_GetSteamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUser", "_GetSteamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::SteamId, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: Steamworks.ISteamUser.GetSteamID
::Steamworks::SteamId Steamworks::ISteamUser::GetSteamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::GetSteamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSteamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Steamworks::SteamId, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUser._GetVoiceOptimalSampleRate
uint Steamworks::ISteamUser::_GetVoiceOptimalSampleRate(::System::IntPtr self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::_GetVoiceOptimalSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUser", "_GetVoiceOptimalSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: Steamworks.ISteamUser.GetVoiceOptimalSampleRate
uint Steamworks::ISteamUser::GetVoiceOptimalSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::GetVoiceOptimalSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVoiceOptimalSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUser.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamUser::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUser::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamUserStats
#include "Steamworks/ISteamUserStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamUserStats.SteamAPI_SteamUserStats_v011
::System::IntPtr Steamworks::ISteamUserStats::SteamAPI_SteamUserStats_v011() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUserStats::SteamAPI_SteamUserStats_v011");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUserStats", "SteamAPI_SteamUserStats_v011", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUserStats._RequestCurrentStats
bool Steamworks::ISteamUserStats::_RequestCurrentStats(::System::IntPtr self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUserStats::_RequestCurrentStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUserStats", "_RequestCurrentStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: Steamworks.ISteamUserStats.RequestCurrentStats
bool Steamworks::ISteamUserStats::RequestCurrentStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUserStats::RequestCurrentStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestCurrentStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUserStats.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamUserStats::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUserStats::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamUtils
#include "Steamworks/ISteamUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamUtils.SteamAPI_SteamUtils_v009
::System::IntPtr Steamworks::ISteamUtils::SteamAPI_SteamUtils_v009() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUtils::SteamAPI_SteamUtils_v009");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUtils", "SteamAPI_SteamUtils_v009", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUtils.SteamAPI_SteamGameServerUtils_v009
::System::IntPtr Steamworks::ISteamUtils::SteamAPI_SteamGameServerUtils_v009() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUtils::SteamAPI_SteamGameServerUtils_v009");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamUtils", "SteamAPI_SteamGameServerUtils_v009", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUtils.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamUtils::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUtils::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Steamworks.ISteamUtils.GetServerInterfacePointer
::System::IntPtr Steamworks::ISteamUtils::GetServerInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamUtils::GetServerInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ISteamVideo
#include "Steamworks/ISteamVideo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Steamworks.ISteamVideo.SteamAPI_SteamVideo_v002
::System::IntPtr Steamworks::ISteamVideo::SteamAPI_SteamVideo_v002() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamVideo::SteamAPI_SteamVideo_v002");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Steamworks", "ISteamVideo", "SteamAPI_SteamVideo_v002", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Steamworks.ISteamVideo.GetUserInterfacePointer
::System::IntPtr Steamworks::ISteamVideo::GetUserInterfacePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ISteamVideo::GetUserInterfacePointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Steamworks::SteamInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.Result
#include "Steamworks/Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.Result None
::Steamworks::Result Steamworks::Result::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "None"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result None
void Steamworks::Result::_set_None(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result OK
::Steamworks::Result Steamworks::Result::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result OK
void Steamworks::Result::_set_OK(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Fail
::Steamworks::Result Steamworks::Result::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Fail
void Steamworks::Result::_set_Fail(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Fail", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NoConnection
::Steamworks::Result Steamworks::Result::_get_NoConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NoConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NoConnection"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NoConnection
void Steamworks::Result::_set_NoConnection(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NoConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NoConnection", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidPassword
::Steamworks::Result Steamworks::Result::_get_InvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidPassword
void Steamworks::Result::_set_InvalidPassword(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidPassword", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result LoggedInElsewhere
::Steamworks::Result Steamworks::Result::_get_LoggedInElsewhere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_LoggedInElsewhere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "LoggedInElsewhere"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result LoggedInElsewhere
void Steamworks::Result::_set_LoggedInElsewhere(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_LoggedInElsewhere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "LoggedInElsewhere", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidProtocolVer
::Steamworks::Result Steamworks::Result::_get_InvalidProtocolVer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidProtocolVer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidProtocolVer"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidProtocolVer
void Steamworks::Result::_set_InvalidProtocolVer(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidProtocolVer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidProtocolVer", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidParam
::Steamworks::Result Steamworks::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidParam
void Steamworks::Result::_set_InvalidParam(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result FileNotFound
::Steamworks::Result Steamworks::Result::_get_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result FileNotFound
void Steamworks::Result::_set_FileNotFound(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Busy
::Steamworks::Result Steamworks::Result::_get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Busy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Busy"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Busy
void Steamworks::Result::_set_Busy(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Busy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Busy", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidState
::Steamworks::Result Steamworks::Result::_get_InvalidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidState"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidState
void Steamworks::Result::_set_InvalidState(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidState", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidName
::Steamworks::Result Steamworks::Result::_get_InvalidName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidName"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidName
void Steamworks::Result::_set_InvalidName(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidName", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidEmail
::Steamworks::Result Steamworks::Result::_get_InvalidEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidEmail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidEmail"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidEmail
void Steamworks::Result::_set_InvalidEmail(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidEmail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidEmail", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result DuplicateName
::Steamworks::Result Steamworks::Result::_get_DuplicateName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_DuplicateName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "DuplicateName"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result DuplicateName
void Steamworks::Result::_set_DuplicateName(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_DuplicateName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "DuplicateName", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccessDenied
::Steamworks::Result Steamworks::Result::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccessDenied
void Steamworks::Result::_set_AccessDenied(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Timeout
::Steamworks::Result Steamworks::Result::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Timeout
void Steamworks::Result::_set_Timeout(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Banned
::Steamworks::Result Steamworks::Result::_get_Banned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Banned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Banned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Banned
void Steamworks::Result::_set_Banned(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Banned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Banned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountNotFound
::Steamworks::Result Steamworks::Result::_get_AccountNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountNotFound
void Steamworks::Result::_set_AccountNotFound(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidSteamID
::Steamworks::Result Steamworks::Result::_get_InvalidSteamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidSteamID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidSteamID"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidSteamID
void Steamworks::Result::_set_InvalidSteamID(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidSteamID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidSteamID", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ServiceUnavailable
::Steamworks::Result Steamworks::Result::_get_ServiceUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ServiceUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ServiceUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ServiceUnavailable
void Steamworks::Result::_set_ServiceUnavailable(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ServiceUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ServiceUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NotLoggedOn
::Steamworks::Result Steamworks::Result::_get_NotLoggedOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NotLoggedOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NotLoggedOn"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NotLoggedOn
void Steamworks::Result::_set_NotLoggedOn(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NotLoggedOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NotLoggedOn", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Pending
::Steamworks::Result Steamworks::Result::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Pending
void Steamworks::Result::_set_Pending(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result EncryptionFailure
::Steamworks::Result Steamworks::Result::_get_EncryptionFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_EncryptionFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "EncryptionFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result EncryptionFailure
void Steamworks::Result::_set_EncryptionFailure(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_EncryptionFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "EncryptionFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InsufficientPrivilege
::Steamworks::Result Steamworks::Result::_get_InsufficientPrivilege() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InsufficientPrivilege");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InsufficientPrivilege"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InsufficientPrivilege
void Steamworks::Result::_set_InsufficientPrivilege(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InsufficientPrivilege");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InsufficientPrivilege", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result LimitExceeded
::Steamworks::Result Steamworks::Result::_get_LimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_LimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "LimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result LimitExceeded
void Steamworks::Result::_set_LimitExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_LimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "LimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Revoked
::Steamworks::Result Steamworks::Result::_get_Revoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Revoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Revoked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Revoked
void Steamworks::Result::_set_Revoked(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Revoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Revoked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Expired
::Steamworks::Result Steamworks::Result::_get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Expired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Expired"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Expired
void Steamworks::Result::_set_Expired(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Expired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Expired", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AlreadyRedeemed
::Steamworks::Result Steamworks::Result::_get_AlreadyRedeemed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AlreadyRedeemed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AlreadyRedeemed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AlreadyRedeemed
void Steamworks::Result::_set_AlreadyRedeemed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AlreadyRedeemed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AlreadyRedeemed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result DuplicateRequest
::Steamworks::Result Steamworks::Result::_get_DuplicateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_DuplicateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "DuplicateRequest"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result DuplicateRequest
void Steamworks::Result::_set_DuplicateRequest(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_DuplicateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "DuplicateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AlreadyOwned
::Steamworks::Result Steamworks::Result::_get_AlreadyOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AlreadyOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AlreadyOwned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AlreadyOwned
void Steamworks::Result::_set_AlreadyOwned(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AlreadyOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AlreadyOwned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IPNotFound
::Steamworks::Result Steamworks::Result::_get_IPNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IPNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IPNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IPNotFound
void Steamworks::Result::_set_IPNotFound(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IPNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IPNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result PersistFailed
::Steamworks::Result Steamworks::Result::_get_PersistFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_PersistFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "PersistFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result PersistFailed
void Steamworks::Result::_set_PersistFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_PersistFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "PersistFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result LockingFailed
::Steamworks::Result Steamworks::Result::_get_LockingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_LockingFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "LockingFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result LockingFailed
void Steamworks::Result::_set_LockingFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_LockingFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "LockingFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result LogonSessionReplaced
::Steamworks::Result Steamworks::Result::_get_LogonSessionReplaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_LogonSessionReplaced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "LogonSessionReplaced"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result LogonSessionReplaced
void Steamworks::Result::_set_LogonSessionReplaced(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_LogonSessionReplaced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "LogonSessionReplaced", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ConnectFailed
::Steamworks::Result Steamworks::Result::_get_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ConnectFailed
void Steamworks::Result::_set_ConnectFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result HandshakeFailed
::Steamworks::Result Steamworks::Result::_get_HandshakeFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_HandshakeFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "HandshakeFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result HandshakeFailed
void Steamworks::Result::_set_HandshakeFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_HandshakeFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "HandshakeFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IOFailure
::Steamworks::Result Steamworks::Result::_get_IOFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IOFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IOFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IOFailure
void Steamworks::Result::_set_IOFailure(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IOFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IOFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RemoteDisconnect
::Steamworks::Result Steamworks::Result::_get_RemoteDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RemoteDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RemoteDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RemoteDisconnect
void Steamworks::Result::_set_RemoteDisconnect(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RemoteDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RemoteDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ShoppingCartNotFound
::Steamworks::Result Steamworks::Result::_get_ShoppingCartNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ShoppingCartNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ShoppingCartNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ShoppingCartNotFound
void Steamworks::Result::_set_ShoppingCartNotFound(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ShoppingCartNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ShoppingCartNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Blocked
::Steamworks::Result Steamworks::Result::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Blocked
void Steamworks::Result::_set_Blocked(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Blocked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Ignored
::Steamworks::Result Steamworks::Result::_get_Ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Ignored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Ignored"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Ignored
void Steamworks::Result::_set_Ignored(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Ignored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Ignored", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NoMatch
::Steamworks::Result Steamworks::Result::_get_NoMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NoMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NoMatch"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NoMatch
void Steamworks::Result::_set_NoMatch(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NoMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NoMatch", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountDisabled
::Steamworks::Result Steamworks::Result::_get_AccountDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountDisabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountDisabled
void Steamworks::Result::_set_AccountDisabled(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ServiceReadOnly
::Steamworks::Result Steamworks::Result::_get_ServiceReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ServiceReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ServiceReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ServiceReadOnly
void Steamworks::Result::_set_ServiceReadOnly(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ServiceReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ServiceReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountNotFeatured
::Steamworks::Result Steamworks::Result::_get_AccountNotFeatured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountNotFeatured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountNotFeatured"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountNotFeatured
void Steamworks::Result::_set_AccountNotFeatured(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountNotFeatured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountNotFeatured", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AdministratorOK
::Steamworks::Result Steamworks::Result::_get_AdministratorOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AdministratorOK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AdministratorOK"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AdministratorOK
void Steamworks::Result::_set_AdministratorOK(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AdministratorOK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AdministratorOK", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ContentVersion
::Steamworks::Result Steamworks::Result::_get_ContentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ContentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ContentVersion"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ContentVersion
void Steamworks::Result::_set_ContentVersion(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ContentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ContentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result TryAnotherCM
::Steamworks::Result Steamworks::Result::_get_TryAnotherCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_TryAnotherCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "TryAnotherCM"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result TryAnotherCM
void Steamworks::Result::_set_TryAnotherCM(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_TryAnotherCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "TryAnotherCM", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result PasswordRequiredToKickSession
::Steamworks::Result Steamworks::Result::_get_PasswordRequiredToKickSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_PasswordRequiredToKickSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "PasswordRequiredToKickSession"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result PasswordRequiredToKickSession
void Steamworks::Result::_set_PasswordRequiredToKickSession(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_PasswordRequiredToKickSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "PasswordRequiredToKickSession", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AlreadyLoggedInElsewhere
::Steamworks::Result Steamworks::Result::_get_AlreadyLoggedInElsewhere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AlreadyLoggedInElsewhere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AlreadyLoggedInElsewhere"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AlreadyLoggedInElsewhere
void Steamworks::Result::_set_AlreadyLoggedInElsewhere(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AlreadyLoggedInElsewhere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AlreadyLoggedInElsewhere", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Suspended
::Steamworks::Result Steamworks::Result::_get_Suspended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Suspended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Suspended"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Suspended
void Steamworks::Result::_set_Suspended(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Suspended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Suspended", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Cancelled
::Steamworks::Result Steamworks::Result::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Cancelled
void Steamworks::Result::_set_Cancelled(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result DataCorruption
::Steamworks::Result Steamworks::Result::_get_DataCorruption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_DataCorruption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "DataCorruption"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result DataCorruption
void Steamworks::Result::_set_DataCorruption(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_DataCorruption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "DataCorruption", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result DiskFull
::Steamworks::Result Steamworks::Result::_get_DiskFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_DiskFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "DiskFull"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result DiskFull
void Steamworks::Result::_set_DiskFull(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_DiskFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "DiskFull", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RemoteCallFailed
::Steamworks::Result Steamworks::Result::_get_RemoteCallFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RemoteCallFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RemoteCallFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RemoteCallFailed
void Steamworks::Result::_set_RemoteCallFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RemoteCallFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RemoteCallFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result PasswordUnset
::Steamworks::Result Steamworks::Result::_get_PasswordUnset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_PasswordUnset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "PasswordUnset"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result PasswordUnset
void Steamworks::Result::_set_PasswordUnset(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_PasswordUnset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "PasswordUnset", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ExternalAccountUnlinked
::Steamworks::Result Steamworks::Result::_get_ExternalAccountUnlinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ExternalAccountUnlinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ExternalAccountUnlinked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ExternalAccountUnlinked
void Steamworks::Result::_set_ExternalAccountUnlinked(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ExternalAccountUnlinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ExternalAccountUnlinked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result PSNTicketInvalid
::Steamworks::Result Steamworks::Result::_get_PSNTicketInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_PSNTicketInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "PSNTicketInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result PSNTicketInvalid
void Steamworks::Result::_set_PSNTicketInvalid(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_PSNTicketInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "PSNTicketInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ExternalAccountAlreadyLinked
::Steamworks::Result Steamworks::Result::_get_ExternalAccountAlreadyLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ExternalAccountAlreadyLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ExternalAccountAlreadyLinked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ExternalAccountAlreadyLinked
void Steamworks::Result::_set_ExternalAccountAlreadyLinked(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ExternalAccountAlreadyLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ExternalAccountAlreadyLinked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RemoteFileConflict
::Steamworks::Result Steamworks::Result::_get_RemoteFileConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RemoteFileConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RemoteFileConflict"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RemoteFileConflict
void Steamworks::Result::_set_RemoteFileConflict(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RemoteFileConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RemoteFileConflict", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IllegalPassword
::Steamworks::Result Steamworks::Result::_get_IllegalPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IllegalPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IllegalPassword"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IllegalPassword
void Steamworks::Result::_set_IllegalPassword(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IllegalPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IllegalPassword", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result SameAsPreviousValue
::Steamworks::Result Steamworks::Result::_get_SameAsPreviousValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_SameAsPreviousValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "SameAsPreviousValue"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result SameAsPreviousValue
void Steamworks::Result::_set_SameAsPreviousValue(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_SameAsPreviousValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "SameAsPreviousValue", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLogonDenied
::Steamworks::Result Steamworks::Result::_get_AccountLogonDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLogonDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLogonDenied"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLogonDenied
void Steamworks::Result::_set_AccountLogonDenied(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLogonDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLogonDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result CannotUseOldPassword
::Steamworks::Result Steamworks::Result::_get_CannotUseOldPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_CannotUseOldPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "CannotUseOldPassword"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result CannotUseOldPassword
void Steamworks::Result::_set_CannotUseOldPassword(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_CannotUseOldPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "CannotUseOldPassword", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidLoginAuthCode
::Steamworks::Result Steamworks::Result::_get_InvalidLoginAuthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidLoginAuthCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidLoginAuthCode"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidLoginAuthCode
void Steamworks::Result::_set_InvalidLoginAuthCode(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidLoginAuthCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidLoginAuthCode", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLogonDeniedNoMail
::Steamworks::Result Steamworks::Result::_get_AccountLogonDeniedNoMail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLogonDeniedNoMail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLogonDeniedNoMail"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLogonDeniedNoMail
void Steamworks::Result::_set_AccountLogonDeniedNoMail(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLogonDeniedNoMail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLogonDeniedNoMail", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result HardwareNotCapableOfIPT
::Steamworks::Result Steamworks::Result::_get_HardwareNotCapableOfIPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_HardwareNotCapableOfIPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "HardwareNotCapableOfIPT"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result HardwareNotCapableOfIPT
void Steamworks::Result::_set_HardwareNotCapableOfIPT(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_HardwareNotCapableOfIPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "HardwareNotCapableOfIPT", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IPTInitError
::Steamworks::Result Steamworks::Result::_get_IPTInitError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IPTInitError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IPTInitError"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IPTInitError
void Steamworks::Result::_set_IPTInitError(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IPTInitError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IPTInitError", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ParentalControlRestricted
::Steamworks::Result Steamworks::Result::_get_ParentalControlRestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ParentalControlRestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ParentalControlRestricted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ParentalControlRestricted
void Steamworks::Result::_set_ParentalControlRestricted(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ParentalControlRestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ParentalControlRestricted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result FacebookQueryError
::Steamworks::Result Steamworks::Result::_get_FacebookQueryError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_FacebookQueryError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "FacebookQueryError"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result FacebookQueryError
void Steamworks::Result::_set_FacebookQueryError(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_FacebookQueryError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "FacebookQueryError", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ExpiredLoginAuthCode
::Steamworks::Result Steamworks::Result::_get_ExpiredLoginAuthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ExpiredLoginAuthCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ExpiredLoginAuthCode"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ExpiredLoginAuthCode
void Steamworks::Result::_set_ExpiredLoginAuthCode(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ExpiredLoginAuthCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ExpiredLoginAuthCode", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IPLoginRestrictionFailed
::Steamworks::Result Steamworks::Result::_get_IPLoginRestrictionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IPLoginRestrictionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IPLoginRestrictionFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IPLoginRestrictionFailed
void Steamworks::Result::_set_IPLoginRestrictionFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IPLoginRestrictionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IPLoginRestrictionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLockedDown
::Steamworks::Result Steamworks::Result::_get_AccountLockedDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLockedDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLockedDown"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLockedDown
void Steamworks::Result::_set_AccountLockedDown(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLockedDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLockedDown", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLogonDeniedVerifiedEmailRequired
::Steamworks::Result Steamworks::Result::_get_AccountLogonDeniedVerifiedEmailRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLogonDeniedVerifiedEmailRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLogonDeniedVerifiedEmailRequired"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLogonDeniedVerifiedEmailRequired
void Steamworks::Result::_set_AccountLogonDeniedVerifiedEmailRequired(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLogonDeniedVerifiedEmailRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLogonDeniedVerifiedEmailRequired", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NoMatchingURL
::Steamworks::Result Steamworks::Result::_get_NoMatchingURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NoMatchingURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NoMatchingURL"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NoMatchingURL
void Steamworks::Result::_set_NoMatchingURL(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NoMatchingURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NoMatchingURL", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result BadResponse
::Steamworks::Result Steamworks::Result::_get_BadResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_BadResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "BadResponse"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result BadResponse
void Steamworks::Result::_set_BadResponse(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_BadResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "BadResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RequirePasswordReEntry
::Steamworks::Result Steamworks::Result::_get_RequirePasswordReEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RequirePasswordReEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RequirePasswordReEntry"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RequirePasswordReEntry
void Steamworks::Result::_set_RequirePasswordReEntry(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RequirePasswordReEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RequirePasswordReEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ValueOutOfRange
::Steamworks::Result Steamworks::Result::_get_ValueOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ValueOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ValueOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ValueOutOfRange
void Steamworks::Result::_set_ValueOutOfRange(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ValueOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ValueOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result UnexpectedError
::Steamworks::Result Steamworks::Result::_get_UnexpectedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_UnexpectedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "UnexpectedError"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result UnexpectedError
void Steamworks::Result::_set_UnexpectedError(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_UnexpectedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "UnexpectedError", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result Disabled
::Steamworks::Result Steamworks::Result::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result Disabled
void Steamworks::Result::_set_Disabled(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidCEGSubmission
::Steamworks::Result Steamworks::Result::_get_InvalidCEGSubmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidCEGSubmission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidCEGSubmission"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidCEGSubmission
void Steamworks::Result::_set_InvalidCEGSubmission(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidCEGSubmission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidCEGSubmission", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RestrictedDevice
::Steamworks::Result Steamworks::Result::_get_RestrictedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RestrictedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RestrictedDevice"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RestrictedDevice
void Steamworks::Result::_set_RestrictedDevice(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RestrictedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RestrictedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RegionLocked
::Steamworks::Result Steamworks::Result::_get_RegionLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RegionLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RegionLocked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RegionLocked
void Steamworks::Result::_set_RegionLocked(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RegionLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RegionLocked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RateLimitExceeded
::Steamworks::Result Steamworks::Result::_get_RateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RateLimitExceeded
void Steamworks::Result::_set_RateLimitExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLoginDeniedNeedTwoFactor
::Steamworks::Result Steamworks::Result::_get_AccountLoginDeniedNeedTwoFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLoginDeniedNeedTwoFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLoginDeniedNeedTwoFactor"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLoginDeniedNeedTwoFactor
void Steamworks::Result::_set_AccountLoginDeniedNeedTwoFactor(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLoginDeniedNeedTwoFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLoginDeniedNeedTwoFactor", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ItemDeleted
::Steamworks::Result Steamworks::Result::_get_ItemDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ItemDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ItemDeleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ItemDeleted
void Steamworks::Result::_set_ItemDeleted(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ItemDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ItemDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLoginDeniedThrottle
::Steamworks::Result Steamworks::Result::_get_AccountLoginDeniedThrottle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLoginDeniedThrottle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLoginDeniedThrottle"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLoginDeniedThrottle
void Steamworks::Result::_set_AccountLoginDeniedThrottle(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLoginDeniedThrottle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLoginDeniedThrottle", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result TwoFactorCodeMismatch
::Steamworks::Result Steamworks::Result::_get_TwoFactorCodeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_TwoFactorCodeMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "TwoFactorCodeMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result TwoFactorCodeMismatch
void Steamworks::Result::_set_TwoFactorCodeMismatch(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_TwoFactorCodeMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "TwoFactorCodeMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result TwoFactorActivationCodeMismatch
::Steamworks::Result Steamworks::Result::_get_TwoFactorActivationCodeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_TwoFactorActivationCodeMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "TwoFactorActivationCodeMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result TwoFactorActivationCodeMismatch
void Steamworks::Result::_set_TwoFactorActivationCodeMismatch(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_TwoFactorActivationCodeMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "TwoFactorActivationCodeMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountAssociatedToMultiplePartners
::Steamworks::Result Steamworks::Result::_get_AccountAssociatedToMultiplePartners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountAssociatedToMultiplePartners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountAssociatedToMultiplePartners"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountAssociatedToMultiplePartners
void Steamworks::Result::_set_AccountAssociatedToMultiplePartners(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountAssociatedToMultiplePartners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountAssociatedToMultiplePartners", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NotModified
::Steamworks::Result Steamworks::Result::_get_NotModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NotModified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NotModified"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NotModified
void Steamworks::Result::_set_NotModified(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NotModified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NotModified", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NoMobileDevice
::Steamworks::Result Steamworks::Result::_get_NoMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NoMobileDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NoMobileDevice"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NoMobileDevice
void Steamworks::Result::_set_NoMobileDevice(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NoMobileDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NoMobileDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result TimeNotSynced
::Steamworks::Result Steamworks::Result::_get_TimeNotSynced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_TimeNotSynced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "TimeNotSynced"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result TimeNotSynced
void Steamworks::Result::_set_TimeNotSynced(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_TimeNotSynced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "TimeNotSynced", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result SmsCodeFailed
::Steamworks::Result Steamworks::Result::_get_SmsCodeFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_SmsCodeFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "SmsCodeFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result SmsCodeFailed
void Steamworks::Result::_set_SmsCodeFailed(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_SmsCodeFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "SmsCodeFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountLimitExceeded
::Steamworks::Result Steamworks::Result::_get_AccountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountLimitExceeded
void Steamworks::Result::_set_AccountLimitExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountActivityLimitExceeded
::Steamworks::Result Steamworks::Result::_get_AccountActivityLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountActivityLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountActivityLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountActivityLimitExceeded
void Steamworks::Result::_set_AccountActivityLimitExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountActivityLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountActivityLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result PhoneActivityLimitExceeded
::Steamworks::Result Steamworks::Result::_get_PhoneActivityLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_PhoneActivityLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "PhoneActivityLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result PhoneActivityLimitExceeded
void Steamworks::Result::_set_PhoneActivityLimitExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_PhoneActivityLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "PhoneActivityLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result RefundToWallet
::Steamworks::Result Steamworks::Result::_get_RefundToWallet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_RefundToWallet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "RefundToWallet"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result RefundToWallet
void Steamworks::Result::_set_RefundToWallet(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_RefundToWallet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "RefundToWallet", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result EmailSendFailure
::Steamworks::Result Steamworks::Result::_get_EmailSendFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_EmailSendFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "EmailSendFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result EmailSendFailure
void Steamworks::Result::_set_EmailSendFailure(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_EmailSendFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "EmailSendFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NotSettled
::Steamworks::Result Steamworks::Result::_get_NotSettled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NotSettled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NotSettled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NotSettled
void Steamworks::Result::_set_NotSettled(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NotSettled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NotSettled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NeedCaptcha
::Steamworks::Result Steamworks::Result::_get_NeedCaptcha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NeedCaptcha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NeedCaptcha"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NeedCaptcha
void Steamworks::Result::_set_NeedCaptcha(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NeedCaptcha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NeedCaptcha", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result GSLTDenied
::Steamworks::Result Steamworks::Result::_get_GSLTDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_GSLTDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "GSLTDenied"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result GSLTDenied
void Steamworks::Result::_set_GSLTDenied(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_GSLTDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "GSLTDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result GSOwnerDenied
::Steamworks::Result Steamworks::Result::_get_GSOwnerDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_GSOwnerDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "GSOwnerDenied"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result GSOwnerDenied
void Steamworks::Result::_set_GSOwnerDenied(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_GSOwnerDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "GSOwnerDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InvalidItemType
::Steamworks::Result Steamworks::Result::_get_InvalidItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InvalidItemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InvalidItemType"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InvalidItemType
void Steamworks::Result::_set_InvalidItemType(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InvalidItemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InvalidItemType", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result IPBanned
::Steamworks::Result Steamworks::Result::_get_IPBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_IPBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "IPBanned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result IPBanned
void Steamworks::Result::_set_IPBanned(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_IPBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "IPBanned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result GSLTExpired
::Steamworks::Result Steamworks::Result::_get_GSLTExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_GSLTExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "GSLTExpired"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result GSLTExpired
void Steamworks::Result::_set_GSLTExpired(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_GSLTExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "GSLTExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result InsufficientFunds
::Steamworks::Result Steamworks::Result::_get_InsufficientFunds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_InsufficientFunds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "InsufficientFunds"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result InsufficientFunds
void Steamworks::Result::_set_InsufficientFunds(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_InsufficientFunds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "InsufficientFunds", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result TooManyPending
::Steamworks::Result Steamworks::Result::_get_TooManyPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_TooManyPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "TooManyPending"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result TooManyPending
void Steamworks::Result::_set_TooManyPending(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_TooManyPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "TooManyPending", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result NoSiteLicensesFound
::Steamworks::Result Steamworks::Result::_get_NoSiteLicensesFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_NoSiteLicensesFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "NoSiteLicensesFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result NoSiteLicensesFound
void Steamworks::Result::_set_NoSiteLicensesFound(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_NoSiteLicensesFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "NoSiteLicensesFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result WGNetworkSendExceeded
::Steamworks::Result Steamworks::Result::_get_WGNetworkSendExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_WGNetworkSendExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "WGNetworkSendExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result WGNetworkSendExceeded
void Steamworks::Result::_set_WGNetworkSendExceeded(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_WGNetworkSendExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "WGNetworkSendExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountNotFriends
::Steamworks::Result Steamworks::Result::_get_AccountNotFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountNotFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountNotFriends"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountNotFriends
void Steamworks::Result::_set_AccountNotFriends(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountNotFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountNotFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result LimitedUserAccount
::Steamworks::Result Steamworks::Result::_get_LimitedUserAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_LimitedUserAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "LimitedUserAccount"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result LimitedUserAccount
void Steamworks::Result::_set_LimitedUserAccount(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_LimitedUserAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "LimitedUserAccount", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result CantRemoveItem
::Steamworks::Result Steamworks::Result::_get_CantRemoveItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_CantRemoveItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "CantRemoveItem"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result CantRemoveItem
void Steamworks::Result::_set_CantRemoveItem(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_CantRemoveItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "CantRemoveItem", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result AccountDeleted
::Steamworks::Result Steamworks::Result::_get_AccountDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_AccountDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "AccountDeleted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result AccountDeleted
void Steamworks::Result::_set_AccountDeleted(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_AccountDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "AccountDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.Result ExistingUserCancelledLicense
::Steamworks::Result Steamworks::Result::_get_ExistingUserCancelledLicense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_get_ExistingUserCancelledLicense");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::Result>("Steamworks", "Result", "ExistingUserCancelledLicense"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.Result ExistingUserCancelledLicense
void Steamworks::Result::_set_ExistingUserCancelledLicense(::Steamworks::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::_set_ExistingUserCancelledLicense");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "Result", "ExistingUserCancelledLicense", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.DenyReason
#include "Steamworks/DenyReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason Invalid
::Steamworks::DenyReason Steamworks::DenyReason::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason Invalid
void Steamworks::DenyReason::_set_Invalid(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason InvalidVersion
::Steamworks::DenyReason Steamworks::DenyReason::_get_InvalidVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_InvalidVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "InvalidVersion"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason InvalidVersion
void Steamworks::DenyReason::_set_InvalidVersion(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_InvalidVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "InvalidVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason Generic
::Steamworks::DenyReason Steamworks::DenyReason::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason Generic
void Steamworks::DenyReason::_set_Generic(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "Generic", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason NotLoggedOn
::Steamworks::DenyReason Steamworks::DenyReason::_get_NotLoggedOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_NotLoggedOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "NotLoggedOn"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason NotLoggedOn
void Steamworks::DenyReason::_set_NotLoggedOn(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_NotLoggedOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "NotLoggedOn", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason NoLicense
::Steamworks::DenyReason Steamworks::DenyReason::_get_NoLicense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_NoLicense");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "NoLicense"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason NoLicense
void Steamworks::DenyReason::_set_NoLicense(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_NoLicense");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "NoLicense", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason Cheater
::Steamworks::DenyReason Steamworks::DenyReason::_get_Cheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_Cheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "Cheater"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason Cheater
void Steamworks::DenyReason::_set_Cheater(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_Cheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "Cheater", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason LoggedInElseWhere
::Steamworks::DenyReason Steamworks::DenyReason::_get_LoggedInElseWhere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_LoggedInElseWhere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "LoggedInElseWhere"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason LoggedInElseWhere
void Steamworks::DenyReason::_set_LoggedInElseWhere(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_LoggedInElseWhere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "LoggedInElseWhere", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason UnknownText
::Steamworks::DenyReason Steamworks::DenyReason::_get_UnknownText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_UnknownText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "UnknownText"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason UnknownText
void Steamworks::DenyReason::_set_UnknownText(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_UnknownText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "UnknownText", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason IncompatibleAnticheat
::Steamworks::DenyReason Steamworks::DenyReason::_get_IncompatibleAnticheat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_IncompatibleAnticheat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "IncompatibleAnticheat"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason IncompatibleAnticheat
void Steamworks::DenyReason::_set_IncompatibleAnticheat(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_IncompatibleAnticheat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "IncompatibleAnticheat", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason MemoryCorruption
::Steamworks::DenyReason Steamworks::DenyReason::_get_MemoryCorruption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_MemoryCorruption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "MemoryCorruption"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason MemoryCorruption
void Steamworks::DenyReason::_set_MemoryCorruption(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_MemoryCorruption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "MemoryCorruption", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason IncompatibleSoftware
::Steamworks::DenyReason Steamworks::DenyReason::_get_IncompatibleSoftware() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_IncompatibleSoftware");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "IncompatibleSoftware"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason IncompatibleSoftware
void Steamworks::DenyReason::_set_IncompatibleSoftware(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_IncompatibleSoftware");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "IncompatibleSoftware", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason SteamConnectionLost
::Steamworks::DenyReason Steamworks::DenyReason::_get_SteamConnectionLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_SteamConnectionLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "SteamConnectionLost"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason SteamConnectionLost
void Steamworks::DenyReason::_set_SteamConnectionLost(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_SteamConnectionLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "SteamConnectionLost", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason SteamConnectionError
::Steamworks::DenyReason Steamworks::DenyReason::_get_SteamConnectionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_SteamConnectionError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "SteamConnectionError"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason SteamConnectionError
void Steamworks::DenyReason::_set_SteamConnectionError(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_SteamConnectionError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "SteamConnectionError", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason SteamResponseTimedOut
::Steamworks::DenyReason Steamworks::DenyReason::_get_SteamResponseTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_SteamResponseTimedOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "SteamResponseTimedOut"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason SteamResponseTimedOut
void Steamworks::DenyReason::_set_SteamResponseTimedOut(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_SteamResponseTimedOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "SteamResponseTimedOut", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason SteamValidationStalled
::Steamworks::DenyReason Steamworks::DenyReason::_get_SteamValidationStalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_SteamValidationStalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "SteamValidationStalled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason SteamValidationStalled
void Steamworks::DenyReason::_set_SteamValidationStalled(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_SteamValidationStalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "SteamValidationStalled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DenyReason SteamOwnerLeftGuestUser
::Steamworks::DenyReason Steamworks::DenyReason::_get_SteamOwnerLeftGuestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_get_SteamOwnerLeftGuestUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DenyReason>("Steamworks", "DenyReason", "SteamOwnerLeftGuestUser"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DenyReason SteamOwnerLeftGuestUser
void Steamworks::DenyReason::_set_SteamOwnerLeftGuestUser(::Steamworks::DenyReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::_set_SteamOwnerLeftGuestUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DenyReason", "SteamOwnerLeftGuestUser", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::DenyReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DenyReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.AuthResponse
#include "Steamworks/AuthResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse OK
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse OK
void Steamworks::AuthResponse::_set_OK(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse UserNotConnectedToSteam
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_UserNotConnectedToSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_UserNotConnectedToSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "UserNotConnectedToSteam"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse UserNotConnectedToSteam
void Steamworks::AuthResponse::_set_UserNotConnectedToSteam(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_UserNotConnectedToSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "UserNotConnectedToSteam", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse NoLicenseOrExpired
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_NoLicenseOrExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_NoLicenseOrExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "NoLicenseOrExpired"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse NoLicenseOrExpired
void Steamworks::AuthResponse::_set_NoLicenseOrExpired(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_NoLicenseOrExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "NoLicenseOrExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse VACBanned
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_VACBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_VACBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "VACBanned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse VACBanned
void Steamworks::AuthResponse::_set_VACBanned(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_VACBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "VACBanned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse LoggedInElseWhere
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_LoggedInElseWhere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_LoggedInElseWhere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "LoggedInElseWhere"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse LoggedInElseWhere
void Steamworks::AuthResponse::_set_LoggedInElseWhere(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_LoggedInElseWhere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "LoggedInElseWhere", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse VACCheckTimedOut
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_VACCheckTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_VACCheckTimedOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "VACCheckTimedOut"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse VACCheckTimedOut
void Steamworks::AuthResponse::_set_VACCheckTimedOut(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_VACCheckTimedOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "VACCheckTimedOut", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse AuthTicketCanceled
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_AuthTicketCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_AuthTicketCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "AuthTicketCanceled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse AuthTicketCanceled
void Steamworks::AuthResponse::_set_AuthTicketCanceled(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_AuthTicketCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "AuthTicketCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse AuthTicketInvalidAlreadyUsed
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_AuthTicketInvalidAlreadyUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_AuthTicketInvalidAlreadyUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "AuthTicketInvalidAlreadyUsed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse AuthTicketInvalidAlreadyUsed
void Steamworks::AuthResponse::_set_AuthTicketInvalidAlreadyUsed(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_AuthTicketInvalidAlreadyUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "AuthTicketInvalidAlreadyUsed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse AuthTicketInvalid
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_AuthTicketInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_AuthTicketInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "AuthTicketInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse AuthTicketInvalid
void Steamworks::AuthResponse::_set_AuthTicketInvalid(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_AuthTicketInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "AuthTicketInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.AuthResponse PublisherIssuedBan
::Steamworks::AuthResponse Steamworks::AuthResponse::_get_PublisherIssuedBan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_get_PublisherIssuedBan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::AuthResponse>("Steamworks", "AuthResponse", "PublisherIssuedBan"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.AuthResponse PublisherIssuedBan
void Steamworks::AuthResponse::_set_PublisherIssuedBan(::Steamworks::AuthResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::_set_PublisherIssuedBan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "AuthResponse", "PublisherIssuedBan", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::AuthResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::AuthResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.ChatEntryType
#include "Steamworks/ChatEntryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType Invalid
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType Invalid
void Steamworks::ChatEntryType::_set_Invalid(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType ChatMsg
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_ChatMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_ChatMsg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "ChatMsg"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType ChatMsg
void Steamworks::ChatEntryType::_set_ChatMsg(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_ChatMsg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "ChatMsg", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType Typing
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_Typing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_Typing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "Typing"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType Typing
void Steamworks::ChatEntryType::_set_Typing(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_Typing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "Typing", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType InviteGame
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_InviteGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_InviteGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "InviteGame"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType InviteGame
void Steamworks::ChatEntryType::_set_InviteGame(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_InviteGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "InviteGame", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType Emote
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_Emote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_Emote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "Emote"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType Emote
void Steamworks::ChatEntryType::_set_Emote(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_Emote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "Emote", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType LeftConversation
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_LeftConversation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_LeftConversation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "LeftConversation"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType LeftConversation
void Steamworks::ChatEntryType::_set_LeftConversation(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_LeftConversation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "LeftConversation", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType Entered
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_Entered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_Entered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "Entered"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType Entered
void Steamworks::ChatEntryType::_set_Entered(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_Entered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "Entered", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType WasKicked
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_WasKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_WasKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "WasKicked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType WasKicked
void Steamworks::ChatEntryType::_set_WasKicked(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_WasKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "WasKicked", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType WasBanned
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_WasBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_WasBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "WasBanned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType WasBanned
void Steamworks::ChatEntryType::_set_WasBanned(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_WasBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "WasBanned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType Disconnected
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType Disconnected
void Steamworks::ChatEntryType::_set_Disconnected(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType HistoricalChat
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_HistoricalChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_HistoricalChat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "HistoricalChat"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType HistoricalChat
void Steamworks::ChatEntryType::_set_HistoricalChat(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_HistoricalChat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "HistoricalChat", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.ChatEntryType LinkBlocked
::Steamworks::ChatEntryType Steamworks::ChatEntryType::_get_LinkBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_get_LinkBlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::ChatEntryType>("Steamworks", "ChatEntryType", "LinkBlocked"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.ChatEntryType LinkBlocked
void Steamworks::ChatEntryType::_set_LinkBlocked(::Steamworks::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::_set_LinkBlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "ChatEntryType", "LinkBlocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::ChatEntryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::ChatEntryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.RoomEnter
#include "Steamworks/RoomEnter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter Success
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter Success
void Steamworks::RoomEnter::_set_Success(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter DoesntExist
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_DoesntExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_DoesntExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "DoesntExist"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter DoesntExist
void Steamworks::RoomEnter::_set_DoesntExist(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_DoesntExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "DoesntExist", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter NotAllowed
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_NotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_NotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "NotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter NotAllowed
void Steamworks::RoomEnter::_set_NotAllowed(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_NotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "NotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter Full
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter Full
void Steamworks::RoomEnter::_set_Full(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter Error
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter Error
void Steamworks::RoomEnter::_set_Error(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter Banned
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_Banned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_Banned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "Banned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter Banned
void Steamworks::RoomEnter::_set_Banned(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_Banned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "Banned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter Limited
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_Limited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_Limited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "Limited"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter Limited
void Steamworks::RoomEnter::_set_Limited(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_Limited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "Limited", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter ClanDisabled
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_ClanDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_ClanDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "ClanDisabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter ClanDisabled
void Steamworks::RoomEnter::_set_ClanDisabled(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_ClanDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "ClanDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter CommunityBan
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_CommunityBan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_CommunityBan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "CommunityBan"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter CommunityBan
void Steamworks::RoomEnter::_set_CommunityBan(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_CommunityBan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "CommunityBan", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter MemberBlockedYou
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_MemberBlockedYou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_MemberBlockedYou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "MemberBlockedYou"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter MemberBlockedYou
void Steamworks::RoomEnter::_set_MemberBlockedYou(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_MemberBlockedYou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "MemberBlockedYou", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter YouBlockedMember
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_YouBlockedMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_YouBlockedMember");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "YouBlockedMember"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter YouBlockedMember
void Steamworks::RoomEnter::_set_YouBlockedMember(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_YouBlockedMember");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "YouBlockedMember", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.RoomEnter RatelimitExceeded
::Steamworks::RoomEnter Steamworks::RoomEnter::_get_RatelimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_get_RatelimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::RoomEnter>("Steamworks", "RoomEnter", "RatelimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.RoomEnter RatelimitExceeded
void Steamworks::RoomEnter::_set_RatelimitExceeded(::Steamworks::RoomEnter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::_set_RatelimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "RoomEnter", "RatelimitExceeded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::RoomEnter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::RoomEnter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.NotificationPosition
#include "Steamworks/NotificationPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.NotificationPosition TopLeft
::Steamworks::NotificationPosition Steamworks::NotificationPosition::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::NotificationPosition>("Steamworks", "NotificationPosition", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.NotificationPosition TopLeft
void Steamworks::NotificationPosition::_set_TopLeft(::Steamworks::NotificationPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "NotificationPosition", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.NotificationPosition TopRight
::Steamworks::NotificationPosition Steamworks::NotificationPosition::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::NotificationPosition>("Steamworks", "NotificationPosition", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.NotificationPosition TopRight
void Steamworks::NotificationPosition::_set_TopRight(::Steamworks::NotificationPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "NotificationPosition", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.NotificationPosition BottomLeft
::Steamworks::NotificationPosition Steamworks::NotificationPosition::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::NotificationPosition>("Steamworks", "NotificationPosition", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.NotificationPosition BottomLeft
void Steamworks::NotificationPosition::_set_BottomLeft(::Steamworks::NotificationPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "NotificationPosition", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.NotificationPosition BottomRight
::Steamworks::NotificationPosition Steamworks::NotificationPosition::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::NotificationPosition>("Steamworks", "NotificationPosition", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.NotificationPosition BottomRight
void Steamworks::NotificationPosition::_set_BottomRight(::Steamworks::NotificationPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "NotificationPosition", "BottomRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::NotificationPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::NotificationPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.BroadcastUploadResult
#include "Steamworks/BroadcastUploadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult None
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "None"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult None
void Steamworks::BroadcastUploadResult::_set_None(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult OK
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult OK
void Steamworks::BroadcastUploadResult::_set_OK(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult InitFailed
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_InitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_InitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "InitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult InitFailed
void Steamworks::BroadcastUploadResult::_set_InitFailed(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_InitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "InitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult FrameFailed
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_FrameFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_FrameFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "FrameFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult FrameFailed
void Steamworks::BroadcastUploadResult::_set_FrameFailed(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_FrameFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "FrameFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult Timeout
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult Timeout
void Steamworks::BroadcastUploadResult::_set_Timeout(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult BandwidthExceeded
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_BandwidthExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_BandwidthExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "BandwidthExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult BandwidthExceeded
void Steamworks::BroadcastUploadResult::_set_BandwidthExceeded(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_BandwidthExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "BandwidthExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult LowFPS
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_LowFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_LowFPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "LowFPS"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult LowFPS
void Steamworks::BroadcastUploadResult::_set_LowFPS(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_LowFPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "LowFPS", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult MissingKeyFrames
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_MissingKeyFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_MissingKeyFrames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "MissingKeyFrames"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult MissingKeyFrames
void Steamworks::BroadcastUploadResult::_set_MissingKeyFrames(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_MissingKeyFrames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "MissingKeyFrames", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult NoConnection
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_NoConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_NoConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "NoConnection"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult NoConnection
void Steamworks::BroadcastUploadResult::_set_NoConnection(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_NoConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "NoConnection", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult RelayFailed
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_RelayFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_RelayFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "RelayFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult RelayFailed
void Steamworks::BroadcastUploadResult::_set_RelayFailed(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_RelayFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "RelayFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult SettingsChanged
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_SettingsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_SettingsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "SettingsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult SettingsChanged
void Steamworks::BroadcastUploadResult::_set_SettingsChanged(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_SettingsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "SettingsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult MissingAudio
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_MissingAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_MissingAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "MissingAudio"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult MissingAudio
void Steamworks::BroadcastUploadResult::_set_MissingAudio(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_MissingAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "MissingAudio", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult TooFarBehind
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_TooFarBehind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_TooFarBehind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "TooFarBehind"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult TooFarBehind
void Steamworks::BroadcastUploadResult::_set_TooFarBehind(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_TooFarBehind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "TooFarBehind", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult TranscodeBehind
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_TranscodeBehind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_TranscodeBehind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "TranscodeBehind"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult TranscodeBehind
void Steamworks::BroadcastUploadResult::_set_TranscodeBehind(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_TranscodeBehind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "TranscodeBehind", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult NotAllowedToPlay
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_NotAllowedToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_NotAllowedToPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "NotAllowedToPlay"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult NotAllowedToPlay
void Steamworks::BroadcastUploadResult::_set_NotAllowedToPlay(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_NotAllowedToPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "NotAllowedToPlay", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult Busy
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_Busy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "Busy"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult Busy
void Steamworks::BroadcastUploadResult::_set_Busy(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_Busy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "Busy", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult Banned
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_Banned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_Banned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "Banned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult Banned
void Steamworks::BroadcastUploadResult::_set_Banned(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_Banned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "Banned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult AlreadyActive
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_AlreadyActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_AlreadyActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "AlreadyActive"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult AlreadyActive
void Steamworks::BroadcastUploadResult::_set_AlreadyActive(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_AlreadyActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "AlreadyActive", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult ForcedOff
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_ForcedOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_ForcedOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "ForcedOff"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult ForcedOff
void Steamworks::BroadcastUploadResult::_set_ForcedOff(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_ForcedOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "ForcedOff", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult AudioBehind
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_AudioBehind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_AudioBehind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "AudioBehind"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult AudioBehind
void Steamworks::BroadcastUploadResult::_set_AudioBehind(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_AudioBehind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "AudioBehind", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult Shutdown
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult Shutdown
void Steamworks::BroadcastUploadResult::_set_Shutdown(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "Shutdown", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult Disconnect
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult Disconnect
void Steamworks::BroadcastUploadResult::_set_Disconnect(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult VideoInitFailed
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_VideoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_VideoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "VideoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult VideoInitFailed
void Steamworks::BroadcastUploadResult::_set_VideoInitFailed(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_VideoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "VideoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.BroadcastUploadResult AudioInitFailed
::Steamworks::BroadcastUploadResult Steamworks::BroadcastUploadResult::_get_AudioInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_get_AudioInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::BroadcastUploadResult>("Steamworks", "BroadcastUploadResult", "AudioInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.BroadcastUploadResult AudioInitFailed
void Steamworks::BroadcastUploadResult::_set_AudioInitFailed(::Steamworks::BroadcastUploadResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::_set_AudioInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "BroadcastUploadResult", "AudioInitFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::BroadcastUploadResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::BroadcastUploadResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.MarketNotAllowedReasonFlags
#include "Steamworks/MarketNotAllowedReasonFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags None
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags None
void Steamworks::MarketNotAllowedReasonFlags::_set_None(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags TemporaryFailure
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_TemporaryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_TemporaryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "TemporaryFailure"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags TemporaryFailure
void Steamworks::MarketNotAllowedReasonFlags::_set_TemporaryFailure(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_TemporaryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "TemporaryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags AccountDisabled
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_AccountDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_AccountDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "AccountDisabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags AccountDisabled
void Steamworks::MarketNotAllowedReasonFlags::_set_AccountDisabled(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_AccountDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "AccountDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags AccountLockedDown
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_AccountLockedDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_AccountLockedDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "AccountLockedDown"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags AccountLockedDown
void Steamworks::MarketNotAllowedReasonFlags::_set_AccountLockedDown(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_AccountLockedDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "AccountLockedDown", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags AccountLimited
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_AccountLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_AccountLimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "AccountLimited"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags AccountLimited
void Steamworks::MarketNotAllowedReasonFlags::_set_AccountLimited(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_AccountLimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "AccountLimited", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags TradeBanned
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_TradeBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_TradeBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "TradeBanned"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags TradeBanned
void Steamworks::MarketNotAllowedReasonFlags::_set_TradeBanned(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_TradeBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "TradeBanned", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags AccountNotTrusted
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_AccountNotTrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_AccountNotTrusted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "AccountNotTrusted"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags AccountNotTrusted
void Steamworks::MarketNotAllowedReasonFlags::_set_AccountNotTrusted(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_AccountNotTrusted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "AccountNotTrusted", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags SteamGuardNotEnabled
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_SteamGuardNotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_SteamGuardNotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "SteamGuardNotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags SteamGuardNotEnabled
void Steamworks::MarketNotAllowedReasonFlags::_set_SteamGuardNotEnabled(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_SteamGuardNotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "SteamGuardNotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags SteamGuardOnlyRecentlyEnabled
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_SteamGuardOnlyRecentlyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_SteamGuardOnlyRecentlyEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "SteamGuardOnlyRecentlyEnabled"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags SteamGuardOnlyRecentlyEnabled
void Steamworks::MarketNotAllowedReasonFlags::_set_SteamGuardOnlyRecentlyEnabled(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_SteamGuardOnlyRecentlyEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "SteamGuardOnlyRecentlyEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags RecentPasswordReset
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_RecentPasswordReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_RecentPasswordReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "RecentPasswordReset"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags RecentPasswordReset
void Steamworks::MarketNotAllowedReasonFlags::_set_RecentPasswordReset(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_RecentPasswordReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "RecentPasswordReset", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags NewPaymentMethod
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_NewPaymentMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_NewPaymentMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "NewPaymentMethod"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags NewPaymentMethod
void Steamworks::MarketNotAllowedReasonFlags::_set_NewPaymentMethod(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_NewPaymentMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "NewPaymentMethod", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags InvalidCookie
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_InvalidCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_InvalidCookie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "InvalidCookie"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags InvalidCookie
void Steamworks::MarketNotAllowedReasonFlags::_set_InvalidCookie(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_InvalidCookie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "InvalidCookie", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags UsingNewDevice
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_UsingNewDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_UsingNewDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "UsingNewDevice"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags UsingNewDevice
void Steamworks::MarketNotAllowedReasonFlags::_set_UsingNewDevice(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_UsingNewDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "UsingNewDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags RecentSelfRefund
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_RecentSelfRefund() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_RecentSelfRefund");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "RecentSelfRefund"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags RecentSelfRefund
void Steamworks::MarketNotAllowedReasonFlags::_set_RecentSelfRefund(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_RecentSelfRefund");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "RecentSelfRefund", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags NewPaymentMethodCannotBeVerified
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_NewPaymentMethodCannotBeVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_NewPaymentMethodCannotBeVerified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "NewPaymentMethodCannotBeVerified"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags NewPaymentMethodCannotBeVerified
void Steamworks::MarketNotAllowedReasonFlags::_set_NewPaymentMethodCannotBeVerified(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_NewPaymentMethodCannotBeVerified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "NewPaymentMethodCannotBeVerified", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags NoRecentPurchases
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_NoRecentPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_NoRecentPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "NoRecentPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags NoRecentPurchases
void Steamworks::MarketNotAllowedReasonFlags::_set_NoRecentPurchases(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_NoRecentPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "NoRecentPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.MarketNotAllowedReasonFlags AcceptedWalletGift
::Steamworks::MarketNotAllowedReasonFlags Steamworks::MarketNotAllowedReasonFlags::_get_AcceptedWalletGift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_get_AcceptedWalletGift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::MarketNotAllowedReasonFlags>("Steamworks", "MarketNotAllowedReasonFlags", "AcceptedWalletGift"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.MarketNotAllowedReasonFlags AcceptedWalletGift
void Steamworks::MarketNotAllowedReasonFlags::_set_AcceptedWalletGift(::Steamworks::MarketNotAllowedReasonFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::_set_AcceptedWalletGift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "MarketNotAllowedReasonFlags", "AcceptedWalletGift", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::MarketNotAllowedReasonFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::MarketNotAllowedReasonFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.DurationControlProgress
#include "Steamworks/DurationControlProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress Progress_Full
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_Progress_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_Progress_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "Progress_Full"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress Progress_Full
void Steamworks::DurationControlProgress::_set_Progress_Full(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_Progress_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "Progress_Full", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress Progress_Half
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_Progress_Half() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_Progress_Half");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "Progress_Half"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress Progress_Half
void Steamworks::DurationControlProgress::_set_Progress_Half(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_Progress_Half");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "Progress_Half", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress Progress_None
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_Progress_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_Progress_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "Progress_None"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress Progress_None
void Steamworks::DurationControlProgress::_set_Progress_None(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_Progress_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "Progress_None", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress ExitSoon_3h
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_ExitSoon_3h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_ExitSoon_3h");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "ExitSoon_3h"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress ExitSoon_3h
void Steamworks::DurationControlProgress::_set_ExitSoon_3h(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_ExitSoon_3h");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "ExitSoon_3h", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress ExitSoon_5h
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_ExitSoon_5h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_ExitSoon_5h");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "ExitSoon_5h"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress ExitSoon_5h
void Steamworks::DurationControlProgress::_set_ExitSoon_5h(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_ExitSoon_5h");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "ExitSoon_5h", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlProgress ExitSoon_Night
::Steamworks::DurationControlProgress Steamworks::DurationControlProgress::_get_ExitSoon_Night() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_get_ExitSoon_Night");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlProgress>("Steamworks", "DurationControlProgress", "ExitSoon_Night"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlProgress ExitSoon_Night
void Steamworks::DurationControlProgress::_set_ExitSoon_Night(::Steamworks::DurationControlProgress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::_set_ExitSoon_Night");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlProgress", "ExitSoon_Night", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::DurationControlProgress::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlProgress::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.DurationControlNotification
#include "Steamworks/DurationControlNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification None
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "None"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification None
void Steamworks::DurationControlNotification::_set_None(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification DurationControlNotification1Hour
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_DurationControlNotification1Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_DurationControlNotification1Hour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "DurationControlNotification1Hour"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification DurationControlNotification1Hour
void Steamworks::DurationControlNotification::_set_DurationControlNotification1Hour(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_DurationControlNotification1Hour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "DurationControlNotification1Hour", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification DurationControlNotification3Hours
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_DurationControlNotification3Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_DurationControlNotification3Hours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "DurationControlNotification3Hours"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification DurationControlNotification3Hours
void Steamworks::DurationControlNotification::_set_DurationControlNotification3Hours(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_DurationControlNotification3Hours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "DurationControlNotification3Hours", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification HalfProgress
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_HalfProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_HalfProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "HalfProgress"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification HalfProgress
void Steamworks::DurationControlNotification::_set_HalfProgress(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_HalfProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "HalfProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification NoProgress
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_NoProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_NoProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "NoProgress"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification NoProgress
void Steamworks::DurationControlNotification::_set_NoProgress(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_NoProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "NoProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification ExitSoon_3h
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_ExitSoon_3h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_ExitSoon_3h");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "ExitSoon_3h"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification ExitSoon_3h
void Steamworks::DurationControlNotification::_set_ExitSoon_3h(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_ExitSoon_3h");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "ExitSoon_3h", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification ExitSoon_5h
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_ExitSoon_5h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_ExitSoon_5h");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "ExitSoon_5h"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification ExitSoon_5h
void Steamworks::DurationControlNotification::_set_ExitSoon_5h(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_ExitSoon_5h");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "ExitSoon_5h", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.DurationControlNotification ExitSoon_Night
::Steamworks::DurationControlNotification Steamworks::DurationControlNotification::_get_ExitSoon_Night() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_get_ExitSoon_Night");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::DurationControlNotification>("Steamworks", "DurationControlNotification", "ExitSoon_Night"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.DurationControlNotification ExitSoon_Night
void Steamworks::DurationControlNotification::_set_ExitSoon_Night(::Steamworks::DurationControlNotification value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::_set_ExitSoon_Night");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "DurationControlNotification", "ExitSoon_Night", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::DurationControlNotification::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::DurationControlNotification::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Steamworks.CheckFileSignature
#include "Steamworks/CheckFileSignature.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Steamworks.CheckFileSignature InvalidSignature
::Steamworks::CheckFileSignature Steamworks::CheckFileSignature::_get_InvalidSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_get_InvalidSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CheckFileSignature>("Steamworks", "CheckFileSignature", "InvalidSignature"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CheckFileSignature InvalidSignature
void Steamworks::CheckFileSignature::_set_InvalidSignature(::Steamworks::CheckFileSignature value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_set_InvalidSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CheckFileSignature", "InvalidSignature", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CheckFileSignature ValidSignature
::Steamworks::CheckFileSignature Steamworks::CheckFileSignature::_get_ValidSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_get_ValidSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CheckFileSignature>("Steamworks", "CheckFileSignature", "ValidSignature"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CheckFileSignature ValidSignature
void Steamworks::CheckFileSignature::_set_ValidSignature(::Steamworks::CheckFileSignature value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_set_ValidSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CheckFileSignature", "ValidSignature", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CheckFileSignature FileNotFound
::Steamworks::CheckFileSignature Steamworks::CheckFileSignature::_get_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_get_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CheckFileSignature>("Steamworks", "CheckFileSignature", "FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CheckFileSignature FileNotFound
void Steamworks::CheckFileSignature::_set_FileNotFound(::Steamworks::CheckFileSignature value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_set_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CheckFileSignature", "FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CheckFileSignature NoSignaturesFoundForThisApp
::Steamworks::CheckFileSignature Steamworks::CheckFileSignature::_get_NoSignaturesFoundForThisApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_get_NoSignaturesFoundForThisApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CheckFileSignature>("Steamworks", "CheckFileSignature", "NoSignaturesFoundForThisApp"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CheckFileSignature NoSignaturesFoundForThisApp
void Steamworks::CheckFileSignature::_set_NoSignaturesFoundForThisApp(::Steamworks::CheckFileSignature value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_set_NoSignaturesFoundForThisApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CheckFileSignature", "NoSignaturesFoundForThisApp", value));
}
// Autogenerated static field getter
// Get static field: static public Steamworks.CheckFileSignature NoSignaturesFoundForThisFile
::Steamworks::CheckFileSignature Steamworks::CheckFileSignature::_get_NoSignaturesFoundForThisFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_get_NoSignaturesFoundForThisFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Steamworks::CheckFileSignature>("Steamworks", "CheckFileSignature", "NoSignaturesFoundForThisFile"));
}
// Autogenerated static field setter
// Set static field: static public Steamworks.CheckFileSignature NoSignaturesFoundForThisFile
void Steamworks::CheckFileSignature::_set_NoSignaturesFoundForThisFile(::Steamworks::CheckFileSignature value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::_set_NoSignaturesFoundForThisFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Steamworks", "CheckFileSignature", "NoSignaturesFoundForThisFile", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Steamworks::CheckFileSignature::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::CheckFileSignature::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
