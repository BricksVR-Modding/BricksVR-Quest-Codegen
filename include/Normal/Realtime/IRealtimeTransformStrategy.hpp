// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel
#include "Normal/Realtime/RealtimeTransformModel.hpp"
// Completed includes
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: IRealtimeTransformStrategy
  class IRealtimeTransformStrategy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::IRealtimeTransformStrategy);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::IRealtimeTransformStrategy*, "Normal.Realtime", "IRealtimeTransformStrategy");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.IRealtimeTransformStrategy
  // [TokenAttribute] Offset: FFFFFFFF
  class IRealtimeTransformStrategy {
    public:
    // public System.Boolean get_isInterpolationWarmedUp()
    // Offset: 0xFFFFFFFF
    bool get_isInterpolationWarmedUp();
    // public System.Void Reset(Normal.Realtime.RealtimeTransformModel model)
    // Offset: 0xFFFFFFFF
    void Reset(::Normal::Realtime::RealtimeTransformModel* model);
    // public System.Void Update(Normal.Realtime.RealtimeTransformModel model)
    // Offset: 0xFFFFFFFF
    void Update(::Normal::Realtime::RealtimeTransformModel* model);
    // public System.Void OnRemoteModelDidRead(Normal.Realtime.RealtimeTransformModel model, Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet changes)
    // Offset: 0xFFFFFFFF
    void OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes);
    // public System.Void OnLocalModelWillWrite(Normal.Realtime.RealtimeTransformModel model)
    // Offset: 0xFFFFFFFF
    void OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model);
  }; // Normal.Realtime.IRealtimeTransformStrategy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp
// Il2CppName: get_isInterpolationWarmedUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::IRealtimeTransformStrategy::*)()>(&Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeTransformStrategy*), "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeTransformStrategy::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeTransformStrategy::*)(::Normal::Realtime::RealtimeTransformModel*)>(&Normal::Realtime::IRealtimeTransformStrategy::Reset)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeTransformModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeTransformStrategy*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeTransformStrategy::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeTransformStrategy::*)(::Normal::Realtime::RealtimeTransformModel*)>(&Normal::Realtime::IRealtimeTransformStrategy::Update)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeTransformModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeTransformStrategy*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead
// Il2CppName: OnRemoteModelDidRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeTransformStrategy::*)(::Normal::Realtime::RealtimeTransformModel*, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*)>(&Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeTransformModel")->byval_arg;
    static auto* changes = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeTransformModel/PropertyChangeSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeTransformStrategy*), "OnRemoteModelDidRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model, changes});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite
// Il2CppName: OnLocalModelWillWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IRealtimeTransformStrategy::*)(::Normal::Realtime::RealtimeTransformModel*)>(&Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeTransformModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IRealtimeTransformStrategy*), "OnLocalModelWillWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model});
  }
};
