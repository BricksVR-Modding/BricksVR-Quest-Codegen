// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NormcoreRPC
#include "GlobalNamespace/NormcoreRPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NormcoreRPC::RPCMessage);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NormcoreRPC::RPCMessage*, "", "NormcoreRPC/RPCMessage");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NormcoreRPC/RPCMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class NormcoreRPC::RPCMessage : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public System.String type
    // Size: 0x8
    // Offset: 0x10
    ::StringW type;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public NormcoreRPC/Brick brick
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::NormcoreRPC::Brick* brick;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NormcoreRPC::Brick*) == 0x8);
    public:
    // Get instance field reference: public System.String type
    ::StringW& dyn_type();
    // Get instance field reference: public NormcoreRPC/Brick brick
    ::GlobalNamespace::NormcoreRPC::Brick*& dyn_brick();
    // public System.Void .ctor()
    // Offset: 0x112F7A4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NormcoreRPC::RPCMessage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::RPCMessage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NormcoreRPC::RPCMessage*, creationType>()));
    }
  }; // NormcoreRPC/RPCMessage
  #pragma pack(pop)
  static check_size<sizeof(NormcoreRPC::RPCMessage), 24 + sizeof(::GlobalNamespace::NormcoreRPC::Brick*)> __GlobalNamespace_NormcoreRPC_RPCMessageSizeCheck;
  static_assert(sizeof(NormcoreRPC::RPCMessage) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NormcoreRPC::RPCMessage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
