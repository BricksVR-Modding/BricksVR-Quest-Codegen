// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Native::Matcher::RequestState, "Normal.Realtime.Native", "Matcher/RequestState");
// Type namespace: Normal.Realtime.Native
namespace Normal::Realtime::Native {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
  // [TokenAttribute] Offset: FFFFFFFF
  struct Matcher::RequestState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RequestState
    constexpr RequestState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
    static constexpr const int RequestCreated = 0;
    // Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
    static ::Normal::Realtime::Native::Matcher::RequestState _get_RequestCreated();
    // Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
    static void _set_RequestCreated(::Normal::Realtime::Native::Matcher::RequestState value);
    // static field const value: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
    static constexpr const int RequestSent = 1;
    // Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
    static ::Normal::Realtime::Native::Matcher::RequestState _get_RequestSent();
    // Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
    static void _set_RequestSent(::Normal::Realtime::Native::Matcher::RequestState value);
    // static field const value: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
    static constexpr const int RequestReceivedSuccess = 2;
    // Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
    static ::Normal::Realtime::Native::Matcher::RequestState _get_RequestReceivedSuccess();
    // Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
    static void _set_RequestReceivedSuccess(::Normal::Realtime::Native::Matcher::RequestState value);
    // static field const value: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
    static constexpr const int RequestReceivedError = 3;
    // Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
    static ::Normal::Realtime::Native::Matcher::RequestState _get_RequestReceivedError();
    // Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
    static void _set_RequestReceivedError(::Normal::Realtime::Native::Matcher::RequestState value);
    // static field const value: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
    static constexpr const int RequestFailed = 4;
    // Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
    static ::Normal::Realtime::Native::Matcher::RequestState _get_RequestFailed();
    // Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
    static void _set_RequestFailed(::Normal::Realtime::Native::Matcher::RequestState value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
  #pragma pack(pop)
  static check_size<sizeof(Matcher::RequestState), 0 + sizeof(int)> __Normal_Realtime_Native_Matcher_RequestStateSizeCheck;
  static_assert(sizeof(Matcher::RequestState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
