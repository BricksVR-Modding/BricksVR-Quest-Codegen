// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AdvancedColorPicker.ColorTypeComponent
#include "AdvancedColorPicker/ColorTypeComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Slider
  class Slider;
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorSlider
  class ColorSlider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorSlider);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorSlider*, "AdvancedColorPicker", "ColorSlider");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorSlider
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: E7DB0
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class ColorSlider : public ::AdvancedColorPicker::ColorTypeComponent {
    public:
    // Writing base type padding for base size: 0x24 to desired offset: 0x28
    char ___base_padding[0x4] = {};
    public:
    // private UnityEngine.UI.Slider slider
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Slider* slider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // private System.Boolean dontListenToSlider
    // Size: 0x1
    // Offset: 0x30
    bool dontListenToSlider;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.UI.Slider slider
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& dyn_slider();
    // Get instance field reference: private System.Boolean dontListenToSlider
    [[deprecated("Use field access instead!")]] bool& dyn_dontListenToSlider();
    // private System.Void SliderChanged(System.Single newValue)
    // Offset: 0x5AD200
    void SliderChanged(float newValue);
    // public System.Void .ctor()
    // Offset: 0x5AD2B0
    // Implemented from: AdvancedColorPicker.ColorTypeComponent
    // Base method: System.Void ColorTypeComponent::.ctor()
    // Base method: System.Void ColorComponent::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorSlider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorSlider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorSlider*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0x5ACF20
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void OnEnable()
    // Offset: 0x5AD150
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x5AD0B0
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::OnDisable()
    void OnDisable();
    // protected override System.Void DisplayNewColor()
    // Offset: 0x5ACF80
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::DisplayNewColor()
    void DisplayNewColor();
  }; // AdvancedColorPicker.ColorSlider
  #pragma pack(pop)
  static check_size<sizeof(ColorSlider), 48 + sizeof(bool)> __AdvancedColorPicker_ColorSliderSizeCheck;
  static_assert(sizeof(ColorSlider) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::SliderChanged
// Il2CppName: SliderChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorSlider::*)(float)>(&AdvancedColorPicker::ColorSlider::SliderChanged)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorSlider*), "SliderChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorSlider::*)()>(&AdvancedColorPicker::ColorSlider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorSlider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorSlider::*)()>(&AdvancedColorPicker::ColorSlider::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorSlider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorSlider::*)()>(&AdvancedColorPicker::ColorSlider::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorSlider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorSlider::DisplayNewColor
// Il2CppName: DisplayNewColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorSlider::*)()>(&AdvancedColorPicker::ColorSlider::DisplayNewColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorSlider*), "DisplayNewColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
