// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AdvancedColorPicker.ColorComponent
#include "AdvancedColorPicker/ColorComponent.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Skipping declaration: UIBehaviour because it is already included!
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorEyedropper
  class ColorEyedropper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorEyedropper);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorEyedropper*, "AdvancedColorPicker", "ColorEyedropper");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorEyedropper
  // [TokenAttribute] Offset: FFFFFFFF
  class ColorEyedropper : public ::AdvancedColorPicker::ColorComponent {
    public:
    // Nested type: ::AdvancedColorPicker::ColorEyedropper::ActiveChanged
    class ActiveChanged;
    // Nested type: ::AdvancedColorPicker::ColorEyedropper::$ReadScreenColor$d__20
    class $ReadScreenColor$d__20;
    public:
    // public AdvancedColorPicker.ColorEyedropper/AdvancedColorPicker.ActiveChanged OnActivated
    // Size: 0x8
    // Offset: 0x20
    ::AdvancedColorPicker::ColorEyedropper::ActiveChanged* OnActivated;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorEyedropper::ActiveChanged*) == 0x8);
    // public AdvancedColorPicker.ColorEyedropper/AdvancedColorPicker.ActiveChanged OnDeactivated
    // Size: 0x8
    // Offset: 0x28
    ::AdvancedColorPicker::ColorEyedropper::ActiveChanged* OnDeactivated;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorEyedropper::ActiveChanged*) == 0x8);
    // private System.Boolean changesColorInstantly
    // Size: 0x1
    // Offset: 0x30
    bool changesColorInstantly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean activated
    // Size: 0x1
    // Offset: 0x31
    bool activated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: activated and: coroutine
    char __padding3[0x6] = {};
    // private UnityEngine.Coroutine coroutine
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Coroutine* coroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Color cachedColor
    // Size: 0x10
    // Offset: 0x40
    ::UnityEngine::Color cachedColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Texture2D cachedImage
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Texture2D* cachedImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    public:
    // Get instance field reference: public AdvancedColorPicker.ColorEyedropper/AdvancedColorPicker.ActiveChanged OnActivated
    [[deprecated]] ::AdvancedColorPicker::ColorEyedropper::ActiveChanged*& dyn_OnActivated();
    // Get instance field reference: public AdvancedColorPicker.ColorEyedropper/AdvancedColorPicker.ActiveChanged OnDeactivated
    [[deprecated]] ::AdvancedColorPicker::ColorEyedropper::ActiveChanged*& dyn_OnDeactivated();
    // Get instance field reference: private System.Boolean changesColorInstantly
    [[deprecated]] bool& dyn_changesColorInstantly();
    // Get instance field reference: private System.Boolean activated
    [[deprecated]] bool& dyn_activated();
    // Get instance field reference: private UnityEngine.Coroutine coroutine
    [[deprecated]] ::UnityEngine::Coroutine*& dyn_coroutine();
    // Get instance field reference: private UnityEngine.Color cachedColor
    [[deprecated]] ::UnityEngine::Color& dyn_cachedColor();
    // Get instance field reference: private UnityEngine.Texture2D cachedImage
    [[deprecated]] ::UnityEngine::Texture2D*& dyn_cachedImage();
    // public System.Boolean get_Activated()
    // Offset: 0x4B1050
    bool get_Activated();
    // public System.Void set_Activated(System.Boolean value)
    // Offset: 0x5AAB80
    void set_Activated(bool value);
    // public System.Boolean get_ChangesColorInstantly()
    // Offset: 0x30EB40
    bool get_ChangesColorInstantly();
    // public System.Void set_ChangesColorInstantly(System.Boolean value)
    // Offset: 0x5AAC20
    void set_ChangesColorInstantly(bool value);
    // public System.Void Activate()
    // Offset: 0x5AA7B0
    void Activate();
    // private System.Void SelectColor()
    // Offset: 0x5AAA80
    void SelectColor();
    // private System.Collections.IEnumerator ReadScreenColor()
    // Offset: 0x5AAA10
    ::System::Collections::IEnumerator* ReadScreenColor();
    // public System.Void .ctor()
    // Offset: 0x5AAAF0
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorEyedropper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorEyedropper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorEyedropper*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0x5AA850
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void OnEnable()
    // Offset: 0x5AA980
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x5AA950
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::OnDisable()
    void OnDisable();
    // protected override System.Void OnDestroy()
    // Offset: 0x5AA8F0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDestroy()
    void OnDestroy();
    // protected override System.Void DisplayNewColor()
    // Offset: 0x1DDF00
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::DisplayNewColor()
    void DisplayNewColor();
  }; // AdvancedColorPicker.ColorEyedropper
  #pragma pack(pop)
  static check_size<sizeof(ColorEyedropper), 80 + sizeof(::UnityEngine::Texture2D*)> __AdvancedColorPicker_ColorEyedropperSizeCheck;
  static_assert(sizeof(ColorEyedropper) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::get_Activated
// Il2CppName: get_Activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::get_Activated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "get_Activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::set_Activated
// Il2CppName: set_Activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)(bool)>(&AdvancedColorPicker::ColorEyedropper::set_Activated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "set_Activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::get_ChangesColorInstantly
// Il2CppName: get_ChangesColorInstantly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::get_ChangesColorInstantly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "get_ChangesColorInstantly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::set_ChangesColorInstantly
// Il2CppName: set_ChangesColorInstantly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)(bool)>(&AdvancedColorPicker::ColorEyedropper::set_ChangesColorInstantly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "set_ChangesColorInstantly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::Activate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::SelectColor
// Il2CppName: SelectColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::SelectColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "SelectColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::ReadScreenColor
// Il2CppName: ReadScreenColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::ReadScreenColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "ReadScreenColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorEyedropper::DisplayNewColor
// Il2CppName: DisplayNewColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorEyedropper::*)()>(&AdvancedColorPicker::ColorEyedropper::DisplayNewColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorEyedropper*), "DisplayNewColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
