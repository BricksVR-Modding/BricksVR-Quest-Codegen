// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: IFormattable
  class IFormattable;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: HexfieldType
  struct HexfieldType;
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorPickerUtils
  class ColorPickerUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorPickerUtils);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorPickerUtils*, "AdvancedColorPicker", "ColorPickerUtils");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorPickerUtils
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ColorPickerUtils : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.Texture2D _checkboard
    static ::UnityEngine::Texture2D* _get__checkboard();
    // Set static field: static private UnityEngine.Texture2D _checkboard
    static void _set__checkboard(::UnityEngine::Texture2D* value);
    // static field const value: static private System.String hexRegex
    static constexpr const char* hexRegex = "^#?(?:[0-9a-fA-F]{3,4}){1,2}$";
    // Get static field: static private System.String hexRegex
    static ::StringW _get_hexRegex();
    // Set static field: static private System.String hexRegex
    static void _set_hexRegex(::StringW value);
    // static field const value: static private System.String PlayerPrefsSwatchKey
    static constexpr const char* PlayerPrefsSwatchKey = "ACP_Swatch_";
    // Get static field: static private System.String PlayerPrefsSwatchKey
    static ::StringW _get_PlayerPrefsSwatchKey();
    // Set static field: static private System.String PlayerPrefsSwatchKey
    static void _set_PlayerPrefsSwatchKey(::StringW value);
    // static public UnityEngine.Texture2D get_Checkboard()
    // Offset: 0xE1949C
    static ::UnityEngine::Texture2D* get_Checkboard();
    // static private System.Void .cctor()
    // Offset: 0xE1A1C0
    static void _cctor();
    // static public System.Boolean IsFormatValid(T target, System.String Format)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool IsFormatValid(T target, ::StringW Format) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<T>, ::System::IFormattable>);
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorPickerUtils::IsFormatValid");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AdvancedColorPicker", "ColorPickerUtils", "IsFormatValid", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(Format)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, target, Format);
    }
    // static public System.Boolean SetClass(ref T currentValue, T newValue)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool SetClass(ByRef<T> currentValue, T newValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorPickerUtils::SetClass");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AdvancedColorPicker", "ColorPickerUtils", "SetClass", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(currentValue), newValue);
    }
    // static public System.Boolean SetStruct(ref T currentValue, T newValue)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool SetStruct(ByRef<T> currentValue, T newValue) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorPickerUtils::SetStruct");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AdvancedColorPicker", "ColorPickerUtils", "SetStruct", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(currentValue), newValue);
    }
    // static public System.String ColorToHex(UnityEngine.Color32 color, System.Boolean hashtag, System.Boolean alpha)
    // Offset: 0xE196D8
    static ::StringW ColorToHex(::UnityEngine::Color32 color, bool hashtag, bool alpha);
    // static public System.Boolean HexToColor(System.String hex, AdvancedColorPicker.HexfieldType acceptedInput, System.Byte defaultAlpha, out UnityEngine.Color32 color)
    // Offset: 0xE19820
    static bool HexToColor(::StringW hex, ::AdvancedColorPicker::HexfieldType acceptedInput, uint8_t defaultAlpha, ByRef<::UnityEngine::Color32> color);
    // static public System.String GetSwatchKey(System.String name)
    // Offset: 0xE19C98
    static ::StringW GetSwatchKey(::StringW name);
    // static public UnityEngine.Color32[] LoadSwatch(System.String name)
    // Offset: 0xE19CEC
    static ::ArrayW<::UnityEngine::Color32> LoadSwatch(::StringW name);
    // static public System.Void SaveSwatch(System.String name, params UnityEngine.Color32[] colors)
    // Offset: 0xE19FDC
    static void SaveSwatch(::StringW name, ::ArrayW<::UnityEngine::Color32> colors);
    // static public System.Void DeleteSwatch(System.String name)
    // Offset: 0xE1A134
    static void DeleteSwatch(::StringW name);
  }; // AdvancedColorPicker.ColorPickerUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::get_Checkboard
// Il2CppName: get_Checkboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (*)()>(&AdvancedColorPicker::ColorPickerUtils::get_Checkboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "get_Checkboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AdvancedColorPicker::ColorPickerUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::IsFormatValid
// Il2CppName: IsFormatValid
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::SetClass
// Il2CppName: SetClass
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::SetStruct
// Il2CppName: SetStruct
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::ColorToHex
// Il2CppName: ColorToHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Color32, bool, bool)>(&AdvancedColorPicker::ColorPickerUtils::ColorToHex)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    static auto* hashtag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* alpha = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "ColorToHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color, hashtag, alpha});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::HexToColor
// Il2CppName: HexToColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::AdvancedColorPicker::HexfieldType, uint8_t, ByRef<::UnityEngine::Color32>)>(&AdvancedColorPicker::ColorPickerUtils::HexToColor)> {
  static const MethodInfo* get() {
    static auto* hex = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* acceptedInput = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "HexfieldType")->byval_arg;
    static auto* defaultAlpha = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "HexToColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hex, acceptedInput, defaultAlpha, color});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::GetSwatchKey
// Il2CppName: GetSwatchKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&AdvancedColorPicker::ColorPickerUtils::GetSwatchKey)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "GetSwatchKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::LoadSwatch
// Il2CppName: LoadSwatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color32> (*)(::StringW)>(&AdvancedColorPicker::ColorPickerUtils::LoadSwatch)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "LoadSwatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::SaveSwatch
// Il2CppName: SaveSwatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::UnityEngine::Color32>)>(&AdvancedColorPicker::ColorPickerUtils::SaveSwatch)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* colors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "SaveSwatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, colors});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPickerUtils::DeleteSwatch
// Il2CppName: DeleteSwatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&AdvancedColorPicker::ColorPickerUtils::DeleteSwatch)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPickerUtils*), "DeleteSwatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
