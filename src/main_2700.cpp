// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged
#include "Normal/Realtime/Room_ConnectionStateChanged.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.Invoke
void Normal::Realtime::Room::ConnectionStateChanged::Invoke(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::ConnectionStateChanged*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, previousConnectionState, connectionState);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::ConnectionStateChanged::BeginInvoke(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::ConnectionStateChanged*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, room, previousConnectionState, connectionState, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged.EndInvoke
void Normal::Realtime::Room::ConnectionStateChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionStateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::ConnectionStateChanged*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived
#include "Normal/Realtime/Room_RPCMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.Invoke
void Normal::Realtime::Room::RPCMessageReceived::Invoke(::Normal::Realtime::Room* room, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RPCMessageReceived*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::RPCMessageReceived::BeginInvoke(::Normal::Realtime::Room* room, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RPCMessageReceived*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, room, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived.EndInvoke
void Normal::Realtime::Room::RPCMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RPCMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RPCMessageReceived*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Error
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Error
void Normal::Realtime::Room::ConnectionState::_set_Error(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Disconnected
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Disconnected
void Normal::Realtime::Room::ConnectionState::_set_Disconnected(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState RequestingRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_RequestingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_RequestingRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "RequestingRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState RequestingRoom
void Normal::Realtime::Room::ConnectionState::_set_RequestingRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_RequestingRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "RequestingRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState PingingClusters
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_PingingClusters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_PingingClusters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "PingingClusters"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState PingingClusters
void Normal::Realtime::Room::ConnectionState::_set_PingingClusters(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_PingingClusters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "PingingClusters", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectingToRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_ConnectingToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_ConnectingToRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "ConnectingToRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectingToRoom
void Normal::Realtime::Room::ConnectionState::_set_ConnectingToRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_ConnectingToRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "ConnectingToRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectedToRoom
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_ConnectedToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_ConnectedToRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "ConnectedToRoom"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState ConnectedToRoom
void Normal::Realtime::Room::ConnectionState::_set_ConnectedToRoom(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_ConnectedToRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "ConnectedToRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Ready
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::ConnectionState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Room::ConnectionState>("Normal.Realtime", "Room/ConnectionState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Room/Normal.Realtime.ConnectionState Ready
void Normal::Realtime::Room::ConnectionState::_set_Ready(::Normal::Realtime::Room::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Room/ConnectionState", "Ready", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::Room::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler
#include "Normal/Realtime/Room_RoomEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.Invoke
void Normal::Realtime::Room::RoomEventHandler::Invoke(::Normal::Realtime::Room* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RoomEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Room::RoomEventHandler::BeginInvoke(::Normal::Realtime::Room* sender, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RoomEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, callback, object);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler.EndInvoke
void Normal::Realtime::Room::RoomEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::RoomEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Room <>4__this
[[deprecated]] ::Normal::Realtime::Room*& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Matcher matcher
[[deprecated]] ::Normal::Realtime::Native::Matcher*& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_matcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_matcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Matcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String connectToRoomRequest
[[deprecated]] ::StringW& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_connectToRoomRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_connectToRoomRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToRoomRequest"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldConnectAgain
[[deprecated]] bool& Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_shouldConnectAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::dyn_shouldConnectAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldConnectAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0.<ConnectToServer_Coroutine>b__0
void Normal::Realtime::Room::$$c__DisplayClass87_0::$ConnectToServer_Coroutine$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$$c__DisplayClass87_0::<ConnectToServer_Coroutine>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectToServer_Coroutine>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87
#include "Normal/Realtime/Room_-ConnectToServer_Coroutine-d__87.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ping
#include "UnityEngine/Ping.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Room <>4__this
[[deprecated]] ::Normal::Realtime::Room*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Matcher matcher
[[deprecated]] ::Normal::Realtime::Native::Matcher*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Matcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomName
[[deprecated]] ::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeModel roomModel
[[deprecated]] ::Normal::Realtime::RealtimeModel*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String matcherURL
[[deprecated]] ::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcherURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_matcherURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matcherURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String appKey
[[deprecated]] ::StringW& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_appKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_appKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Cluster[] clusterPingResults
[[deprecated]] ::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_clusterPingResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_clusterPingResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clusterPingResults"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.Region[] preferredRegions
[[deprecated]] ::ArrayW<::Normal::Realtime::Native::Region>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_preferredRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_preferredRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preferredRegions"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Region>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext coroutineContext
[[deprecated]] ::Normal::Realtime::CoroutineRunner::CoroutineContext*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_coroutineContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_coroutineContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0 <>8__1
[[deprecated]] ::Normal::Realtime::Room::$$c__DisplayClass87_0*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::$$c__DisplayClass87_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Cluster[] <newClusterPingResults>5__2
[[deprecated]] ::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$newClusterPingResults$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$newClusterPingResults$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newClusterPingResults>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <requestComplete>5__3
[[deprecated]] bool& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$requestComplete$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$requestComplete$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestComplete>5__3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Cluster[] <clustersToPing>5__4
[[deprecated]] ::ArrayW<::Normal::Realtime::Native::Cluster>& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$clustersToPing$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$clustersToPing$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clustersToPing>5__4"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::Native::Cluster>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Ping> <pings>5__5
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Ping*>*& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$pings$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$pings$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pings>5__5"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Ping*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__6
[[deprecated]] float& Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$startTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::dyn_$startTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.IDisposable.Dispose
void Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.MoveNext
bool Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87.System.Collections.IEnumerator.Reset
void Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room::$ConnectToServer_Coroutine$d__87*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture
#include "Normal/Realtime/RealtimeSessionCapture.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/RealtimeSessionCapture_--c.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode _mode
[[deprecated]] ::Normal::Realtime::RealtimeSessionCapture::Mode& Normal::Realtime::RealtimeSessionCapture::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeSessionCapture::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _playbackCaptureFiles
[[deprecated]] ::ArrayW<::StringW>& Normal::Realtime::RealtimeSessionCapture::dyn__playbackCaptureFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__playbackCaptureFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackCaptureFiles"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
[[deprecated]] ::Normal::Realtime::Realtime*& Normal::Realtime::RealtimeSessionCapture::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
[[deprecated]] ::Normal::Realtime::Room*& Normal::Realtime::RealtimeSessionCapture::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture.Awake
void Normal::Realtime::RealtimeSessionCapture::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode
#include "Normal/Realtime/RealtimeSessionCapture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Off
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Off
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Off(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Record
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Record
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Record(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Playback
::Normal::Realtime::RealtimeSessionCapture::Mode Normal::Realtime::RealtimeSessionCapture::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::Mode>("Normal.Realtime", "RealtimeSessionCapture/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.Mode Playback
void Normal::Realtime::RealtimeSessionCapture::Mode::_set_Playback(::Normal::Realtime::RealtimeSessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/Mode", "Playback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::RealtimeSessionCapture::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/RealtimeSessionCapture_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c <>9
::Normal::Realtime::RealtimeSessionCapture::$$c* Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeSessionCapture::$$c*>("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c <>9
void Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9(::Normal::Realtime::RealtimeSessionCapture::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__5_0
::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>*>("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__5_0
void Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9__5_0(::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeSessionCapture/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c..cctor
void Normal::Realtime::RealtimeSessionCapture::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeSessionCapture/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeSessionCapture/Normal.Realtime.<>c.<Awake>b__5_0
::System::DateTime Normal::Realtime::RealtimeSessionCapture::$$c::$Awake$b__5_0(::System::IO::FileInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeSessionCapture::$$c::<Awake>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.SessionCapture
#include "Normal/Realtime/SessionCapture.hpp"
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream
#include "Normal/Realtime/SessionCapture_PlaybackStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/SessionCapture_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture/Normal.Realtime.Mode _mode
[[deprecated]] ::Normal::Realtime::SessionCapture::Mode& Normal::Realtime::SessionCapture::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _recording
[[deprecated]] bool& Normal::Realtime::SessionCapture::dyn__recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playing
[[deprecated]] bool& Normal::Realtime::SessionCapture::dyn__playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordFilePath
[[deprecated]] ::StringW& Normal::Realtime::SessionCapture::dyn__recordFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recordFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream _recordFileStream
[[deprecated]] ::Normal::Realtime::SessionCaptureFileStream*& Normal::Realtime::SessionCapture::dyn__recordFileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__recordFileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordFileStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _playbackTime
[[deprecated]] double& Normal::Realtime::SessionCapture::dyn__playbackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playbackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.UInt32,Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate>> _clientToIncomingReliableUpdatesMap
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>*>*& Normal::Realtime::SessionCapture::dyn__clientToIncomingReliableUpdatesMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__clientToIncomingReliableUpdatesMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientToIncomingReliableUpdatesMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _primaryPlaybackFilePath
[[deprecated]] ::StringW& Normal::Realtime::SessionCapture::dyn__primaryPlaybackFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream _primaryPlaybackStream
[[deprecated]] ::Normal::Realtime::SessionCapture::PlaybackStream*& Normal::Realtime::SessionCapture::dyn__primaryPlaybackStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture::PlaybackStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate> _primaryPlaybackDeltaUpdatesToBeProcessed
[[deprecated]] ::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>*& Normal::Realtime::SessionCapture::dyn__primaryPlaybackDeltaUpdatesToBeProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__primaryPlaybackDeltaUpdatesToBeProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPlaybackDeltaUpdatesToBeProcessed"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _secondaryPlaybackFilePaths
[[deprecated]] ::ArrayW<::StringW>& Normal::Realtime::SessionCapture::dyn__secondaryPlaybackFilePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__secondaryPlaybackFilePaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryPlaybackFilePaths"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream> _secondaryPlaybackStreams
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::SessionCapture::PlaybackStream*>*& Normal::Realtime::SessionCapture::dyn__secondaryPlaybackStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__secondaryPlaybackStreams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryPlaybackStreams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::SessionCapture::PlaybackStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate> _playbackDeltaUpdates
[[deprecated]] ::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>*& Normal::Realtime::SessionCapture::dyn__playbackDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::dyn__playbackDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Normal::Realtime::SessionCapture::DeltaUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_mode
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCapture::Mode, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_recording
bool Normal::Realtime::SessionCapture::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.get_playing
bool Normal::Realtime::SessionCapture::get_playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::get_playing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StartRecording
void Normal::Realtime::SessionCapture::StartRecording(int clientID, double startTimestamp, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(startTimestamp), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID, startTimestamp, data);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StopRecording
void Normal::Realtime::SessionCapture::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.WriteDeltaUpdate
void Normal::Realtime::SessionCapture::WriteDeltaUpdate(double timestamp, int sender, ::ArrayW<uint8_t> data, int dataLength, bool reliable, uint updateID, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::WriteDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, sender, data, dataLength, reliable, updateID, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StartPlayback
::ArrayW<uint8_t> Normal::Realtime::SessionCapture::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.StopPlayback
void Normal::Realtime::SessionCapture::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.PlaybackTick
void Normal::Realtime::SessionCapture::PlaybackTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.SessionCapture.AdjustOutgoingUnreliableDeltaUpdateTimestamp
bool Normal::Realtime::SessionCapture::AdjustOutgoingUnreliableDeltaUpdateTimestamp(double playbackTime, ::Normal::Realtime::SessionCapture::PlaybackStream* playbackStream, ::Normal::Realtime::SessionCapture::DeltaUpdate* deltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::AdjustOutgoingUnreliableDeltaUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture", "AdjustOutgoingUnreliableDeltaUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(playbackStream), ::il2cpp_utils::ExtractType(deltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playbackTime, playbackStream, deltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture.AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate
bool Normal::Realtime::SessionCapture::AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate(::Normal::Realtime::SessionCapture::PlaybackStream* playbackStream, ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::SessionCapture::DeltaUpdate*>* incomingReliableUpdates, ::Normal::Realtime::SessionCapture::DeltaUpdate* outgoingReliableDeltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture", "AdjustPlaybackStreamSendTimestampOffsetWithOutgoingReliableDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackStream), ::il2cpp_utils::ExtractType(incomingReliableUpdates), ::il2cpp_utils::ExtractType(outgoingReliableDeltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playbackStream, incomingReliableUpdates, outgoingReliableDeltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture.ReadDeltaUpdate
::Normal::Realtime::SessionCapture::DeltaUpdate* Normal::Realtime::SessionCapture::ReadDeltaUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCapture::DeltaUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture.Finalize
void Normal::Realtime::SessionCapture::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.Mode
#include "Normal/Realtime/SessionCapture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Record
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::Mode>("Normal.Realtime", "SessionCapture/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Record
void Normal::Realtime::SessionCapture::Mode::_set_Record(::Normal::Realtime::SessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Playback
::Normal::Realtime::SessionCapture::Mode Normal::Realtime::SessionCapture::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::Mode>("Normal.Realtime", "SessionCapture/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCapture/Normal.Realtime.Mode Playback
void Normal::Realtime::SessionCapture::Mode::_set_Playback(::Normal::Realtime::SessionCapture::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/Mode", "Playback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::SessionCapture::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double timestamp
[[deprecated]] double& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sender
[[deprecated]] int& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] data
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reliable
[[deprecated]] bool& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_reliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 updateID
[[deprecated]] uint& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_updateID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean incoming
[[deprecated]] bool& Normal::Realtime::SessionCapture::DeltaUpdate::dyn_incoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::dyn_incoming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incoming"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate.get_unreliable
bool Normal::Realtime::SessionCapture::DeltaUpdate::get_unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::get_unreliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unreliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate.get_outgoing
bool Normal::Realtime::SessionCapture::DeltaUpdate::get_outgoing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::DeltaUpdate::get_outgoing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outgoing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream
#include "Normal/Realtime/SessionCapture_PlaybackStream.hpp"
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream _fileStream
[[deprecated]] ::Normal::Realtime::SessionCaptureFileStream*& Normal::Realtime::SessionCapture::PlaybackStream::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _sendTimestampOffset
[[deprecated]] double& Normal::Realtime::SessionCapture::PlaybackStream::dyn__sendTimestampOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::dyn__sendTimestampOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendTimestampOffset"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_reading
bool Normal::Realtime::SessionCapture::PlaybackStream::get_reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_startTimestamp
double Normal::Realtime::SessionCapture::PlaybackStream::get_startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_startTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_clientID
int Normal::Realtime::SessionCapture::PlaybackStream::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.get_sendTimestampOffset
double Normal::Realtime::SessionCapture::PlaybackStream::get_sendTimestampOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::get_sendTimestampOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendTimestampOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.set_sendTimestampOffset
void Normal::Realtime::SessionCapture::PlaybackStream::set_sendTimestampOffset(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::set_sendTimestampOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendTimestampOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Dispose
void Normal::Realtime::SessionCapture::PlaybackStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::SessionCapture::PlaybackStream*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Dispose
void Normal::Realtime::SessionCapture::PlaybackStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.ReadHeader
::ArrayW<uint8_t> Normal::Realtime::SessionCapture::PlaybackStream::ReadHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::ReadHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.ReadDeltaUpdate
bool Normal::Realtime::SessionCapture::PlaybackStream::ReadDeltaUpdate(double playbackTime, ::Normal::Realtime::SessionCapture::DeltaUpdate* deltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(deltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playbackTime, deltaUpdate);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.SkipToTime
void Normal::Realtime::SessionCapture::PlaybackStream::SkipToTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::SkipToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.PlaybackStream.Finalize
void Normal::Realtime::SessionCapture::PlaybackStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::PlaybackStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.<>c
#include "Normal/Realtime/SessionCapture_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate
#include "Normal/Realtime/SessionCapture_DeltaUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.SessionCapture/Normal.Realtime.<>c <>9
::Normal::Realtime::SessionCapture::$$c* Normal::Realtime::SessionCapture::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCapture::$$c*>("Normal.Realtime", "SessionCapture/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.SessionCapture/Normal.Realtime.<>c <>9
void Normal::Realtime::SessionCapture::$$c::_set_$$9(::Normal::Realtime::SessionCapture::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate,System.Double> <>9__28_0
::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>* Normal::Realtime::SessionCapture::$$c::_get_$$9__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_get_$$9__28_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>*>("Normal.Realtime", "SessionCapture/<>c", "<>9__28_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Normal.Realtime.SessionCapture/Normal.Realtime.DeltaUpdate,System.Double> <>9__28_0
void Normal::Realtime::SessionCapture::$$c::_set_$$9__28_0(::System::Func_2<::Normal::Realtime::SessionCapture::DeltaUpdate*, double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::_set_$$9__28_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCapture/<>c", "<>9__28_0", value)));
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.<>c..cctor
void Normal::Realtime::SessionCapture::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCapture/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCapture/Normal.Realtime.<>c.<PlaybackTick>b__28_0
double Normal::Realtime::SessionCapture::$$c::$PlaybackTick$b__28_0(::Normal::Realtime::SessionCapture::DeltaUpdate* playbackDeltaUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCapture::$$c::<PlaybackTick>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PlaybackTick>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackDeltaUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, playbackDeltaUpdate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.SessionCaptureFileStream
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.Compression.GZipStream
#include "System/IO/Compression/GZipStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _filePath
[[deprecated]] ::StringW& Normal::Realtime::SessionCaptureFileStream::dyn__filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode _mode
[[deprecated]] ::Normal::Realtime::SessionCaptureFileStream::Mode& Normal::Realtime::SessionCaptureFileStream::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCaptureFileStream::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStream _fileStream
[[deprecated]] ::System::IO::FileStream*& Normal::Realtime::SessionCaptureFileStream::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::System::IO::FileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.GZipStream _gzipStream
[[deprecated]] ::System::IO::Compression::GZipStream*& Normal::Realtime::SessionCaptureFileStream::dyn__gzipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__gzipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gzipStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::GZipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writing
[[deprecated]] bool& Normal::Realtime::SessionCaptureFileStream::dyn__writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__writing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _reading
[[deprecated]] bool& Normal::Realtime::SessionCaptureFileStream::dyn__reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__reading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _startTimestamp
[[deprecated]] double& Normal::Realtime::SessionCaptureFileStream::dyn__startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__startTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTimestamp"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _clientID
[[deprecated]] int& Normal::Realtime::SessionCaptureFileStream::dyn__clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__clientID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nextUpdateDeltaTimestamp
[[deprecated]] uint& Normal::Realtime::SessionCaptureFileStream::dyn__nextUpdateDeltaTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::dyn__nextUpdateDeltaTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextUpdateDeltaTimestamp"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_filePath
::StringW Normal::Realtime::SessionCaptureFileStream::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_mode
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SessionCaptureFileStream::Mode, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_writing
bool Normal::Realtime::SessionCaptureFileStream::get_writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_reading
bool Normal::Realtime::SessionCaptureFileStream::get_reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_startTimestamp
double Normal::Realtime::SessionCaptureFileStream::get_startTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_startTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.get_clientID
int Normal::Realtime::SessionCaptureFileStream::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Dispose
void Normal::Realtime::SessionCaptureFileStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Dispose
void Normal::Realtime::SessionCaptureFileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteHeader
void Normal::Realtime::SessionCaptureFileStream::WriteHeader(int clientID, double startTimestamp, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(startTimestamp), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID, startTimestamp, data);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Flush
void Normal::Realtime::SessionCaptureFileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteDeltaUpdate
void Normal::Realtime::SessionCaptureFileStream::WriteDeltaUpdate(double timestamp, int sender, ::ArrayW<uint8_t> data, int dataLength, bool reliable, uint updateID, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, sender, data, dataLength, reliable, updateID, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadHeader
::ArrayW<uint8_t> Normal::Realtime::SessionCaptureFileStream::ReadHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.PeekNextUpdateDeltaTimestamp
bool Normal::Realtime::SessionCaptureFileStream::PeekNextUpdateDeltaTimestamp(ByRef<double> deltaTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::PeekNextUpdateDeltaTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNextUpdateDeltaTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(deltaTimestamp));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadDeltaUpdate
bool Normal::Realtime::SessionCaptureFileStream::ReadDeltaUpdate(double playbackTime, ByRef<double> timestamp, ByRef<int> sender, ByRef<::ArrayW<uint8_t>> data, ByRef<bool> reliable, ByRef<uint> updateID, ByRef<bool> incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadDeltaUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDeltaUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(incoming)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playbackTime, byref(timestamp), byref(sender), byref(data), byref(reliable), byref(updateID), byref(incoming));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.SkipToTime
void Normal::Realtime::SessionCaptureFileStream::SkipToTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::SkipToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadNextUpdateDeltaTimestamp
void Normal::Realtime::SessionCaptureFileStream::ReadNextUpdateDeltaTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadNextUpdateDeltaTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextUpdateDeltaTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.PrematurelyReachedEndOfStream
void Normal::Realtime::SessionCaptureFileStream::PrematurelyReachedEndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::PrematurelyReachedEndOfStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrematurelyReachedEndOfStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteVarint32ToStream
void Normal::Realtime::SessionCaptureFileStream::WriteVarint32ToStream(::System::IO::Stream* stream, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteVarint32ToStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "WriteVarint32ToStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, value);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadVarint32FromStream
bool Normal::Realtime::SessionCaptureFileStream::ReadVarint32FromStream(::System::IO::Stream* stream, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadVarint32FromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "ReadVarint32FromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, byref(value));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.WriteDoubleToStream
void Normal::Realtime::SessionCaptureFileStream::WriteDoubleToStream(::System::IO::Stream* stream, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::WriteDoubleToStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "WriteDoubleToStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, value);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.ReadDoubleFromStream
double Normal::Realtime::SessionCaptureFileStream::ReadDoubleFromStream(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::ReadDoubleFromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "ReadDoubleFromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.CombineSenderReliableAndIncoming
uint Normal::Realtime::SessionCaptureFileStream::CombineSenderReliableAndIncoming(int sender, bool reliable, bool incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::CombineSenderReliableAndIncoming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "CombineSenderReliableAndIncoming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(incoming)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, reliable, incoming);
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.SplitSenderReliableAndIncoming
void Normal::Realtime::SessionCaptureFileStream::SplitSenderReliableAndIncoming(uint value, ByRef<int> sender, ByRef<bool> reliable, ByRef<bool> incoming) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::SplitSenderReliableAndIncoming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "SessionCaptureFileStream", "SplitSenderReliableAndIncoming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(sender), byref(reliable), byref(incoming));
}
// Autogenerated method: Normal.Realtime.SessionCaptureFileStream.Finalize
void Normal::Realtime::SessionCaptureFileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode
#include "Normal/Realtime/SessionCaptureFileStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Write
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::Mode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCaptureFileStream::Mode>("Normal.Realtime", "SessionCaptureFileStream/Mode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Write
void Normal::Realtime::SessionCaptureFileStream::Mode::_set_Write(::Normal::Realtime::SessionCaptureFileStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCaptureFileStream/Mode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Read
::Normal::Realtime::SessionCaptureFileStream::Mode Normal::Realtime::SessionCaptureFileStream::Mode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::SessionCaptureFileStream::Mode>("Normal.Realtime", "SessionCaptureFileStream/Mode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.SessionCaptureFileStream/Normal.Realtime.Mode Read
void Normal::Realtime::SessionCaptureFileStream::Mode::_set_Read(::Normal::Realtime::SessionCaptureFileStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "SessionCaptureFileStream/Mode", "Read", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::SessionCaptureFileStream::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SessionCaptureFileStream::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner
#include "Normal/Realtime/CoroutineRunner.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext> _activeCoroutines
[[deprecated]] ::System::Collections::Generic::HashSet_1<::Normal::Realtime::CoroutineRunner::CoroutineContext*>*& Normal::Realtime::CoroutineRunner::dyn__activeCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::dyn__activeCoroutines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeCoroutines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::CoroutineRunner::CoroutineContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.RunCoroutine
::Normal::Realtime::CoroutineRunner::CoroutineContext* Normal::Realtime::CoroutineRunner::RunCoroutine(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::RunCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::CoroutineRunner::CoroutineContext*, false>(this, ___internal__method, coroutineContext);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.CoroutineCompletedOrCancelled
void Normal::Realtime::CoroutineRunner::CoroutineCompletedOrCancelled(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineCompletedOrCancelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineCompletedOrCancelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineContext);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner.OnDestroy
void Normal::Realtime::CoroutineRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State _state
[[deprecated]] ::Normal::Realtime::CoroutineRunner::CoroutineContext::State& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator _coroutineEnumerator
[[deprecated]] ::System::Collections::IEnumerator*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineEnumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated]] ::UnityEngine::Coroutine*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner _coroutineRunner
[[deprecated]] ::Normal::Realtime::CoroutineRunner*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn__coroutineRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineRunner"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <cleanupAction>k__BackingField
[[deprecated]] ::System::Action*& Normal::Realtime::CoroutineRunner::CoroutineContext::dyn_$cleanupAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::dyn_$cleanupAction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cleanupAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.get_state
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::CoroutineRunner::CoroutineContext::State, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.get_cleanupAction
::System::Action* Normal::Realtime::CoroutineRunner::CoroutineContext::get_cleanupAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::get_cleanupAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleanupAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.set_cleanupAction
void Normal::Realtime::CoroutineRunner::CoroutineContext::set_cleanupAction(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::set_cleanupAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleanupAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.Bind
void Normal::Realtime::CoroutineRunner::CoroutineContext::Bind(::System::Collections::IEnumerator* coroutineEnumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineEnumerator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineEnumerator);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.CompleteAndCleanUp
void Normal::Realtime::CoroutineRunner::CoroutineContext::CompleteAndCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::CompleteAndCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteAndCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext.CancelAndCleanUp
void Normal::Realtime::CoroutineRunner::CoroutineContext::CancelAndCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::CancelAndCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAndCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._Cancel
void Normal::Realtime::CoroutineRunner::CoroutineContext::_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._StartWithCoroutineRunner
void Normal::Realtime::CoroutineRunner::CoroutineContext::_StartWithCoroutineRunner(::Normal::Realtime::CoroutineRunner* coroutineRunner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_StartWithCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_StartWithCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineRunner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineRunner);
}
// Autogenerated method: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext._OnDestroy
void Normal::Realtime::CoroutineRunner::CoroutineContext::_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::_OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Created
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Created
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Created(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Bound
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Bound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Bound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Bound"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Bound
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Bound(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Bound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Bound", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Running
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Running"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Running
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Running(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Completed
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Completed
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Completed(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Cancelled
::Normal::Realtime::CoroutineRunner::CoroutineContext::State Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::CoroutineRunner::CoroutineContext::State>("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext/Normal.Realtime.State Cancelled
void Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Cancelled(::Normal::Realtime::CoroutineRunner::CoroutineContext::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "CoroutineRunner/CoroutineContext/State", "Cancelled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::CoroutineRunner::CoroutineContext::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CoroutineRunner::CoroutineContext::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeExecutionOrder
#include "Normal/Realtime/RealtimeExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 RealtimeView
int Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeView"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RealtimeView
void Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeView(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeView", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RealtimeTransform
int Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_get_RealtimeTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeTransform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RealtimeTransform
void Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeTransform(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeExecutionOrder::_set_RealtimeTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeExecutionOrder", "RealtimeTransform", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyDictionary`2<System.UInt32,Normal.Realtime.RealtimeModel> _modelDict
[[deprecated]] ::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>*& Normal::Realtime::ImmutableModelCollection::dyn__modelDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::dyn__modelDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry[] _modelList
[[deprecated]] ::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>& Normal::Realtime::ImmutableModelCollection::dyn__modelList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::dyn__modelList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelList"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.get_Item
::Normal::Realtime::RealtimeModel* Normal::Realtime::ImmutableModelCollection::get_Item(uint id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method, id);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.FlattenModelDictionary
::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry> Normal::Realtime::ImmutableModelCollection::FlattenModelDictionary(::System::Collections::Generic::IReadOnlyDictionary_2<uint, ::Normal::Realtime::RealtimeModel*>* models) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::FlattenModelDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "ImmutableModelCollection", "FlattenModelDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(models)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, models);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, ::Normal::Realtime::RealtimeModel*>>* Normal::Realtime::ImmutableModelCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ImmutableModelCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, ::Normal::Realtime::RealtimeModel*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Normal::Realtime::ImmutableModelCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ImmutableModelCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.WriteLength
int Normal::Realtime::ImmutableModelCollection::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.Write
void Normal::Realtime::ImmutableModelCollection::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection.Read
void Normal::Realtime::ImmutableModelCollection::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 propertyID
[[deprecated]] uint& Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_propertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_propertyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeModel model
[[deprecated]] ::Normal::Realtime::RealtimeModel*& Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::dyn_model");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ImmutableModelCollection/Normal.Realtime.RealtimeModelListEntry..ctor
// ABORTED elsewhere.  Normal::Realtime::ImmutableModelCollection::RealtimeModelListEntry::RealtimeModelListEntry(uint propertyID, ::Normal::Realtime::RealtimeModel* model)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate
#include "Normal/Realtime/RealtimeView_SceneViewWillRegisterDelegate.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeViewHierarchy
#include "Normal/Realtime/RealtimeViewHierarchy.hpp"
// Including type: Normal.Realtime.RealtimeComponentMap
#include "Normal/Realtime/RealtimeComponentMap.hpp"
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.IConfigurableComponentMap
#include "Normal/Realtime/IConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
[[deprecated]] ::Normal::Realtime::Realtime*& Normal::Realtime::RealtimeView::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _sceneViewUUID
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::RealtimeView::dyn__sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewUUID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _viewUUID
[[deprecated]] ::StringW& Normal::Realtime::RealtimeView::dyn__viewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__viewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewPreventOwnershipTakeover
[[deprecated]] bool& Normal::Realtime::RealtimeView::dyn__sceneViewPreventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewPreventOwnershipTakeover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewPreventOwnershipTakeover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenOwnerOrLastClientLeaves
[[deprecated]] bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeaves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenOwnerOrLastClientLeaves"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated
[[deprecated]] bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenOwnerOrLastClientLeavesMigrated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewDestroyWhenLastClientLeaves
[[deprecated]] bool& Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__sceneViewDestroyWhenLastClientLeaves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewDestroyWhenLastClientLeaves"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SerializableComponentIDPair[] _components
[[deprecated]] ::ArrayW<::Normal::Realtime::SerializableComponentIDPair>& Normal::Realtime::RealtimeView::dyn__components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_components"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::SerializableComponentIDPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SerializableViewIDPair[] _childViews
[[deprecated]] ::ArrayW<::Normal::Realtime::SerializableViewIDPair>& Normal::Realtime::RealtimeView::dyn__childViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__childViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViews"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::SerializableViewIDPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeViewHierarchy _hierarchy
[[deprecated]] ::Normal::Realtime::RealtimeViewHierarchy*& Normal::Realtime::RealtimeView::dyn__hierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__hierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchy"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewHierarchy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeComponentMap _realtimeComponents
[[deprecated]] ::Normal::Realtime::RealtimeComponentMap*& Normal::Realtime::RealtimeView::dyn__realtimeComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtimeComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeComponents"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeComponentMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeViewMap _realtimeChildViews
[[deprecated]] ::Normal::Realtime::RealtimeViewMap*& Normal::Realtime::RealtimeView::dyn__realtimeChildViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__realtimeChildViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeChildViews"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Normal.Realtime.RealtimeViewModel model
[[deprecated]] ::Normal::Realtime::RealtimeViewModel*& Normal::Realtime::RealtimeView::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn_model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate sceneViewWillRegisterWithRealtime
[[deprecated]] ::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate*& Normal::Realtime::RealtimeView::dyn_sceneViewWillRegisterWithRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn_sceneViewWillRegisterWithRealtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewWillRegisterWithRealtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isViewSetOnComponents
[[deprecated]] bool& Normal::Realtime::RealtimeView::dyn__isViewSetOnComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::dyn__isViewSetOnComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isViewSetOnComponents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_hierarchy
::Normal::Realtime::RealtimeViewHierarchy* Normal::Realtime::RealtimeView::get_hierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_hierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewHierarchy*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_viewUUID
::StringW Normal::Realtime::RealtimeView::get_viewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_viewUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isChildView
bool Normal::Realtime::RealtimeView::get_isChildView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isChildView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isChildView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootView
bool Normal::Realtime::RealtimeView::get_isRootView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isPrefabView
bool Normal::Realtime::RealtimeView::get_isPrefabView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isPrefabView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPrefabView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isSceneView
bool Normal::Realtime::RealtimeView::get_isSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootSceneView
bool Normal::Realtime::RealtimeView::get_isRootSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isRootPrefabView
bool Normal::Realtime::RealtimeView::get_isRootPrefabView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isRootPrefabView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootPrefabView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_realtimeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_realtime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeView::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_room");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerID
int Normal::Realtime::RealtimeView::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedByWorld
bool Normal::Realtime::RealtimeView::get_isOwnedByWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedByWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedByWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocally
bool Normal::Realtime::RealtimeView::get_isOwnedLocally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotely
bool Normal::Realtime::RealtimeView::get_isOwnedRemotely() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotely");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotely", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerIDSelf
int Normal::Realtime::RealtimeView::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerIDSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_ownerIDInHierarchy
int Normal::Realtime::RealtimeView::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_ownerIDInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isUnownedSelf
bool Normal::Realtime::RealtimeView::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isUnownedSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isUnownedInHierarchy
bool Normal::Realtime::RealtimeView::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isUnownedInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocallySelf
bool Normal::Realtime::RealtimeView::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocallySelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::RealtimeView::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedLocallyInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotelySelf
bool Normal::Realtime::RealtimeView::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotelySelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::RealtimeView::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_isOwnedRemotelyInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_preventOwnershipTakeover
bool Normal::Realtime::RealtimeView::get_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_preventOwnershipTakeover
void Normal::Realtime::RealtimeView::set_preventOwnershipTakeover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenOwnerOrLastClientLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenOwnerOrLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenLastClientLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenLastClientLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.get_destroyWhenOwnerLeaves
bool Normal::Realtime::RealtimeView::get_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::get_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.set_destroyWhenOwnerLeaves
void Normal::Realtime::RealtimeView::set_destroyWhenOwnerLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::set_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeView.IsParentView
bool Normal::Realtime::RealtimeView::IsParentView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::IsParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeView.GetRootView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::GetRootView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::GetRootView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.GetParentView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::GetParentView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::GetParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnBeforeSerialize
void Normal::Realtime::RealtimeView::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.StripSceneViewUUIDFromPrefabs
void Normal::Realtime::RealtimeView::StripSceneViewUUIDFromPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::StripSceneViewUUIDFromPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripSceneViewUUIDFromPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnAfterDeserialize
void Normal::Realtime::RealtimeView::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.MigrateSceneViewUUIDType
void Normal::Realtime::RealtimeView::MigrateSceneViewUUIDType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::MigrateSceneViewUUIDType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MigrateSceneViewUUIDType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.MigrateSceneViewLifetime
void Normal::Realtime::RealtimeView::MigrateSceneViewLifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::MigrateSceneViewLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MigrateSceneViewLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RebuildRealtimeGraph
void Normal::Realtime::RealtimeView::RebuildRealtimeGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RebuildRealtimeGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildRealtimeGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RebuildRealtimeComponentMap
void Normal::Realtime::RealtimeView::RebuildRealtimeComponentMap(::Normal::Realtime::IConfigurableComponentMap* map, ::ArrayW<::Normal::Realtime::IConfigurableComponent*> components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RebuildRealtimeComponentMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildRealtimeComponentMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map, components);
}
// Autogenerated method: Normal.Realtime.RealtimeView.FindNextUnusedComponentID
void Normal::Realtime::RealtimeView::FindNextUnusedComponentID(::Normal::Realtime::IConfigurableComponentMap* components, ByRef<uint> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::FindNextUnusedComponentID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "FindNextUnusedComponentID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, components, byref(id));
}
// Autogenerated method: Normal.Realtime.RealtimeView.FindRealtimeViewsInChildren
::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>* Normal::Realtime::RealtimeView::FindRealtimeViewsInChildren(::UnityEngine::Transform* transform, ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>* views) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::FindRealtimeViewsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "FindRealtimeViewsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(views)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeView*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, views);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Awake
void Normal::Realtime::RealtimeView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Start
void Normal::Realtime::RealtimeView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.OnDestroy
void Normal::Realtime::RealtimeView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Reset
void Normal::Realtime::RealtimeView::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ResolveSceneViewRealtime
void Normal::Realtime::RealtimeView::ResolveSceneViewRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ResolveSceneViewRealtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSceneViewRealtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRootSceneViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateRootSceneViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRootSceneViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRootSceneViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRootPrefabViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateRootPrefabViewModel(::StringW prefabName, int ownerID, ::Normal::Realtime::Serialization::MetaModel::LifetimeFlags lifetimeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRootPrefabViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRootPrefabViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownerID), ::il2cpp_utils::ExtractType(lifetimeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method, prefabName, ownerID, lifetimeFlags);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateChildViewModel
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::RealtimeView::CreateChildViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateChildViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateComponentsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateComponentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateComponentsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComponentsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateChildViewsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateChildViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateChildViewsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildViewsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.CreateRealtimeModelCollection
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeView::CreateRealtimeModelCollection(::Normal::Realtime::IConfigurableComponentMap* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::CreateRealtimeModelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "CreateRealtimeModelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, components);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.CreateModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.SetModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeView.Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::RealtimeView::Normal_Realtime_IConfigurableComponent_SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::Normal.Realtime.IConfigurableComponent.SetView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeView.RequestOwnership
void Normal::Realtime::RealtimeView::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::RequestOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetOwnership
void Normal::Realtime::RealtimeView::SetOwnership(int clientID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ClearOwnership
void Normal::Realtime::RealtimeView::ClearOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ClearOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.ThrowIfModelMissing
void Normal::Realtime::RealtimeView::ThrowIfModelMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::ThrowIfModelMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfModelMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeView.InstantiateViewPrefab
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeView::InstantiateViewPrefab(::Normal::Realtime::RealtimeViewModel* model, ::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::InstantiateViewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "InstantiateViewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(realtime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, model, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetViewOnComponents
void Normal::Realtime::RealtimeView::SetViewOnComponents(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetViewOnComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewOnComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recursive);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetRealtime
void Normal::Realtime::RealtimeView::SetRealtime(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetRealtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.SetRealtimeOnChildViews
void Normal::Realtime::RealtimeView::SetRealtimeOnChildViews(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SetRealtimeOnChildViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtimeOnChildViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.RealtimeView.BindModelsToComponentMap
void Normal::Realtime::RealtimeView::BindModelsToComponentMap(::Normal::Realtime::ImmutableModelCollection* models, ::Normal::Realtime::IConfigurableComponentMap* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::BindModelsToComponentMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeView", "BindModelsToComponentMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(models), ::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, models, components);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate
#include "Normal/Realtime/RealtimeView_SceneViewWillRegisterDelegate.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.Invoke
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::Invoke(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::BeginInvoke(::Normal::Realtime::RealtimeView* realtimeView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, realtimeView, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeView/Normal.Realtime.SceneViewWillRegisterDelegate.EndInvoke
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeView::SceneViewWillRegisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewHierarchy
#include "Normal/Realtime/RealtimeViewHierarchy.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: Normal.Realtime.IRealtimeComponent
#include "Normal/Realtime/IRealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeView root
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewHierarchy::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeView parent
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewHierarchy::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.IReadOnlyCollection`1<Normal.Realtime.RealtimeView> children
[[deprecated]] ::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::RealtimeViewHierarchy::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.IReadOnlyCollection`1<Normal.Realtime.IRealtimeComponent> components
[[deprecated]] ::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::IRealtimeComponent*>*& Normal::Realtime::RealtimeViewHierarchy::dyn_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::dyn_components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "components"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::IRealtimeComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewHierarchy.GetParentView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeViewHierarchy::GetParentView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::GetParentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewHierarchy", "GetParentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.RealtimeViewHierarchy.IngestChildViewMap
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>* Normal::Realtime::RealtimeViewHierarchy::IngestChildViewMap(::Normal::Realtime::RealtimeViewMap* views) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewHierarchy::IngestChildViewMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewHierarchy", "IngestChildViewMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(views)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::RealtimeView*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, views);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeViewModel_PropertyID.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.ImmutableModelCollection
#include "Normal/Realtime/ImmutableModelCollection.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeView <realtimeView>k__BackingField
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeViewModel::dyn_$realtimeView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn_$realtimeView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtimeView>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sceneViewUUID
[[deprecated]] ::StringW& Normal::Realtime::RealtimeViewModel::dyn__sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _prefabName
[[deprecated]] ::StringW& Normal::Realtime::RealtimeViewModel::dyn__prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__prefabName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ImmutableModelCollection _componentsModel
[[deprecated]] ::Normal::Realtime::ImmutableModelCollection*& Normal::Realtime::RealtimeViewModel::dyn__componentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__componentsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_componentsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ImmutableModelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _cachedComponentsModel
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedComponentsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate> _cachedComponentsModelDeltaUpdates
[[deprecated]] ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>*& Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModelDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedComponentsModelDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedComponentsModelDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ImmutableModelCollection _childViewsModel
[[deprecated]] ::Normal::Realtime::ImmutableModelCollection*& Normal::Realtime::RealtimeViewModel::dyn__childViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__childViewsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViewsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ImmutableModelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _cachedChildViewsModel
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedChildViewsModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate> _cachedChildViewsModelDeltaUpdates
[[deprecated]] ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>*& Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModelDeltaUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::dyn__cachedChildViewsModelDeltaUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedChildViewsModelDeltaUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeViewModel::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.set_realtimeView
void Normal::Realtime::RealtimeViewModel::set_realtimeView(::Normal::Realtime::RealtimeView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::set_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_sceneViewUUID
::StringW Normal::Realtime::RealtimeViewModel::get_sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_sceneViewUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneViewUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_prefabName
::StringW Normal::Realtime::RealtimeViewModel::get_prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_prefabName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_componentsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeViewModel::get_componentsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_componentsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_componentsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.get_childViewsModel
::Normal::Realtime::ImmutableModelCollection* Normal::Realtime::RealtimeViewModel::get_childViewsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::get_childViewsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childViewsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::ImmutableModelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetChildModels
void Normal::Realtime::RealtimeViewModel::SetChildModels(::Normal::Realtime::ImmutableModelCollection* componentsModel, ::Normal::Realtime::ImmutableModelCollection* childViewsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetChildModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentsModel), ::il2cpp_utils::ExtractType(childViewsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentsModel, childViewsModel);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetChildModelsAndDeserializeCacheIfNeeded
void Normal::Realtime::RealtimeViewModel::SetChildModelsAndDeserializeCacheIfNeeded(::Normal::Realtime::ImmutableModelCollection* componentsModel, ::Normal::Realtime::ImmutableModelCollection* childViewsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetChildModelsAndDeserializeCacheIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildModelsAndDeserializeCacheIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentsModel), ::il2cpp_utils::ExtractType(childViewsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentsModel, childViewsModel);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.SetRealtimeView
void Normal::Realtime::RealtimeViewModel::SetRealtimeView(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::SetRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.CreateComponentsModelAndChildViewsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::CreateComponentsModelAndChildViewsModelIfNeeded(::StringW prefabName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CreateComponentsModelAndChildViewsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComponentsModelAndChildViewsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabName);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.DeserializeCachedComponentsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::DeserializeCachedComponentsModelIfNeeded(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::DeserializeCachedComponentsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeCachedComponentsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.DeserializeCachedChildViewsModelIfNeeded
void Normal::Realtime::RealtimeViewModel::DeserializeCachedChildViewsModelIfNeeded(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::DeserializeCachedChildViewsModelIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeCachedChildViewsModelIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.WriteLength
int Normal::Realtime::RealtimeViewModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.Write
void Normal::Realtime::RealtimeViewModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel.Read
void Normal::Realtime::RealtimeViewModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 updateID
[[deprecated]] uint& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_updateID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double packetRoomTime
[[deprecated]] double& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_packetRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_packetRoomTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetRoomTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.ReadBuffer buffer
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeViewModel/Normal.Realtime.CachedDeltaUpdate..ctor
// ABORTED elsewhere.  Normal::Realtime::RealtimeViewModel::CachedDeltaUpdate::CachedDeltaUpdate(uint updateID, double packetRoomTime, ::Normal::Realtime::Serialization::ReadBuffer* buffer)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeViewModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID SceneViewUUID
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_SceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_SceneViewUUID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "SceneViewUUID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID SceneViewUUID
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_SceneViewUUID(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_SceneViewUUID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "SceneViewUUID", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID PrefabName
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_PrefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_PrefabName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "PrefabName"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID PrefabName
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_PrefabName(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_PrefabName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "PrefabName", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID Components
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_Components");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "Components"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID Components
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_Components(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_Components");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "Components", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID ChildViews
::Normal::Realtime::RealtimeViewModel::PropertyID Normal::Realtime::RealtimeViewModel::PropertyID::_get_ChildViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_get_ChildViews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeViewModel::PropertyID>("Normal.Realtime", "RealtimeViewModel/PropertyID", "ChildViews"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeViewModel/Normal.Realtime.PropertyID ChildViews
void Normal::Realtime::RealtimeViewModel::PropertyID::_set_ChildViews(::Normal::Realtime::RealtimeViewModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::_set_ChildViews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeViewModel/PropertyID", "ChildViews", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::RealtimeViewModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfigurableComponentMap
#include "Normal/Realtime/IConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_count
int Normal::Realtime::IConfigurableComponentMap::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_componentIDs
::System::Collections::Generic::IEnumerable_1<uint>* Normal::Realtime::IConfigurableComponentMap::get_componentIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_componentIDs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<uint>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_components
::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>* Normal::Realtime::IConfigurableComponentMap::get_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_components");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.get_Item
::Normal::Realtime::IConfigurableComponent* Normal::Realtime::IConfigurableComponentMap::get_Item(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IConfigurableComponent*, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.ContainsComponentID
bool Normal::Realtime::IConfigurableComponentMap::ContainsComponentID(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::ContainsComponentID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.ContainsComponent
bool Normal::Realtime::IConfigurableComponentMap::ContainsComponent(::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::ContainsComponent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.Add
void Normal::Realtime::IConfigurableComponentMap::Add(uint componentID, ::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponentMap.Deprecate
void Normal::Realtime::IConfigurableComponentMap::Deprecate(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponentMap::Deprecate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponentMap*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.ConfigurableComponentMap
#include "Normal/Realtime/ConfigurableComponentMap.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,Normal.Realtime.IConfigurableComponent> _storage
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::IConfigurableComponent*>*& Normal::Realtime::ConfigurableComponentMap::dyn__storage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::dyn__storage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storage"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::Normal::Realtime::IConfigurableComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_count
int Normal::Realtime::ConfigurableComponentMap::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_componentIDs
::System::Collections::Generic::IEnumerable_1<uint>* Normal::Realtime::ConfigurableComponentMap::get_componentIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_componentIDs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<uint>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_components
::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>* Normal::Realtime::ConfigurableComponentMap::get_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_components");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::IConfigurableComponent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.get_Item
::Normal::Realtime::IConfigurableComponent* Normal::Realtime::ConfigurableComponentMap::get_Item(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IConfigurableComponent*, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.ContainsComponentID
bool Normal::Realtime::ConfigurableComponentMap::ContainsComponentID(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::ContainsComponentID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, componentID);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.ContainsComponent
bool Normal::Realtime::ConfigurableComponentMap::ContainsComponent(::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::ContainsComponent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.Add
void Normal::Realtime::ConfigurableComponentMap::Add(uint componentID, ::Normal::Realtime::IConfigurableComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated method: Normal.Realtime.ConfigurableComponentMap.Deprecate
void Normal::Realtime::ConfigurableComponentMap::Deprecate(uint componentID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::ConfigurableComponentMap::Deprecate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::ConfigurableComponentMap*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SerializableViewIDPair
#include "Normal/Realtime/SerializableViewIDPair.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 viewID
[[deprecated]] int& Normal::Realtime::SerializableViewIDPair::dyn_viewID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::dyn_viewID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::SerializableViewIDPair::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::dyn_view");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SerializableViewIDPair..ctor
Normal::Realtime::SerializableViewIDPair::SerializableViewIDPair(uint viewID, ::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableViewIDPair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewID, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeViewMap
#include "Normal/Realtime/RealtimeViewMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeViewMap.Serialize
::ArrayW<::Normal::Realtime::SerializableViewIDPair> Normal::Realtime::RealtimeViewMap::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::SerializableViewIDPair>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeViewMap.Deserialize
::Normal::Realtime::RealtimeViewMap* Normal::Realtime::RealtimeViewMap::Deserialize(::ArrayW<::Normal::Realtime::SerializableViewIDPair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeViewMap", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Normal.Realtime.RealtimeViewMap.<Serialize>b__0_0
::Normal::Realtime::SerializableViewIDPair Normal::Realtime::RealtimeViewMap::$Serialize$b__0_0(uint id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeViewMap::<Serialize>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Serialize>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SerializableViewIDPair, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.SerializableComponentIDPair
#include "Normal/Realtime/SerializableComponentIDPair.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 componentID
[[deprecated]] int& Normal::Realtime::SerializableComponentIDPair::dyn_componentID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::dyn_componentID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component component
[[deprecated]] ::UnityEngine::Component*& Normal::Realtime::SerializableComponentIDPair::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::dyn_component");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.SerializableComponentIDPair..ctor
Normal::Realtime::SerializableComponentIDPair::SerializableComponentIDPair(uint componentID, ::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::SerializableComponentIDPair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentID), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, componentID, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeComponentMap
#include "Normal/Realtime/RealtimeComponentMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.Serialize
::ArrayW<::Normal::Realtime::SerializableComponentIDPair> Normal::Realtime::RealtimeComponentMap::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::SerializableComponentIDPair>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.Deserialize
::Normal::Realtime::RealtimeComponentMap* Normal::Realtime::RealtimeComponentMap::Deserialize(::ArrayW<::Normal::Realtime::SerializableComponentIDPair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeComponentMap", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeComponentMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Normal.Realtime.RealtimeComponentMap.<Serialize>b__0_0
::Normal::Realtime::SerializableComponentIDPair Normal::Realtime::RealtimeComponentMap::$Serialize$b__0_0(uint key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponentMap::<Serialize>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Serialize>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::SerializableComponentIDPair, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Utility.Extensions
#include "Normal/Realtime/Utility/Extensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioInputStream
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::AudioInputStream::dyn__nativeAudioInputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::dyn__nativeAudioInputStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioInputStream"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Dispose
void Normal::Realtime::Native::AudioInputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::AudioInputStream*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Dispose
void Normal::Realtime::Native::AudioInputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.ClientID
int Normal::Realtime::Native::AudioInputStream::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.StreamID
int Normal::Realtime::Native::AudioInputStream::StreamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::StreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Close
void Normal::Realtime::Native::AudioInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.SendRawAudioData
bool Normal::Realtime::Native::AudioInputStream::SendRawAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::SendRawAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRawAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.SendQueuedMessages
void Normal::Realtime::Native::AudioInputStream::SendQueuedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::SendQueuedMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendQueuedMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioInputStream.Finalize
void Normal::Realtime::Native::AudioInputStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioInputStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioOutputStream
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioOutputStream"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioOutputStreamIdentifier
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStreamIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::dyn__nativeAudioOutputStreamIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioOutputStreamIdentifier"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.get_nativePointerIsNull
bool Normal::Realtime::Native::AudioOutputStream::get_nativePointerIsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::get_nativePointerIsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nativePointerIsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.AudioOutputStreamMatchesIdentifier
bool Normal::Realtime::Native::AudioOutputStream::AudioOutputStreamMatchesIdentifier(::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::AudioOutputStreamMatchesIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AudioOutputStreamMatchesIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Dispose
void Normal::Realtime::Native::AudioOutputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::AudioOutputStream*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Dispose
void Normal::Realtime::Native::AudioOutputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.ClientID
int Normal::Realtime::Native::AudioOutputStream::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.StreamID
int Normal::Realtime::Native::AudioOutputStream::StreamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::StreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.SampleRate
int Normal::Realtime::Native::AudioOutputStream::SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.SetSampleRate
void Normal::Realtime::Native::AudioOutputStream::SetSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::SetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleRate);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Channels
int Normal::Realtime::Native::AudioOutputStream::Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.IsOpen
bool Normal::Realtime::Native::AudioOutputStream::IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.GetAudioData
bool Normal::Realtime::Native::AudioOutputStream::GetAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::GetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioOutputStream.Finalize
void Normal::Realtime::Native::AudioOutputStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioOutputStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.AudioPreprocessor
#include "Normal/Realtime/Native/AudioPreprocessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeAudioPreprocessor
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::AudioPreprocessor::dyn__nativeAudioPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::dyn__nativeAudioPreprocessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeAudioPreprocessor"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Dispose
void Normal::Realtime::Native::AudioPreprocessor::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::AudioPreprocessor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Dispose
void Normal::Realtime::Native::AudioPreprocessor::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.ProcessRecordSamples
bool Normal::Realtime::Native::AudioPreprocessor::ProcessRecordSamples(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::ProcessRecordSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRecordSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.ProcessPlaybackFrame
bool Normal::Realtime::Native::AudioPreprocessor::ProcessPlaybackFrame(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::ProcessPlaybackFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPlaybackFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.AudioPreprocessor.Finalize
void Normal::Realtime::Native::AudioPreprocessor::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioPreprocessor::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client
#include "Normal/Realtime/Native/Client.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState
#include "Normal/Realtime/Native/Client_ClientState.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived
#include "Normal/Realtime/Native/Client_PersistenceMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived
#include "Normal/Realtime/Native/Client_RPCMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated
#include "Normal/Realtime/Native/Client_AudioOutputStreamCreated.hpp"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed
#include "Normal/Realtime/Native/Client_AudioOutputStreamClosed.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: Normal.Realtime.Native.NetworkInfo
#include "Normal/Realtime/Native/NetworkInfo.hpp"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 __numberOfClients
int Normal::Realtime::Native::Client::_get___numberOfClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_get___numberOfClients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Native", "Client", "__numberOfClients"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 __numberOfClients
void Normal::Realtime::Native::Client::_set___numberOfClients(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_set___numberOfClients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client", "__numberOfClients", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object __numberOfClientsLock
::Il2CppObject* Normal::Realtime::Native::Client::_get___numberOfClientsLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_get___numberOfClientsLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Normal.Realtime.Native", "Client", "__numberOfClientsLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object __numberOfClientsLock
void Normal::Realtime::Native::Client::_set___numberOfClientsLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::_set___numberOfClientsLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client", "__numberOfClientsLock", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived persistenceMessageReceived
[[deprecated]] ::Normal::Realtime::Native::Client::PersistenceMessageReceived*& Normal::Realtime::Native::Client::dyn_persistenceMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_persistenceMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistenceMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::PersistenceMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived rpcMessageReceived
[[deprecated]] ::Normal::Realtime::Native::Client::RPCMessageReceived*& Normal::Realtime::Native::Client::dyn_rpcMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_rpcMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::RPCMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated audioOutputStreamCreated
[[deprecated]] ::Normal::Realtime::Native::Client::AudioOutputStreamCreated*& Normal::Realtime::Native::Client::dyn_audioOutputStreamCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_audioOutputStreamCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutputStreamCreated"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::AudioOutputStreamCreated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed audioOutputStreamClosed
[[deprecated]] ::Normal::Realtime::Native::Client::AudioOutputStreamClosed*& Normal::Realtime::Native::Client::dyn_audioOutputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn_audioOutputStreamClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutputStreamClosed"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client::AudioOutputStreamClosed**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeClient
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::Client::dyn__nativeClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__nativeClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeClient"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.Native.AudioOutputStream> _audioOutputStreams
[[deprecated]] ::System::Collections::Generic::List_1<::Normal::Realtime::Native::AudioOutputStream*>*& Normal::Realtime::Native::Client::dyn__audioOutputStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__audioOutputStreams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioOutputStreams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::Native::AudioOutputStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _persistenceMessageBuffer
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::Native::Client::dyn__persistenceMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__persistenceMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_persistenceMessageBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _rpcMessageBuffer
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::Native::Client::dyn__rpcMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::dyn__rpcMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcMessageBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_persistenceMessageReceived
void Normal::Realtime::Native::Client::add_persistenceMessageReceived(::Normal::Realtime::Native::Client::PersistenceMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_persistenceMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_persistenceMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_persistenceMessageReceived
void Normal::Realtime::Native::Client::remove_persistenceMessageReceived(::Normal::Realtime::Native::Client::PersistenceMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_persistenceMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_persistenceMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_rpcMessageReceived
void Normal::Realtime::Native::Client::add_rpcMessageReceived(::Normal::Realtime::Native::Client::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_rpcMessageReceived
void Normal::Realtime::Native::Client::remove_rpcMessageReceived(::Normal::Realtime::Native::Client::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_audioOutputStreamCreated
void Normal::Realtime::Native::Client::add_audioOutputStreamCreated(::Normal::Realtime::Native::Client::AudioOutputStreamCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_audioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_audioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_audioOutputStreamCreated
void Normal::Realtime::Native::Client::remove_audioOutputStreamCreated(::Normal::Realtime::Native::Client::AudioOutputStreamCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_audioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_audioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.add_audioOutputStreamClosed
void Normal::Realtime::Native::Client::add_audioOutputStreamClosed(::Normal::Realtime::Native::Client::AudioOutputStreamClosed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::add_audioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_audioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client.remove_audioOutputStreamClosed
void Normal::Realtime::Native::Client::remove_audioOutputStreamClosed(::Normal::Realtime::Native::Client::AudioOutputStreamClosed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::remove_audioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_audioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Native.Client..cctor
void Normal::Realtime::Native::Client::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.SetUpNetworkStackIfNeeded
bool Normal::Realtime::Native::Client::SetUpNetworkStackIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SetUpNetworkStackIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", "SetUpNetworkStackIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.TearDownNetworkStackIfNeeded
bool Normal::Realtime::Native::Client::TearDownNetworkStackIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::TearDownNetworkStackIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Client", "TearDownNetworkStackIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Dispose
void Normal::Realtime::Native::Client::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Dispose
void Normal::Realtime::Native::Client::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Client.GetNetworkStatistics
::Normal::Realtime::Native::NetworkInfo Normal::Realtime::Native::Client::GetNetworkStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::GetNetworkStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::NetworkInfo, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.StartConnection
::StringW Normal::Realtime::Native::Client::StartConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::StartConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Connect
void Normal::Realtime::Native::Client::Connect(::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Native.Client.Disconnect
void Normal::Realtime::Native::Client::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveIncomingMessages
void Normal::Realtime::Native::Client::ReceiveIncomingMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveIncomingMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveIncomingMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.BumpAutoDisconnectTime
void Normal::Realtime::Native::Client::BumpAutoDisconnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::BumpAutoDisconnectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BumpAutoDisconnectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.State
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::Client::ClientState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ClientID
int Normal::Realtime::Native::Client::ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.RoomTime
double Normal::Realtime::Native::Client::RoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.CreateAudioInputStream
::Normal::Realtime::Native::AudioInputStream* Normal::Realtime::Native::Client::CreateAudioInputStream(bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::CreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioInputStream*, false>(this, ___internal__method, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveAudioEventMessages
void Normal::Realtime::Native::Client::ReceiveAudioEventMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveAudioEventMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveAudioEventMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveAudioOutputStreamCreated
void Normal::Realtime::Native::Client::ReceiveAudioOutputStreamCreated(::System::IntPtr nativeAudioOutputStream, ::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveAudioOutputStreamCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveAudioOutputStreamCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStream), ::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeAudioOutputStream, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceivedAudioOutputStreamClosed
void Normal::Realtime::Native::Client::ReceivedAudioOutputStreamClosed(::System::IntPtr nativeAudioOutputStreamIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceivedAudioOutputStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedAudioOutputStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeAudioOutputStreamIdentifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeAudioOutputStreamIdentifier);
}
// Autogenerated method: Normal.Realtime.Native.Client.GetAudioOutputStream
::Normal::Realtime::Native::AudioOutputStream* Normal::Realtime::Native::Client::GetAudioOutputStream(int clientID, int streamID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::GetAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(streamID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioOutputStream*, false>(this, ___internal__method, clientID, streamID);
}
// Autogenerated method: Normal.Realtime.Native.Client.SendPersistenceMessage
bool Normal::Realtime::Native::Client::SendPersistenceMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SendPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceivePersistenceMessages
void Normal::Realtime::Native::Client::ReceivePersistenceMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceivePersistenceMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivePersistenceMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.SendRPCMessage
bool Normal::Realtime::Native::Client::SendRPCMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client.ReceiveRPCMessages
void Normal::Realtime::Native::Client::ReceiveRPCMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ReceiveRPCMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRPCMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Client.Finalize
void Normal::Realtime::Native::Client::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState
#include "Normal/Realtime/Native/Client_ClientState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState New
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "New"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState New
void Normal::Realtime::Native::Client::ClientState::_set_New(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "New", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connecting
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connecting
void Normal::Realtime::Native::Client::ClientState::_set_Connecting(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connected
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Connected
void Normal::Realtime::Native::Client::ClientState::_set_Connected(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Disconnected
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Disconnected
void Normal::Realtime::Native::Client::ClientState::_set_Disconnected(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Failed
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Failed
void Normal::Realtime::Native::Client::ClientState::_set_Failed(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Closed
::Normal::Realtime::Native::Client::ClientState Normal::Realtime::Native::Client::ClientState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Client::ClientState>("Normal.Realtime.Native", "Client/ClientState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Client/Normal.Realtime.Native.ClientState Closed
void Normal::Realtime::Native::Client::ClientState::_set_Closed(::Normal::Realtime::Native::Client::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Client/ClientState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::Native::Client::ClientState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::ClientState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived
#include "Normal/Realtime/Native/Client_PersistenceMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.Invoke
void Normal::Realtime::Native::Client::PersistenceMessageReceived::Invoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::PersistenceMessageReceived*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::PersistenceMessageReceived::BeginInvoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::PersistenceMessageReceived*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.PersistenceMessageReceived.EndInvoke
void Normal::Realtime::Native::Client::PersistenceMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::PersistenceMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::PersistenceMessageReceived*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived
#include "Normal/Realtime/Native/Client_RPCMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.Invoke
void Normal::Realtime::Native::Client::RPCMessageReceived::Invoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::RPCMessageReceived*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::RPCMessageReceived::BeginInvoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::RPCMessageReceived*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.EndInvoke
void Normal::Realtime::Native::Client::RPCMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::RPCMessageReceived*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated
#include "Normal/Realtime/Native/Client_AudioOutputStreamCreated.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.Invoke
void Normal::Realtime::Native::Client::AudioOutputStreamCreated::Invoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamCreated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::AudioOutputStreamCreated::BeginInvoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamCreated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, audioOutputStream, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.EndInvoke
void Normal::Realtime::Native::Client::AudioOutputStreamCreated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamCreated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed
#include "Normal/Realtime/Native/Client_AudioOutputStreamClosed.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.Invoke
void Normal::Realtime::Native::Client::AudioOutputStreamClosed::Invoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamClosed*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::AudioOutputStreamClosed::BeginInvoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamClosed*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, audioOutputStream, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.EndInvoke
void Normal::Realtime::Native::Client::AudioOutputStreamClosed::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Client::AudioOutputStreamClosed*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.RealtimeNativeException
#include "Normal/Realtime/Native/RealtimeNativeException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.RealtimeNativeException.NativePointerIsNull
::Normal::Realtime::Native::RealtimeNativeException* Normal::Realtime::Native::RealtimeNativeException::NativePointerIsNull(::StringW className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::RealtimeNativeException::NativePointerIsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "RealtimeNativeException", "NativePointerIsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::RealtimeNativeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, className);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
#include "Normal/Realtime/Native/Matcher_RequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeMatcher
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::Matcher::dyn__nativeMatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::dyn__nativeMatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMatcher"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Dispose
void Normal::Realtime::Native::Matcher::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Matcher*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Dispose
void Normal::Realtime::Native::Matcher::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Connect
void Normal::Realtime::Native::Matcher::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Disconnect
void Normal::Realtime::Native::Matcher::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Tick
void Normal::Realtime::Native::Matcher::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestState
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::GetRequestState(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::Matcher::RequestState, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestErrorMessage
::StringW Normal::Realtime::Native::Matcher::GetRequestErrorMessage(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestFailMessage
::StringW Normal::Realtime::Native::Matcher::GetRequestFailMessage(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestFailMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestFailMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.ClearRequest
void Normal::Realtime::Native::Matcher::ClearRequest(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::ClearRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.ConnectToRoom
::StringW Normal::Realtime::Native::Matcher::ConnectToRoom(::StringW appKey, ::StringW roomName, ::StringW clientOffer, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::ConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(clientOffer), ::il2cpp_utils::ExtractType(clusterPingResults), ::il2cpp_utils::ExtractType(preferredRegions)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, appKey, roomName, clientOffer, clusterPingResults, preferredRegions);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestResponseType
::StringW Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestResponseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestClustersToPing
::ArrayW<::Normal::Realtime::Native::Cluster> Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestClustersToPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::Native::Cluster>, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestServerAnswer
::StringW Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestServerAnswer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Finalize
void Normal::Realtime::Native::Matcher::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
#include "Normal/Realtime/Native/Matcher_RequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestCreated"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestCreated(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestSent"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestSent(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestSent", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedSuccess"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedSuccess(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedError"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedError(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedError", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestFailed(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::Native::Matcher::RequestState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Microphone
#include "Normal/Realtime/Native/Microphone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeMicrophone
[[deprecated]] ::System::IntPtr& Normal::Realtime::Native::Microphone::dyn__nativeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::dyn__nativeMicrophone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMicrophone"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.PlatformSupported
bool Normal::Realtime::Native::Microphone::PlatformSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::PlatformSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Microphone", "PlatformSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Dispose
void Normal::Realtime::Native::Microphone::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Microphone*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Dispose
void Normal::Realtime::Native::Microphone::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Start
bool Normal::Realtime::Native::Microphone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Stop
void Normal::Realtime::Native::Microphone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.SampleRate
int Normal::Realtime::Native::Microphone::SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Channels
int Normal::Realtime::Native::Microphone::Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.GetAudioData
bool Normal::Realtime::Native::Microphone::GetAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::GetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Finalize
void Normal::Realtime::Native::Microphone::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Cluster
#include "Normal/Realtime/Native/Cluster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated]] ::StringW& Normal::Realtime::Native::Cluster::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String address
[[deprecated]] ::StringW& Normal::Realtime::Native::Cluster::dyn_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ping
[[deprecated]] int& Normal::Realtime::Native::Cluster::dyn_ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_ping");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ping"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Cluster..ctor
Normal::Realtime::Native::Cluster::Cluster(::StringW name, ::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, address);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Region
#include "Normal/Realtime/Native/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated]] ::StringW& Normal::Realtime::Native::Region::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Region::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Region..ctor
// ABORTED elsewhere.  Normal::Realtime::Native::Region::Region(::StringW name)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType
#include "Normal/Realtime/Native/AudioStreamEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioInputStreamClosed
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioInputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioInputStreamClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioInputStreamClosed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioInputStreamClosed
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioInputStreamClosed(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioInputStreamClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioInputStreamClosed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamOpened
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamOpened"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamOpened
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamOpened(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamOpened", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamClosed
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamClosed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamClosed
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamClosed(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamClosed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::Native::AudioStreamEvent::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Plugin
#include "Normal/Realtime/Native/Plugin.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate
#include "Normal/Realtime/Native/Plugin_LogDelegate.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Normal.Realtime.Native.PersistenceMessageEvent
#include "Normal/Realtime/Native/PersistenceMessageEvent.hpp"
// Including type: Normal.Realtime.Native.RPCMessageEvent
#include "Normal/Realtime/Native/RPCMessageEvent.hpp"
// Including type: Normal.Realtime.Native.AudioStreamEvent
#include "Normal/Realtime/Native/AudioStreamEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String realtimeDLLName
::StringW Normal::Realtime::Native::Plugin::_get_realtimeDLLName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_get_realtimeDLLName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime.Native", "Plugin", "realtimeDLLName"));
}
// Autogenerated static field setter
// Set static field: static private System.String realtimeDLLName
void Normal::Realtime::Native::Plugin::_set_realtimeDLLName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_set_realtimeDLLName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin", "realtimeDLLName", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel logLevel
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::_get_logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_get_logLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin", "logLevel"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel logLevel
void Normal::Realtime::Native::Plugin::_set_logLevel(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_set_logLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin", "logLevel", value));
}
// Autogenerated method: Normal.Realtime.Native.Plugin..cctor
void Normal::Realtime::Native::Plugin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.SetUpLogging
void Normal::Realtime::Native::Plugin::SetUpLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::SetUpLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "SetUpLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.SetLogFunction
void Normal::Realtime::Native::Plugin::SetLogFunction(::System::IntPtr logFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::SetLogFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "SetLogFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logFunction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logFunction);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.Log
int Normal::Realtime::Native::Plugin::Log(::Normal::Realtime::Native::Plugin::LogLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, message);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherCreate
::System::IntPtr Normal::Realtime::Native::Plugin::MatcherCreate(::StringW matcherURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcherURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcherURL);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherDelete
void Normal::Realtime::Native::Plugin::MatcherDelete(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherConnect
void Normal::Realtime::Native::Plugin::MatcherConnect(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherDisconnect
void Normal::Realtime::Native::Plugin::MatcherDisconnect(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherTick
void Normal::Realtime::Native::Plugin::MatcherTick(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestState
int Normal::Realtime::Native::Plugin::MatcherGetRequestState(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestErrorMessage
::StringW Normal::Realtime::Native::Plugin::MatcherGetRequestErrorMessage(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestFailMessage
::StringW Normal::Realtime::Native::Plugin::MatcherGetRequestFailMessage(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestFailMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestFailMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherClearRequest
void Normal::Realtime::Native::Plugin::MatcherClearRequest(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherClearRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherClearRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherConnectToRoom
::StringW Normal::Realtime::Native::Plugin::MatcherConnectToRoom(::System::IntPtr matcher, ::StringW appKey, ::StringW roomName, ::StringW clientOffer, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults, int clusterPingResultsLength, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions, int preferredRegionsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(clientOffer), ::il2cpp_utils::ExtractType(clusterPingResults), ::il2cpp_utils::ExtractType(clusterPingResultsLength), ::il2cpp_utils::ExtractType(preferredRegions), ::il2cpp_utils::ExtractType(preferredRegionsLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, appKey, roomName, clientOffer, clusterPingResults, clusterPingResultsLength, preferredRegions, preferredRegionsLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestResponseType
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestResponseType(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestResponseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestResponseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingCount
int Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingCount(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingNameAtIndex
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingNameAtIndex(::System::IntPtr matcher, ::StringW requestGUID, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingNameAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingNameAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID, index);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex(::System::IntPtr matcher, ::StringW requestGUID, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID, index);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestServerAnswer
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestServerAnswer(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestServerAnswer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestServerAnswer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSetUpNetworkStack
bool Normal::Realtime::Native::Plugin::ClientSetUpNetworkStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSetUpNetworkStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSetUpNetworkStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientTearDownNetworkStack
bool Normal::Realtime::Native::Plugin::ClientTearDownNetworkStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientTearDownNetworkStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientTearDownNetworkStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientCreate
::System::IntPtr Normal::Realtime::Native::Plugin::ClientCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDelete
void Normal::Realtime::Native::Plugin::ClientDelete(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientStartConnection
::StringW Normal::Realtime::Native::Plugin::ClientStartConnection(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientStartConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientStartConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientConnect
void Normal::Realtime::Native::Plugin::ClientConnect(::System::IntPtr client, ::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDisconnect
void Normal::Realtime::Native::Plugin::ClientDisconnect(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientBumpAutoDisconnectTime
void Normal::Realtime::Native::Plugin::ClientBumpAutoDisconnectTime(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientBumpAutoDisconnectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientBumpAutoDisconnectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetState
int Normal::Realtime::Native::Plugin::ClientGetState(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetClientID
int Normal::Realtime::Native::Plugin::ClientGetClientID(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetRoomTime
double Normal::Realtime::Native::Plugin::ClientGetRoomTime(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSendPersistenceMessage
bool Normal::Realtime::Native::Plugin::ClientSendPersistenceMessage(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSendPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSendPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingPersistenceMessage
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessage(::System::IntPtr client, ByRef<::Normal::Realtime::Native::PersistenceMessageEvent> persistenceMessageEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::PersistenceMessageEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(persistenceMessageEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingPersistenceMessageData
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessageData(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingPersistenceMessageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSendRPCMessage
bool Normal::Realtime::Native::Plugin::ClientSendRPCMessage(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingRPCMessage
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessage(::System::IntPtr client, ByRef<::Normal::Realtime::Native::RPCMessageEvent> persistenceMessageEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::RPCMessageEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(persistenceMessageEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingRPCMessageData
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessageData(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingRPCMessageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientCreateAudioInputStream
::System::IntPtr Normal::Realtime::Native::Plugin::ClientCreateAudioInputStream(::System::IntPtr client, bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientCreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientCreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDeleteAudioInputStream
void Normal::Realtime::Native::Plugin::ClientDeleteAudioInputStream(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDeleteAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDeleteAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDeleteAudioOutputStream
void Normal::Realtime::Native::Plugin::ClientDeleteAudioOutputStream(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDeleteAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDeleteAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingAudioStreamEvent
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingAudioStreamEvent(::System::IntPtr client, ByRef<::Normal::Realtime::Native::AudioStreamEvent> audioStreamEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingAudioStreamEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingAudioStreamEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::AudioStreamEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(audioStreamEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamGetClientID
int Normal::Realtime::Native::Plugin::AudioInputStreamGetClientID(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamGetStreamID
int Normal::Realtime::Native::Plugin::AudioInputStreamGetStreamID(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamGetStreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamGetStreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamClose
void Normal::Realtime::Native::Plugin::AudioInputStreamClose(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamSendRawAudioData
bool Normal::Realtime::Native::Plugin::AudioInputStreamSendRawAudioData(::System::IntPtr audioInputStream, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamSendRawAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamSendRawAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamSendQueuedMessages
void Normal::Realtime::Native::Plugin::AudioInputStreamSendQueuedMessages(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamSendQueuedMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamSendQueuedMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetClientID
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetClientID(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetStreamID
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetStreamID(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetStreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetStreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetSampleRate
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetSampleRate(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamSetSampleRate
void Normal::Realtime::Native::Plugin::AudioOutputStreamSetSampleRate(::System::IntPtr audioOutputStream, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamSetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamSetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream, sampleRate);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetChannels
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetChannels(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetIsOpen
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetIsOpen(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetIsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetIsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetAudioData
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetAudioData(::System::IntPtr audioOutputStream, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorCreate
::System::IntPtr Normal::Realtime::Native::Plugin::AudioPreprocessorCreate(int recordSampleRate, int recordFrameSize, bool automaticGainControl, bool noiseSuppression, bool reverbSuppression, bool echoCancellation, int playbackSampleRate, int playbackChannels, float tail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordSampleRate), ::il2cpp_utils::ExtractType(recordFrameSize), ::il2cpp_utils::ExtractType(automaticGainControl), ::il2cpp_utils::ExtractType(noiseSuppression), ::il2cpp_utils::ExtractType(reverbSuppression), ::il2cpp_utils::ExtractType(echoCancellation), ::il2cpp_utils::ExtractType(playbackSampleRate), ::il2cpp_utils::ExtractType(playbackChannels), ::il2cpp_utils::ExtractType(tail)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordSampleRate, recordFrameSize, automaticGainControl, noiseSuppression, reverbSuppression, echoCancellation, playbackSampleRate, playbackChannels, tail);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorDelete
void Normal::Realtime::Native::Plugin::AudioPreprocessorDelete(::System::IntPtr audioPreprocessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorProcessRecordFrame
bool Normal::Realtime::Native::Plugin::AudioPreprocessorProcessRecordFrame(::System::IntPtr audioPreprocessor, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorProcessRecordFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorProcessRecordFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorProcessPlaybackFrame
bool Normal::Realtime::Native::Plugin::AudioPreprocessorProcessPlaybackFrame(::System::IntPtr audioPreprocessor, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorProcessPlaybackFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorProcessPlaybackFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophonePlatformSupported
bool Normal::Realtime::Native::Plugin::MicrophonePlatformSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophonePlatformSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophonePlatformSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneCreate
::System::IntPtr Normal::Realtime::Native::Plugin::MicrophoneCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneDelete
void Normal::Realtime::Native::Plugin::MicrophoneDelete(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneStart
bool Normal::Realtime::Native::Plugin::MicrophoneStart(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneStop
void Normal::Realtime::Native::Plugin::MicrophoneStop(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetSampleRate
int Normal::Realtime::Native::Plugin::MicrophoneGetSampleRate(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetChannels
int Normal::Realtime::Native::Plugin::MicrophoneGetChannels(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetAudioData
bool Normal::Realtime::Native::Plugin::MicrophoneGetAudioData(::System::IntPtr microphone, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone, audioData, audioDataLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel
#include "Normal/Realtime/Native/Plugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelInfo
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelInfo"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelInfo
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelInfo(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelWarning
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelWarning"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelWarning
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelWarning(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelWarning", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelError
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelError"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelError
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelError(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::Native::Plugin::LogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate
#include "Normal/Realtime/Native/Plugin_LogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.Invoke
int Normal::Realtime::Native::Plugin::LogDelegate::Invoke(::Normal::Realtime::Native::Plugin::LogLevel logLevel, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Plugin::LogDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, logLevel, message);
}
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Plugin::LogDelegate::BeginInvoke(::Normal::Realtime::Native::Plugin::LogLevel logLevel, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Plugin::LogDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, logLevel, message, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.EndInvoke
int Normal::Realtime::Native::Plugin::LogDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Native::Plugin::LogDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.BufferAnalyzer
#include "Normal/Realtime/Serialization/BufferAnalyzer.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 recursionLevelLimit
[[deprecated]] uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn_recursionLevelLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn_recursionLevelLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursionLevelLimit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _recursionLevel
[[deprecated]] uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn__recursionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__recursionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recursionLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _buffer
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Serialization::BufferAnalyzer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StringWriter _stringWriter
[[deprecated]] ::System::IO::StringWriter*& Normal::Realtime::Serialization::BufferAnalyzer::dyn__stringWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__stringWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringWriter"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentModelEndPosition
[[deprecated]] int& Normal::Realtime::Serialization::BufferAnalyzer::dyn__currentModelEndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__currentModelEndPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentModelEndPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastCollectionTypeID
[[deprecated]] uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn__lastCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__lastCollectionTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCollectionTypeID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.AnalyzeBuffer
::StringW Normal::Realtime::Serialization::BufferAnalyzer::AnalyzeBuffer(::Normal::Realtime::Serialization::ReadBuffer* buffer, bool readUpdateID, bool readPacketTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::AnalyzeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnalyzeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(readUpdateID), ::il2cpp_utils::ExtractType(readPacketTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, buffer, readUpdateID, readPacketTime);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadRawModel
void Normal::Realtime::Serialization::BufferAnalyzer::ReadRawModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadNextPropertyID
bool Normal::Realtime::Serialization::BufferAnalyzer::ReadNextPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadRawPropertyKey
void Normal::Realtime::Serialization::BufferAnalyzer::ReadRawPropertyKey(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadRawPropertyKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawPropertyKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.GetIndentStringForLevel
::StringW Normal::Realtime::Serialization::BufferAnalyzer::GetIndentStringForLevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::GetIndentStringForLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "BufferAnalyzer", "GetIndentStringForLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.PropertyHeader
#include "Normal/Realtime/Serialization/PropertyHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 propertyID
[[deprecated]] uint& Normal::Realtime::Serialization::PropertyHeader::dyn_propertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PropertyHeader::dyn_propertyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType propertyWireType
[[deprecated]] ::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::Serialization::PropertyHeader::dyn_propertyWireType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PropertyHeader::dyn_propertyWireType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyWireType"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.PropertyHeader..ctor
// ABORTED elsewhere.  Normal::Realtime::Serialization::PropertyHeader::PropertyHeader(uint propertyID, ::Normal::Realtime::Serialization::Serialization::WireType propertyWireType)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ICollection
#include "Normal/Realtime/Serialization/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ICollection.GetCollectionTypeID
uint Normal::Realtime::Serialization::ICollection::GetCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ICollection::GetCollectionTypeID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ICollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.InflightUpdateSubscription
#include "Normal/Realtime/Serialization/InflightUpdateSubscription.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.InflightUpdateNotifier notifier
[[deprecated]] ::Normal::Realtime::Serialization::InflightUpdateNotifier*& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_notifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_notifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notifier"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::InflightUpdateNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.IConfirmedProperty property
[[deprecated]] ::Normal::Realtime::IConfirmedProperty*& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_property");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IConfirmedProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 updateID
[[deprecated]] uint& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_updateID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateSubscription..ctor
// ABORTED elsewhere.  Normal::Realtime::Serialization::InflightUpdateSubscription::InflightUpdateSubscription(::Normal::Realtime::Serialization::InflightUpdateNotifier* notifier, ::Normal::Realtime::IConfirmedProperty* property, uint updateID)
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateSubscription.Cancel
void Normal::Realtime::Serialization::InflightUpdateSubscription::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateSubscription
#include "Normal/Realtime/Serialization/InflightUpdateSubscription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _properties
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Stack`1<System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _pool
[[deprecated]] ::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lock
[[deprecated]] bool& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.ThrowIfLocked
void Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.Subscribe
::Normal::Realtime::Serialization::InflightUpdateSubscription Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::InflightUpdateSubscription, false>(this, ___internal__method, updateID, property);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.Unsubscribe
void Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unsubscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID, property);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.AckUpdateID
void Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AckUpdateID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.SafeInvokeAck
void Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck(::Normal::Realtime::IConfirmedProperty* prop, uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "InflightUpdateNotifier", "SafeInvokeAck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.TakePropertyList
::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>* Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakePropertyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.ReleasePropertyList
void Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasePropertyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IStreamReader
#include "Normal/Realtime/Serialization/IStreamReader.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::Serialization::IStreamReader::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IStreamReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IStreamWriter
#include "Normal/Realtime/Serialization/IStreamWriter.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::Serialization::IStreamWriter::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamWriter::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IStreamWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::Serialization::IStreamWriter::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IStreamWriter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel
#include "Normal/Realtime/Serialization/MetaModel.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer
#include "Normal/Realtime/Serialization/MetaModel_OwnerIDSerializer.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer
#include "Normal/Realtime/Serialization/MetaModel_LifetimeFlagsSerializer.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID
#include "Normal/Realtime/Serialization/MetaModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.IMetaModelExtension
#include "Normal/Realtime/Serialization/IMetaModelExtension.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 ReservedPropertyID
uint Normal::Realtime::Serialization::MetaModel::_get_ReservedPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::_get_ReservedPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "MetaModel", "ReservedPropertyID"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 ReservedPropertyID
void Normal::Realtime::Serialization::MetaModel::_set_ReservedPropertyID(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::_set_ReservedPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel", "ReservedPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID> _ownerIDProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::OwnerID>*& Normal::Realtime::Serialization::MetaModel::dyn__ownerIDProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::dyn__ownerIDProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ownerIDProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::OwnerID>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags> _lifetimeFlagsProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>*& Normal::Realtime::Serialization::MetaModel::dyn__lifetimeFlagsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::dyn__lifetimeFlagsProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lifetimeFlagsProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_ownerID
int Normal::Realtime::Serialization::MetaModel::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.set_ownerID
void Normal::Realtime::Serialization::MetaModel::set_ownerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::set_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_lifetimeFlags
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::get_lifetimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_lifetimeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lifetimeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.set_lifetimeFlags
void Normal::Realtime::Serialization::MetaModel::set_lifetimeFlags(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::set_lifetimeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lifetimeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_modelType
uint Normal::Realtime::Serialization::MetaModel::get_modelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_modelType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), 7));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_modelExtension
::Normal::Realtime::Serialization::IMetaModelExtension* Normal::Realtime::Serialization::MetaModel::get_modelExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_modelExtension");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::IMetaModelExtension*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel..cctor
void Normal::Realtime::Serialization::MetaModel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamWriter_WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamWriter.WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamWriter_Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamWriter.Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamReader_Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamReader.Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::MetaModel*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.op_Equality
bool Normal::Realtime::Serialization::operator ==(const ::Normal::Realtime::Serialization::MetaModel::OwnerID& left, const ::Normal::Realtime::Serialization::MetaModel::OwnerID& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel/OwnerID", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.op_Inequality
bool Normal::Realtime::Serialization::operator !=(const ::Normal::Realtime::Serialization::MetaModel::OwnerID& left, const ::Normal::Realtime::Serialization::MetaModel::OwnerID& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel/OwnerID", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
[[deprecated]] int& Normal::Realtime::Serialization::MetaModel::OwnerID::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.Equals
bool Normal::Realtime::Serialization::MetaModel::OwnerID::Equals(::Normal::Realtime::Serialization::MetaModel::OwnerID other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::OwnerID), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.Equals
bool Normal::Realtime::Serialization::MetaModel::OwnerID::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.GetHashCode
int Normal::Realtime::Serialization::MetaModel::OwnerID::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.ToString
::StringW Normal::Realtime::Serialization::MetaModel::OwnerID::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer
#include "Normal/Realtime/Serialization/MetaModel_OwnerIDSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Length
int Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Length(::Normal::Realtime::Serialization::MetaModel::OwnerID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Write
void Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::Normal::Realtime::Serialization::MetaModel::OwnerID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Read
void Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::Normal::Realtime::Serialization::MetaModel::OwnerID> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer
#include "Normal/Realtime/Serialization/MetaModel_LifetimeFlagsSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Length
int Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Length(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Write
void Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Read
void Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags Default
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags Default
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_Default(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerOrLastClientLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerOrLastClientLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerOrLastClientLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerOrLastClientLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerOrLastClientLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerOrLastClientLeaves", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags PreventOwnershipTakeover
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_PreventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_PreventOwnershipTakeover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "PreventOwnershipTakeover"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags PreventOwnershipTakeover
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_PreventOwnershipTakeover(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_PreventOwnershipTakeover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "PreventOwnershipTakeover", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenLastClientLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenLastClientLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenLastClientLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenLastClientLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenLastClientLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenLastClientLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenLastClientLeaves", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerLeaves", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::Serialization::MetaModel::LifetimeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID
#include "Normal/Realtime/Serialization/MetaModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelType
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelType"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelType
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelType(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelType", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID OwnerID
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_OwnerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_OwnerID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "OwnerID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID OwnerID
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_OwnerID(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_OwnerID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "OwnerID", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID LifetimeFlags
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_LifetimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_LifetimeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "LifetimeFlags"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID LifetimeFlags
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_LifetimeFlags(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_LifetimeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "LifetimeFlags", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelExtension
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelExtension"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelExtension
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelExtension(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelExtension", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::Serialization::MetaModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IMetaModelExtension
#include "Normal/Realtime/Serialization/IMetaModelExtension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IMetaModelExtension.get_modelType
uint Normal::Realtime::Serialization::IMetaModelExtension::get_modelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IMetaModelExtension::get_modelType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IMetaModelExtension*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::Serialization::ReadBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated]] int& Normal::Realtime::Serialization::ReadBuffer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.get_bytesRead
int Normal::Realtime::Serialization::ReadBuffer::get_bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::get_bytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SetBuffer
void Normal::Realtime::Serialization::ReadBuffer::SetBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.Reset
void Normal::Realtime::Serialization::ReadBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadByte
uint8_t Normal::Realtime::Serialization::ReadBuffer::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadBytes
void Normal::Realtime::Serialization::ReadBuffer::ReadBytes(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadVarint32
uint Normal::Realtime::Serialization::ReadBuffer::ReadVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipVarint32
void Normal::Realtime::Serialization::ReadBuffer::SkipVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFixed32
uint Normal::Realtime::Serialization::ReadBuffer::ReadFixed32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFixed32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFixed32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFixed64
uint64_t Normal::Realtime::Serialization::ReadBuffer::ReadFixed64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFixed64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFixed64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFloat
float Normal::Realtime::Serialization::ReadBuffer::ReadFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadDouble
double Normal::Realtime::Serialization::ReadBuffer::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipFloat
void Normal::Realtime::Serialization::ReadBuffer::SkipFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipDouble
void Normal::Realtime::Serialization::ReadBuffer::SkipDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadString
::StringW Normal::Realtime::Serialization::ReadBuffer::ReadString(int lengthInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lengthInBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, lengthInBytes);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipBytes
void Normal::Realtime::Serialization::ReadBuffer::SkipBytes(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.Copy
::Normal::Realtime::Serialization::ReadBuffer* Normal::Realtime::Serialization::ReadBuffer::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::ReadBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ToString
::StringW Normal::Realtime::Serialization::ReadBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Normal.Realtime.Serialization.IStreamReader
#include "Normal/Realtime/Serialization/IStreamReader.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 recursionLevelLimit
[[deprecated]] uint& Normal::Realtime::Serialization::ReadStream::dyn_recursionLevelLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn_recursionLevelLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursionLevelLimit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _recursionLevel
[[deprecated]] uint& Normal::Realtime::Serialization::ReadStream::dyn__recursionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__recursionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recursionLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _buffer
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Serialization::ReadStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType _requiredWireType
[[deprecated]] ::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::Serialization::ReadStream::dyn__requiredWireType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__requiredWireType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredWireType"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentModelEndPosition
[[deprecated]] int& Normal::Realtime::Serialization::ReadStream::dyn__currentModelEndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__currentModelEndPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentModelEndPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastCollectionTypeID
[[deprecated]] uint& Normal::Realtime::Serialization::ReadStream::dyn__lastCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__lastCollectionTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCollectionTypeID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ConvertUIntToNegativeOneInt
int Normal::Realtime::Serialization::ReadStream::ConvertUIntToNegativeOneInt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ConvertUIntToNegativeOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "ConvertUIntToNegativeOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.Vector2FromBytes
::UnityEngine::Vector2 Normal::Realtime::Serialization::ReadStream::Vector2FromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::Vector2FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "Vector2FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.Vector3FromBytes
::UnityEngine::Vector3 Normal::Realtime::Serialization::ReadStream::Vector3FromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::Vector3FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "Vector3FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.QuaternionFromBytes
::UnityEngine::Quaternion Normal::Realtime::Serialization::ReadStream::QuaternionFromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::QuaternionFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "QuaternionFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ColorFromBytes
::UnityEngine::Color Normal::Realtime::Serialization::ReadStream::ColorFromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ColorFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "ColorFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.BytesToFloat
float Normal::Realtime::Serialization::ReadStream::BytesToFloat(::ArrayW<uint8_t> buffer, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::BytesToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "BytesToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(offset));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.DeserializeModel
void Normal::Realtime::Serialization::ReadStream::DeserializeModel(::Normal::Realtime::Serialization::IStreamReader* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::DeserializeModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNextPropertyID
bool Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID(ByRef<uint> propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(propertyID));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNextPropertyID
bool Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNull
void Normal::Realtime::Serialization::ReadStream::ReadNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBool
bool Normal::Realtime::Serialization::ReadStream::ReadBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadByte
uint8_t Normal::Realtime::Serialization::ReadStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadSByte
int8_t Normal::Realtime::Serialization::ReadStream::ReadSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadUShort
uint16_t Normal::Realtime::Serialization::ReadStream::ReadUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadShort
int16_t Normal::Realtime::Serialization::ReadStream::ReadShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadUInt
uint Normal::Realtime::Serialization::ReadStream::ReadUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadInt
int Normal::Realtime::Serialization::ReadStream::ReadInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadVarint32
uint Normal::Realtime::Serialization::ReadStream::ReadVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadFloat
float Normal::Realtime::Serialization::ReadStream::ReadFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadDouble
double Normal::Realtime::Serialization::ReadStream::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::ReadStream::ReadBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBytes
int Normal::Realtime::Serialization::ReadStream::ReadBytes(::ArrayW<uint8_t> buffer, int offset, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadString
::StringW Normal::Realtime::Serialization::ReadStream::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadModel
void Normal::Realtime::Serialization::ReadStream::ReadModel(::Normal::Realtime::Serialization::IStreamReader* value, ::Normal::Realtime::Serialization::StreamContext context, bool didForceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(didForceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, context, didForceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadModelAsReadBuffer
::Normal::Realtime::Serialization::ReadBuffer* Normal::Realtime::Serialization::ReadStream::ReadModelAsReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadModelAsReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadModelAsReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::ReadBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadCollectionTypeID
uint Normal::Realtime::Serialization::ReadStream::ReadCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadCollectionTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCollectionTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadCollection
void Normal::Realtime::Serialization::ReadStream::ReadCollection(::Normal::Realtime::Serialization::IStreamReader* value, ::Normal::Realtime::Serialization::StreamContext context, bool didForceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(didForceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, context, didForceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipProperty
void Normal::Realtime::Serialization::ReadStream::SkipProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawVarint32
void Normal::Realtime::Serialization::ReadStream::SkipRawVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawFloat
void Normal::Realtime::Serialization::ReadStream::SkipRawFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawDouble
void Normal::Realtime::Serialization::ReadStream::SkipRawDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawLengthDelimited
void Normal::Realtime::Serialization::ReadStream::SkipRawLengthDelimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawLengthDelimited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawLengthDelimited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawPropertyKey
void Normal::Realtime::Serialization::ReadStream::ReadRawPropertyKey(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawPropertyKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawPropertyKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::ReadStream::ReadRawBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawBytes
int Normal::Realtime::Serialization::ReadStream::ReadRawBytes(::ArrayW<uint8_t> buffer, int offset, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawString
::StringW Normal::Realtime::Serialization::ReadStream::ReadRawString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawModel
void Normal::Realtime::Serialization::ReadStream::ReadRawModel(::Normal::Realtime::Serialization::IStreamReader* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.StartLengthDelimitedStruct
void Normal::Realtime::Serialization::ReadStream::StartLengthDelimitedStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::StartLengthDelimitedStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLengthDelimitedStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadStructFloat
float Normal::Realtime::Serialization::ReadStream::ReadStructFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadStructFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadStructFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.FinishLengthDelimitedStruct
void Normal::Realtime::Serialization::ReadStream::FinishLengthDelimitedStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::FinishLengthDelimitedStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishLengthDelimitedStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Serialization
#include "Normal/Realtime/Serialization/Serialization.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WireTypeBitLength
int Normal::Realtime::Serialization::Serialization::_get_WireTypeBitLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_WireTypeBitLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "Serialization", "WireTypeBitLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WireTypeBitLength
void Normal::Realtime::Serialization::Serialization::_set_WireTypeBitLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_WireTypeBitLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "WireTypeBitLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 WireTypeBitMask
uint Normal::Realtime::Serialization::Serialization::_get_WireTypeBitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_WireTypeBitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "Serialization", "WireTypeBitMask"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 WireTypeBitMask
void Normal::Realtime::Serialization::Serialization::_set_WireTypeBitMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_WireTypeBitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "WireTypeBitMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 PropertyIDMaxValue
uint Normal::Realtime::Serialization::Serialization::_get_PropertyIDMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_PropertyIDMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "Serialization", "PropertyIDMaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 PropertyIDMaxValue
void Normal::Realtime::Serialization::Serialization::_set_PropertyIDMaxValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_PropertyIDMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "PropertyIDMaxValue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
void Normal::Realtime::Serialization::Serialization::WireType::_set_Null(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Varint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Varint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Varint"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
void Normal::Realtime::Serialization::Serialization::WireType::_set_Varint(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Varint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Varint", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
void Normal::Realtime::Serialization::Serialization::WireType::_set_Float(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
void Normal::Realtime::Serialization::Serialization::WireType::_set_Double(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_LengthDelimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_LengthDelimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "LengthDelimited"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
void Normal::Realtime::Serialization::Serialization::WireType::_set_LengthDelimited(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_LengthDelimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "LengthDelimited", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Model"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
void Normal::Realtime::Serialization::Serialization::WireType::_set_Model(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Collection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Collection"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
void Normal::Realtime::Serialization::Serialization::WireType::_set_Collection(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Collection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Collection", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
void Normal::Realtime::Serialization::Serialization::WireType::_set_Reference(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Bounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Bounds"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
void Normal::Realtime::Serialization::Serialization::WireType::_set_Bounds(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Bounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Bounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated]] uint8_t& Normal::Realtime::Serialization::Serialization::WireType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.SerializationException
#include "Normal/Realtime/Serialization/SerializationException.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.WriteStreamWriteInvalidPropertyID
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::WriteStreamWriteInvalidPropertyID(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::WriteStreamWriteInvalidPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "WriteStreamWriteInvalidPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.WriteBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::WriteBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::WriteBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "WriteBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ModelLengthCalculatedIncorrectly
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ModelLengthCalculatedIncorrectly(::System::Type* modelType, int actualLength, int calculatedLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ModelLengthCalculatedIncorrectly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ModelLengthCalculatedIncorrectly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modelType), ::il2cpp_utils::ExtractType(actualLength), ::il2cpp_utils::ExtractType(calculatedLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, modelType, actualLength, calculatedLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeModelWriteLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeModelWriteLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeModelWriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeModelWriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadLengthDelimitedBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadLengthDelimitedBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadLengthDelimitedBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadLengthDelimitedBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadModelBufferLengthIncorrect
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadModelBufferLengthIncorrect(int readLength, int expectedLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadModelBufferLengthIncorrect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadModelBufferLengthIncorrect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readLength), ::il2cpp_utils::ExtractType(expectedLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, readLength, expectedLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.RecursionLevelLimitExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::RecursionLevelLimitExceeded(uint recursionLevelLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::RecursionLevelLimitExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "RecursionLevelLimitExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursionLevelLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recursionLevelLimit);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.InvalidVarint
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::InvalidVarint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::InvalidVarint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "InvalidVarint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadInvalidType
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadInvalidType(::Normal::Realtime::Serialization::Serialization::WireType expectedWireType, ::Normal::Realtime::Serialization::Serialization::WireType wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadInvalidType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadInvalidType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedWireType), ::il2cpp_utils::ExtractType(wireType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedWireType, wireType);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeLengthDelimitedReadLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeLengthDelimitedReadLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeLengthDelimitedReadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeLengthDelimitedReadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeModelReadLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeModelReadLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeModelReadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeModelReadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.SuppliedBufferNotLargeEnough
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::SuppliedBufferNotLargeEnough(int length, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::SuppliedBufferNotLargeEnough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "SuppliedBufferNotLargeEnough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.MetaModelSuppliedMismatchedModelType
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::MetaModelSuppliedMismatchedModelType(uint serverModelType, uint localModelType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::MetaModelSuppliedMismatchedModelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "MetaModelSuppliedMismatchedModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverModelType), ::il2cpp_utils::ExtractType(localModelType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serverModelType, localModelType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ByteFloat
#include "Normal/Realtime/Serialization/ByteFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single value
[[deprecated]] float& Normal::Realtime::Serialization::ByteFloat::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 bytes
[[deprecated]] uint& Normal::Realtime::Serialization::ByteFloat::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteFloat.Reinterpret
float Normal::Realtime::Serialization::ByteFloat::Reinterpret(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteFloat", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteFloat.Reinterpret
uint Normal::Realtime::Serialization::ByteFloat::Reinterpret(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteFloat", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ByteDouble
#include "Normal/Realtime/Serialization/ByteDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double value
[[deprecated]] double& Normal::Realtime::Serialization::ByteDouble::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 bytes
[[deprecated]] uint64_t& Normal::Realtime::Serialization::ByteDouble::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteDouble.Reinterpret
double Normal::Realtime::Serialization::ByteDouble::Reinterpret(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteDouble", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteDouble.Reinterpret
uint64_t Normal::Realtime::Serialization::ByteDouble::Reinterpret(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteDouble", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers
#include "Normal/Realtime/Serialization/ArraySerializers.hpp"
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer
#include "Normal/Realtime/Serialization/ArraySerializers_StringSerializer.hpp"
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer
#include "Normal/Realtime/Serialization/ArraySerializers_ByteArraySerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers.Register
void Normal::Realtime::Serialization::ArraySerializers::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ArraySerializers", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer
#include "Normal/Realtime/Serialization/ArraySerializers_StringSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Length
int Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Length(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::StringSerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Write
void Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::StringSerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Read
void Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::StringSerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer
#include "Normal/Realtime/Serialization/ArraySerializers_ByteArraySerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Length
int Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Length(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Write
void Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Read
void Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::ArrayW<uint8_t>> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(bytes));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.PrimitiveSerializers
#include "Normal/Realtime/Serialization/PrimitiveSerializers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.PrimitiveSerializers.Register
void Normal::Realtime::Serialization::PrimitiveSerializers::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PrimitiveSerializers::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "PrimitiveSerializers", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.BoolSerializer
#include "Normal/Realtime/Serialization/BoolSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Length
int Normal::Realtime::Serialization::BoolSerializer::Length(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::BoolSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Write
void Normal::Realtime::Serialization::BoolSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::BoolSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Read
void Normal::Realtime::Serialization::BoolSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::BoolSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ByteSerializer
#include "Normal/Realtime/Serialization/ByteSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ByteSerializer.Length
int Normal::Realtime::Serialization::ByteSerializer::Length(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ByteSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteSerializer.Write
void Normal::Realtime::Serialization::ByteSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ByteSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteSerializer.Read
void Normal::Realtime::Serialization::ByteSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ByteSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.SByteSerializer
#include "Normal/Realtime/Serialization/SByteSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.SByteSerializer.Length
int Normal::Realtime::Serialization::SByteSerializer::Length(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SByteSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::SByteSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.SByteSerializer.Write
void Normal::Realtime::Serialization::SByteSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SByteSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::SByteSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.SByteSerializer.Read
void Normal::Realtime::Serialization::SByteSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SByteSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::SByteSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.UShortSerializer
#include "Normal/Realtime/Serialization/UShortSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.UShortSerializer.Length
int Normal::Realtime::Serialization::UShortSerializer::Length(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UShortSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UShortSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.UShortSerializer.Write
void Normal::Realtime::Serialization::UShortSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UShortSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UShortSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.UShortSerializer.Read
void Normal::Realtime::Serialization::UShortSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UShortSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UShortSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ShortSerializer
#include "Normal/Realtime/Serialization/ShortSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ShortSerializer.Length
int Normal::Realtime::Serialization::ShortSerializer::Length(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ShortSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ShortSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ShortSerializer.Write
void Normal::Realtime::Serialization::ShortSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ShortSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ShortSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ShortSerializer.Read
void Normal::Realtime::Serialization::ShortSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ShortSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::ShortSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.UIntSerializer
#include "Normal/Realtime/Serialization/UIntSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.UIntSerializer.Length
int Normal::Realtime::Serialization::UIntSerializer::Length(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UIntSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UIntSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.UIntSerializer.Write
void Normal::Realtime::Serialization::UIntSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UIntSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UIntSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.UIntSerializer.Read
void Normal::Realtime::Serialization::UIntSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UIntSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::UIntSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IntSerializer
#include "Normal/Realtime/Serialization/IntSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IntSerializer.Length
int Normal::Realtime::Serialization::IntSerializer::Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IntSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IntSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.IntSerializer.Write
void Normal::Realtime::Serialization::IntSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IntSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IntSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.IntSerializer.Read
void Normal::Realtime::Serialization::IntSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IntSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::IntSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.FloatSerializer
#include "Normal/Realtime/Serialization/FloatSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.FloatSerializer.Length
int Normal::Realtime::Serialization::FloatSerializer::Length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::FloatSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::FloatSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.FloatSerializer.Write
void Normal::Realtime::Serialization::FloatSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::FloatSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::FloatSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.FloatSerializer.Read
void Normal::Realtime::Serialization::FloatSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::FloatSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::FloatSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.DoubleSerializer
#include "Normal/Realtime/Serialization/DoubleSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.DoubleSerializer.Length
int Normal::Realtime::Serialization::DoubleSerializer::Length(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::DoubleSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::DoubleSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.DoubleSerializer.Write
void Normal::Realtime::Serialization::DoubleSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::DoubleSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::DoubleSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.DoubleSerializer.Read
void Normal::Realtime::Serialization::DoubleSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::DoubleSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::DoubleSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.SerializerResolver
#include "Normal/Realtime/Serialization/SerializerResolver.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Normal.Realtime.Serialization.ISerializer
#include "Normal/Realtime/Serialization/ISerializer.hpp"
// Including type: Normal.Realtime.Serialization.ISerializer`1
#include "Normal/Realtime/Serialization/ISerializer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Normal.Realtime.Serialization.ISerializer> __serializers
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Normal::Realtime::Serialization::ISerializer*>* Normal::Realtime::Serialization::SerializerResolver::_get___serializers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializerResolver::_get___serializers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Normal::Realtime::Serialization::ISerializer*>*>("Normal.Realtime.Serialization", "SerializerResolver", "__serializers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Normal.Realtime.Serialization.ISerializer> __serializers
void Normal::Realtime::Serialization::SerializerResolver::_set___serializers(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Normal::Realtime::Serialization::ISerializer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializerResolver::_set___serializers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "SerializerResolver", "__serializers", value));
}
// Autogenerated method: Normal.Realtime.Serialization.SerializerResolver..cctor
void Normal::Realtime::Serialization::SerializerResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializerResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializerResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.UnityEngineSerializers
#include "Normal/Realtime/Serialization/UnityEngineSerializers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.UnityEngineSerializers.Register
void Normal::Realtime::Serialization::UnityEngineSerializers::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::UnityEngineSerializers::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "UnityEngineSerializers", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Vector2Serializer
#include "Normal/Realtime/Serialization/Vector2Serializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LENGTH
int Normal::Realtime::Serialization::Vector2Serializer::_get_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector2Serializer::_get_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "Vector2Serializer", "LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENGTH
void Normal::Realtime::Serialization::Vector2Serializer::_set_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector2Serializer::_set_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Vector2Serializer", "LENGTH", value));
}
// Autogenerated method: Normal.Realtime.Serialization.Vector2Serializer.Length
int Normal::Realtime::Serialization::Vector2Serializer::Length(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector2Serializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector2Serializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector2Serializer.Write
void Normal::Realtime::Serialization::Vector2Serializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector2Serializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector2Serializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector2Serializer.Read
void Normal::Realtime::Serialization::Vector2Serializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector2Serializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector2Serializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Vector3Serializer
#include "Normal/Realtime/Serialization/Vector3Serializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LENGTH
int Normal::Realtime::Serialization::Vector3Serializer::_get_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector3Serializer::_get_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "Vector3Serializer", "LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENGTH
void Normal::Realtime::Serialization::Vector3Serializer::_set_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector3Serializer::_set_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Vector3Serializer", "LENGTH", value));
}
// Autogenerated method: Normal.Realtime.Serialization.Vector3Serializer.Length
int Normal::Realtime::Serialization::Vector3Serializer::Length(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector3Serializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector3Serializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector3Serializer.Write
void Normal::Realtime::Serialization::Vector3Serializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector3Serializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector3Serializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector3Serializer.Read
void Normal::Realtime::Serialization::Vector3Serializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector3Serializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector3Serializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Vector4Serializer
#include "Normal/Realtime/Serialization/Vector4Serializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LENGTH
int Normal::Realtime::Serialization::Vector4Serializer::_get_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector4Serializer::_get_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "Vector4Serializer", "LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENGTH
void Normal::Realtime::Serialization::Vector4Serializer::_set_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector4Serializer::_set_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Vector4Serializer", "LENGTH", value));
}
// Autogenerated method: Normal.Realtime.Serialization.Vector4Serializer.Length
int Normal::Realtime::Serialization::Vector4Serializer::Length(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector4Serializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector4Serializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector4Serializer.Write
void Normal::Realtime::Serialization::Vector4Serializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector4Serializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector4Serializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.Vector4Serializer.Read
void Normal::Realtime::Serialization::Vector4Serializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::UnityEngine::Vector4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Vector4Serializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::Vector4Serializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.QuaternionSerializer
#include "Normal/Realtime/Serialization/QuaternionSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LENGTH
int Normal::Realtime::Serialization::QuaternionSerializer::_get_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::QuaternionSerializer::_get_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "QuaternionSerializer", "LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENGTH
void Normal::Realtime::Serialization::QuaternionSerializer::_set_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::QuaternionSerializer::_set_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "QuaternionSerializer", "LENGTH", value));
}
// Autogenerated method: Normal.Realtime.Serialization.QuaternionSerializer.Length
int Normal::Realtime::Serialization::QuaternionSerializer::Length(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::QuaternionSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::QuaternionSerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.QuaternionSerializer.Write
void Normal::Realtime::Serialization::QuaternionSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::QuaternionSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::QuaternionSerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.QuaternionSerializer.Read
void Normal::Realtime::Serialization::QuaternionSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::QuaternionSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::QuaternionSerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ColorSerializer
#include "Normal/Realtime/Serialization/ColorSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LENGTH
int Normal::Realtime::Serialization::ColorSerializer::_get_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ColorSerializer::_get_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "ColorSerializer", "LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENGTH
void Normal::Realtime::Serialization::ColorSerializer::_set_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ColorSerializer::_set_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "ColorSerializer", "LENGTH", value));
}
// Autogenerated method: Normal.Realtime.Serialization.ColorSerializer.Length
int Normal::Realtime::Serialization::ColorSerializer::Length(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ColorSerializer::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ColorSerializer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ColorSerializer.Write
void Normal::Realtime::Serialization::ColorSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ColorSerializer::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ColorSerializer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ColorSerializer.Read
void Normal::Realtime::Serialization::ColorSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ColorSerializer::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Normal::Realtime::Serialization::ColorSerializer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher
#include "Normal/Realtime/Serialization/StreamEventDispatcher.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.StreamEventDispatcher dispatcher
[[deprecated]] ::Normal::Realtime::Serialization::StreamEventDispatcher*& Normal::Realtime::Serialization::StreamContext::dyn_dispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_dispatcher");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispatcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamEventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.InflightUpdateNotifier inflightUpdateNotifier
[[deprecated]] ::Normal::Realtime::Serialization::InflightUpdateNotifier*& Normal::Realtime::Serialization::StreamContext::dyn_inflightUpdateNotifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_inflightUpdateNotifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inflightUpdateNotifier"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::InflightUpdateNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean fullModel
[[deprecated]] bool& Normal::Realtime::Serialization::StreamContext::dyn_fullModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_fullModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean reliableChannel
[[deprecated]] bool& Normal::Realtime::Serialization::StreamContext::dyn_reliableChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_reliableChannel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliableChannel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 updateID
[[deprecated]] uint& Normal::Realtime::Serialization::StreamContext::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_updateID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double packetRoomTime
[[deprecated]] double& Normal::Realtime::Serialization::StreamContext::dyn_packetRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::dyn_packetRoomTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetRoomTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.get_deltaUpdatesOnly
bool Normal::Realtime::Serialization::StreamContext::get_deltaUpdatesOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::get_deltaUpdatesOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deltaUpdatesOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.get_unreliableChannel
bool Normal::Realtime::Serialization::StreamContext::get_unreliableChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::get_unreliableChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_unreliableChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext..ctor
// ABORTED elsewhere.  Normal::Realtime::Serialization::StreamContext::StreamContext(::Normal::Realtime::Serialization::StreamEventDispatcher* dispatcher, ::Normal::Realtime::Serialization::InflightUpdateNotifier* notifier, bool fullModel, bool reliableChannel, uint updateID, double packetRoomTime)
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.AsFullModel
::Normal::Realtime::Serialization::StreamContext Normal::Realtime::Serialization::StreamContext::AsFullModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::AsFullModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsFullModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::StreamContext, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.Equals
bool Normal::Realtime::Serialization::StreamContext::Equals(::Normal::Realtime::Serialization::StreamContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.Equals
bool Normal::Realtime::Serialization::StreamContext::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.op_Equality
bool Normal::Realtime::Serialization::operator ==(const ::Normal::Realtime::Serialization::StreamContext& lhs, const ::Normal::Realtime::Serialization::StreamContext& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContext", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContext.op_Inequality
bool Normal::Realtime::Serialization::operator !=(const ::Normal::Realtime::Serialization::StreamContext& lhs, const ::Normal::Realtime::Serialization::StreamContext& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContext::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContext", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.StreamContextRoomTime
#include "Normal/Realtime/Serialization/StreamContextRoomTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 __integerBits
int Normal::Realtime::Serialization::StreamContextRoomTime::_get___integerBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_get___integerBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "StreamContextRoomTime", "__integerBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 __integerBits
void Normal::Realtime::Serialization::StreamContextRoomTime::_set___integerBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_set___integerBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "StreamContextRoomTime", "__integerBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 __fractionalBits
int Normal::Realtime::Serialization::StreamContextRoomTime::_get___fractionalBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_get___fractionalBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "StreamContextRoomTime", "__fractionalBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 __fractionalBits
void Normal::Realtime::Serialization::StreamContextRoomTime::_set___fractionalBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_set___fractionalBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "StreamContextRoomTime", "__fractionalBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 __totalBits
int Normal::Realtime::Serialization::StreamContextRoomTime::_get___totalBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_get___totalBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "StreamContextRoomTime", "__totalBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 __totalBits
void Normal::Realtime::Serialization::StreamContextRoomTime::_set___totalBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_set___totalBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "StreamContextRoomTime", "__totalBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double __clockBufferTime
double Normal::Realtime::Serialization::StreamContextRoomTime::_get___clockBufferTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_get___clockBufferTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Normal.Realtime.Serialization", "StreamContextRoomTime", "__clockBufferTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double __clockBufferTime
void Normal::Realtime::Serialization::StreamContextRoomTime::_set___clockBufferTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::_set___clockBufferTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "StreamContextRoomTime", "__clockBufferTime", value));
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContextRoomTime..cctor
void Normal::Realtime::Serialization::StreamContextRoomTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContextRoomTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContextRoomTime.EncodeRoomTime
uint Normal::Realtime::Serialization::StreamContextRoomTime::EncodeRoomTime(double localRoomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::EncodeRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContextRoomTime", "EncodeRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localRoomTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localRoomTime);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContextRoomTime.DecodeRoomTime
double Normal::Realtime::Serialization::StreamContextRoomTime::DecodeRoomTime(double localRoomTime, uint packetRoomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::DecodeRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContextRoomTime", "DecodeRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localRoomTime), ::il2cpp_utils::ExtractType(packetRoomTime)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localRoomTime, packetRoomTime);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContextRoomTime.ConvertFloatToFixed
uint64_t Normal::Realtime::Serialization::StreamContextRoomTime::ConvertFloatToFixed(double floatValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::ConvertFloatToFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContextRoomTime", "ConvertFloatToFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, floatValue);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamContextRoomTime.ConvertFixedToFloat
double Normal::Realtime::Serialization::StreamContextRoomTime::ConvertFixedToFloat(uint64_t fixedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamContextRoomTime::ConvertFixedToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "StreamContextRoomTime", "ConvertFixedToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixedValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fixedValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher
#include "Normal/Realtime/Serialization/StreamEventDispatcher.hpp"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback
#include "Normal/Realtime/Serialization/StreamEventDispatcher_StreamUpdateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.HashSet`1<Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback>> _storage
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*>*>*& Normal::Realtime::Serialization::StreamEventDispatcher::dyn__storage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::dyn__storage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storage"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mutationLock
[[deprecated]] bool& Normal::Realtime::Serialization::StreamEventDispatcher::dyn__mutationLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::dyn__mutationLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutationLock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher.AddStreamCallback
void Normal::Realtime::Serialization::StreamEventDispatcher::AddStreamCallback(uint updateID, ::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::AddStreamCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStreamCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID, callback);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher.RemoveStreamCallback
void Normal::Realtime::Serialization::StreamEventDispatcher::RemoveStreamCallback(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::RemoveStreamCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveStreamCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher.InvokeCallbacksForUpdateID
void Normal::Realtime::Serialization::StreamEventDispatcher::InvokeCallbacksForUpdateID(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::InvokeCallbacksForUpdateID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCallbacksForUpdateID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher.SafeInvoke
void Normal::Realtime::Serialization::StreamEventDispatcher::SafeInvoke(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback* handler, uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::SafeInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler, updateID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback
#include "Normal/Realtime/Serialization/StreamEventDispatcher_StreamUpdateCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback.Invoke
void Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::Invoke(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::BeginInvoke(uint updateID, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, updateID, callback, object);
}
// Autogenerated method: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback.EndInvoke
void Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.WriteBuffer
#include "Normal/Realtime/Serialization/WriteBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated]] ::ArrayW<uint8_t>& Normal::Realtime::Serialization::WriteBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated]] int& Normal::Realtime::Serialization::WriteBuffer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.get_bytesWritten
int Normal::Realtime::Serialization::WriteBuffer::get_bytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::get_bytesWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytesWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.GetBuffer
::ArrayW<uint8_t> Normal::Realtime::Serialization::WriteBuffer::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.Reset
void Normal::Realtime::Serialization::WriteBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteByte
void Normal::Realtime::Serialization::WriteBuffer::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteBytes
void Normal::Realtime::Serialization::WriteBuffer::WriteBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteBytes
void Normal::Realtime::Serialization::WriteBuffer::WriteBytes(::ArrayW<uint8_t> value, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, offset, length);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteVarint32
void Normal::Realtime::Serialization::WriteBuffer::WriteVarint32(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteFixed32
void Normal::Realtime::Serialization::WriteBuffer::WriteFixed32(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteFixed32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFixed32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteFixed64
void Normal::Realtime::Serialization::WriteBuffer::WriteFixed64(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteFixed64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFixed64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteFloat
void Normal::Realtime::Serialization::WriteBuffer::WriteFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteDouble
void Normal::Realtime::Serialization::WriteBuffer::WriteDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteString
void Normal::Realtime::Serialization::WriteBuffer::WriteString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.WriteString
void Normal::Realtime::Serialization::WriteBuffer::WriteString(::StringW value, int lengthInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(lengthInBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, lengthInBytes);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteBuffer.ResizeIfNeeded
void Normal::Realtime::Serialization::WriteBuffer::ResizeIfNeeded(int extraSpaceNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteBuffer::ResizeIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraSpaceNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, extraSpaceNeeded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.WriteBuffer
#include "Normal/Realtime/Serialization/WriteBuffer.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Normal.Realtime.Serialization.IStreamWriter
#include "Normal/Realtime/Serialization/IStreamWriter.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.ICollection
#include "Normal/Realtime/Serialization/ICollection.hpp"
// Including type: Normal.Realtime.Serialization.PropertyHeader
#include "Normal/Realtime/Serialization/PropertyHeader.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.WriteBuffer _buffer
[[deprecated]] ::Normal::Realtime::Serialization::WriteBuffer*& Normal::Realtime::Serialization::WriteStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::WriteBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.ConvertNegativeOneIntToUInt
uint Normal::Realtime::Serialization::WriteStream::ConvertNegativeOneIntToUInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::ConvertNegativeOneIntToUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "ConvertNegativeOneIntToUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.Vector2ToBytesLength
int Normal::Realtime::Serialization::WriteStream::Vector2ToBytesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::Vector2ToBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "Vector2ToBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.Vector2ToBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::WriteStream::Vector2ToBytes(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::Vector2ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "Vector2ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.Vector3ToBytesLength
int Normal::Realtime::Serialization::WriteStream::Vector3ToBytesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::Vector3ToBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "Vector3ToBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.Vector3ToBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::WriteStream::Vector3ToBytes(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::Vector3ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "Vector3ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.QuaternionToBytesLength
int Normal::Realtime::Serialization::WriteStream::QuaternionToBytesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::QuaternionToBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "QuaternionToBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.QuaternionToBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::WriteStream::QuaternionToBytes(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::QuaternionToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "QuaternionToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.ColorToBytesLength
int Normal::Realtime::Serialization::WriteStream::ColorToBytesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::ColorToBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "ColorToBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.ColorToBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::WriteStream::ColorToBytes(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::ColorToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "ColorToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.FloatToBytesLength
int Normal::Realtime::Serialization::WriteStream::FloatToBytesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::FloatToBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "FloatToBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.FloatToBytes
void Normal::Realtime::Serialization::WriteStream::FloatToBytes(float value, ::ArrayW<uint8_t> buffer, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::FloatToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "FloatToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, byref(offset));
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteNullLength
int Normal::Realtime::Serialization::WriteStream::WriteNullLength(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteNullLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteNullLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteVarint32Length
int Normal::Realtime::Serialization::WriteStream::WriteVarint32Length(uint propertyID, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteVarint32Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteVarint32Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteFloatLength
int Normal::Realtime::Serialization::WriteStream::WriteFloatLength(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteFloatLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteFloatLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteDoubleLength
int Normal::Realtime::Serialization::WriteStream::WriteDoubleLength(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteDoubleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteDoubleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBytesLength
int Normal::Realtime::Serialization::WriteStream::WriteBytesLength(uint propertyID, int numberOfBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(numberOfBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, numberOfBytes);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBytesLength
int Normal::Realtime::Serialization::WriteStream::WriteBytesLength(uint propertyID, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteStringLength
int Normal::Realtime::Serialization::WriteStream::WriteStringLength(uint propertyID, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteStringLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteStringLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteModelLength
int Normal::Realtime::Serialization::WriteStream::WriteModelLength(uint propertyID, ::Normal::Realtime::Serialization::IStreamWriter* model, ::Normal::Realtime::Serialization::StreamContext context, bool forceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteModelLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteModelLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(forceWriteFullModel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, model, context, forceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteCollectionLength
int Normal::Realtime::Serialization::WriteStream::WriteCollectionLength(uint propertyID, ::Normal::Realtime::Serialization::ICollection* collection, ::Normal::Realtime::Serialization::StreamContext context, bool forceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteCollectionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteCollectionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(forceWriteFullModel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, collection, context, forceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawPropertyKeyLength
int Normal::Realtime::Serialization::WriteStream::WriteRawPropertyKeyLength(uint propertyID, ::Normal::Realtime::Serialization::Serialization::WireType wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawPropertyKeyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawPropertyKeyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(wireType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID, wireType);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawByteLength
int Normal::Realtime::Serialization::WriteStream::WriteRawByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawVarint32Length
int Normal::Realtime::Serialization::WriteStream::WriteRawVarint32Length(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawVarint32Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawVarint32Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawFloatLength
int Normal::Realtime::Serialization::WriteStream::WriteRawFloatLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawFloatLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawFloatLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawDoubleLength
int Normal::Realtime::Serialization::WriteStream::WriteRawDoubleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawDoubleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawDoubleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawBytesLength
int Normal::Realtime::Serialization::WriteStream::WriteRawBytesLength(int numberOfBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numberOfBytes);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawBytesLength
int Normal::Realtime::Serialization::WriteStream::WriteRawBytesLength(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawBytesLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawBytesLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawStringLength
int Normal::Realtime::Serialization::WriteStream::WriteRawStringLength(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawStringLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawStringLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawModelLength
int Normal::Realtime::Serialization::WriteStream::WriteRawModelLength(::Normal::Realtime::Serialization::IStreamWriter* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawModelLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawModelLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawModelLength
int Normal::Realtime::Serialization::WriteStream::WriteRawModelLength(::Normal::Realtime::Serialization::IStreamWriter* model, int modelWriteLength, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawModelLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawModelLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(modelWriteLength), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, model, modelWriteLength, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawCollectionLength
int Normal::Realtime::Serialization::WriteStream::WriteRawCollectionLength(::Normal::Realtime::Serialization::ICollection* collection, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawCollectionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawCollectionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collection, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawCollectionLength
int Normal::Realtime::Serialization::WriteStream::WriteRawCollectionLength(::Normal::Realtime::Serialization::ICollection* collection, int collectionWriteLength, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawCollectionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "WriteRawCollectionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(collectionWriteLength), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collection, collectionWriteLength, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.GetModelWriteLength
int Normal::Realtime::Serialization::WriteStream::GetModelWriteLength(::Normal::Realtime::Serialization::IStreamWriter* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::GetModelWriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "GetModelWriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.SerializeModel
void Normal::Realtime::Serialization::WriteStream::SerializeModel(::Normal::Realtime::Serialization::IStreamWriter* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::SerializeModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteNull
void Normal::Realtime::Serialization::WriteStream::WriteNull(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteVarint32
void Normal::Realtime::Serialization::WriteStream::WriteVarint32(uint propertyID, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteFloat
void Normal::Realtime::Serialization::WriteStream::WriteFloat(uint propertyID, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteDouble
void Normal::Realtime::Serialization::WriteStream::WriteDouble(uint propertyID, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBytes
void Normal::Realtime::Serialization::WriteStream::WriteBytes(uint propertyID, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBytes
void Normal::Realtime::Serialization::WriteStream::WriteBytes(uint propertyID, ::ArrayW<uint8_t> value, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value, offset, length);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteString
void Normal::Realtime::Serialization::WriteStream::WriteString(uint propertyID, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteModel
void Normal::Realtime::Serialization::WriteStream::WriteModel(uint propertyID, ::Normal::Realtime::Serialization::IStreamWriter* value, ::Normal::Realtime::Serialization::StreamContext context, bool forceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(forceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value, context, forceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteCollection
void Normal::Realtime::Serialization::WriteStream::WriteCollection(uint propertyID, ::Normal::Realtime::Serialization::ICollection* value, ::Normal::Realtime::Serialization::StreamContext context, bool forceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(forceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, value, context, forceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawPropertyKey
void Normal::Realtime::Serialization::WriteStream::WriteRawPropertyKey(uint propertyID, ::Normal::Realtime::Serialization::Serialization::WireType wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawPropertyKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawPropertyKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID), ::il2cpp_utils::ExtractType(wireType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID, wireType);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawBytes
void Normal::Realtime::Serialization::WriteStream::WriteRawBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawBytes
void Normal::Realtime::Serialization::WriteStream::WriteRawBytes(::ArrayW<uint8_t> value, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, offset, length);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawString
void Normal::Realtime::Serialization::WriteStream::WriteRawString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawModel
void Normal::Realtime::Serialization::WriteStream::WriteRawModel(::Normal::Realtime::Serialization::IStreamWriter* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawModel
void Normal::Realtime::Serialization::WriteStream::WriteRawModel(::Normal::Realtime::Serialization::IStreamWriter* model, int modelWriteLength, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(modelWriteLength), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, modelWriteLength, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawCollection
void Normal::Realtime::Serialization::WriteStream::WriteRawCollection(::Normal::Realtime::Serialization::ICollection* collection, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteRawCollection
void Normal::Realtime::Serialization::WriteStream::WriteRawCollection(::Normal::Realtime::Serialization::ICollection* collection, int collectionWriteLength, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteRawCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(collectionWriteLength), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, collectionWriteLength, context);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthBool
int Normal::Realtime::Serialization::WriteStream::LengthBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthByte
int Normal::Realtime::Serialization::WriteStream::LengthByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthSByte
int Normal::Realtime::Serialization::WriteStream::LengthSByte(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthUShort
int Normal::Realtime::Serialization::WriteStream::LengthUShort(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthShort
int Normal::Realtime::Serialization::WriteStream::LengthShort(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthUInt
int Normal::Realtime::Serialization::WriteStream::LengthUInt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthInt
int Normal::Realtime::Serialization::WriteStream::LengthInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthFloat
int Normal::Realtime::Serialization::WriteStream::LengthFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthDouble
int Normal::Realtime::Serialization::WriteStream::LengthDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthString
int Normal::Realtime::Serialization::WriteStream::LengthString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthBytes
int Normal::Realtime::Serialization::WriteStream::LengthBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthVarint32
int Normal::Realtime::Serialization::WriteStream::LengthVarint32(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.LengthPropertyHeader
int Normal::Realtime::Serialization::WriteStream::LengthPropertyHeader(ByRef<::Normal::Realtime::Serialization::PropertyHeader> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::LengthPropertyHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "WriteStream", "LengthPropertyHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(header));
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBool
void Normal::Realtime::Serialization::WriteStream::WriteBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteByte
void Normal::Realtime::Serialization::WriteStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteSByte
void Normal::Realtime::Serialization::WriteStream::WriteSByte(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteUShort
void Normal::Realtime::Serialization::WriteStream::WriteUShort(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteShort
void Normal::Realtime::Serialization::WriteStream::WriteShort(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteUInt
void Normal::Realtime::Serialization::WriteStream::WriteUInt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteInt
void Normal::Realtime::Serialization::WriteStream::WriteInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteFloat
void Normal::Realtime::Serialization::WriteStream::WriteFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteDouble
void Normal::Realtime::Serialization::WriteStream::WriteDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteString
void Normal::Realtime::Serialization::WriteStream::WriteString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WriteBytes
void Normal::Realtime::Serialization::WriteStream::WriteBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.WriteStream.WritePropertyHeader
void Normal::Realtime::Serialization::WriteStream::WritePropertyHeader(ByRef<::Normal::Realtime::Serialization::PropertyHeader> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::WriteStream::WritePropertyHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(header));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraComposition
#include "GlobalNamespace/OVRCameraComposition.hpp"
// Including type: OVRCameraComposition/OVRCameraFrameCompositionManager
#include "GlobalNamespace/OVRCameraComposition_OVRCameraFrameCompositionManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.GameObject cameraFramePlaneObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRCameraComposition::dyn_cameraFramePlaneObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_cameraFramePlaneObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraFramePlaneObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single cameraFramePlaneDistance
[[deprecated]] float& GlobalNamespace::OVRCameraComposition::dyn_cameraFramePlaneDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_cameraFramePlaneDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraFramePlaneDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Boolean hasCameraDeviceOpened
[[deprecated]] bool& GlobalNamespace::OVRCameraComposition::dyn_hasCameraDeviceOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_hasCameraDeviceOpened");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasCameraDeviceOpened"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Boolean useDynamicLighting
[[deprecated]] bool& GlobalNamespace::OVRCameraComposition::dyn_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_useDynamicLighting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDynamicLighting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly OVRPlugin/CameraDevice cameraDevice
[[deprecated]] ::GlobalNamespace::OVRPlugin::CameraDevice& GlobalNamespace::OVRCameraComposition::dyn_cameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_cameraDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraDevice"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::CameraDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh boundaryMesh
[[deprecated]] ::UnityEngine::Mesh*& GlobalNamespace::OVRCameraComposition::dyn_boundaryMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_boundaryMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single boundaryMeshTopY
[[deprecated]] float& GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshTopY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMeshTopY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single boundaryMeshBottomY
[[deprecated]] float& GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshBottomY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMeshBottomY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/VirtualGreenScreenType boundaryMeshType
[[deprecated]] ::GlobalNamespace::OVRManager_VirtualGreenScreenType& GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_boundaryMeshType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMeshType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_VirtualGreenScreenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean nullcameraRigWarningDisplayed
[[deprecated]] bool& GlobalNamespace::OVRCameraComposition::dyn_nullcameraRigWarningDisplayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::dyn_nullcameraRigWarningDisplayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullcameraRigWarningDisplayed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraComposition.RefreshCameraFramePlaneObject
void GlobalNamespace::OVRCameraComposition::RefreshCameraFramePlaneObject(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mixedRealityCamera, bool useDynamicLighting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::RefreshCameraFramePlaneObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraFramePlaneObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mixedRealityCamera), ::il2cpp_utils::ExtractType(useDynamicLighting)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mixedRealityCamera, useDynamicLighting);
}
// Autogenerated method: OVRCameraComposition.UpdateCameraFramePlaneObject
void GlobalNamespace::OVRCameraComposition::UpdateCameraFramePlaneObject(::UnityEngine::Camera* mainCamera, ::UnityEngine::Camera* mixedRealityCamera, ::UnityEngine::RenderTexture* boundaryMeshMaskTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::UpdateCameraFramePlaneObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCameraFramePlaneObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(mixedRealityCamera), ::il2cpp_utils::ExtractType(boundaryMeshMaskTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainCamera, mixedRealityCamera, boundaryMeshMaskTexture);
}
// Autogenerated method: OVRCameraComposition.RefreshBoundaryMesh
void GlobalNamespace::OVRCameraComposition::RefreshBoundaryMesh(::UnityEngine::Camera* camera, ByRef<float> cullingDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::RefreshBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, byref(cullingDistance));
}
// Autogenerated method: OVRCameraComposition.Cleanup
void GlobalNamespace::OVRCameraComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraComposition.RecenterPose
void GlobalNamespace::OVRCameraComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraComposition/OVRCameraFrameCompositionManager
#include "GlobalNamespace/OVRCameraComposition_OVRCameraFrameCompositionManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cameraFrameGameObj
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_cameraFrameGameObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_cameraFrameGameObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraFrameGameObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraComposition composition
[[deprecated]] ::GlobalNamespace::OVRCameraComposition*& GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_composition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_composition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "composition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraComposition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture boundaryMeshMaskTexture
[[deprecated]] ::UnityEngine::RenderTexture*& GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_boundaryMeshMaskTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_boundaryMeshMaskTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMeshMaskTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material cameraFrameMaterial
[[deprecated]] ::UnityEngine::Material*& GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_cameraFrameMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_cameraFrameMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraFrameMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material whiteMaterial
[[deprecated]] ::UnityEngine::Material*& GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_whiteMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::dyn_whiteMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whiteMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraComposition/OVRCameraFrameCompositionManager.Start
void GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraComposition/OVRCameraFrameCompositionManager.OnPreRender
void GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraComposition/OVRCameraFrameCompositionManager.OnPostRender
void GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraComposition::OVRCameraFrameCompositionManager::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cameraInTrackingSpace
[[deprecated]] bool& GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraInTrackingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRComposition::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean usingLastAttachedNodePose
[[deprecated]] bool& GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingLastAttachedNodePose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRPose lastAttachedNodePose
[[deprecated]] ::GlobalNamespace::OVRPose& GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttachedNodePose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy_(ByRef<::UnityEngine::GameObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(obj));
}
// Autogenerated method: OVRCompositionUtil.ConvertCameraDevice
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice(::GlobalNamespace::OVRManager_CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ConvertCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::CameraDevice, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRCompositionUtil.ToBoundaryType
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRCompositionUtil::ToBoundaryType(::GlobalNamespace::OVRManager_VirtualGreenScreenType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ToBoundaryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ToBoundaryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(::UnityEngine::Camera* camera, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
::UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(topY), ::il2cpp_utils::ExtractType(bottomY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDirectComposition
#include "GlobalNamespace/OVRDirectComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRDirectComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject directCompositionCameraGameObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRDirectComposition::dyn_directCompositionCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::dyn_directCompositionCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directCompositionCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera directCompositionCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRDirectComposition::dyn_directCompositionCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::dyn_directCompositionCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directCompositionCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture boundaryMeshMaskTexture
[[deprecated]] ::UnityEngine::RenderTexture*& GlobalNamespace::OVRDirectComposition::dyn_boundaryMeshMaskTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::dyn_boundaryMeshMaskTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryMeshMaskTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDirectComposition.RefreshCameraObjects
void GlobalNamespace::OVRDirectComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRDirectComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRDirectComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRDirectComposition.Update
void GlobalNamespace::OVRDirectComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera);
}
// Autogenerated method: OVRDirectComposition.Cleanup
void GlobalNamespace::OVRDirectComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDirectComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraComposition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject foregroundCameraGameObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera foregroundCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backgroundCameraGameObject
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera backgroundCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object audioDataLock
[[deprecated]] ::Il2CppObject*& GlobalNamespace::OVRExternalComposition::dyn_audioDataLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioDataLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDataLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> cachedAudioData
[[deprecated]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cachedChannels
[[deprecated]] int& GlobalNamespace::OVRExternalComposition::dyn_cachedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(ByRef<::ArrayW<float>> audioData, ByRef<int> audioFrames, ByRef<int> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(audioData), byref(audioFrames), byref(channels));
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::ArrayW<float> GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRBoundary::dyn_cachedGeometryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::dyn_cachedGeometryList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedGeometryList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(::GlobalNamespace::OVRBoundary::Node node, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(::UnityEngine::Vector3 point, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVRBoundary::GetGeometry(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
::UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRBoundary::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackingSpace>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingSpace>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftEyeAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <centerEyeAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightEyeAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackerAnchor>k__BackingField
[[deprecated]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRCameraRig> UpdatedAnchors
[[deprecated]] ::System::Action_1<::GlobalNamespace::OVRCameraRig*>*& GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedAnchors"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRCameraRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePerEyeCameras
[[deprecated]] bool& GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePerEyeCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedUpdateForTracking
[[deprecated]] bool& GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedUpdateForTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableEyeAnchorCameras
[[deprecated]] bool& GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableEyeAnchorCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _skipUpdate
[[deprecated]] bool& GlobalNamespace::OVRCameraRig::dyn__skipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__skipUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackingSpaceName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingSpaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackerAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftEyeAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String centerEyeAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightEyeAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerAnchorName
[[deprecated]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _centerEyeCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _leftEyeCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _rightEyeCamera
[[deprecated]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::UpdateAnchors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(::UnityEngine::Transform* root, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ConfigureAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(isLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(::UnityEngine::Transform* t, ::GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(::GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
::UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(::GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
::GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
::OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
::UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::NodeStatePropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(::UnityEngine::XR::XRNode nodeType, ByRef<::UnityEngine::XR::XRNodeState> requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(requestedNodeState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, byref(requestedNodeState));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retQuat));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated]] ::UnityEngine::Vector3& GlobalNamespace::OVRPose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
[[deprecated]] ::UnityEngine::Quaternion& GlobalNamespace::OVRPose::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPose.get_identity
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
::GlobalNamespace::OVRPose GlobalNamespace::operator*(const ::GlobalNamespace::OVRPose& lhs, const ::GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated]] bool& GlobalNamespace::OVRNativeBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numBytes
[[deprecated]] int& GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ptr
[[deprecated]] ::System::IntPtr& GlobalNamespace::OVRNativeBuffer::dyn_m_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
::System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRNativeBuffer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowPitchLook
[[deprecated]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowPitchLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowYawLook
[[deprecated]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowYawLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertPitch
[[deprecated]] bool& GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertPitch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_PitchDegreesPerSec
[[deprecated]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_PitchDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_YawDegreesPerSec
[[deprecated]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_YawDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowMovement
[[deprecated]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ForwardSpeed
[[deprecated]] float& GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForwardSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrafeSpeed
[[deprecated]] float& GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrafeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
[[deprecated]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRDebugHeadController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean needsConfigureTexture
[[deprecated]] bool& GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsConfigureTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRDisplay/EyeRenderDesc[] eyeDescs
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>& GlobalNamespace::OVRDisplay::dyn_eyeDescs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_eyeDescs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeDescs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recenterRequested
[[deprecated]] bool& GlobalNamespace::OVRDisplay::dyn_recenterRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 recenterRequestedFrameCount
[[deprecated]] int& GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequestedFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localTrackingSpaceRecenterCount
[[deprecated]] int& GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpaceRecenterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RecenteredPose
[[deprecated]] ::System::Action*& GlobalNamespace::OVRDisplay::dyn_RecenteredPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_RecenteredPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecenteredPose"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDisplay.get_acceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_latency
::GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
::GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*>>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHaptics/OVRHapticsOutput m_output
[[deprecated]] ::GlobalNamespace::OVRHaptics::OVRHapticsOutput*& GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_output"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHaptics::OVRHapticsOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_lowLatencyMode
[[deprecated]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lowLatencyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_paddingEnabled
[[deprecated]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_prevSamplesQueued
[[deprecated]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueued"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_prevSamplesQueuedTime
[[deprecated]] float& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueuedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionHits
[[deprecated]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionMisses
[[deprecated]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionMisses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numUnderruns
[[deprecated]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numUnderruns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
[[deprecated]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_controller
[[deprecated]] uint& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRNativeBuffer m_nativeBuffer
[[deprecated]] ::GlobalNamespace::OVRNativeBuffer*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nativeBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRNativeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip m_paddingClip
[[deprecated]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingClip"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ReadCount>k__BackingField
[[deprecated]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip <Clip>k__BackingField
[[deprecated]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clip>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_ReadCount
int GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_ReadCount
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_Clip
::GlobalNamespace::OVRHapticsClip* GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHapticsClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_Clip
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip(::GlobalNamespace::OVRHapticsClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated]] int& GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Capacity>k__BackingField
[[deprecated]] int& GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capacity>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Samples>k__BackingField
[[deprecated]] ::ArrayW<uint8_t>& GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Samples>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHapticsClip.get_Count
int GlobalNamespace::OVRHapticsClip::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Count
void GlobalNamespace::OVRHapticsClip::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Capacity
int GlobalNamespace::OVRHapticsClip::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Capacity
void GlobalNamespace::OVRHapticsClip::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Samples
::ArrayW<uint8_t> GlobalNamespace::OVRHapticsClip::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Samples
void GlobalNamespace::OVRHapticsClip::set_Samples(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.WriteSample
void GlobalNamespace::OVRHapticsClip::WriteSample(uint8_t sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::WriteSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: OVRHapticsClip.Reset
void GlobalNamespace::OVRHapticsClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.InitializeFromAudioFloatTrack
void GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack(::ArrayW<float> sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFromAudioFloatTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceData), ::il2cpp_utils::ExtractType(sourceFrequency), ::il2cpp_utils::ExtractType(sourceChannelCount), ::il2cpp_utils::ExtractType(sourceChannel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceData, sourceFrequency, sourceChannelCount, sourceChannel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X_PITCH
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X_PITCH
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_Y
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_Y
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_HEIGHT
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_HEIGHT
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_ROLL
float GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MAX_ROLL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_ROLL
void GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MAX_ROLL", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRHeadsetEmulator/OpMode opMode
[[deprecated]] ::GlobalNamespace::OVRHeadsetEmulator::OpMode& GlobalNamespace::OVRHeadsetEmulator::dyn_opMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_opMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHeadsetEmulator::OpMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseOnRelease
[[deprecated]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseOnRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseByMiddleMouseButton
[[deprecated]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseByMiddleMouseButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] activateKeys
[[deprecated]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] pitchKeys
[[deprecated]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager manager
[[deprecated]] ::GlobalNamespace::OVRManager*& GlobalNamespace::OVRHeadsetEmulator::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastFrameEmulationActivated
[[deprecated]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFrameEmulationActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetTranslation
[[deprecated]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetTranslation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetRotation
[[deprecated]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSentEvent
[[deprecated]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSentEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emulatorHasInitialized
[[deprecated]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emulatorHasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CursorLockMode previousCursorLockMode
[[deprecated]] ::UnityEngine::CursorLockMode& GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousCursorLockMode"))->offset;
  return *reinterpret_cast<::UnityEngine::CursorLockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHeadsetEmulator.Start
void GlobalNamespace::OVRHeadsetEmulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.Update
void GlobalNamespace::OVRHeadsetEmulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsEmulationActivated
bool GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmulationActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsTweakingPitch
bool GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTweakingPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator/OpMode
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode Off
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode Off
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode EditorOnly
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "EditorOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode EditorOnly
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "EditorOnly", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "AlwaysOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "AlwaysOn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
// Including type: OVRInput/OVRControllerGamepadMac
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac.hpp"
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_DEADZONE_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_DEADZONE_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* GlobalNamespace::OVRInput::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>*>("", "OVRInput", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
void GlobalNamespace::OVRInput::_set_controllers(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "controllers", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller activeControllerType
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_activeControllerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "activeControllerType"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller activeControllerType
void GlobalNamespace::OVRInput::_set_activeControllerType(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_activeControllerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "activeControllerType", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller connectedControllerTypes
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_connectedControllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_connectedControllerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "connectedControllerTypes"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller connectedControllerTypes
void GlobalNamespace::OVRInput::_set_connectedControllerTypes(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_connectedControllerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "connectedControllerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Step stepType
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRInput::_get_stepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_stepType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRInput", "stepType"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Step stepType
void GlobalNamespace::OVRInput::_set_stepType(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_stepType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "stepType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fixedUpdateCount
int GlobalNamespace::OVRInput::_get_fixedUpdateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_fixedUpdateCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "fixedUpdateCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fixedUpdateCount
void GlobalNamespace::OVRInput::_set_fixedUpdateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_fixedUpdateCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "fixedUpdateCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveController
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveController"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveController
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveController", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveControllerCached
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveControllerCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveControllerCached
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _pluginSupportsActiveControllerMinVersion
::System::Version* GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRInput", "_pluginSupportsActiveControllerMinVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _pluginSupportsActiveControllerMinVersion
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerMinVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HAPTIC_CHANNELS
int GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "NUM_HAPTIC_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HAPTIC_CHANNELS
void GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "NUM_HAPTIC_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/HapticInfo[] hapticInfos
::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> GlobalNamespace::OVRInput::_get_hapticInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_hapticInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*>>("", "OVRInput", "hapticInfos"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/HapticInfo[] hapticInfos
void GlobalNamespace::OVRInput::_set_hapticInfos(::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_hapticInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "hapticInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
float GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
void GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
float GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
void GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_TOUCH_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_TOUCH_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_TOUCH_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_TOUCH_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> GlobalNamespace::OVRInput::_get_openVRControllerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_openVRControllerDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails>>("", "OVRInput", "openVRControllerDetails"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
void GlobalNamespace::OVRInput::_set_openVRControllerDetails(::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_openVRControllerDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "openVRControllerDetails", value));
}
// Autogenerated method: OVRInput.get_pluginSupportsActiveController
bool GlobalNamespace::OVRInput::get_pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::get_pluginSupportsActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "get_pluginSupportsActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput..cctor
void GlobalNamespace::OVRInput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Update
void GlobalNamespace::OVRInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.FixedUpdate
void GlobalNamespace::OVRInput::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetControllerOrientationTracked
bool GlobalNamespace::OVRInput::GetControllerOrientationTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerOrientationValid
bool GlobalNamespace::OVRInput::GetControllerOrientationValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionTracked
bool GlobalNamespace::OVRInput::GetControllerPositionTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionValid
bool GlobalNamespace::OVRInput::GetControllerPositionValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerPosition
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerPosition(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerRotation
::UnityEngine::Quaternion GlobalNamespace::OVRInput::GetLocalControllerRotation(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetDominantHand
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButton
bool GlobalNamespace::OVRInput::GetResolvedButton(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonDown
bool GlobalNamespace::OVRInput::GetResolvedButtonDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonUp
bool GlobalNamespace::OVRInput::GetResolvedButtonUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouch
bool GlobalNamespace::OVRInput::GetResolvedTouch(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchDown
bool GlobalNamespace::OVRInput::GetResolvedTouchDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchUp
bool GlobalNamespace::OVRInput::GetResolvedTouchUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouch
bool GlobalNamespace::OVRInput::GetResolvedNearTouch(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchDown
bool GlobalNamespace::OVRInput::GetResolvedNearTouchDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchUp
bool GlobalNamespace::OVRInput::GetResolvedNearTouchUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis1D
float GlobalNamespace::OVRInput::GetResolvedAxis1D(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis1D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis1D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis2D
::UnityEngine::Vector2 GlobalNamespace::OVRInput::GetResolvedAxis2D(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetConnectedControllers
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.IsControllerConnected
bool GlobalNamespace::OVRInput::IsControllerConnected(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsControllerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsControllerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: OVRInput.GetActiveController
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.StartVibration
void GlobalNamespace::OVRInput::StartVibration(float amplitude, float duration, ::UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(controllerNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, duration, controllerNode);
}
// Autogenerated method: OVRInput.SetOpenVRLocalPose
void GlobalNamespace::OVRInput::SetOpenVRLocalPose(::UnityEngine::Vector3 leftPos, ::UnityEngine::Vector3 rightPos, ::UnityEngine::Quaternion leftRot, ::UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftPos), ::il2cpp_utils::ExtractType(rightPos), ::il2cpp_utils::ExtractType(leftRot), ::il2cpp_utils::ExtractType(rightRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRInput.GetOpenVRStringProperty
::StringW GlobalNamespace::OVRInput::GetOpenVRStringProperty(::OVR::OpenVR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetOpenVRStringProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetOpenVRStringProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, deviceId);
}
// Autogenerated method: OVRInput.UpdateXRControllerNodeIds
void GlobalNamespace::OVRInput::UpdateXRControllerNodeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerNodeIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerNodeIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.UpdateXRControllerHaptics
void GlobalNamespace::OVRInput::UpdateXRControllerHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.InitHapticInfo
void GlobalNamespace::OVRInput::InitHapticInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InitHapticInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "InitHapticInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.PlayHapticImpulse
void GlobalNamespace::OVRInput::PlayHapticImpulse(float amplitude, ::UnityEngine::XR::XRNode deviceNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::PlayHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "PlayHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(deviceNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, deviceNode);
}
// Autogenerated method: OVRInput.IsValidOpenVRDevice
bool GlobalNamespace::OVRInput::IsValidOpenVRDevice(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsValidOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsValidOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: OVRInput.SetControllerVibration
void GlobalNamespace::OVRInput::SetControllerVibration(float frequency, float amplitude, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining(::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.CalculateAbsMax
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateAbsMax(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateAbsMax
float GlobalNamespace::OVRInput::CalculateAbsMax(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateDeadzone
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateDeadzone(::UnityEngine::Vector2 a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.CalculateDeadzone
float GlobalNamespace::OVRInput::CalculateDeadzone(float a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.ShouldResolveController
bool GlobalNamespace::OVRInput::ShouldResolveController(::GlobalNamespace::OVRInput::Controller controllerType, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ShouldResolveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "ShouldResolveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType, controllerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Button None
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button None
void GlobalNamespace::OVRInput::Button::_set_None(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button One
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button One
void GlobalNamespace::OVRInput::Button::_set_One(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Two
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Two
void GlobalNamespace::OVRInput::Button::_set_Two(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Three
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Three
void GlobalNamespace::OVRInput::Button::_set_Three(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Four
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Four
void GlobalNamespace::OVRInput::Button::_set_Four(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Start
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Start
void GlobalNamespace::OVRInput::Button::_set_Start(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Back
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Back
void GlobalNamespace::OVRInput::Button::_set_Back(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryShoulder
void GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryShoulder
void GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadUp
void GlobalNamespace::OVRInput::Button::_set_DpadUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadDown
void GlobalNamespace::OVRInput::Button::_set_DpadDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadLeft
void GlobalNamespace::OVRInput::Button::_set_DpadLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadRight
void GlobalNamespace::OVRInput::Button::_set_DpadRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Up
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Up
void GlobalNamespace::OVRInput::Button::_set_Up(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Down
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Down
void GlobalNamespace::OVRInput::Button::_set_Down(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Left
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Left
void GlobalNamespace::OVRInput::Button::_set_Left(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Right
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Right
void GlobalNamespace::OVRInput::Button::_set_Right(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Any
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Any
void GlobalNamespace::OVRInput::Button::_set_Any(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::Button::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton None
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton None
void GlobalNamespace::OVRInput::RawButton::_set_None(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton A
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton A
void GlobalNamespace::OVRInput::RawButton::_set_A(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton B
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton B
void GlobalNamespace::OVRInput::RawButton::_set_B(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton X
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton X
void GlobalNamespace::OVRInput::RawButton::_set_X(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Y
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Y
void GlobalNamespace::OVRInput::RawButton::_set_Y(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Start
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Start
void GlobalNamespace::OVRInput::RawButton::_set_Start(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Back
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Back
void GlobalNamespace::OVRInput::RawButton::_set_Back(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LShoulder
void GlobalNamespace::OVRInput::RawButton::_set_LShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_LTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RShoulder
void GlobalNamespace::OVRInput::RawButton::_set_RShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_RTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadUp
void GlobalNamespace::OVRInput::RawButton::_set_DpadUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadDown
void GlobalNamespace::OVRInput::RawButton::_set_DpadDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadLeft
void GlobalNamespace::OVRInput::RawButton::_set_DpadLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadRight
void GlobalNamespace::OVRInput::RawButton::_set_DpadRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Any
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Any
void GlobalNamespace::OVRInput::RawButton::_set_Any(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::RawButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch None
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch None
void GlobalNamespace::OVRInput::Touch::_set_None(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch One
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch One
void GlobalNamespace::OVRInput::Touch::_set_One(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Two
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Two
void GlobalNamespace::OVRInput::Touch::_set_Two(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Three
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Three
void GlobalNamespace::OVRInput::Touch::_set_Three(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Four
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Four
void GlobalNamespace::OVRInput::Touch::_set_Four(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Any
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Any
void GlobalNamespace::OVRInput::Touch::_set_Any(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::Touch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch None
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch None
void GlobalNamespace::OVRInput::RawTouch::_set_None(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch A
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch A
void GlobalNamespace::OVRInput::RawTouch::_set_A(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch B
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch B
void GlobalNamespace::OVRInput::RawTouch::_set_B(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch X
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch X
void GlobalNamespace::OVRInput::RawTouch::_set_X(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Y
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Y
void GlobalNamespace::OVRInput::RawTouch::_set_Y(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Any
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Any
void GlobalNamespace::OVRInput::RawTouch::_set_Any(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::RawTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch None
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch None
void GlobalNamespace::OVRInput::NearTouch::_set_None(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch Any
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch Any
void GlobalNamespace::OVRInput::NearTouch::_set_Any(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::NearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch None
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch None
void GlobalNamespace::OVRInput::RawNearTouch::_set_None(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch Any
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch Any
void GlobalNamespace::OVRInput::RawNearTouch::_set_Any(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::RawNearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D None
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D None
void GlobalNamespace::OVRInput::Axis1D::_set_None(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D Any
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D Any
void GlobalNamespace::OVRInput::Axis1D::_set_Any(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRInput::Axis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
