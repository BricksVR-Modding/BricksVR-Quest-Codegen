// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OwnedPhysicsBricksStore
#include "GlobalNamespace/OwnedPhysicsBricksStore.hpp"
// Including type: OwnedPhysicsBricksStore/<>c
#include "GlobalNamespace/OwnedPhysicsBricksStore_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BrickDestroyer
#include "GlobalNamespace/BrickDestroyer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OwnedPhysicsBricksStore _instance
::GlobalNamespace::OwnedPhysicsBricksStore* GlobalNamespace::OwnedPhysicsBricksStore::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OwnedPhysicsBricksStore*>("", "OwnedPhysicsBricksStore", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OwnedPhysicsBricksStore _instance
void GlobalNamespace::OwnedPhysicsBricksStore::_set__instance(::GlobalNamespace::OwnedPhysicsBricksStore* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OwnedPhysicsBricksStore", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxPhysicsBricks
int GlobalNamespace::OwnedPhysicsBricksStore::_get_MaxPhysicsBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::_get_MaxPhysicsBricks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OwnedPhysicsBricksStore", "MaxPhysicsBricks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxPhysicsBricks
void GlobalNamespace::OwnedPhysicsBricksStore::_set_MaxPhysicsBricks(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::_set_MaxPhysicsBricks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OwnedPhysicsBricksStore", "MaxPhysicsBricks", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ValueTuple`2<UnityEngine.GameObject,Normal.Realtime.RealtimeTransform>> _bricks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*>>*& GlobalNamespace::OwnedPhysicsBricksStore::dyn__bricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::dyn__bricks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bricks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Boolean> _bricksDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, bool>*& GlobalNamespace::OwnedPhysicsBricksStore::dyn__bricksDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::dyn__bricksDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bricksDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickDestroyer _brickDestroyer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickDestroyer*& GlobalNamespace::OwnedPhysicsBricksStore::dyn__brickDestroyer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::dyn__brickDestroyer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickDestroyer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickDestroyer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OwnedPhysicsBricksStore.GetInstance
::GlobalNamespace::OwnedPhysicsBricksStore* GlobalNamespace::OwnedPhysicsBricksStore::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OwnedPhysicsBricksStore", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OwnedPhysicsBricksStore*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OwnedPhysicsBricksStore.Start
void GlobalNamespace::OwnedPhysicsBricksStore::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OwnedPhysicsBricksStore.AddBrick
void GlobalNamespace::OwnedPhysicsBricksStore::AddBrick(::UnityEngine::GameObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: OwnedPhysicsBricksStore.RemoveDeadBricks
void GlobalNamespace::OwnedPhysicsBricksStore::RemoveDeadBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::RemoveDeadBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDeadBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OwnedPhysicsBricksStore.DeleteLastBrick
void GlobalNamespace::OwnedPhysicsBricksStore::DeleteLastBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::DeleteLastBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteLastBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OwnedPhysicsBricksStore/<>c
#include "GlobalNamespace/OwnedPhysicsBricksStore_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OwnedPhysicsBricksStore/<>c <>9
::GlobalNamespace::OwnedPhysicsBricksStore::$$c* GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OwnedPhysicsBricksStore::$$c*>("", "OwnedPhysicsBricksStore/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OwnedPhysicsBricksStore/<>c <>9
void GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9(::GlobalNamespace::OwnedPhysicsBricksStore::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OwnedPhysicsBricksStore/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.ValueTuple`2<UnityEngine.GameObject,Normal.Realtime.RealtimeTransform>> <>9__8_0
::System::Predicate_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*>>* GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*>>*>("", "OwnedPhysicsBricksStore/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.ValueTuple`2<UnityEngine.GameObject,Normal.Realtime.RealtimeTransform>> <>9__8_0
void GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9__8_0(::System::Predicate_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OwnedPhysicsBricksStore/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__8_1
::System::Func_2<::UnityEngine::GameObject*, bool>* GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, bool>*>("", "OwnedPhysicsBricksStore/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__8_1
void GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9__8_1(::System::Func_2<::UnityEngine::GameObject*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OwnedPhysicsBricksStore/<>c", "<>9__8_1", value)));
}
// Autogenerated method: OwnedPhysicsBricksStore/<>c..cctor
void GlobalNamespace::OwnedPhysicsBricksStore::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OwnedPhysicsBricksStore/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OwnedPhysicsBricksStore/<>c.<RemoveDeadBricks>b__8_0
bool GlobalNamespace::OwnedPhysicsBricksStore::$$c::$RemoveDeadBricks$b__8_0(::System::ValueTuple_2<::UnityEngine::GameObject*, ::Normal::Realtime::RealtimeTransform*> tuple) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::<RemoveDeadBricks>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveDeadBricks>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tuple)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tuple);
}
// Autogenerated method: OwnedPhysicsBricksStore/<>c.<RemoveDeadBricks>b__8_1
bool GlobalNamespace::OwnedPhysicsBricksStore::$$c::$RemoveDeadBricks$b__8_1(::UnityEngine::GameObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OwnedPhysicsBricksStore::$$c::<RemoveDeadBricks>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveDeadBricks>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PagedScroll
#include "GlobalNamespace/PagedScroll.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button upButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PagedScroll::dyn_upButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_upButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button downButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PagedScroll::dyn_downButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_downButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 itemsPerPage
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PagedScroll::dyn_itemsPerPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_itemsPerPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemsPerPage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject listObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PagedScroll::dyn_listObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_listObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform listObjectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PagedScroll::dyn_listObjectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_listObjectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listObjectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> listChildren
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::PagedScroll::dyn_listChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_listChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _page
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PagedScroll::dyn__page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn__page");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_page"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cachedChildCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PagedScroll::dyn__cachedChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn__cachedChildCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedChildCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fixedElementCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PagedScroll::dyn_fixedElementCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_fixedElementCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedElementCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usingFixedElementCount
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PagedScroll::dyn_usingFixedElementCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::dyn_usingFixedElementCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingFixedElementCount"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PagedScroll.get_LastPage
int GlobalNamespace::PagedScroll::get_LastPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::get_LastPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.SetFixedElementCount
void GlobalNamespace::PagedScroll::SetFixedElementCount(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::SetFixedElementCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFixedElementCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: PagedScroll.DisableButtons
void GlobalNamespace::PagedScroll::DisableButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::DisableButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.PageDown
void GlobalNamespace::PagedScroll::PageDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::PageDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.PageUp
void GlobalNamespace::PagedScroll::PageUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::PageUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.RepopulateListChildren
void GlobalNamespace::PagedScroll::RepopulateListChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::RepopulateListChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepopulateListChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.SetListChildrenVisibilities
void GlobalNamespace::PagedScroll::SetListChildrenVisibilities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::SetListChildrenVisibilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListChildrenVisibilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PagedScroll.SetPageButtonStates
void GlobalNamespace::PagedScroll::SetPageButtonStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PagedScroll::SetPageButtonStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPageButtonStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PalletteBrickCollider
#include "GlobalNamespace/PalletteBrickCollider.hpp"
// Including type: BrickPickerManager
#include "GlobalNamespace/BrickPickerManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BrickPickerManager brickPickerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickPickerManager*& GlobalNamespace::PalletteBrickCollider::dyn_brickPickerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PalletteBrickCollider::dyn_brickPickerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPickerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickPickerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 collisionIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PalletteBrickCollider::dyn_collisionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PalletteBrickCollider::dyn_collisionIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PalletteBrickCollider.OnTriggerEnter
void GlobalNamespace::PalletteBrickCollider::OnTriggerEnter(::UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PalletteBrickCollider::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PickupAllInteractor
#include "GlobalNamespace/PickupAllInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickCreator
#include "GlobalNamespace/PlacedBrickCreator.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NormalSessionManager _sessionManager
::GlobalNamespace::NormalSessionManager* GlobalNamespace::PlacedBrickCreator::_get__sessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickCreator::_get__sessionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NormalSessionManager*>("", "PlacedBrickCreator", "_sessionManager"));
}
// Autogenerated static field setter
// Set static field: static private NormalSessionManager _sessionManager
void GlobalNamespace::PlacedBrickCreator::_set__sessionManager(::GlobalNamespace::NormalSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickCreator::_set__sessionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickCreator", "_sessionManager", value));
}
// Autogenerated method: PlacedBrickCreator.CreateFromBrickObject
::UnityEngine::GameObject* GlobalNamespace::PlacedBrickCreator::CreateFromBrickObject(::GlobalNamespace::NormcoreRPC::Brick* brick, bool recalculateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickCreator::CreateFromBrickObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickCreator", "CreateFromBrickObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brick), ::il2cpp_utils::ExtractType(recalculateMesh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, brick, recalculateMesh);
}
// Autogenerated method: PlacedBrickCreator.CreateFromAttributes
::UnityEngine::GameObject* GlobalNamespace::PlacedBrickCreator::CreateFromAttributes(int matId, ::StringW type, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, ::StringW uuid, int color, bool usingNewColor, int headClientId, bool recalculateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickCreator::CreateFromAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickCreator", "CreateFromAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matId), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(usingNewColor), ::il2cpp_utils::ExtractType(headClientId), ::il2cpp_utils::ExtractType(recalculateMesh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matId, type, pos, rot, uuid, color, usingNewColor, headClientId, recalculateMesh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRenderer
#include "GlobalNamespace/PlacedBrickRenderer.hpp"
// Including type: PlacedBrickRendererManagerTwo
#include "GlobalNamespace/PlacedBrickRendererManagerTwo.hpp"
// Including type: BrickAttach
#include "GlobalNamespace/BrickAttach.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlacedBrickRendererManagerTwo placedBrickRendererManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlacedBrickRendererManagerTwo*& GlobalNamespace::PlacedBrickRenderer::dyn_placedBrickRendererManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn_placedBrickRendererManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "placedBrickRendererManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlacedBrickRendererManagerTwo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickAttach _attach
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickAttach*& GlobalNamespace::PlacedBrickRenderer::dyn__attach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn__attach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attach"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickAttach**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 instanceId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlacedBrickRenderer::dyn_instanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn_instanceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasStartRun
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRenderer::dyn__hasStartRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn__hasStartRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasStartRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasSubmitted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRenderer::dyn__hasSubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn__hasSubmitted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasSubmitted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usingHollowMesh
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRenderer::dyn__usingHollowMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::dyn__usingHollowMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usingHollowMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRenderer.Start
void GlobalNamespace::PlacedBrickRenderer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.OnEnable
void GlobalNamespace::PlacedBrickRenderer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.SubmitToRendererOnStart
void GlobalNamespace::PlacedBrickRenderer::SubmitToRendererOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::SubmitToRendererOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitToRendererOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.RerenderMeshes
void GlobalNamespace::PlacedBrickRenderer::RerenderMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::RerenderMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RerenderMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.RerenderBody
void GlobalNamespace::PlacedBrickRenderer::RerenderBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::RerenderBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RerenderBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.RerenderStuds
void GlobalNamespace::PlacedBrickRenderer::RerenderStuds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::RerenderStuds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RerenderStuds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRenderer.OnDisable
void GlobalNamespace::PlacedBrickRenderer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRenderer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManager
#include "GlobalNamespace/PlacedBrickRendererManager.hpp"
// Including type: PlacedBrickRendererManager/MeshToRender
#include "GlobalNamespace/PlacedBrickRendererManager_MeshToRender.hpp"
// Including type: PlacedBrickRendererManager/MeshRenderBucket
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucket.hpp"
// Including type: PlacedBrickRendererManager/MeshRenderBucketGroup
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucketGroup.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private PlacedBrickRendererManager _instance
::GlobalNamespace::PlacedBrickRendererManager* GlobalNamespace::PlacedBrickRendererManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlacedBrickRendererManager*>("", "PlacedBrickRendererManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private PlacedBrickRendererManager _instance
void GlobalNamespace::PlacedBrickRendererManager::_set__instance(::GlobalNamespace::PlacedBrickRendererManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManager", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ColorsKey
int GlobalNamespace::PlacedBrickRendererManager::_get_ColorsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_get_ColorsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlacedBrickRendererManager", "ColorsKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ColorsKey
void GlobalNamespace::PlacedBrickRendererManager::_set_ColorsKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_set_ColorsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManager", "ColorsKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaximumBatchSize
int GlobalNamespace::PlacedBrickRendererManager::_get_MaximumBatchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_get_MaximumBatchSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlacedBrickRendererManager", "MaximumBatchSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaximumBatchSize
void GlobalNamespace::PlacedBrickRendererManager::_set_MaximumBatchSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::_set_MaximumBatchSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManager", "MaximumBatchSize", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material brickMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PlacedBrickRendererManager::dyn_brickMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn_brickMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,PlacedBrickRendererManager/MeshRenderBucket> _meshToRenderBuckets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket*>*& GlobalNamespace::PlacedBrickRendererManager::dyn__meshToRenderBuckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__meshToRenderBuckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshToRenderBuckets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.LinkedListNode`1<PlacedBrickRendererManager/MeshToRender>> _brickUuidToNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>*>*& GlobalNamespace::PlacedBrickRendererManager::dyn__brickUuidToNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__brickUuidToNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickUuidToNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> _brickUuidToMesh
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>*& GlobalNamespace::PlacedBrickRendererManager::dyn__brickUuidToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__brickUuidToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickUuidToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,PlacedBrickRendererManager/MeshToRender[][]> _groupedBrickBucketCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>>>*& GlobalNamespace::PlacedBrickRendererManager::dyn__groupedBrickBucketCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__groupedBrickBucketCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupedBrickBucketCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::PlacedBrickRendererManager::dyn__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__materialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 _brickScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::PlacedBrickRendererManager::dyn__brickScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn__brickScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean renderingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRendererManager::dyn_renderingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::dyn_renderingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManager..cctor
void GlobalNamespace::PlacedBrickRendererManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickRendererManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager.GetInstance
::GlobalNamespace::PlacedBrickRendererManager* GlobalNamespace::PlacedBrickRendererManager::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickRendererManager", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlacedBrickRendererManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager.Awake
void GlobalNamespace::PlacedBrickRendererManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager.AddBrick
void GlobalNamespace::PlacedBrickRendererManager::AddBrick(::StringW uuid, ::UnityEngine::Transform* t, ::UnityEngine::Color color, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uuid, t, color, mesh);
}
// Autogenerated method: PlacedBrickRendererManager.AddBrick
void GlobalNamespace::PlacedBrickRendererManager::AddBrick(::StringW uuid, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, ::UnityEngine::Color color, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uuid, pos, rot, color, mesh);
}
// Autogenerated method: PlacedBrickRendererManager.RemoveBrick
void GlobalNamespace::PlacedBrickRendererManager::RemoveBrick(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::RemoveBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uuid);
}
// Autogenerated method: PlacedBrickRendererManager.Update
void GlobalNamespace::PlacedBrickRendererManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager.PerformBucketRender
void GlobalNamespace::PlacedBrickRendererManager::PerformBucketRender(::UnityEngine::Mesh* mesh, ::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket* renderBucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::PerformBucketRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformBucketRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(renderBucket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, renderBucket);
}
// Autogenerated method: PlacedBrickRendererManager.RenderBucketGroup
void GlobalNamespace::PlacedBrickRendererManager::RenderBucketGroup(::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup* renderBucketGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::RenderBucketGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBucketGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderBucketGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderBucketGroup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManager/MeshToRender
#include "GlobalNamespace/PlacedBrickRendererManager_MeshToRender.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Matrix4x4 TransformationMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& GlobalNamespace::PlacedBrickRendererManager::MeshToRender::dyn_TransformationMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshToRender::dyn_TransformationMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformationMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector4 Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::PlacedBrickRendererManager::MeshToRender::dyn_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshToRender::dyn_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManager/MeshRenderBucket
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucket.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: PlacedBrickRendererManager/MeshToRender
#include "GlobalNamespace/PlacedBrickRendererManager_MeshToRender.hpp"
// Including type: PlacedBrickRendererManager/MeshRenderBucketGroup
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucketGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh Mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn_Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.LinkedList`1<PlacedBrickRendererManager/MeshToRender> MeshesToRender
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::LinkedList_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>*& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn_MeshesToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn_MeshesToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MeshesToRender"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlacedBrickRendererManager/MeshRenderBucketGroup[] _meshRenderBucketGroups
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup*>& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn__meshRenderBucketGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn__meshRenderBucketGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderBucketGroups"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dirty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn__dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::dyn__dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucket.get_Count
int GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucket.AddMeshToRender
::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>* GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::AddMeshToRender(::GlobalNamespace::PlacedBrickRendererManager::MeshToRender* meshToRender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::AddMeshToRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMeshToRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshToRender)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::PlacedBrickRendererManager::MeshToRender*>*, false>(this, ___internal__method, meshToRender);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucket.MeshRenderBucketGroups
::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup*> GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::MeshRenderBucketGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::MeshRenderBucketGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MeshRenderBucketGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup*>, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucket.CalculateMeshRenderBucketGroups
void GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::CalculateMeshRenderBucketGroups(::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket* bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket::CalculateMeshRenderBucketGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMeshRenderBucketGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bucket);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManager/MeshRenderBucketGroup
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucketGroup.hpp"
// Including type: PlacedBrickRendererManager/MeshRenderBucket
#include "GlobalNamespace/PlacedBrickRendererManager_MeshRenderBucket.hpp"
// Including type: PlacedBrickRendererManager/MeshToRender
#include "GlobalNamespace/PlacedBrickRendererManager_MeshToRender.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlacedBrickRendererManager/MeshRenderBucket Bucket
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket*& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_Bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_Bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bucket"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Matrix4x4[] TransformationMatrices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Matrix4x4>& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_TransformationMatrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_TransformationMatrices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformationMatrices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector4[] Colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucketGroup.get_Count
int GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManager/MeshRenderBucketGroup.AddMeshToRender
void GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::AddMeshToRender(::GlobalNamespace::PlacedBrickRendererManager::MeshToRender* meshToRender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManager::MeshRenderBucketGroup::AddMeshToRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMeshToRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshToRender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshToRender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManagerTwo
#include "GlobalNamespace/PlacedBrickRendererManagerTwo.hpp"
// Including type: PlacedBrickRendererManagerTwo/MeshRendererQueue
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_MeshRendererQueue.hpp"
// Including type: PlacedBrickRendererManagerTwo/RendererBufferRecycler
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RendererBufferRecycler.hpp"
// Including type: PlacedBrickRendererManagerTwo/RenderQueueGroup
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RenderQueueGroup.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private PlacedBrickRendererManagerTwo _instance
::GlobalNamespace::PlacedBrickRendererManagerTwo* GlobalNamespace::PlacedBrickRendererManagerTwo::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlacedBrickRendererManagerTwo*>("", "PlacedBrickRendererManagerTwo", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private PlacedBrickRendererManagerTwo _instance
void GlobalNamespace::PlacedBrickRendererManagerTwo::_set__instance(::GlobalNamespace::PlacedBrickRendererManagerTwo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManagerTwo", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ColorKey
int GlobalNamespace::PlacedBrickRendererManagerTwo::_get_ColorKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_get_ColorKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlacedBrickRendererManagerTwo", "ColorKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ColorKey
void GlobalNamespace::PlacedBrickRendererManagerTwo::_set_ColorKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_set_ColorKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManagerTwo", "ColorKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaximumBatchSize
int GlobalNamespace::PlacedBrickRendererManagerTwo::_get_MaximumBatchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_get_MaximumBatchSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlacedBrickRendererManagerTwo", "MaximumBatchSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaximumBatchSize
void GlobalNamespace::PlacedBrickRendererManagerTwo::_set_MaximumBatchSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::_set_MaximumBatchSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlacedBrickRendererManagerTwo", "MaximumBatchSize", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material brickMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn_brickMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn_brickMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlacedBrickRendererManagerTwo/RendererBufferRecycler _rendererBufferRecycler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler*& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__rendererBufferRecycler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__rendererBufferRecycler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererBufferRecycler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,PlacedBrickRendererManagerTwo/MeshRendererQueue> _meshToRendererQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*>*& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__meshToRendererQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__meshToRendererQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshToRendererQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,PlacedBrickRendererManagerTwo/MeshRendererQueue> _objectHashCodesToRendererQueues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*>*& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__objectHashCodesToRendererQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__objectHashCodesToRendererQueues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectHashCodesToRendererQueues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<PlacedBrickRendererManagerTwo/MeshRendererQueue,System.Collections.Generic.Dictionary`2<System.Int32,System.Boolean>> _objectsToBeRemoved
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*, ::System::Collections::Generic::Dictionary_2<int, bool>*>*& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__objectsToBeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__objectsToBeRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsToBeRemoved"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*, ::System::Collections::Generic::Dictionary_2<int, bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 _brickScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__brickScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn__brickScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rendering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlacedBrickRendererManagerTwo::dyn_rendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::dyn_rendering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rendering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManagerTwo..cctor
void GlobalNamespace::PlacedBrickRendererManagerTwo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickRendererManagerTwo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.GetInstance
::GlobalNamespace::PlacedBrickRendererManagerTwo* GlobalNamespace::PlacedBrickRendererManagerTwo::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickRendererManagerTwo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlacedBrickRendererManagerTwo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.AddBrick
void GlobalNamespace::PlacedBrickRendererManagerTwo::AddBrick(int objectInstanceId, ::UnityEngine::Transform* t, ::UnityEngine::Color color, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectInstanceId), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectInstanceId, t, color, mesh);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.RemoveBrick
void GlobalNamespace::PlacedBrickRendererManagerTwo::RemoveBrick(int objectInstanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RemoveBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectInstanceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectInstanceId);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.RemoveBrickSynchronously
void GlobalNamespace::PlacedBrickRendererManagerTwo::RemoveBrickSynchronously(int objectInstanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RemoveBrickSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBrickSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectInstanceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectInstanceId);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.HasObjectWithInstanceId
bool GlobalNamespace::PlacedBrickRendererManagerTwo::HasObjectWithInstanceId(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::HasObjectWithInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasObjectWithInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: PlacedBrickRendererManagerTwo.Update
void GlobalNamespace::PlacedBrickRendererManagerTwo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManagerTwo/MeshRendererQueue
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_MeshRendererQueue.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlacedBrickRendererManagerTwo/RenderQueueGroup
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RenderQueueGroup.hpp"
// Including type: PlacedBrickRendererManagerTwo/RendererBufferRecycler
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RendererBufferRecycler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh Mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn_Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<PlacedBrickRendererManagerTwo/RenderQueueGroup> _renderQueueGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>*& GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__renderQueueGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__renderQueueGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderQueueGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.MaterialPropertyBlock _materialPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__materialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlacedBrickRendererManagerTwo/RendererBufferRecycler _rendererBufferRecycler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler*& GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__rendererBufferRecycler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::dyn__rendererBufferRecycler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererBufferRecycler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/MeshRendererQueue.AddMeshToRender
void GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::AddMeshToRender(::UnityEngine::Matrix4x4 transformationMatrix, ::UnityEngine::Vector4 color, int objectHashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::AddMeshToRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMeshToRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformationMatrix), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(objectHashCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformationMatrix, color, objectHashCode);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/MeshRendererQueue.Render
void GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::Render(::System::Collections::Generic::Dictionary_2<int, bool>* objectsToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectsToRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectsToRemove);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/MeshRendererQueue.RenderNthGroup
void GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RenderNthGroup(::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup* renderQueueGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RenderNthGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderNthGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderQueueGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderQueueGroup);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/MeshRendererQueue.RemoveObjectFromQueue
void GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RemoveObjectFromQueue(int objectInstanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RemoveObjectFromQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObjectFromQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectInstanceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectInstanceId);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/MeshRendererQueue.CleanRenderQueue
void GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::CleanRenderQueue(::System::Collections::Generic::Dictionary_2<int, bool>* objectsToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::CleanRenderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanRenderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectsToRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectsToRemove);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManagerTwo/RendererBufferRecycler
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RendererBufferRecycler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlacedBrickRendererManagerTwo/RenderQueueGroup
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RenderQueueGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<PlacedBrickRendererManagerTwo/RenderQueueGroup> _availableRenderQueueGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>*& GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::dyn__availableRenderQueueGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::dyn__availableRenderQueueGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_availableRenderQueueGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RendererBufferRecycler.RentRenderQueueGroup
::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup* GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::RentRenderQueueGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::RentRenderQueueGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RentRenderQueueGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RendererBufferRecycler.ReturnRenderQueueGroupToPool
void GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::ReturnRenderQueueGroupToPool(::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup* renderQueueGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler::ReturnRenderQueueGroupToPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnRenderQueueGroupToPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderQueueGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderQueueGroup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlacedBrickRendererManagerTwo/RenderQueueGroup
#include "GlobalNamespace/PlacedBrickRendererManagerTwo_RenderQueueGroup.hpp"
// Including type: System.ValueTuple`3
#include "System/ValueTuple_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4[] TransformationMatrices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Matrix4x4>& GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_TransformationMatrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_TransformationMatrices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformationMatrices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4[] Colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] ObjectHashCodes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_ObjectHashCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_ObjectHashCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectHashCodes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Length
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::dyn_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RenderQueueGroup.AddObjectToRender
bool GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::AddObjectToRender(::UnityEngine::Matrix4x4 transformationMatrix, ::UnityEngine::Vector4 color, int objectHashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::AddObjectToRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectToRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformationMatrix), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(objectHashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transformationMatrix, color, objectHashCode);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RenderQueueGroup.HasMoreCapacity
bool GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::HasMoreCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::HasMoreCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasMoreCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RenderQueueGroup.Pop
::System::ValueTuple_3<::UnityEngine::Matrix4x4, ::UnityEngine::Vector4, int> GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_3<::UnityEngine::Matrix4x4, ::UnityEngine::Vector4, int>, false>(this, ___internal__method);
}
// Autogenerated method: PlacedBrickRendererManagerTwo/RenderQueueGroup.CreateNewRenderQueueGroup
::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup* GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::CreateNewRenderQueueGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup::CreateNewRenderQueueGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlacedBrickRendererManagerTwo/RenderQueueGroup", "CreateNewRenderQueueGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerListItem
#include "GlobalNamespace/PlayerListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: SyncVoiceWithSettings
#include "GlobalNamespace/SyncVoiceWithSettings.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: RoomOwnershipSync
#include "GlobalNamespace/RoomOwnershipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerListItem::dyn_nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ownerCrown
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlayerListItem::dyn_ownerCrown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_ownerCrown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerCrown"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image micImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::PlayerListItem::dyn_micImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_micImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button micButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PlayerListItem::dyn_micButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_micButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite micMutedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::PlayerListItem::dyn_micMutedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_micMutedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micMutedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite micEnabledSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::PlayerListItem::dyn_micEnabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn_micEnabledSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micEnabledSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncVoiceWithSettings _syncVoiceWithSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SyncVoiceWithSettings*& GlobalNamespace::PlayerListItem::dyn__syncVoiceWithSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::dyn__syncVoiceWithSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncVoiceWithSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SyncVoiceWithSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerListItem.Initialize
void GlobalNamespace::PlayerListItem::Initialize(::Normal::Realtime::RealtimeAvatar* avatar, ::GlobalNamespace::RoomOwnershipSync* ownershipSync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(ownershipSync)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar, ownershipSync);
}
// Autogenerated method: PlayerListItem.MuteButtonPressed
void GlobalNamespace::PlayerListItem::MuteButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::MuteButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerListItem.SetMicrophoneSprite
void GlobalNamespace::PlayerListItem::SetMicrophoneSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerListItem::SetMicrophoneSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicrophoneSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerMenuManager
#include "GlobalNamespace/PlayerMenuManager.hpp"
// Including type: PlayerMenuManager/<>c
#include "GlobalNamespace/PlayerMenuManager_--c.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: RoomOwnershipSync
#include "GlobalNamespace/RoomOwnershipSync.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatarManager avatarManager
[[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeAvatarManager*& GlobalNamespace::PlayerMenuManager::dyn_avatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn_avatarManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarManager"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerEntryPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlayerMenuManager::dyn_playerEntryPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn_playerEntryPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerEntryPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RoomOwnershipSync ownershipSync
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomOwnershipSync*& GlobalNamespace::PlayerMenuManager::dyn_ownershipSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn_ownershipSync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownershipSync"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomOwnershipSync**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Normal.Realtime.RealtimeAvatar> users
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeAvatar*>*& GlobalNamespace::PlayerMenuManager::dyn_users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn_users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "users"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeAvatar*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject listParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlayerMenuManager::dyn_listParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn_listParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _listParentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PlayerMenuManager::dyn__listParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::dyn__listParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerMenuManager.Awake
void GlobalNamespace::PlayerMenuManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.OnEnable
void GlobalNamespace::PlayerMenuManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.OnDisable
void GlobalNamespace::PlayerMenuManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.RefreshPlayerList
void GlobalNamespace::PlayerMenuManager::RefreshPlayerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::RefreshPlayerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPlayerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.RepopulateUserList
void GlobalNamespace::PlayerMenuManager::RepopulateUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::RepopulateUserList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepopulateUserList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.RebuildUI
void GlobalNamespace::PlayerMenuManager::RebuildUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::RebuildUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMenuManager.UserJoined
void GlobalNamespace::PlayerMenuManager::UserJoined(::Normal::Realtime::RealtimeAvatarManager* _, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::UserJoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserJoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(isLocalAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _, avatar, isLocalAvatar);
}
// Autogenerated method: PlayerMenuManager.UserQuit
void GlobalNamespace::PlayerMenuManager::UserQuit(::Normal::Realtime::RealtimeAvatarManager* _, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::UserQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(isLocalAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _, avatar, isLocalAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerMenuManager/<>c
#include "GlobalNamespace/PlayerMenuManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PlayerMenuManager/<>c <>9
::GlobalNamespace::PlayerMenuManager::$$c* GlobalNamespace::PlayerMenuManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerMenuManager::$$c*>("", "PlayerMenuManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PlayerMenuManager/<>c <>9
void GlobalNamespace::PlayerMenuManager::$$c::_set_$$9(::GlobalNamespace::PlayerMenuManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PlayerMenuManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Normal.Realtime.RealtimeAvatar,System.Boolean> <>9__10_0
::System::Func_2<::Normal::Realtime::RealtimeAvatar*, bool>* GlobalNamespace::PlayerMenuManager::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Normal::Realtime::RealtimeAvatar*, bool>*>("", "PlayerMenuManager/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Normal.Realtime.RealtimeAvatar,System.Boolean> <>9__10_0
void GlobalNamespace::PlayerMenuManager::$$c::_set_$$9__10_0(::System::Func_2<::Normal::Realtime::RealtimeAvatar*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PlayerMenuManager/<>c", "<>9__10_0", value)));
}
// Autogenerated method: PlayerMenuManager/<>c..cctor
void GlobalNamespace::PlayerMenuManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerMenuManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayerMenuManager/<>c.<RepopulateUserList>b__10_0
bool GlobalNamespace::PlayerMenuManager::$$c::$RepopulateUserList$b__10_0(::Normal::Realtime::RealtimeAvatar* avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::$$c::<RepopulateUserList>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RepopulateUserList>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, avatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PositionFloorConnectorsUnderHand
#include "GlobalNamespace/PositionFloorConnectorsUnderHand.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject hand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PositionFloorConnectorsUnderHand::dyn_hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionFloorConnectorsUnderHand::dyn_hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _connectorInterval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PositionFloorConnectorsUnderHand::dyn__connectorInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionFloorConnectorsUnderHand::dyn__connectorInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectorInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PositionFloorConnectorsUnderHand.Start
void GlobalNamespace::PositionFloorConnectorsUnderHand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionFloorConnectorsUnderHand::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionFloorConnectorsUnderHand.Update
void GlobalNamespace::PositionFloorConnectorsUnderHand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionFloorConnectorsUnderHand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrecisionAttachable
#include "GlobalNamespace/PrecisionAttachable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InteractablePlacedBrick
#include "GlobalNamespace/InteractablePlacedBrick.hpp"
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InteractablePlacedBrick.Interact
void GlobalNamespace::InteractablePlacedBrick::Interact(::GlobalNamespace::QuickInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractablePlacedBrick::Interact");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::QuickInteractable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InteractableSpawner
#include "GlobalNamespace/InteractableSpawner.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Color
int GlobalNamespace::InteractableSpawner::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "InteractableSpawner", "Color"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Color
void GlobalNamespace::InteractableSpawner::_set_Color(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InteractableSpawner", "Color", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager interactionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& GlobalNamespace::InteractableSpawner::dyn_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn_interactionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String brickPrefabName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InteractableSpawner::dyn_brickPrefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn_brickPrefabName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPrefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InteractableSpawner::dyn_materialId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn_materialId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material inGameMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::InteractableSpawner::dyn_inGameMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn_inGameMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject model
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::InteractableSpawner::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn_model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _brickRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::InteractableSpawner::dyn__brickRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::dyn__brickRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InteractableSpawner..cctor
void GlobalNamespace::InteractableSpawner::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InteractableSpawner", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: InteractableSpawner.Start
void GlobalNamespace::InteractableSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InteractableSpawner.CreateBrick
::UnityEngine::GameObject* GlobalNamespace::InteractableSpawner::CreateBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::CreateBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: InteractableSpawner.Interact
void GlobalNamespace::InteractableSpawner::Interact(::GlobalNamespace::QuickInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteractableSpawner::Interact");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::QuickInteractable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickInteractable
#include "GlobalNamespace/QuickInteractable.hpp"
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: QuickInteractable.Interact
void GlobalNamespace::QuickInteractable::Interact(::GlobalNamespace::QuickInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractable::Interact");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::QuickInteractable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
// Including type: QuickInteractor/<>c
#include "GlobalNamespace/QuickInteractor_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: QuickInteractable
#include "GlobalNamespace/QuickInteractable.hpp"
// Including type: BrickHover
#include "GlobalNamespace/BrickHover.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::QuickInteractor::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask interactionMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::QuickInteractor::dyn_interactionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn_interactionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,QuickInteractable> _hoveredObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::QuickInteractable*>*& GlobalNamespace::QuickInteractor::dyn__hoveredObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__hoveredObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::QuickInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Button _trigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& GlobalNamespace::QuickInteractor::dyn__trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__trigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _tempHoveredObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::QuickInteractor::dyn__tempHoveredObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__tempHoveredObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempHoveredObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private QuickInteractable _tempHoveredInteractable
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickInteractable*& GlobalNamespace::QuickInteractor::dyn__tempHoveredInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__tempHoveredInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempHoveredInteractable"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickHover _brickHover
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickHover*& GlobalNamespace::QuickInteractor::dyn__brickHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__brickHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickHover"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickHover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _debugGrabEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::QuickInteractor::dyn__debugGrabEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__debugGrabEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debugGrabEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interacting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::QuickInteractor::dyn__interacting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::dyn__interacting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interacting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickInteractor.Awake
void GlobalNamespace::QuickInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickInteractor.OnTriggerEnter
void GlobalNamespace::QuickInteractor::OnTriggerEnter(::UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: QuickInteractor.OnTriggerExit
void GlobalNamespace::QuickInteractor::OnTriggerExit(::UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: QuickInteractor.Update
void GlobalNamespace::QuickInteractor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickInteractor.CleanHoveredList
void GlobalNamespace::QuickInteractor::CleanHoveredList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::CleanHoveredList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanHoveredList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickInteractor.HoveredObjects
::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::QuickInteractable*>* GlobalNamespace::QuickInteractor::HoveredObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::HoveredObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoveredObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::QuickInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: QuickInteractor.Contains
bool GlobalNamespace::QuickInteractor::Contains(::UnityEngine::LayerMask mask, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuickInteractor", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask, layer);
}
// Autogenerated method: QuickInteractor.<Update>b__12_0
float GlobalNamespace::QuickInteractor::$Update$b__12_0(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::GameObject*, ::GlobalNamespace::QuickInteractable*> o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::<Update>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, o);
}
// Autogenerated method: QuickInteractor.<CleanHoveredList>b__13_1
void GlobalNamespace::QuickInteractor::$CleanHoveredList$b__13_1(::UnityEngine::GameObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::<CleanHoveredList>b__13_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CleanHoveredList>b__13_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickInteractor/<>c
#include "GlobalNamespace/QuickInteractor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly QuickInteractor/<>c <>9
::GlobalNamespace::QuickInteractor::$$c* GlobalNamespace::QuickInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::QuickInteractor::$$c*>("", "QuickInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly QuickInteractor/<>c <>9
void GlobalNamespace::QuickInteractor::$$c::_set_$$9(::GlobalNamespace::QuickInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__13_0
::System::Func_2<::UnityEngine::GameObject*, bool>* GlobalNamespace::QuickInteractor::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, bool>*>("", "QuickInteractor/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__13_0
void GlobalNamespace::QuickInteractor::$$c::_set_$$9__13_0(::System::Func_2<::UnityEngine::GameObject*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickInteractor/<>c", "<>9__13_0", value)));
}
// Autogenerated method: QuickInteractor/<>c..cctor
void GlobalNamespace::QuickInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuickInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: QuickInteractor/<>c.<CleanHoveredList>b__13_0
bool GlobalNamespace::QuickInteractor::$$c::$CleanHoveredList$b__13_0(::UnityEngine::GameObject* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickInteractor::$$c::<CleanHoveredList>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CleanHoveredList>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RangeSelector
#include "GlobalNamespace/RangeSelector.hpp"
// Including type: RangeSelector/SerializableIntEvent
#include "GlobalNamespace/RangeSelector_SerializableIntEvent.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::RangeSelector::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 min
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RangeSelector::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 max
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RangeSelector::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RangeSelector::dyn__currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::dyn__currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RangeSelector/SerializableIntEvent ValueUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RangeSelector::SerializableIntEvent*& GlobalNamespace::RangeSelector::dyn_ValueUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::dyn_ValueUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValueUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RangeSelector::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RangeSelector.Next
void GlobalNamespace::RangeSelector::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RangeSelector.Previous
void GlobalNamespace::RangeSelector::Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::Previous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Previous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RangeSelector.SetValue
void GlobalNamespace::RangeSelector::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RangeSelector.SendValueUpdatedEvent
void GlobalNamespace::RangeSelector::SendValueUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::SendValueUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValueUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RangeSelector.UpdateUIText
void GlobalNamespace::RangeSelector::UpdateUIText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeSelector::UpdateUIText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUIText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RangeSelector/SerializableIntEvent
#include "GlobalNamespace/RangeSelector_SerializableIntEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecentRoomsManager
#include "GlobalNamespace/RecentRoomsManager.hpp"
// Including type: RecentRoomsManager/<>c__DisplayClass17_0
#include "GlobalNamespace/RecentRoomsManager_--c__DisplayClass17_0.hpp"
// Including type: RecentRoomsManager/<>c__DisplayClass17_1
#include "GlobalNamespace/RecentRoomsManager_--c__DisplayClass17_1.hpp"
// Including type: RecentRoomsManager/<LoadRoomNames>d__19
#include "GlobalNamespace/RecentRoomsManager_-LoadRoomNames-d__19.hpp"
// Including type: RecentRoomsManager/<LoadRoomName>d__20
#include "GlobalNamespace/RecentRoomsManager_-LoadRoomName-d__20.hpp"
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: PagedScroll
#include "GlobalNamespace/PagedScroll.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NumberOfRoomsToLoad
int GlobalNamespace::RecentRoomsManager::_get_NumberOfRoomsToLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::_get_NumberOfRoomsToLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RecentRoomsManager", "NumberOfRoomsToLoad"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumberOfRoomsToLoad
void GlobalNamespace::RecentRoomsManager::_set_NumberOfRoomsToLoad(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::_set_NumberOfRoomsToLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecentRoomsManager", "NumberOfRoomsToLoad", value));
}
// Autogenerated instance field getter
// Get instance field: public UserSettings userSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings*& GlobalNamespace::RecentRoomsManager::dyn_userSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_userSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager normalSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NormalSessionManager*& GlobalNamespace::RecentRoomsManager::dyn_normalSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_normalSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject noRecentRoomsObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RecentRoomsManager::dyn_noRecentRoomsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_noRecentRoomsObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noRecentRoomsObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject recentRoomsObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RecentRoomsManager::dyn_recentRoomsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRoomsObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRoomsObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject recentRoomPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RecentRoomsManager::dyn_recentRoomPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRoomPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRoomPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject loadingPage
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RecentRoomsManager::dyn_loadingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_loadingPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initializedRecentRoomsList
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecentRoomsManager::dyn__initializedRecentRoomsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn__initializedRecentRoomsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializedRecentRoomsList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo _textInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& GlobalNamespace::RecentRoomsManager::dyn__textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn__textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] recentRooms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::RecentRoomsManager::dyn_recentRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRooms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRooms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI[] recentRoomsRoomCodes
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::RecentRoomsManager::dyn_recentRoomsRoomCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRoomsRoomCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRoomsRoomCodes"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI[] recentRoomsNames
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::RecentRoomsManager::dyn_recentRoomsNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRoomsNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRoomsNames"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI[] recentRoomsBrickCounts
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::RecentRoomsManager::dyn_recentRoomsBrickCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_recentRoomsBrickCounts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recentRoomsBrickCounts"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PagedScroll pagedScroll
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PagedScroll*& GlobalNamespace::RecentRoomsManager::dyn_pagedScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::dyn_pagedScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pagedScroll"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PagedScroll**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecentRoomsManager.OnEnable
void GlobalNamespace::RecentRoomsManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager.RenderNoRecentRooms
void GlobalNamespace::RecentRoomsManager::RenderNoRecentRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::RenderNoRecentRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderNoRecentRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager.RenderRecentRoomsList
void GlobalNamespace::RecentRoomsManager::RenderRecentRoomsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::RenderRecentRoomsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderRecentRoomsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager.InitializeRecentRoomsList
void GlobalNamespace::RecentRoomsManager::InitializeRecentRoomsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::InitializeRecentRoomsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeRecentRoomsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager.ButtonClicked
void GlobalNamespace::RecentRoomsManager::ButtonClicked(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::ButtonClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName);
}
// Autogenerated method: RecentRoomsManager.LoadRoomNames
::System::Collections::IEnumerator* GlobalNamespace::RecentRoomsManager::LoadRoomNames(::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>* roomNamesToLoad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::LoadRoomNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRoomNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomNamesToLoad)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, roomNamesToLoad);
}
// Autogenerated method: RecentRoomsManager.LoadRoomName
::System::Collections::IEnumerator* GlobalNamespace::RecentRoomsManager::LoadRoomName(::StringW roomCode, ::TMPro::TextMeshProUGUI* roomNameText, ::TMPro::TextMeshProUGUI* brickCountLabel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::LoadRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomCode), ::il2cpp_utils::ExtractType(roomNameText), ::il2cpp_utils::ExtractType(brickCountLabel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, roomCode, roomNameText, brickCountLabel);
}
// Autogenerated method: RecentRoomsManager.BrickStringFromResponse
::StringW GlobalNamespace::RecentRoomsManager::BrickStringFromResponse(::StringW brickCountResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::BrickStringFromResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BrickStringFromResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickCountResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, brickCountResponse);
}
// Autogenerated method: RecentRoomsManager.TitleCase
::StringW GlobalNamespace::RecentRoomsManager::TitleCase(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::TitleCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TitleCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated method: RecentRoomsManager.FormatRoomNameAnyLenNoMono
::StringW GlobalNamespace::RecentRoomsManager::FormatRoomNameAnyLenNoMono(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::FormatRoomNameAnyLenNoMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatRoomNameAnyLenNoMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecentRoomsManager/<>c__DisplayClass17_0
#include "GlobalNamespace/RecentRoomsManager_--c__DisplayClass17_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RecentRoomsManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecentRoomsManager*& GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecentRoomsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] rooms
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0::dyn_rooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0::dyn_rooms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rooms"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecentRoomsManager/<>c__DisplayClass17_1
#include "GlobalNamespace/RecentRoomsManager_--c__DisplayClass17_1.hpp"
// Including type: RecentRoomsManager/<>c__DisplayClass17_0
#include "GlobalNamespace/RecentRoomsManager_--c__DisplayClass17_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 i1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::dyn_i1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::dyn_i1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecentRoomsManager/<>c__DisplayClass17_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0*& GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecentRoomsManager/<>c__DisplayClass17_1.<InitializeRecentRoomsList>b__0
void GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::$InitializeRecentRoomsList$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1::<InitializeRecentRoomsList>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeRecentRoomsList>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RecentRoomsManager/<LoadRoomNames>d__19
#include "GlobalNamespace/RecentRoomsManager_-LoadRoomNames-d__19.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.ValueTuple`2<System.String,System.ValueTuple`2<TMPro.TextMeshProUGUI,TMPro.TextMeshProUGUI>>> roomNamesToLoad
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>*& GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_roomNamesToLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_roomNamesToLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomNamesToLoad"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecentRoomsManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecentRoomsManager*& GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecentRoomsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<System.ValueTuple`2<System.String,System.ValueTuple`2<TMPro.TextMeshProUGUI,TMPro.TextMeshProUGUI>>> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>::Enumerator& GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.System.IDisposable.Dispose
void GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.MoveNext
bool GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.<>m__Finally1
void GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomNames>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RecentRoomsManager/<LoadRoomName>d__20
#include "GlobalNamespace/RecentRoomsManager_-LoadRoomName-d__20.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: CoroutineWithData
#include "GlobalNamespace/CoroutineWithData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecentRoomsManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecentRoomsManager*& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecentRoomsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_roomCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_roomCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI roomNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_roomNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_roomNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI brickCountLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_brickCountLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_brickCountLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickCountLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CoroutineWithData <cd>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CoroutineWithData*& GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$cd$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::dyn_$cd$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cd>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomName>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomName>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomName>d__20.System.IDisposable.Dispose
void GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomName>d__20.MoveNext
bool GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecentRoomsManager/<LoadRoomName>d__20.System.Collections.IEnumerator.Reset
void GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectTransformExtensions
#include "GlobalNamespace/RectTransformExtensions.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RectTransformExtensions.SetLeft
::UnityEngine::RectTransform* GlobalNamespace::RectTransformExtensions::SetLeft(::UnityEngine::RectTransform* rt, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectTransformExtensions::SetLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectTransformExtensions", "SetLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, x);
}
// Autogenerated method: RectTransformExtensions.SetRight
::UnityEngine::RectTransform* GlobalNamespace::RectTransformExtensions::SetRight(::UnityEngine::RectTransform* rt, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectTransformExtensions::SetRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectTransformExtensions", "SetRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, x);
}
// Autogenerated method: RectTransformExtensions.GetRight
float GlobalNamespace::RectTransformExtensions::GetRight(::UnityEngine::RectTransform* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectTransformExtensions::GetRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectTransformExtensions", "GetRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt);
}
// Autogenerated method: RectTransformExtensions.SetBottom
::UnityEngine::RectTransform* GlobalNamespace::RectTransformExtensions::SetBottom(::UnityEngine::RectTransform* rt, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectTransformExtensions::SetBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectTransformExtensions", "SetBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, y);
}
// Autogenerated method: RectTransformExtensions.SetTop
::UnityEngine::RectTransform* GlobalNamespace::RectTransformExtensions::SetTop(::UnityEngine::RectTransform* rt, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectTransformExtensions::SetTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectTransformExtensions", "SetTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReleaseVersion
#include "GlobalNamespace/ReleaseVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Major
int GlobalNamespace::ReleaseVersion::_get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_get_Major");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ReleaseVersion", "Major"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Major
void GlobalNamespace::ReleaseVersion::_set_Major(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_set_Major");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReleaseVersion", "Major", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Minor
int GlobalNamespace::ReleaseVersion::_get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_get_Minor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ReleaseVersion", "Minor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Minor
void GlobalNamespace::ReleaseVersion::_set_Minor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_set_Minor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReleaseVersion", "Minor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Patch
int GlobalNamespace::ReleaseVersion::_get_Patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_get_Patch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ReleaseVersion", "Patch"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Patch
void GlobalNamespace::ReleaseVersion::_set_Patch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::_set_Patch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReleaseVersion", "Patch", value));
}
// Autogenerated method: ReleaseVersion..cctor
void GlobalNamespace::ReleaseVersion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ReleaseVersion", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ReleaseVersion.VersionString
::StringW GlobalNamespace::ReleaseVersion::VersionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::VersionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ReleaseVersion", "VersionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ReleaseVersion.MinorString
::StringW GlobalNamespace::ReleaseVersion::MinorString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseVersion::MinorString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ReleaseVersion", "MinorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetCenterOfMass
#include "GlobalNamespace/ResetCenterOfMass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResetCenterOfMass.Start
void GlobalNamespace::ResetCenterOfMass::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetCenterOfMass::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResetCenterOfMass.Update
void GlobalNamespace::ResetCenterOfMass::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetCenterOfMass::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReverseNormals
#include "GlobalNamespace/ReverseNormals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ReverseNormals.Start
void GlobalNamespace::ReverseNormals::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReverseNormals::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomCodeScreen
#include "GlobalNamespace/RoomCodeScreen.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::RoomCodeScreen::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager normalSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NormalSessionManager*& GlobalNamespace::RoomCodeScreen::dyn_normalSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::dyn_normalSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject loadingScreen
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RoomCodeScreen::dyn_loadingScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::dyn_loadingScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingScreen"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _code
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RoomCodeScreen::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomCodeScreen.JoinRoom
void GlobalNamespace::RoomCodeScreen::JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomCodeScreen.SetRoomCode
void GlobalNamespace::RoomCodeScreen::SetRoomCode(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::SetRoomCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoomCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: RoomCodeScreen.FormatRoomName
::StringW GlobalNamespace::RoomCodeScreen::FormatRoomName(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomCodeScreen::FormatRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomOwnershipModel
#include "GlobalNamespace/RoomOwnershipModel.hpp"
// Including type: RoomOwnershipModel/PropertyChangedHandler`1
#include "GlobalNamespace/RoomOwnershipModel_PropertyChangedHandler_1.hpp"
// Including type: RoomOwnershipModel/PropertyID
#include "GlobalNamespace/RoomOwnershipModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _locked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomOwnershipModel::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lowGravity
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomOwnershipModel::dyn__lowGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__lowGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _blockedFromMovingThroughBricks
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomOwnershipModel::dyn__blockedFromMovingThroughBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__blockedFromMovingThroughBricks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockedFromMovingThroughBricks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RoomOwnershipModel/PropertyChangedHandler`1<System.Boolean> lockedDidChange
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn_lockedDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn_lockedDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockedDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RoomOwnershipModel/PropertyChangedHandler`1<System.Boolean> lowGravityDidChange
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn_lowGravityDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn_lowGravityDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowGravityDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RoomOwnershipModel/PropertyChangedHandler`1<System.Boolean> blockedFromMovingThroughBricksDidChange
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn_blockedFromMovingThroughBricksDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn_blockedFromMovingThroughBricksDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockedFromMovingThroughBricksDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _lockedProperty
[[deprecated("Use field access instead!")]] ::Normal::Realtime::ReliableProperty_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn__lockedProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__lockedProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockedProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _lowGravityProperty
[[deprecated("Use field access instead!")]] ::Normal::Realtime::ReliableProperty_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn__lowGravityProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__lowGravityProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowGravityProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _blockedFromMovingThroughBricksProperty
[[deprecated("Use field access instead!")]] ::Normal::Realtime::ReliableProperty_1<bool>*& GlobalNamespace::RoomOwnershipModel::dyn__blockedFromMovingThroughBricksProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::dyn__blockedFromMovingThroughBricksProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockedFromMovingThroughBricksProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomOwnershipModel.get_locked
bool GlobalNamespace::RoomOwnershipModel::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::get_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipModel.set_locked
void GlobalNamespace::RoomOwnershipModel::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::set_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.get_lowGravity
bool GlobalNamespace::RoomOwnershipModel::get_lowGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::get_lowGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipModel.set_lowGravity
void GlobalNamespace::RoomOwnershipModel::set_lowGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::set_lowGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.get_blockedFromMovingThroughBricks
bool GlobalNamespace::RoomOwnershipModel::get_blockedFromMovingThroughBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::get_blockedFromMovingThroughBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blockedFromMovingThroughBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipModel.set_blockedFromMovingThroughBricks
void GlobalNamespace::RoomOwnershipModel::set_blockedFromMovingThroughBricks(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::set_blockedFromMovingThroughBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blockedFromMovingThroughBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.add_lockedDidChange
void GlobalNamespace::RoomOwnershipModel::add_lockedDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::add_lockedDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lockedDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.remove_lockedDidChange
void GlobalNamespace::RoomOwnershipModel::remove_lockedDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::remove_lockedDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lockedDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.add_lowGravityDidChange
void GlobalNamespace::RoomOwnershipModel::add_lowGravityDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::add_lowGravityDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lowGravityDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.remove_lowGravityDidChange
void GlobalNamespace::RoomOwnershipModel::remove_lowGravityDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::remove_lowGravityDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lowGravityDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.add_blockedFromMovingThroughBricksDidChange
void GlobalNamespace::RoomOwnershipModel::add_blockedFromMovingThroughBricksDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::add_blockedFromMovingThroughBricksDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_blockedFromMovingThroughBricksDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.remove_blockedFromMovingThroughBricksDidChange
void GlobalNamespace::RoomOwnershipModel::remove_blockedFromMovingThroughBricksDidChange(::GlobalNamespace::RoomOwnershipModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::remove_blockedFromMovingThroughBricksDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_blockedFromMovingThroughBricksDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.FireLockedDidChange
void GlobalNamespace::RoomOwnershipModel::FireLockedDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::FireLockedDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireLockedDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.FireLowGravityDidChange
void GlobalNamespace::RoomOwnershipModel::FireLowGravityDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::FireLowGravityDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireLowGravityDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.FireBlockedFromMovingThroughBricksDidChange
void GlobalNamespace::RoomOwnershipModel::FireBlockedFromMovingThroughBricksDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::FireBlockedFromMovingThroughBricksDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireBlockedFromMovingThroughBricksDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RoomOwnershipModel.UpdateBackingFields
void GlobalNamespace::RoomOwnershipModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipModel.OnParentReplaced
void GlobalNamespace::RoomOwnershipModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: RoomOwnershipModel.WriteLength
int GlobalNamespace::RoomOwnershipModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: RoomOwnershipModel.Write
void GlobalNamespace::RoomOwnershipModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: RoomOwnershipModel.Read
void GlobalNamespace::RoomOwnershipModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomOwnershipModel/PropertyID
#include "GlobalNamespace/RoomOwnershipModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RoomOwnershipModel/PropertyID Locked
::GlobalNamespace::RoomOwnershipModel::PropertyID GlobalNamespace::RoomOwnershipModel::PropertyID::_get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_get_Locked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomOwnershipModel::PropertyID>("", "RoomOwnershipModel/PropertyID", "Locked"));
}
// Autogenerated static field setter
// Set static field: static public RoomOwnershipModel/PropertyID Locked
void GlobalNamespace::RoomOwnershipModel::PropertyID::_set_Locked(::GlobalNamespace::RoomOwnershipModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_set_Locked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomOwnershipModel/PropertyID", "Locked", value));
}
// Autogenerated static field getter
// Get static field: static public RoomOwnershipModel/PropertyID LowGravity
::GlobalNamespace::RoomOwnershipModel::PropertyID GlobalNamespace::RoomOwnershipModel::PropertyID::_get_LowGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_get_LowGravity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomOwnershipModel::PropertyID>("", "RoomOwnershipModel/PropertyID", "LowGravity"));
}
// Autogenerated static field setter
// Set static field: static public RoomOwnershipModel/PropertyID LowGravity
void GlobalNamespace::RoomOwnershipModel::PropertyID::_set_LowGravity(::GlobalNamespace::RoomOwnershipModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_set_LowGravity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomOwnershipModel/PropertyID", "LowGravity", value));
}
// Autogenerated static field getter
// Get static field: static public RoomOwnershipModel/PropertyID BlockedFromMovingThroughBricks
::GlobalNamespace::RoomOwnershipModel::PropertyID GlobalNamespace::RoomOwnershipModel::PropertyID::_get_BlockedFromMovingThroughBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_get_BlockedFromMovingThroughBricks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomOwnershipModel::PropertyID>("", "RoomOwnershipModel/PropertyID", "BlockedFromMovingThroughBricks"));
}
// Autogenerated static field setter
// Set static field: static public RoomOwnershipModel/PropertyID BlockedFromMovingThroughBricks
void GlobalNamespace::RoomOwnershipModel::PropertyID::_set_BlockedFromMovingThroughBricks(::GlobalNamespace::RoomOwnershipModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::_set_BlockedFromMovingThroughBricks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomOwnershipModel/PropertyID", "BlockedFromMovingThroughBricks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::RoomOwnershipModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomOwnershipSync
#include "GlobalNamespace/RoomOwnershipSync.hpp"
// Including type: RoomOwnershipModel
#include "GlobalNamespace/RoomOwnershipModel.hpp"
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
// Including type: KeepPlayerOutOfWalls
#include "GlobalNamespace/KeepPlayerOutOfWalls.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 _lowGravityVector
::UnityEngine::Vector3 GlobalNamespace::RoomOwnershipSync::_get__lowGravityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::_get__lowGravityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "RoomOwnershipSync", "_lowGravityVector"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 _lowGravityVector
void GlobalNamespace::RoomOwnershipSync::_set__lowGravityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::_set__lowGravityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomOwnershipSync", "_lowGravityVector", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 _regularGravityVector
::UnityEngine::Vector3 GlobalNamespace::RoomOwnershipSync::_get__regularGravityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::_get__regularGravityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "RoomOwnershipSync", "_regularGravityVector"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 _regularGravityVector
void GlobalNamespace::RoomOwnershipSync::_set__regularGravityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::_set__regularGravityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomOwnershipSync", "_regularGravityVector", value));
}
// Autogenerated instance field getter
// Get instance field: public QuickInteractor leftHandInteractor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickInteractor*& GlobalNamespace::RoomOwnershipSync::dyn_leftHandInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_leftHandInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandInteractor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuickInteractor rightHandInteractor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickInteractor*& GlobalNamespace::RoomOwnershipSync::dyn_rightHandInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_rightHandInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandInteractor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KeepPlayerOutOfWalls keepPlayerOutOfWalls
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KeepPlayerOutOfWalls*& GlobalNamespace::RoomOwnershipSync::dyn_keepPlayerOutOfWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_keepPlayerOutOfWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keepPlayerOutOfWalls"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KeepPlayerOutOfWalls**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _interactorUnlockedMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::RoomOwnershipSync::dyn__interactorUnlockedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn__interactorUnlockedMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorUnlockedMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _interactorLockedMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::RoomOwnershipSync::dyn__interactorLockedMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn__interactorLockedMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorLockedMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle roomLockedToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::RoomOwnershipSync::dyn_roomLockedToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_roomLockedToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomLockedToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle lowGravityToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::RoomOwnershipSync::dyn_lowGravityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_lowGravityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowGravityToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle blockedFromMovingThroughBricksToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::RoomOwnershipSync::dyn_blockedFromMovingThroughBricksToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_blockedFromMovingThroughBricksToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockedFromMovingThroughBricksToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideLocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomOwnershipSync::dyn_overrideLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_overrideLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String overrideOwnerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RoomOwnershipSync::dyn_overrideOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_overrideOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideOwnerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _ownerIdPrefix
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RoomOwnershipSync::dyn__ownerIdPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn__ownerIdPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ownerIdPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RoomOwnershipSync::dyn_roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::dyn_roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomOwnershipSync..cctor
void GlobalNamespace::RoomOwnershipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomOwnershipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.Awake
void GlobalNamespace::RoomOwnershipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.Locked
bool GlobalNamespace::RoomOwnershipSync::Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::Locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.LowGravity
bool GlobalNamespace::RoomOwnershipSync::LowGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::LowGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.BlockedFromMovingThroughBricks
bool GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockedFromMovingThroughBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.OwnerIdPrefix
::StringW GlobalNamespace::RoomOwnershipSync::OwnerIdPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::OwnerIdPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OwnerIdPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.IsRoomOwner
bool GlobalNamespace::RoomOwnershipSync::IsRoomOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::IsRoomOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRoomOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.IsRoomOwner
bool GlobalNamespace::RoomOwnershipSync::IsRoomOwner(::StringW shortId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::IsRoomOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRoomOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shortId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, shortId);
}
// Autogenerated method: RoomOwnershipSync.IsUserAllowedToMakeChanges
bool GlobalNamespace::RoomOwnershipSync::IsUserAllowedToMakeChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::IsUserAllowedToMakeChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUserAllowedToMakeChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.LockedSet
void GlobalNamespace::RoomOwnershipSync::LockedSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::LockedSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockedSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.LowGravitySet
void GlobalNamespace::RoomOwnershipSync::LowGravitySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::LowGravitySet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowGravitySet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.BlockedFromMovingThroughBricksSet
void GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricksSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricksSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockedFromMovingThroughBricksSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomOwnershipSync.OnRealtimeModelReplaced
void GlobalNamespace::RoomOwnershipSync::OnRealtimeModelReplaced(::GlobalNamespace::RoomOwnershipModel* previousModel, ::GlobalNamespace::RoomOwnershipModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomOwnershipSync*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: RoomOwnershipSync.LockedDidChange
void GlobalNamespace::RoomOwnershipSync::LockedDidChange(::GlobalNamespace::RoomOwnershipModel* model, bool locked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::LockedDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockedDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(locked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, locked);
}
// Autogenerated method: RoomOwnershipSync.LowGravityDidChange
void GlobalNamespace::RoomOwnershipSync::LowGravityDidChange(::GlobalNamespace::RoomOwnershipModel* model, bool lowGravity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::LowGravityDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowGravityDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(lowGravity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, lowGravity);
}
// Autogenerated method: RoomOwnershipSync.BlockedFromMovingThroughBricksDidChange
void GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricksDidChange(::GlobalNamespace::RoomOwnershipModel* model, bool blockedFromMovingThroughBricks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::BlockedFromMovingThroughBricksDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockedFromMovingThroughBricksDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(blockedFromMovingThroughBricks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, blockedFromMovingThroughBricks);
}
// Autogenerated method: RoomOwnershipSync.SetLocked
void GlobalNamespace::RoomOwnershipSync::SetLocked(bool locked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::SetLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locked);
}
// Autogenerated method: RoomOwnershipSync.SetGravity
void GlobalNamespace::RoomOwnershipSync::SetGravity(bool lowGravity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::SetGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowGravity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowGravity);
}
// Autogenerated method: RoomOwnershipSync.SetBlockedFromMovingThroughBricks
void GlobalNamespace::RoomOwnershipSync::SetBlockedFromMovingThroughBricks(bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::SetBlockedFromMovingThroughBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlockedFromMovingThroughBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blocked);
}
// Autogenerated method: RoomOwnershipSync.SetOwnerIdPrefix
void GlobalNamespace::RoomOwnershipSync::SetOwnerIdPrefix(::StringW ownerIdPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomOwnershipSync::SetOwnerIdPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnerIdPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerIdPrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerIdPrefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RotationSettingHandler
#include "GlobalNamespace/RotationSettingHandler.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/SnapTurnProvider.hpp"
// Including type: SmoothTurn
#include "GlobalNamespace/SmoothTurn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider _snapTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider*& GlobalNamespace::RotationSettingHandler::dyn__snapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationSettingHandler::dyn__snapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SmoothTurn _smoothTurn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SmoothTurn*& GlobalNamespace::RotationSettingHandler::dyn__smoothTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationSettingHandler::dyn__smoothTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTurn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SmoothTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RotationSettingHandler.Awake
void GlobalNamespace::RotationSettingHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationSettingHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotationSettingHandler.OnRotationSettingUpdated
void GlobalNamespace::RotationSettingHandler::OnRotationSettingUpdated(bool smoothRotationEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationSettingHandler::OnRotationSettingUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRotationSettingUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(smoothRotationEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, smoothRotationEnabled);
}
// Autogenerated method: RotationSettingHandler.OnRotationSpeedUpdated
void GlobalNamespace::RotationSettingHandler::OnRotationSpeedUpdated(float rotationSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationSettingHandler::OnRotationSpeedUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRotationSpeedUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationSpeed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenFadeProvider
#include "GlobalNamespace/ScreenFadeProvider.hpp"
// Including type: ScreenFadeProvider/<Fade>d__1
#include "GlobalNamespace/ScreenFadeProvider_-Fade-d__1.hpp"
// Including type: ScreenFadeProvider/<Unfade>d__2
#include "GlobalNamespace/ScreenFadeProvider_-Unfade-d__2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single FadeSpeed
float GlobalNamespace::ScreenFadeProvider::_get_FadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::_get_FadeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScreenFadeProvider", "FadeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single FadeSpeed
void GlobalNamespace::ScreenFadeProvider::_set_FadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::_set_FadeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenFadeProvider", "FadeSpeed", value));
}
// Autogenerated method: ScreenFadeProvider..cctor
void GlobalNamespace::ScreenFadeProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScreenFadeProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ScreenFadeProvider.Fade
::System::Collections::IEnumerator* GlobalNamespace::ScreenFadeProvider::Fade(::UnityEngine::AudioSource* music) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::Fade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScreenFadeProvider", "Fade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(music)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, music);
}
// Autogenerated method: ScreenFadeProvider.Unfade
::System::Collections::IEnumerator* GlobalNamespace::ScreenFadeProvider::Unfade(::UnityEngine::AudioSource* music, float maxVolume, bool modifySound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::Unfade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScreenFadeProvider", "Unfade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(music), ::il2cpp_utils::ExtractType(maxVolume), ::il2cpp_utils::ExtractType(modifySound)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, music, maxVolume, modifySound);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScreenFadeProvider/<Fade>d__1
#include "GlobalNamespace/ScreenFadeProvider_-Fade-d__1.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource music
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_music() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_music");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "music"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material <loadingMaterial>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$loadingMaterial$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$loadingMaterial$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadingMaterial>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <loadingMatColor>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$loadingMatColor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$loadingMatColor$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadingMatColor>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <alpha>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$alpha$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$alpha$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<alpha>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <maxVolume>5__5
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$maxVolume$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::dyn_$maxVolume$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxVolume>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenFadeProvider/<Fade>d__1.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Fade$d__1*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Fade>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Fade$d__1*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Fade>d__1.System.IDisposable.Dispose
void GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Fade$d__1*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Fade>d__1.MoveNext
bool GlobalNamespace::ScreenFadeProvider::$Fade$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Fade$d__1*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Fade>d__1.System.Collections.IEnumerator.Reset
void GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Fade$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Fade$d__1*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScreenFadeProvider/<Unfade>d__2
#include "GlobalNamespace/ScreenFadeProvider_-Unfade-d__2.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean modifySound
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_modifySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_modifySound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifySound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource music
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_music() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_music");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "music"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material <loadingMaterial>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$loadingMaterial$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$loadingMaterial$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadingMaterial>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <loadingMatColor>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$loadingMatColor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$loadingMatColor$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadingMatColor>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <alpha>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$alpha$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::dyn_$alpha$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<alpha>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenFadeProvider/<Unfade>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Unfade>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Unfade>d__2.System.IDisposable.Dispose
void GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Unfade>d__2.MoveNext
bool GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScreenFadeProvider/<Unfade>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScreenFadeProvider::$Unfade$d__2*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectionBase
#include "GlobalNamespace/SelectionBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetClientIdOnHeadBricks
#include "GlobalNamespace/SetClientIdOnHeadBricks.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView rtView
[[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeView*& GlobalNamespace::SetClientIdOnHeadBricks::dyn_rtView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetClientIdOnHeadBricks::dyn_rtView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rtView"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetClientIdOnHeadBricks.Start
void GlobalNamespace::SetClientIdOnHeadBricks::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetClientIdOnHeadBricks::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetColorOnPrefabBrick
#include "GlobalNamespace/SetColorOnPrefabBrick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Color
int GlobalNamespace::SetColorOnPrefabBrick::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SetColorOnPrefabBrick", "Color"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Color
void GlobalNamespace::SetColorOnPrefabBrick::_set_Color(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SetColorOnPrefabBrick", "Color", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 TexOffset
int GlobalNamespace::SetColorOnPrefabBrick::_get_TexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::_get_TexOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SetColorOnPrefabBrick", "TexOffset"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 TexOffset
void GlobalNamespace::SetColorOnPrefabBrick::_set_TexOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::_set_TexOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SetColorOnPrefabBrick", "TexOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SetColorOnPrefabBrick::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetColorOnPrefabBrick..cctor
void GlobalNamespace::SetColorOnPrefabBrick::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SetColorOnPrefabBrick", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SetColorOnPrefabBrick.Start
void GlobalNamespace::SetColorOnPrefabBrick::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetColorOnPrefabBrick.SetColor
void GlobalNamespace::SetColorOnPrefabBrick::SetColor(::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetColorOnPrefabBrick::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetHandColors
#include "GlobalNamespace/SetHandColors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ColorProp
int GlobalNamespace::SetHandColors::_get_ColorProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::_get_ColorProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SetHandColors", "ColorProp"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ColorProp
void GlobalNamespace::SetHandColors::_set_ColorProp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::_set_ColorProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SetHandColors", "ColorProp", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color color1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SetHandColors::dyn_color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::dyn_color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color color2
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SetHandColors::dyn_color2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::dyn_color2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color2"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetHandColors..cctor
void GlobalNamespace::SetHandColors::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SetHandColors", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SetHandColors.Awake
void GlobalNamespace::SetHandColors::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetHandColors.SetPrimaryColor
void GlobalNamespace::SetHandColors::SetPrimaryColor(::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::SetPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated method: SetHandColors.SetSecondaryColor
void GlobalNamespace::SetHandColors::SetSecondaryColor(::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::SetSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated method: SetHandColors.SetPropertyBlocksOnRenderer
void GlobalNamespace::SetHandColors::SetPropertyBlocksOnRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetHandColors::SetPropertyBlocksOnRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyBlocksOnRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetQualityLevel
#include "GlobalNamespace/SetQualityLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SetQualityLevel.Start
void GlobalNamespace::SetQualityLevel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetQualityLevel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetupSimulator
#include "GlobalNamespace/SetupSimulator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject vrController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SetupSimulator::dyn_vrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetupSimulator::dyn_vrController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetupSimulator.Start
void GlobalNamespace::SetupSimulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetupSimulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShowSnappableBrickPositions
#include "GlobalNamespace/ShowSnappableBrickPositions.hpp"
// Including type: BrickAttachDetector
#include "GlobalNamespace/BrickAttachDetector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BrickAttachDetector _detector
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickAttachDetector*& GlobalNamespace::ShowSnappableBrickPositions::dyn__detector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::dyn__detector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detector"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickAttachDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject currentGhostPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ShowSnappableBrickPositions::dyn_currentGhostPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::dyn_currentGhostPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGhostPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _prefabName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ShowSnappableBrickPositions::dyn__prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::dyn__prefabName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isGhostVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ShowSnappableBrickPositions::dyn__isGhostVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::dyn__isGhostVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isGhostVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShowSnappableBrickPositions.Start
void GlobalNamespace::ShowSnappableBrickPositions::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowSnappableBrickPositions.OnDestroy
void GlobalNamespace::ShowSnappableBrickPositions::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowSnappableBrickPositions.ResetAndDisable
void GlobalNamespace::ShowSnappableBrickPositions::ResetAndDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::ResetAndDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAndDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowSnappableBrickPositions.Reset
void GlobalNamespace::ShowSnappableBrickPositions::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowSnappableBrickPositions.Update
void GlobalNamespace::ShowSnappableBrickPositions::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShowSnappableBrickPositions::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderControl
#include "GlobalNamespace/SliderControl.hpp"
// Including type: SliderControl/SerializableIntEvent
#include "GlobalNamespace/SliderControl_SerializableIntEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImage
#include "UnityEngine/UI/ProceduralImage/ProceduralImage.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: CustomSliderLabels
#include "GlobalNamespace/CustomSliderLabels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 min
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderControl::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 max
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderControl::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 initialValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderControl::dyn_initialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_initialValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderControl::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject progressMarkers
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SliderControl::dyn_progressMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_progressMarkers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressMarkers"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject markerPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SliderControl::dyn_markerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_markerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markerPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ProceduralImage.ProceduralImage[] markerImages
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::ProceduralImage::ProceduralImage*>& GlobalNamespace::SliderControl::dyn_markerImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_markerImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markerImages"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::ProceduralImage::ProceduralImage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color filledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SliderControl::dyn_filledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_filledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color unfilledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SliderControl::dyn_unfilledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_unfilledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unfilledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::SliderControl::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CustomSliderLabels _customSliderLabels
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomSliderLabels*& GlobalNamespace::SliderControl::dyn__customSliderLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn__customSliderLabels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customSliderLabels"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomSliderLabels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderControl/SerializableIntEvent valueUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderControl::SerializableIntEvent*& GlobalNamespace::SliderControl::dyn_valueUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::dyn_valueUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderControl::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SliderControl.Start
void GlobalNamespace::SliderControl::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.GetValue
int GlobalNamespace::SliderControl::GetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.Increment
void GlobalNamespace::SliderControl::Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.Decrement
void GlobalNamespace::SliderControl::Decrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.SetValue
void GlobalNamespace::SliderControl::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderControl.ReRenderSlider
void GlobalNamespace::SliderControl::ReRenderSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::ReRenderSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReRenderSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.UpdateText
void GlobalNamespace::SliderControl::UpdateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.RecolorSliderMarkers
void GlobalNamespace::SliderControl::RecolorSliderMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::RecolorSliderMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecolorSliderMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderControl.OnValidate
void GlobalNamespace::SliderControl::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderControl::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderControl/SerializableIntEvent
#include "GlobalNamespace/SliderControl_SerializableIntEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderGrabbable
#include "GlobalNamespace/SliderGrabbable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sliderMarker
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SliderGrabbable::dyn_sliderMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn_sliderMarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderMarker"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material hoverMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SliderGrabbable::dyn_hoverMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn_hoverMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform gradientBackground
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::SliderGrabbable::dyn_gradientBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn_gradientBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gradientBackground"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider slider
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& GlobalNamespace::SliderGrabbable::dyn_slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn_slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _slider
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SliderGrabbable::dyn__slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slider"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SliderGrabbable::dyn__defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__defaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SliderGrabbable::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _grabbed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SliderGrabbable::dyn__grabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__grabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _usableSliderLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderGrabbable::dyn__usableSliderLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__usableSliderLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usableSliderLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultSliderValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderGrabbable::dyn_defaultSliderValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn_defaultSliderValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSliderValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _hoveredCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderGrabbable::dyn__hoveredCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__hoveredCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderGrabbable::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SliderGrabbable.Awake
void GlobalNamespace::SliderGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.Update
void GlobalNamespace::SliderGrabbable::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.GetClosestPointOnFiniteLine
::UnityEngine::Vector3 GlobalNamespace::SliderGrabbable::GetClosestPointOnFiniteLine(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::GetClosestPointOnFiniteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestPointOnFiniteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point, lineStart, lineEnd);
}
// Autogenerated method: SliderGrabbable.SetSliderValue
void GlobalNamespace::SliderGrabbable::SetSliderValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SetSliderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSliderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderGrabbable.FixSliderKnobPosition
void GlobalNamespace::SliderGrabbable::FixSliderKnobPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::FixSliderKnobPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixSliderKnobPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.SliderWorldLength
float GlobalNamespace::SliderGrabbable::SliderWorldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SliderWorldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderWorldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.SliderGrabbed
void GlobalNamespace::SliderGrabbable::SliderGrabbed(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SliderGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: SliderGrabbable.SliderReleased
void GlobalNamespace::SliderGrabbable::SliderReleased(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SliderReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: SliderGrabbable.SliderHovered
void GlobalNamespace::SliderGrabbable::SliderHovered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SliderHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: SliderGrabbable.SliderUnHovered
void GlobalNamespace::SliderGrabbable::SliderUnHovered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SliderUnHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderUnHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: SliderGrabbable.SetHoverVisuals
void GlobalNamespace::SliderGrabbable::SetHoverVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::SetHoverVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHoverVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.ClearHoverVisuals
void GlobalNamespace::SliderGrabbable::ClearHoverVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::ClearHoverVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHoverVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.OnEnable
void GlobalNamespace::SliderGrabbable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SliderGrabbable.OnDisable
void GlobalNamespace::SliderGrabbable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderGrabbable::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothTurn
#include "GlobalNamespace/SmoothTurn.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single turnSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SmoothTurn::dyn_turnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::dyn_turnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single deadZone
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SmoothTurn::dyn_deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::dyn_deadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugRotate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SmoothTurn::dyn_debugRotate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::dyn_debugRotate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugRotate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRig rig
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRig*& GlobalNamespace::SmoothTurn::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothTurn.Start
void GlobalNamespace::SmoothTurn::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothTurn.Update
void GlobalNamespace::SmoothTurn::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothTurn.Rotate
void GlobalNamespace::SmoothTurn::Rotate(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothTurn::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamManager
#include "GlobalNamespace/SteamManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 steamAppId
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::SteamManager::dyn_steamAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::dyn_steamAppId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "steamAppId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamManager::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initializationSucceeded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamManager::dyn__initializationSucceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::dyn__initializationSucceeded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializationSucceeded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamManager.Awake
void GlobalNamespace::SteamManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamManager.Initialize
bool GlobalNamespace::SteamManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SteamManager.GetUserId
uint64_t GlobalNamespace::SteamManager::GetUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: SteamManager.RestartAppIfNecessary
void GlobalNamespace::SteamManager::RestartAppIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::RestartAppIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartAppIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SyncVoiceWithSettings
#include "GlobalNamespace/SyncVoiceWithSettings.hpp"
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoice
#include "Normal/Realtime/RealtimeAvatarVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UserSettings _userSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings*& GlobalNamespace::SyncVoiceWithSettings::dyn__userSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn__userSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _self
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SyncVoiceWithSettings::dyn__self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn__self");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_self"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pushToTalkEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SyncVoiceWithSettings::dyn__pushToTalkEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn__pushToTalkEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pushToTalkEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _micEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SyncVoiceWithSettings::dyn__micEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn__micEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_micEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Muted>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SyncVoiceWithSettings::dyn_$Muted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn_$Muted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Muted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatar realtimeAvatar
[[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeAvatar*& GlobalNamespace::SyncVoiceWithSettings::dyn_realtimeAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn_realtimeAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtimeAvatar"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatarVoice realtimeVoice
[[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeAvatarVoice*& GlobalNamespace::SyncVoiceWithSettings::dyn_realtimeVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::dyn_realtimeVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtimeVoice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SyncVoiceWithSettings.get_Muted
bool GlobalNamespace::SyncVoiceWithSettings::get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::get_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SyncVoiceWithSettings.set_Muted
void GlobalNamespace::SyncVoiceWithSettings::set_Muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::set_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SyncVoiceWithSettings.Start
void GlobalNamespace::SyncVoiceWithSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SyncVoiceWithSettings.ToggleMuted
void GlobalNamespace::SyncVoiceWithSettings::ToggleMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::ToggleMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SyncVoiceWithSettings.SetMuted
void GlobalNamespace::SyncVoiceWithSettings::SetMuted(bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::SetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, muted);
}
// Autogenerated method: SyncVoiceWithSettings.Update
void GlobalNamespace::SyncVoiceWithSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SyncVoiceWithSettings.PushToTalkToggled
void GlobalNamespace::SyncVoiceWithSettings::PushToTalkToggled(bool pushToTalkEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::PushToTalkToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushToTalkToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pushToTalkEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pushToTalkEnabled);
}
// Autogenerated method: SyncVoiceWithSettings.SetMicEnabled
void GlobalNamespace::SyncVoiceWithSettings::SetMicEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncVoiceWithSettings::SetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TemporarilyDisableHand
#include "GlobalNamespace/TemporarilyDisableHand.hpp"
// Including type: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5
#include "GlobalNamespace/TemporarilyDisableHand_-TemporarilyDisableIEnum-d__5.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor _xrDirectInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& GlobalNamespace::TemporarilyDisableHand::dyn__xrDirectInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::dyn__xrDirectInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xrDirectInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _previousLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TemporarilyDisableHand::dyn__previousLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::dyn__previousLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::TemporarilyDisableHand::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TemporarilyDisableHand.Start
void GlobalNamespace::TemporarilyDisableHand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand.TemporarilyDisable
void GlobalNamespace::TemporarilyDisableHand::TemporarilyDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::TemporarilyDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TemporarilyDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand.TemporarilyDisableIEnum
::System::Collections::IEnumerator* GlobalNamespace::TemporarilyDisableHand::TemporarilyDisableIEnum(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::TemporarilyDisableIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TemporarilyDisableIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5
#include "GlobalNamespace/TemporarilyDisableHand_-TemporarilyDisableIEnum-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TemporarilyDisableHand <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TemporarilyDisableHand*& GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TemporarilyDisableHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5.System.IDisposable.Dispose
void GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5.MoveNext
bool GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TemporarilyDisableHand/<TemporarilyDisableIEnum>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TemporarilyDisableHand::$TemporarilyDisableIEnum$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextFPSCounter
#include "GlobalNamespace/TextFPSCounter.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI textDisplay
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TextFPSCounter::dyn_textDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFPSCounter::dyn_textDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textDisplay"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.String> _fpsToUIStringMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::StringW>*& GlobalNamespace::TextFPSCounter::dyn__fpsToUIStringMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFPSCounter::dyn__fpsToUIStringMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsToUIStringMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _last10Times
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::TextFPSCounter::dyn__last10Times() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFPSCounter::dyn__last10Times");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_last10Times"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextFPSCounter.Start
void GlobalNamespace::TextFPSCounter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFPSCounter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFPSCounter.Update
void GlobalNamespace::TextFPSCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFPSCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TouchButton
#include "GlobalNamespace/TouchButton.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPressed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TouchButton::dyn__isPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::dyn__isPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfObjectsPressing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TouchButton::dyn__numberOfObjectsPressing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::dyn__numberOfObjectsPressing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfObjectsPressing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::TouchButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TouchButton.Start
void GlobalNamespace::TouchButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TouchButton.OnTriggerEnter
void GlobalNamespace::TouchButton::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: TouchButton.OnTriggerExit
void GlobalNamespace::TouchButton::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TouchButton::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialManager
#include "GlobalNamespace/TutorialManager.hpp"
// Including type: TutorialManager/<StartTutorialIEnum>d__59
#include "GlobalNamespace/TutorialManager_-StartTutorialIEnum-d__59.hpp"
// Including type: TutorialManager/<ConnectToNormcore>d__61
#include "GlobalNamespace/TutorialManager_-ConnectToNormcore-d__61.hpp"
// Including type: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67
#include "GlobalNamespace/TutorialManager_-AnimateBetweenTextObjectsWithCross-d__67.hpp"
// Including type: TutorialManager/<MoveToSecondStep>d__69
#include "GlobalNamespace/TutorialManager_-MoveToSecondStep-d__69.hpp"
// Including type: TutorialManager/<MoveToThirdStep>d__71
#include "GlobalNamespace/TutorialManager_-MoveToThirdStep-d__71.hpp"
// Including type: TutorialManager/<MoveToFourthStep>d__73
#include "GlobalNamespace/TutorialManager_-MoveToFourthStep-d__73.hpp"
// Including type: TutorialManager/<MoveToFifthStep>d__75
#include "GlobalNamespace/TutorialManager_-MoveToFifthStep-d__75.hpp"
// Including type: TutorialManager/<MoveToSixthStep>d__77
#include "GlobalNamespace/TutorialManager_-MoveToSixthStep-d__77.hpp"
// Including type: TutorialManager/<MoveToSeventhStep>d__79
#include "GlobalNamespace/TutorialManager_-MoveToSeventhStep-d__79.hpp"
// Including type: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81
#include "GlobalNamespace/TutorialManager_-MoveFromSeventhToSeventhAndAHalfthStep-d__81.hpp"
// Including type: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83
#include "GlobalNamespace/TutorialManager_-MoveFromSeventhAndAHalfthToEighthStep-d__83.hpp"
// Including type: TutorialManager/<MoveFromEighthToNinthStep>d__85
#include "GlobalNamespace/TutorialManager_-MoveFromEighthToNinthStep-d__85.hpp"
// Including type: TutorialManager/<MoveToLastStep>d__87
#include "GlobalNamespace/TutorialManager_-MoveToLastStep-d__87.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/SnapTurnProvider.hpp"
// Including type: SmoothTurn
#include "GlobalNamespace/SmoothTurn.hpp"
// Including type: BrickPickerManager
#include "GlobalNamespace/BrickPickerManager.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: JoystickLocomotion
#include "GlobalNamespace/JoystickLocomotion.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: HandBrickSpawner
#include "GlobalNamespace/HandBrickSpawner.hpp"
// Including type: ControllerButtonInput
#include "GlobalNamespace/ControllerButtonInput.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
// Including type: PalletteBrickCollider
#include "GlobalNamespace/PalletteBrickCollider.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: MovementVignette
#include "GlobalNamespace/MovementVignette.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TutorialManager _instance
::GlobalNamespace::TutorialManager* GlobalNamespace::TutorialManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TutorialManager*>("", "TutorialManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private TutorialManager _instance
void GlobalNamespace::TutorialManager::_set__instance(::GlobalNamespace::TutorialManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialManager", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerControllers
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_playerControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_playerControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerControllers"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject infoBoard
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_infoBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_infoBoard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoBoard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tutorialEnvContents
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_tutorialEnvContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_tutorialEnvContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialEnvContents"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime realtime
[[deprecated("Use field access instead!")]] ::Normal::Realtime::Realtime*& GlobalNamespace::TutorialManager::dyn_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.SnapTurnProvider snapTurnProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider*& GlobalNamespace::TutorialManager::dyn_snapTurnProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_snapTurnProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurnProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SnapTurnProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SmoothTurn smoothTurn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SmoothTurn*& GlobalNamespace::TutorialManager::dyn_smoothTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_smoothTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothTurn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SmoothTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrickPickerManager brickPickerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrickPickerManager*& GlobalNamespace::TutorialManager::dyn_brickPickerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_brickPickerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPickerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickPickerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource ambientMusic
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::TutorialManager::dyn_ambientMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_ambientMusic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientMusic"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ambientMusicMaxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TutorialManager::dyn__ambientMusicMaxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__ambientMusicMaxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambientMusicMaxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public JoystickLocomotion joystickLocomotion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::JoystickLocomotion*& GlobalNamespace::TutorialManager::dyn_joystickLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_joystickLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickLocomotion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::JoystickLocomotion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Renderer loadingObjectRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::TutorialManager::dyn_loadingObjectRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_loadingObjectRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingObjectRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandBrickSpawner leftHandBrickSpawner
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandBrickSpawner*& GlobalNamespace::TutorialManager::dyn_leftHandBrickSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_leftHandBrickSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandBrickSpawner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandBrickSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandBrickSpawner rightHandBrickSpawner
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandBrickSpawner*& GlobalNamespace::TutorialManager::dyn_rightHandBrickSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_rightHandBrickSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandBrickSpawner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandBrickSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuLeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_menuLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_menuLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuRightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_menuRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_menuRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject teleporterLeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_teleporterLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_teleporterLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleporterLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject teleporterRightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_teleporterRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_teleporterRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleporterRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ControllerButtonInput buttonInput
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ControllerButtonInput*& GlobalNamespace::TutorialManager::dyn_buttonInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_buttonInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonInput"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ControllerButtonInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource canvasAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::TutorialManager::dyn_canvasAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_canvasAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canvasAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRRig xrRig
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRig*& GlobalNamespace::TutorialManager::dyn_xrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_xrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrRig"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PalletteBrickCollider palletteBrickCollider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PalletteBrickCollider*& GlobalNamespace::TutorialManager::dyn_palletteBrickCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_palletteBrickCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "palletteBrickCollider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PalletteBrickCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button roomMenuButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::TutorialManager::dyn_roomMenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_roomMenuButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomMenuButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject firstBrick
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_firstBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_firstBrick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstBrick"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject secondBrick
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_secondBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_secondBrick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondBrick"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tutorialSpawnPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_tutorialSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_tutorialSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialSpawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject firstBrickSpawnPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_firstBrickSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_firstBrickSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstBrickSpawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject secondBrickSpawnPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TutorialManager::dyn_secondBrickSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_secondBrickSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondBrickSpawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI firstTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_firstTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_firstTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI secondTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_secondTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_secondTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI thirdTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_thirdTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_thirdTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thirdTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI fourthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_fourthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_fourthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fourthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI fifthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_fifthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_fifthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fifthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI sixthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_sixthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_sixthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sixthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI seventhTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_seventhTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_seventhTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seventhTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI seventhAndAHalfthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_seventhAndAHalfthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_seventhAndAHalfthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seventhAndAHalfthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI eighthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_eighthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_eighthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eighthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI ninthTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_ninthTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_ninthTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ninthTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI lastTextBox
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::dyn_lastTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_lastTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTextBox"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startedTutorial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TutorialManager::dyn__startedTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__startedTutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startedTutorial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _advancing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TutorialManager::dyn__advancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__advancing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_advancing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _connectedToNormcore
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TutorialManager::dyn__connectedToNormcore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__connectedToNormcore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedToNormcore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didConnectToRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TutorialManager::dyn__didConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__didConnectToRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didConnectToRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didDisconnectFromRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TutorialManager::dyn__didDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__didDisconnectFromRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didDisconnectFromRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialLateralMovementIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialLateralMovementIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialLateralMovementIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialLateralMovementIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialVerticalMovementIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialVerticalMovementIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialVerticalMovementIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialVerticalMovementIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialSnapTurnIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialSnapTurnIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialSnapTurnIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialSnapTurnIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialBrickMenuIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialBrickMenuIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialBrickMenuIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialBrickMenuIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfBricks
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__numberOfBricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__numberOfBricks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfBricks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialHandBrickSpawnerIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialHandBrickSpawnerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialHandBrickSpawnerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialHandBrickSpawnerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialPalletteBrickColliderIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::dyn__initialPalletteBrickColliderIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__initialPalletteBrickColliderIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPalletteBrickColliderIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _startTutorialCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::TutorialManager::dyn__startTutorialCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__startTutorialCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTutorialCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action _updateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TutorialManager::dyn__updateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn__updateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MovementVignette movementVignette
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MovementVignette*& GlobalNamespace::TutorialManager::dyn_movementVignette() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::dyn_movementVignette");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementVignette"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MovementVignette**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager.GetInstance
::GlobalNamespace::TutorialManager* GlobalNamespace::TutorialManager::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TutorialManager", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::TutorialManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TutorialManager.Start
void GlobalNamespace::TutorialManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.Update
void GlobalNamespace::TutorialManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.StartTutorial
void GlobalNamespace::TutorialManager::StartTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::StartTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.IsTutorialRunning
bool GlobalNamespace::TutorialManager::IsTutorialRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::IsTutorialRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTutorialRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.StartTutorialIEnum
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::StartTutorialIEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::StartTutorialIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTutorialIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MovePlayerToTutorial
void GlobalNamespace::TutorialManager::MovePlayerToTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MovePlayerToTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayerToTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.ConnectToNormcore
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::ConnectToNormcore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::ConnectToNormcore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToNormcore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.DidConnectToRoom
void GlobalNamespace::TutorialManager::DidConnectToRoom(::Normal::Realtime::Realtime* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::DidConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: TutorialManager.DidDisconnectFromRoom
void GlobalNamespace::TutorialManager::DidDisconnectFromRoom(::Normal::Realtime::Realtime* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::DidDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: TutorialManager.PlaySuccessTrack
void GlobalNamespace::TutorialManager::PlaySuccessTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::PlaySuccessTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySuccessTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.CreateNewBrick
::UnityEngine::GameObject* GlobalNamespace::TutorialManager::CreateNewBrick(::StringW prefabName, ::UnityEngine::Transform* t, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::CreateNewBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabName, t, color);
}
// Autogenerated method: TutorialManager.EnablePhysicsOnBrick
void GlobalNamespace::TutorialManager::EnablePhysicsOnBrick(::UnityEngine::GameObject* brick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::EnablePhysicsOnBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnablePhysicsOnBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, brick);
}
// Autogenerated method: TutorialManager.AnimateBetweenTextObjectsWithCross
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::AnimateBetweenTextObjectsWithCross(::TMPro::TextMeshProUGUI* oldText, ::TMPro::TextMeshProUGUI* newText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::AnimateBetweenTextObjectsWithCross");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateBetweenTextObjectsWithCross", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldText), ::il2cpp_utils::ExtractType(newText)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, oldText, newText);
}
// Autogenerated method: TutorialManager.UpdateFirstPart
void GlobalNamespace::TutorialManager::UpdateFirstPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateFirstPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFirstPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToSecondStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToSecondStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToSecondStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToSecondStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateSecondPart
void GlobalNamespace::TutorialManager::UpdateSecondPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateSecondPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSecondPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToThirdStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToThirdStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToThirdStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToThirdStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateThirdPart
void GlobalNamespace::TutorialManager::UpdateThirdPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateThirdPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateThirdPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToFourthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToFourthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToFourthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFourthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateFourthPart
void GlobalNamespace::TutorialManager::UpdateFourthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateFourthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFourthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToFifthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToFifthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToFifthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFifthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateFifthPart
void GlobalNamespace::TutorialManager::UpdateFifthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateFifthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFifthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToSixthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToSixthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToSixthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToSixthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateSixthPart
void GlobalNamespace::TutorialManager::UpdateSixthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateSixthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSixthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToSeventhStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToSeventhStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToSeventhStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToSeventhStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateSeventhPart
void GlobalNamespace::TutorialManager::UpdateSeventhPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateSeventhPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSeventhPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveFromSeventhToSeventhAndAHalfthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveFromSeventhToSeventhAndAHalfthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveFromSeventhToSeventhAndAHalfthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveFromSeventhToSeventhAndAHalfthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateSeventhAndAHalfthPart
void GlobalNamespace::TutorialManager::UpdateSeventhAndAHalfthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateSeventhAndAHalfthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSeventhAndAHalfthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveFromSeventhAndAHalfthToEighthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveFromSeventhAndAHalfthToEighthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveFromSeventhAndAHalfthToEighthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveFromSeventhAndAHalfthToEighthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateEighthPart
void GlobalNamespace::TutorialManager::UpdateEighthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateEighthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEighthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveFromEighthToNinthStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveFromEighthToNinthStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveFromEighthToNinthStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveFromEighthToNinthStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.UpdateNinthPart
void GlobalNamespace::TutorialManager::UpdateNinthPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::UpdateNinthPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNinthPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.MoveToLastStep
::System::Collections::IEnumerator* GlobalNamespace::TutorialManager::MoveToLastStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::MoveToLastStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToLastStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager.<MovePlayerToTutorial>b__60_0
void GlobalNamespace::TutorialManager::$MovePlayerToTutorial$b__60_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::<MovePlayerToTutorial>b__60_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MovePlayerToTutorial>b__60_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<StartTutorialIEnum>d__59
#include "GlobalNamespace/TutorialManager_-StartTutorialIEnum-d__59.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<StartTutorialIEnum>d__59.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<StartTutorialIEnum>d__59.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<StartTutorialIEnum>d__59.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<StartTutorialIEnum>d__59.MoveNext
bool GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<StartTutorialIEnum>d__59.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$StartTutorialIEnum$d__59*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<ConnectToNormcore>d__61
#include "GlobalNamespace/TutorialManager_-ConnectToNormcore-d__61.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$time$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::dyn_$time$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<ConnectToNormcore>d__61.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<ConnectToNormcore>d__61.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<ConnectToNormcore>d__61.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<ConnectToNormcore>d__61.MoveNext
bool GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<ConnectToNormcore>d__61.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$ConnectToNormcore$d__61*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67
#include "GlobalNamespace/TutorialManager_-AnimateBetweenTextObjectsWithCross-d__67.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI oldText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_oldText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_oldText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI newText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_newText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_newText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <fadeSpeed>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$fadeSpeed$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$fadeSpeed$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fadeSpeed>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <alpha>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$alpha$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$alpha$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<alpha>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <oldTextColor>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$oldTextColor$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$oldTextColor$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<oldTextColor>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <newTextColor>5__5
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$newTextColor$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::dyn_$newTextColor$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newTextColor>5__5"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67.MoveNext
bool GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<AnimateBetweenTextObjectsWithCross>d__67.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$AnimateBetweenTextObjectsWithCross$d__67*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToSecondStep>d__69
#include "GlobalNamespace/TutorialManager_-MoveToSecondStep-d__69.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToSecondStep>d__69.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSecondStep>d__69.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSecondStep>d__69.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSecondStep>d__69.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSecondStep>d__69.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSecondStep$d__69*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToThirdStep>d__71
#include "GlobalNamespace/TutorialManager_-MoveToThirdStep-d__71.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToThirdStep>d__71.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToThirdStep>d__71.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToThirdStep>d__71.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToThirdStep>d__71.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToThirdStep>d__71.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToThirdStep$d__71*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToFourthStep>d__73
#include "GlobalNamespace/TutorialManager_-MoveToFourthStep-d__73.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToFourthStep>d__73.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFourthStep>d__73.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFourthStep>d__73.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFourthStep>d__73.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFourthStep>d__73.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFourthStep$d__73*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToFifthStep>d__75
#include "GlobalNamespace/TutorialManager_-MoveToFifthStep-d__75.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToFifthStep>d__75.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFifthStep>d__75.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFifthStep>d__75.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFifthStep>d__75.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToFifthStep>d__75.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToFifthStep$d__75*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToSixthStep>d__77
#include "GlobalNamespace/TutorialManager_-MoveToSixthStep-d__77.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToSixthStep>d__77.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSixthStep>d__77.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSixthStep>d__77.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSixthStep>d__77.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSixthStep>d__77.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSixthStep$d__77*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToSeventhStep>d__79
#include "GlobalNamespace/TutorialManager_-MoveToSeventhStep-d__79.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToSeventhStep>d__79.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSeventhStep>d__79.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSeventhStep>d__79.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSeventhStep>d__79.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToSeventhStep>d__79.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToSeventhStep$d__79*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81
#include "GlobalNamespace/TutorialManager_-MoveFromSeventhToSeventhAndAHalfthStep-d__81.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81.MoveNext
bool GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhToSeventhAndAHalfthStep>d__81.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhToSeventhAndAHalfthStep$d__81*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83
#include "GlobalNamespace/TutorialManager_-MoveFromSeventhAndAHalfthToEighthStep-d__83.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83.MoveNext
bool GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromSeventhAndAHalfthToEighthStep>d__83.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromSeventhAndAHalfthToEighthStep$d__83*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveFromEighthToNinthStep>d__85
#include "GlobalNamespace/TutorialManager_-MoveFromEighthToNinthStep-d__85.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveFromEighthToNinthStep>d__85.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromEighthToNinthStep>d__85.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromEighthToNinthStep>d__85.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromEighthToNinthStep>d__85.MoveNext
bool GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveFromEighthToNinthStep>d__85.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveFromEighthToNinthStep$d__85*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialManager/<MoveToLastStep>d__87
#include "GlobalNamespace/TutorialManager_-MoveToLastStep-d__87.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialManager*& GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialManager/<MoveToLastStep>d__87.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToLastStep>d__87.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToLastStep>d__87.System.IDisposable.Dispose
void GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToLastStep>d__87.MoveNext
bool GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialManager/<MoveToLastStep>d__87.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TutorialManager::$MoveToLastStep$d__87*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIButtonEvents
#include "GlobalNamespace/UIButtonEvents.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color textBaseColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_textBaseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_textBaseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textBaseColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color textHoveredColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_textHoveredColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_textHoveredColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textHoveredColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color textSelectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_textSelectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_textSelectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textSelectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color imageBaseColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_imageBaseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_imageBaseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "imageBaseColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color imageHoveredColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_imageHoveredColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_imageHoveredColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "imageHoveredColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color imageSelectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn_imageSelectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_imageSelectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "imageSelectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UIButtonEvents::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image image
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::UIButtonEvents::dyn_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverGrowFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UIButtonEvents::dyn_hoverGrowFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_hoverGrowFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverGrowFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialButtonScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::UIButtonEvents::dyn__initialButtonScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__initialButtonScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialButtonScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UIButtonEvents::dyn_animationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn_animationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationIndex
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UIButtonEvents::dyn__animationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__animationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationIndex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hovered
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UIButtonEvents::dyn__hovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__hovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hovered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UIButtonEvents::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultButtonImageColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn__defaultButtonImageColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__defaultButtonImageColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultButtonImageColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedButtonImageColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn__selectedButtonImageColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__selectedButtonImageColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedButtonImageColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoveredButtonImageColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::UIButtonEvents::dyn__hoveredButtonImageColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__hoveredButtonImageColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredButtonImageColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::UIButtonEvents::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIButtonEvents.Awake
void GlobalNamespace::UIButtonEvents::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIButtonEvents.Update
void GlobalNamespace::UIButtonEvents::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIButtonEvents.SetSelected
void GlobalNamespace::UIButtonEvents::SetSelected(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: UIButtonEvents.RunAnimations
void GlobalNamespace::UIButtonEvents::RunAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::RunAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIButtonEvents.OnDisable
void GlobalNamespace::UIButtonEvents::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIButtonEvents.OnPointerEnter
void GlobalNamespace::UIButtonEvents::OnPointerEnter(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::OnPointerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UIButtonEvents.OnPointerExit
void GlobalNamespace::UIButtonEvents::OnPointerExit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIButtonEvents::OnPointerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateBrickShininessSliderText
#include "GlobalNamespace/UpdateBrickShininessSliderText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI sliderLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UpdateBrickShininessSliderText::dyn_sliderLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateBrickShininessSliderText::dyn_sliderLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UpdateBrickShininessSliderText.OnEnable
void GlobalNamespace::UpdateBrickShininessSliderText::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateBrickShininessSliderText::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UpdateBrickShininessSliderText.SliderValueSet
void GlobalNamespace::UpdateBrickShininessSliderText::SliderValueSet(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateBrickShininessSliderText::SliderValueSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderValueSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateConnectorLayerWhenHeld
#include "GlobalNamespace/UpdateConnectorLayerWhenHeld.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject maleConnectorParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_maleConnectorParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_maleConnectorParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maleConnectorParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject femaleConnectorParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_femaleConnectorParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_femaleConnectorParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "femaleConnectorParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] connectors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_connectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::dyn_connectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UpdateConnectorLayerWhenHeld.Awake
void GlobalNamespace::UpdateConnectorLayerWhenHeld::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UpdateConnectorLayerWhenHeld.OnGrab
void GlobalNamespace::UpdateConnectorLayerWhenHeld::OnGrab(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::OnGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UpdateConnectorLayerWhenHeld.OnRelease
void GlobalNamespace::UpdateConnectorLayerWhenHeld::OnRelease(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::OnRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UpdateConnectorLayerWhenHeld.OnValidate
void GlobalNamespace::UpdateConnectorLayerWhenHeld::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectorLayerWhenHeld::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateFixedTimestep
#include "GlobalNamespace/UpdateFixedTimestep.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UpdateFixedTimestep.Start
void GlobalNamespace::UpdateFixedTimestep::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateFixedTimestep::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdatePlayerScaleSliderText
#include "GlobalNamespace/UpdatePlayerScaleSliderText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI sliderLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UpdatePlayerScaleSliderText::dyn_sliderLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdatePlayerScaleSliderText::dyn_sliderLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UpdatePlayerScaleSliderText.SliderValueSet
void GlobalNamespace::UpdatePlayerScaleSliderText::SliderValueSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdatePlayerScaleSliderText::SliderValueSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderValueSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateRenderDistanceSliderText
#include "GlobalNamespace/UpdateRenderDistanceSliderText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI sliderLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UpdateRenderDistanceSliderText::dyn_sliderLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateRenderDistanceSliderText::dyn_sliderLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UpdateRenderDistanceSliderText.SliderValueSet
void GlobalNamespace::UpdateRenderDistanceSliderText::SliderValueSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateRenderDistanceSliderText::SliderValueSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderValueSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateUserIdText
#include "GlobalNamespace/UpdateUserIdText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UpdateUserIdText.Start
void GlobalNamespace::UpdateUserIdText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateUserIdText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateVersionText
#include "GlobalNamespace/UpdateVersionText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UpdateVersionText.Start
void GlobalNamespace::UpdateVersionText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateVersionText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserId
#include "GlobalNamespace/UserId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UserId.Get
::StringW GlobalNamespace::UserId::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserId::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UserId", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UserId.GetShortId
::StringW GlobalNamespace::UserId::GetShortId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserId::GetShortId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UserId", "GetShortId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
// Including type: UserSettings/SerializableBoolEvent
#include "GlobalNamespace/UserSettings_SerializableBoolEvent.hpp"
// Including type: UserSettings/SerializableFloatEvent
#include "GlobalNamespace/UserSettings_SerializableFloatEvent.hpp"
// Including type: UserSettings/SerializableStringEvent
#include "GlobalNamespace/UserSettings_SerializableStringEvent.hpp"
// Including type: UserSettings/SerializableIntEvent
#include "GlobalNamespace/UserSettings_SerializableIntEvent.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UserSettings _instance
::GlobalNamespace::UserSettings* GlobalNamespace::UserSettings::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UserSettings*>("", "UserSettings", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private UserSettings _instance
void GlobalNamespace::UserSettings::_set__instance(::GlobalNamespace::UserSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TeleportTriggersKey
::StringW GlobalNamespace::UserSettings::_get_TeleportTriggersKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_TeleportTriggersKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "TeleportTriggersKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String TeleportTriggersKey
void GlobalNamespace::UserSettings::_set_TeleportTriggersKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_TeleportTriggersKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "TeleportTriggersKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MicrophoneEnabledKey
::StringW GlobalNamespace::UserSettings::_get_MicrophoneEnabledKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_MicrophoneEnabledKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "MicrophoneEnabledKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String MicrophoneEnabledKey
void GlobalNamespace::UserSettings::_set_MicrophoneEnabledKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_MicrophoneEnabledKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "MicrophoneEnabledKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OtherPlayersMicrophonesEnabledKey
::StringW GlobalNamespace::UserSettings::_get_OtherPlayersMicrophonesEnabledKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_OtherPlayersMicrophonesEnabledKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "OtherPlayersMicrophonesEnabledKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String OtherPlayersMicrophonesEnabledKey
void GlobalNamespace::UserSettings::_set_OtherPlayersMicrophonesEnabledKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_OtherPlayersMicrophonesEnabledKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "OtherPlayersMicrophonesEnabledKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PerformanceModeEnabledKey
::StringW GlobalNamespace::UserSettings::_get_PerformanceModeEnabledKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_PerformanceModeEnabledKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "PerformanceModeEnabledKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PerformanceModeEnabledKey
void GlobalNamespace::UserSettings::_set_PerformanceModeEnabledKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_PerformanceModeEnabledKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "PerformanceModeEnabledKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PlayMusicEnabledKey
::StringW GlobalNamespace::UserSettings::_get_PlayMusicEnabledKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_PlayMusicEnabledKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "PlayMusicEnabledKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PlayMusicEnabledKey
void GlobalNamespace::UserSettings::_set_PlayMusicEnabledKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_PlayMusicEnabledKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "PlayMusicEnabledKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SmoothRotationEnabledKey
::StringW GlobalNamespace::UserSettings::_get_SmoothRotationEnabledKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_SmoothRotationEnabledKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "SmoothRotationEnabledKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String SmoothRotationEnabledKey
void GlobalNamespace::UserSettings::_set_SmoothRotationEnabledKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_SmoothRotationEnabledKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "SmoothRotationEnabledKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MusicVolumeKey
::StringW GlobalNamespace::UserSettings::_get_MusicVolumeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_MusicVolumeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "MusicVolumeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String MusicVolumeKey
void GlobalNamespace::UserSettings::_set_MusicVolumeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_MusicVolumeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "MusicVolumeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MovementSpeedKey
::StringW GlobalNamespace::UserSettings::_get_MovementSpeedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_MovementSpeedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "MovementSpeedKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String MovementSpeedKey
void GlobalNamespace::UserSettings::_set_MovementSpeedKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_MovementSpeedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "MovementSpeedKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String RotationSpeedKey
::StringW GlobalNamespace::UserSettings::_get_RotationSpeedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_RotationSpeedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "RotationSpeedKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String RotationSpeedKey
void GlobalNamespace::UserSettings::_set_RotationSpeedKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_RotationSpeedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "RotationSpeedKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VignetteStrengthKey
::StringW GlobalNamespace::UserSettings::_get_VignetteStrengthKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_VignetteStrengthKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "VignetteStrengthKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String VignetteStrengthKey
void GlobalNamespace::UserSettings::_set_VignetteStrengthKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_VignetteStrengthKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "VignetteStrengthKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String NicknameKey
::StringW GlobalNamespace::UserSettings::_get_NicknameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_NicknameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "NicknameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String NicknameKey
void GlobalNamespace::UserSettings::_set_NicknameKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_NicknameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "NicknameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String BrickClickSoundsKey
::StringW GlobalNamespace::UserSettings::_get_BrickClickSoundsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_BrickClickSoundsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "BrickClickSoundsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String BrickClickSoundsKey
void GlobalNamespace::UserSettings::_set_BrickClickSoundsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_BrickClickSoundsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "BrickClickSoundsKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TutorialPlayedKey
::StringW GlobalNamespace::UserSettings::_get_TutorialPlayedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_TutorialPlayedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "TutorialPlayedKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String TutorialPlayedKey
void GlobalNamespace::UserSettings::_set_TutorialPlayedKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_TutorialPlayedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "TutorialPlayedKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String RecentRoomsKey
::StringW GlobalNamespace::UserSettings::_get_RecentRoomsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_RecentRoomsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "RecentRoomsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String RecentRoomsKey
void GlobalNamespace::UserSettings::_set_RecentRoomsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_RecentRoomsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "RecentRoomsKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String RenderDistanceKey
::StringW GlobalNamespace::UserSettings::_get_RenderDistanceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_RenderDistanceKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "RenderDistanceKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String RenderDistanceKey
void GlobalNamespace::UserSettings::_set_RenderDistanceKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_RenderDistanceKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "RenderDistanceKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PlayerScaleKey
::StringW GlobalNamespace::UserSettings::_get_PlayerScaleKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_PlayerScaleKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "PlayerScaleKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PlayerScaleKey
void GlobalNamespace::UserSettings::_set_PlayerScaleKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_PlayerScaleKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "PlayerScaleKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PushToTalkKey
::StringW GlobalNamespace::UserSettings::_get_PushToTalkKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_PushToTalkKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "PushToTalkKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PushToTalkKey
void GlobalNamespace::UserSettings::_set_PushToTalkKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_PushToTalkKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "PushToTalkKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PrimaryAvatarColorKey
::StringW GlobalNamespace::UserSettings::_get_PrimaryAvatarColorKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_PrimaryAvatarColorKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "PrimaryAvatarColorKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PrimaryAvatarColorKey
void GlobalNamespace::UserSettings::_set_PrimaryAvatarColorKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_PrimaryAvatarColorKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "PrimaryAvatarColorKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SecondaryAvatarColorKey
::StringW GlobalNamespace::UserSettings::_get_SecondaryAvatarColorKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_SecondaryAvatarColorKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "SecondaryAvatarColorKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String SecondaryAvatarColorKey
void GlobalNamespace::UserSettings::_set_SecondaryAvatarColorKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_SecondaryAvatarColorKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "SecondaryAvatarColorKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String AvatarMouthKey
::StringW GlobalNamespace::UserSettings::_get_AvatarMouthKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_AvatarMouthKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "AvatarMouthKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String AvatarMouthKey
void GlobalNamespace::UserSettings::_set_AvatarMouthKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_AvatarMouthKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "AvatarMouthKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String AvatarEyesKey
::StringW GlobalNamespace::UserSettings::_get_AvatarEyesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_AvatarEyesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "AvatarEyesKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String AvatarEyesKey
void GlobalNamespace::UserSettings::_set_AvatarEyesKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_AvatarEyesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "AvatarEyesKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String BrickShininessKey
::StringW GlobalNamespace::UserSettings::_get_BrickShininessKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_get_BrickShininessKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "UserSettings", "BrickShininessKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String BrickShininessKey
void GlobalNamespace::UserSettings::_set_BrickShininessKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::_set_BrickShininessKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserSettings", "BrickShininessKey", value));
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent TeleportTriggerEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_TeleportTriggerEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_TeleportTriggerEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportTriggerEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent MicrophoneEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_MicrophoneEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_MicrophoneEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent OtherPlayersMicrophonesEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_OtherPlayersMicrophonesEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_OtherPlayersMicrophonesEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OtherPlayersMicrophonesEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent PerformanceModeEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_PerformanceModeEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_PerformanceModeEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PerformanceModeEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent PlayMusicEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_PlayMusicEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_PlayMusicEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayMusicEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent SmoothRotationEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_SmoothRotationEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_SmoothRotationEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmoothRotationEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent BrickClickSoundsEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_BrickClickSoundsEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_BrickClickSoundsEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BrickClickSoundsEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableBoolEvent PushToTalkEnabledUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableBoolEvent*& GlobalNamespace::UserSettings::dyn_PushToTalkEnabledUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_PushToTalkEnabledUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PushToTalkEnabledUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableFloatEvent MusicVolumeUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableFloatEvent*& GlobalNamespace::UserSettings::dyn_MusicVolumeUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_MusicVolumeUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MusicVolumeUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableFloatEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableFloatEvent MovementSpeedUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableFloatEvent*& GlobalNamespace::UserSettings::dyn_MovementSpeedUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_MovementSpeedUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MovementSpeedUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableFloatEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableFloatEvent RotationSpeedUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableFloatEvent*& GlobalNamespace::UserSettings::dyn_RotationSpeedUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_RotationSpeedUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSpeedUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableFloatEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableFloatEvent VignetteStrengthUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableFloatEvent*& GlobalNamespace::UserSettings::dyn_VignetteStrengthUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_VignetteStrengthUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VignetteStrengthUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableFloatEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent RenderDistanceUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_RenderDistanceUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_RenderDistanceUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RenderDistanceUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent PlayerScaleUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_PlayerScaleUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_PlayerScaleUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerScaleUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent PrimaryAvatarColorUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_PrimaryAvatarColorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_PrimaryAvatarColorUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryAvatarColorUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent SecondaryAvatarColorUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_SecondaryAvatarColorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_SecondaryAvatarColorUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryAvatarColorUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent AvatarMouthUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_AvatarMouthUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_AvatarMouthUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvatarMouthUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent AvatarEyesUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_AvatarEyesUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_AvatarEyesUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvatarEyesUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableIntEvent BrickShininessUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableIntEvent*& GlobalNamespace::UserSettings::dyn_BrickShininessUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_BrickShininessUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BrickShininessUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings/SerializableStringEvent NicknameUpdated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings::SerializableStringEvent*& GlobalNamespace::UserSettings::dyn_NicknameUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::dyn_NicknameUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NicknameUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings::SerializableStringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UserSettings.get_TeleportTriggersEnabled
bool GlobalNamespace::UserSettings::get_TeleportTriggersEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_TeleportTriggersEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TeleportTriggersEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_TeleportTriggersEnabled
void GlobalNamespace::UserSettings::set_TeleportTriggersEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_TeleportTriggersEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TeleportTriggersEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_MicrophoneEnabled
bool GlobalNamespace::UserSettings::get_MicrophoneEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_MicrophoneEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophoneEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_MicrophoneEnabled
void GlobalNamespace::UserSettings::set_MicrophoneEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_MicrophoneEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicrophoneEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_OtherPlayersMicsEnabled
bool GlobalNamespace::UserSettings::get_OtherPlayersMicsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_OtherPlayersMicsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OtherPlayersMicsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_OtherPlayersMicsEnabled
void GlobalNamespace::UserSettings::set_OtherPlayersMicsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_OtherPlayersMicsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OtherPlayersMicsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_SuperUltraPerformanceMode
bool GlobalNamespace::UserSettings::get_SuperUltraPerformanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_SuperUltraPerformanceMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuperUltraPerformanceMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_SuperUltraPerformanceMode
void GlobalNamespace::UserSettings::set_SuperUltraPerformanceMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_SuperUltraPerformanceMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuperUltraPerformanceMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_PlayMusicEnabled
bool GlobalNamespace::UserSettings::get_PlayMusicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_PlayMusicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayMusicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_PlayMusicEnabled
void GlobalNamespace::UserSettings::set_PlayMusicEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_PlayMusicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayMusicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_SmoothRotationEnabled
bool GlobalNamespace::UserSettings::get_SmoothRotationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_SmoothRotationEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SmoothRotationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_SmoothRotationEnabled
void GlobalNamespace::UserSettings::set_SmoothRotationEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_SmoothRotationEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SmoothRotationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_MusicVolume
float GlobalNamespace::UserSettings::get_MusicVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_MusicVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MusicVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_MusicVolume
void GlobalNamespace::UserSettings::set_MusicVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_MusicVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MusicVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_MovementSpeed
float GlobalNamespace::UserSettings::get_MovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_MovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_MovementSpeed
void GlobalNamespace::UserSettings::set_MovementSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_MovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_RotationSpeed
float GlobalNamespace::UserSettings::get_RotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_RotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_RotationSpeed
void GlobalNamespace::UserSettings::set_RotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_RotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_VignetteStrength
float GlobalNamespace::UserSettings::get_VignetteStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_VignetteStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VignetteStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_VignetteStrength
void GlobalNamespace::UserSettings::set_VignetteStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_VignetteStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VignetteStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_Nickname
::StringW GlobalNamespace::UserSettings::get_Nickname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_Nickname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nickname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_Nickname
void GlobalNamespace::UserSettings::set_Nickname(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_Nickname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Nickname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_BrickClickSoundsEnabled
bool GlobalNamespace::UserSettings::get_BrickClickSoundsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_BrickClickSoundsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BrickClickSoundsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_BrickClickSoundsEnabled
void GlobalNamespace::UserSettings::set_BrickClickSoundsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_BrickClickSoundsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BrickClickSoundsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_TutorialPlayed
bool GlobalNamespace::UserSettings::get_TutorialPlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_TutorialPlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TutorialPlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_TutorialPlayed
void GlobalNamespace::UserSettings::set_TutorialPlayed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_TutorialPlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TutorialPlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_RecentRooms
::StringW GlobalNamespace::UserSettings::get_RecentRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_RecentRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecentRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.get_RenderDistance
int GlobalNamespace::UserSettings::get_RenderDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_RenderDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_RenderDistance
void GlobalNamespace::UserSettings::set_RenderDistance(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_RenderDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.set_RenderDistanceF
void GlobalNamespace::UserSettings::set_RenderDistanceF(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_RenderDistanceF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderDistanceF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_PlayerScale
int GlobalNamespace::UserSettings::get_PlayerScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_PlayerScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_PlayerScale
void GlobalNamespace::UserSettings::set_PlayerScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_PlayerScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.set_PlayerScaleF
void GlobalNamespace::UserSettings::set_PlayerScaleF(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_PlayerScaleF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerScaleF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_PushToTalkEnabled
bool GlobalNamespace::UserSettings::get_PushToTalkEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_PushToTalkEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PushToTalkEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_PushToTalkEnabled
void GlobalNamespace::UserSettings::set_PushToTalkEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_PushToTalkEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PushToTalkEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_PrimaryAvatarColor
int GlobalNamespace::UserSettings::get_PrimaryAvatarColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_PrimaryAvatarColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryAvatarColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_PrimaryAvatarColor
void GlobalNamespace::UserSettings::set_PrimaryAvatarColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_PrimaryAvatarColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryAvatarColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_SecondaryAvatarColor
int GlobalNamespace::UserSettings::get_SecondaryAvatarColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_SecondaryAvatarColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecondaryAvatarColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_SecondaryAvatarColor
void GlobalNamespace::UserSettings::set_SecondaryAvatarColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_SecondaryAvatarColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SecondaryAvatarColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_AvatarMouth
int GlobalNamespace::UserSettings::get_AvatarMouth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_AvatarMouth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvatarMouth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_AvatarMouth
void GlobalNamespace::UserSettings::set_AvatarMouth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_AvatarMouth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AvatarMouth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_AvatarEyes
int GlobalNamespace::UserSettings::get_AvatarEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_AvatarEyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvatarEyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_AvatarEyes
void GlobalNamespace::UserSettings::set_AvatarEyes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_AvatarEyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AvatarEyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.get_BrickShininess
int GlobalNamespace::UserSettings::get_BrickShininess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::get_BrickShininess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BrickShininess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.set_BrickShininess
void GlobalNamespace::UserSettings::set_BrickShininess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_BrickShininess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BrickShininess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.set_BrickShininessF
void GlobalNamespace::UserSettings::set_BrickShininessF(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::set_BrickShininessF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BrickShininessF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UserSettings.GetInstance
::GlobalNamespace::UserSettings* GlobalNamespace::UserSettings::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UserSettings", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UserSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UserSettings.Awake
void GlobalNamespace::UserSettings::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.Start
void GlobalNamespace::UserSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.InitializeSettings
void GlobalNamespace::UserSettings::InitializeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::InitializeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.SendInitialEvents
void GlobalNamespace::UserSettings::SendInitialEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::SendInitialEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInitialEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.SendNicknameToServerOnLoad
void GlobalNamespace::UserSettings::SendNicknameToServerOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::SendNicknameToServerOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNicknameToServerOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UserSettings.AddRecentRoom
void GlobalNamespace::UserSettings::AddRecentRoom(::StringW room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UserSettings::AddRecentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserSettings/SerializableBoolEvent
#include "GlobalNamespace/UserSettings_SerializableBoolEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserSettings/SerializableFloatEvent
#include "GlobalNamespace/UserSettings_SerializableFloatEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserSettings/SerializableStringEvent
#include "GlobalNamespace/UserSettings_SerializableStringEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserSettings/SerializableIntEvent
#include "GlobalNamespace/UserSettings_SerializableIntEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CoroutineWithData
#include "GlobalNamespace/CoroutineWithData.hpp"
// Including type: CoroutineWithData/<Run>d__7
#include "GlobalNamespace/CoroutineWithData_-Run-d__7.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine <coroutine>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::CoroutineWithData::dyn_$coroutine$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::dyn_$coroutine$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coroutine>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object result
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CoroutineWithData::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator target
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::CoroutineWithData::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CoroutineWithData.get_coroutine
::UnityEngine::Coroutine* GlobalNamespace::CoroutineWithData::get_coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::get_coroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method);
}
// Autogenerated method: CoroutineWithData.set_coroutine
void GlobalNamespace::CoroutineWithData::set_coroutine(::UnityEngine::Coroutine* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::set_coroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_coroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CoroutineWithData.Run
::System::Collections::IEnumerator* GlobalNamespace::CoroutineWithData::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CoroutineWithData/<Run>d__7
#include "GlobalNamespace/CoroutineWithData_-Run-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CoroutineWithData <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CoroutineWithData*& GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CoroutineWithData/<Run>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CoroutineWithData::$Run$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CoroutineWithData::$Run$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CoroutineWithData/<Run>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CoroutineWithData::$Run$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CoroutineWithData::$Run$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CoroutineWithData/<Run>d__7.System.IDisposable.Dispose
void GlobalNamespace::CoroutineWithData::$Run$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CoroutineWithData::$Run$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CoroutineWithData/<Run>d__7.MoveNext
bool GlobalNamespace::CoroutineWithData::$Run$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CoroutineWithData::$Run$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CoroutineWithData/<Run>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::CoroutineWithData::$Run$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CoroutineWithData::$Run$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CoroutineWithData::$Run$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomDisplayName
#include "GlobalNamespace/RoomDisplayName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RoomDisplayName.DisplayNameForRoomName
::StringW GlobalNamespace::RoomDisplayName::DisplayNameForRoomName(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomDisplayName::DisplayNameForRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomDisplayName", "DisplayNameForRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRSimulator
#include "GlobalNamespace/VRSimulator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject leftMenuHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn_leftMenuHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_leftMenuHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftMenuHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject rightMenuHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn_rightMenuHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_rightMenuHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightMenuHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject head
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lookSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn_lookSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_lookSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn_moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handMoveSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn_handMoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_handMoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handMoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn_playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,UnityEngine.Vector3> _handPositionOffsets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::UnityEngine::Vector3>*& GlobalNamespace::VRSimulator::dyn__handPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn__handPositionOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handPositionOffsets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,UnityEngine.Quaternion> _handRotationOffsets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::UnityEngine::Quaternion>*& GlobalNamespace::VRSimulator::dyn__handRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn__handRotationOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRotationOffsets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn__rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn__rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRSimulator::dyn__rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn__rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _currentlyControlledBodypart
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRSimulator::dyn__currentlyControlledBodypart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::dyn__currentlyControlledBodypart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyControlledBodypart"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRSimulator.Start
void GlobalNamespace::VRSimulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.OnEnable
void GlobalNamespace::VRSimulator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.OnDisable
void GlobalNamespace::VRSimulator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.Awake
void GlobalNamespace::VRSimulator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.ResetHands
void GlobalNamespace::VRSimulator::ResetHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::ResetHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.Update
void GlobalNamespace::VRSimulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.FixedUpdate
void GlobalNamespace::VRSimulator::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.Look
void GlobalNamespace::VRSimulator::Look() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::Look");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Look", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.Move
void GlobalNamespace::VRSimulator::Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRSimulator.WrapAngle
float GlobalNamespace::VRSimulator::WrapAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRSimulator::WrapAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRSimulator", "WrapAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VertexColorEditor
#include "GlobalNamespace/VertexColorEditor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::VertexColorEditor::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lastColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::VertexColorEditor::dyn__lastColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::dyn__lastColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 _lastColor32
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::VertexColorEditor::dyn__lastColor32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::dyn__lastColor32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastColor32"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VertexColorEditor.Start
void GlobalNamespace::VertexColorEditor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VertexColorEditor.Update
void GlobalNamespace::VertexColorEditor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VertexColorEditor.UpdateVertexColors
void GlobalNamespace::VertexColorEditor::UpdateVertexColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexColorEditor::UpdateVertexColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Wait
#include "GlobalNamespace/Wait.hpp"
// Including type: Wait/<ForFramesIEnum>d__6
#include "GlobalNamespace/Wait_-ForFramesIEnum-d__6.hpp"
// Including type: Wait/<UntilIEnum>d__7
#include "GlobalNamespace/Wait_-UntilIEnum-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Wait _instance
::GlobalNamespace::Wait* GlobalNamespace::Wait::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Wait*>("", "Wait", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Wait _instance
void GlobalNamespace::Wait::_set__instance(::GlobalNamespace::Wait* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Wait", "_instance", value));
}
// Autogenerated method: Wait.GetInstance
::GlobalNamespace::Wait* GlobalNamespace::Wait::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Wait", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Wait*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Wait.ForFrames
void GlobalNamespace::Wait::ForFrames(int frames, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::ForFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Wait", "ForFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, function);
}
// Autogenerated method: Wait.Until
void GlobalNamespace::Wait::Until(::System::Func_1<bool>* until, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::Until");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Wait", "Until", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(until), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, until, function);
}
// Autogenerated method: Wait.ForFramesInstance
void GlobalNamespace::Wait::ForFramesInstance(int frames, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::ForFramesInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForFramesInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frames, function);
}
// Autogenerated method: Wait.UntilInstance
void GlobalNamespace::Wait::UntilInstance(::System::Func_1<bool>* until, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::UntilInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UntilInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(until), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, until, function);
}
// Autogenerated method: Wait.ForFramesIEnum
::System::Collections::IEnumerator* GlobalNamespace::Wait::ForFramesIEnum(int frames, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::ForFramesIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Wait", "ForFramesIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(function)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, function);
}
// Autogenerated method: Wait.UntilIEnum
::System::Collections::IEnumerator* GlobalNamespace::Wait::UntilIEnum(::System::Func_1<bool>* until, ::System::Action* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::UntilIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Wait", "UntilIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(until), ::il2cpp_utils::ExtractType(function)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, until, function);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Wait/<ForFramesIEnum>d__6
#include "GlobalNamespace/Wait_-ForFramesIEnum-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frames
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action function
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_function");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "function"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Wait/<ForFramesIEnum>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::Wait::$ForFramesIEnum$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$ForFramesIEnum$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<ForFramesIEnum>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::Wait::$ForFramesIEnum$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$ForFramesIEnum$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<ForFramesIEnum>d__6.System.IDisposable.Dispose
void GlobalNamespace::Wait::$ForFramesIEnum$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$ForFramesIEnum$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<ForFramesIEnum>d__6.MoveNext
bool GlobalNamespace::Wait::$ForFramesIEnum$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$ForFramesIEnum$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<ForFramesIEnum>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::Wait::$ForFramesIEnum$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$ForFramesIEnum$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$ForFramesIEnum$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Wait/<UntilIEnum>d__7
#include "GlobalNamespace/Wait_-UntilIEnum-d__7.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Boolean> until
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_until() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_until");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "until"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action function
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::dyn_function");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "function"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Wait/<UntilIEnum>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::Wait::$UntilIEnum$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$UntilIEnum$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<UntilIEnum>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::Wait::$UntilIEnum$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$UntilIEnum$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<UntilIEnum>d__7.System.IDisposable.Dispose
void GlobalNamespace::Wait::$UntilIEnum$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$UntilIEnum$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<UntilIEnum>d__7.MoveNext
bool GlobalNamespace::Wait::$UntilIEnum$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$UntilIEnum$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Wait/<UntilIEnum>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::Wait::$UntilIEnum$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Wait::$UntilIEnum$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Wait::$UntilIEnum$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: XRDropWhenNotOwned
#include "GlobalNamespace/XRDropWhenNotOwned.hpp"
// Including type: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8
#include "GlobalNamespace/XRDropWhenNotOwned_-DelayedReEnableInteractable-d__8.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable _interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*& GlobalNamespace::XRDropWhenNotOwned::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor _interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& GlobalNamespace::XRDropWhenNotOwned::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransform _realtimeTransform
[[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeTransform*& GlobalNamespace::XRDropWhenNotOwned::dyn__realtimeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::dyn__realtimeTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeTransform"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _held
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::XRDropWhenNotOwned::dyn__held() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::dyn__held");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_held"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: XRDropWhenNotOwned.Awake
void GlobalNamespace::XRDropWhenNotOwned::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned.ObjectGrabbed
void GlobalNamespace::XRDropWhenNotOwned::ObjectGrabbed(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::ObjectGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObjectGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: XRDropWhenNotOwned.ObjectDropped
void GlobalNamespace::XRDropWhenNotOwned::ObjectDropped(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::ObjectDropped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObjectDropped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: XRDropWhenNotOwned.Update
void GlobalNamespace::XRDropWhenNotOwned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned.DelayedReEnableInteractable
::System::Collections::IEnumerator* GlobalNamespace::XRDropWhenNotOwned::DelayedReEnableInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::DelayedReEnableInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "XRDropWhenNotOwned", "DelayedReEnableInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8
#include "GlobalNamespace/XRDropWhenNotOwned_-DelayedReEnableInteractable-d__8.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::dyn_interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8.System.IDisposable.Dispose
void GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8.MoveNext
bool GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: XRDropWhenNotOwned/<DelayedReEnableInteractable>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::XRDropWhenNotOwned::$DelayedReEnableInteractable$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
