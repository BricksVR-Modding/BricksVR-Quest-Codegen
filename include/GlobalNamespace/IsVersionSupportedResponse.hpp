// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IsVersionSupportedResponse
  class IsVersionSupportedResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IsVersionSupportedResponse);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IsVersionSupportedResponse*, "", "IsVersionSupportedResponse");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: IsVersionSupportedResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class IsVersionSupportedResponse : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public System.Boolean supported
    // Size: 0x1
    // Offset: 0x10
    bool supported;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return supported;
    }
    // Get instance field reference: public System.Boolean supported
    bool& dyn_supported();
    // public System.Void .ctor()
    // Offset: 0x10AB234
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IsVersionSupportedResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IsVersionSupportedResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IsVersionSupportedResponse*, creationType>()));
    }
  }; // IsVersionSupportedResponse
  #pragma pack(pop)
  static check_size<sizeof(IsVersionSupportedResponse), 16 + sizeof(bool)> __GlobalNamespace_IsVersionSupportedResponseSizeCheck;
  static_assert(sizeof(IsVersionSupportedResponse) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IsVersionSupportedResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
