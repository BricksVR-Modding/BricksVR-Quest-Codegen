// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: IModel
  class IModel;
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeModel
  class RealtimeModel;
}
// Completed forward declares
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: CollectionUtilities
  class CollectionUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::CollectionUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::CollectionUtilities*, "Normal.Realtime", "CollectionUtilities");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.CollectionUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class CollectionUtilities : public ::Il2CppObject {
    public:
    // static System.Void SetParentOnIModel(Normal.Realtime.Serialization.IModel child, Normal.Realtime.RealtimeModel parent)
    // Offset: 0x8B6A50
    static void SetParentOnIModel(::Normal::Realtime::Serialization::IModel* child, ::Normal::Realtime::RealtimeModel* parent);
  }; // Normal.Realtime.CollectionUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::CollectionUtilities::SetParentOnIModel
// Il2CppName: SetParentOnIModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Normal::Realtime::Serialization::IModel*, ::Normal::Realtime::RealtimeModel*)>(&Normal::Realtime::CollectionUtilities::SetParentOnIModel)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "IModel")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::CollectionUtilities*), "SetParentOnIModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child, parent});
  }
};
