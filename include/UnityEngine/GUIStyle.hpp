// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUIStyleState
  class GUIStyleState;
  // Forward declaring type: RectOffset
  class RectOffset;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: GUIContent
  class GUIContent;
  // Forward declaring type: Font
  class Font;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUIStyle
  class GUIStyle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::GUIStyle);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::GUIStyle*, "UnityEngine", "GUIStyle");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x80
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.GUIStyle
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6F94B4
  // [RequiredByNativeCodeAttribute] Offset: 6F94B4
  // [NativeHeaderAttribute] Offset: 6F94B4
  class GUIStyle : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private UnityEngine.GUIStyleState m_Normal
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GUIStyleState* m_Normal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_Hover
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GUIStyleState* m_Hover;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_Active
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GUIStyleState* m_Active;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_Focused
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GUIStyleState* m_Focused;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_OnNormal
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GUIStyleState* m_OnNormal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_OnHover
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GUIStyleState* m_OnHover;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_OnActive
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GUIStyleState* m_OnActive;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.GUIStyleState m_OnFocused
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GUIStyleState* m_OnFocused;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyleState*) == 0x8);
    // private UnityEngine.RectOffset m_Border
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::RectOffset* m_Border;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectOffset*) == 0x8);
    // private UnityEngine.RectOffset m_Padding
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::RectOffset* m_Padding;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectOffset*) == 0x8);
    // private UnityEngine.RectOffset m_Margin
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::RectOffset* m_Margin;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectOffset*) == 0x8);
    // private UnityEngine.RectOffset m_Overflow
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::RectOffset* m_Overflow;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectOffset*) == 0x8);
    // private System.String m_Name
    // Size: 0x8
    // Offset: 0x78
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get static field: static System.Boolean showKeyboardFocus
    static bool _get_showKeyboardFocus();
    // Set static field: static System.Boolean showKeyboardFocus
    static void _set_showKeyboardFocus(bool value);
    // Get static field: static private UnityEngine.GUIStyle s_None
    static ::UnityEngine::GUIStyle* _get_s_None();
    // Set static field: static private UnityEngine.GUIStyle s_None
    static void _set_s_None(::UnityEngine::GUIStyle* value);
    // Get instance field reference: System.IntPtr m_Ptr
    ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: private UnityEngine.GUIStyleState m_Normal
    ::UnityEngine::GUIStyleState*& dyn_m_Normal();
    // Get instance field reference: private UnityEngine.GUIStyleState m_Hover
    ::UnityEngine::GUIStyleState*& dyn_m_Hover();
    // Get instance field reference: private UnityEngine.GUIStyleState m_Active
    ::UnityEngine::GUIStyleState*& dyn_m_Active();
    // Get instance field reference: private UnityEngine.GUIStyleState m_Focused
    ::UnityEngine::GUIStyleState*& dyn_m_Focused();
    // Get instance field reference: private UnityEngine.GUIStyleState m_OnNormal
    ::UnityEngine::GUIStyleState*& dyn_m_OnNormal();
    // Get instance field reference: private UnityEngine.GUIStyleState m_OnHover
    ::UnityEngine::GUIStyleState*& dyn_m_OnHover();
    // Get instance field reference: private UnityEngine.GUIStyleState m_OnActive
    ::UnityEngine::GUIStyleState*& dyn_m_OnActive();
    // Get instance field reference: private UnityEngine.GUIStyleState m_OnFocused
    ::UnityEngine::GUIStyleState*& dyn_m_OnFocused();
    // Get instance field reference: private UnityEngine.RectOffset m_Border
    ::UnityEngine::RectOffset*& dyn_m_Border();
    // Get instance field reference: private UnityEngine.RectOffset m_Padding
    ::UnityEngine::RectOffset*& dyn_m_Padding();
    // Get instance field reference: private UnityEngine.RectOffset m_Margin
    ::UnityEngine::RectOffset*& dyn_m_Margin();
    // Get instance field reference: private UnityEngine.RectOffset m_Overflow
    ::UnityEngine::RectOffset*& dyn_m_Overflow();
    // Get instance field reference: private System.String m_Name
    ::StringW& dyn_m_Name();
    // System.String get_rawName()
    // Offset: 0xFFEB40
    ::StringW get_rawName();
    // System.Void set_rawName(System.String value)
    // Offset: 0xFFEB80
    void set_rawName(::StringW value);
    // public System.Single get_fixedWidth()
    // Offset: 0xFF8F3C
    float get_fixedWidth();
    // public System.Single get_fixedHeight()
    // Offset: 0xFF8FBC
    float get_fixedHeight();
    // public System.Boolean get_stretchWidth()
    // Offset: 0xFF8F7C
    bool get_stretchWidth();
    // public System.Boolean get_stretchHeight()
    // Offset: 0xFF8FFC
    bool get_stretchHeight();
    // public System.Void set_stretchHeight(System.Boolean value)
    // Offset: 0xFFE3E4
    void set_stretchHeight(bool value);
    // public System.String get_name()
    // Offset: 0xFF98C0
    ::StringW get_name();
    // public System.Void set_name(System.String value)
    // Offset: 0xFFD694
    void set_name(::StringW value);
    // public UnityEngine.GUIStyleState get_normal()
    // Offset: 0xFFE434
    ::UnityEngine::GUIStyleState* get_normal();
    // public UnityEngine.RectOffset get_margin()
    // Offset: 0xFF8AE8
    ::UnityEngine::RectOffset* get_margin();
    // public UnityEngine.RectOffset get_padding()
    // Offset: 0xFFA374
    ::UnityEngine::RectOffset* get_padding();
    // static public UnityEngine.GUIStyle get_none()
    // Offset: 0xFF813C
    static ::UnityEngine::GUIStyle* get_none();
    // static private System.Void .cctor()
    // Offset: 0xFFF25C
    static void _cctor();
    // static private System.IntPtr Internal_Create(UnityEngine.GUIStyle self)
    // Offset: 0xFFEBD0
    static ::System::IntPtr Internal_Create(::UnityEngine::GUIStyle* self);
    // static private System.Void Internal_Destroy(System.IntPtr self)
    // Offset: 0xFFEC10
    static void Internal_Destroy(::System::IntPtr self);
    // private System.IntPtr GetStyleStatePtr(System.Int32 idx)
    // Offset: 0xFFEC50
    ::System::IntPtr GetStyleStatePtr(int idx);
    // private System.IntPtr GetRectOffsetPtr(System.Int32 idx)
    // Offset: 0xFFECA0
    ::System::IntPtr GetRectOffsetPtr(int idx);
    // private System.Void Internal_Draw(UnityEngine.Rect screenRect, UnityEngine.GUIContent content, System.Boolean isHover, System.Boolean isActive, System.Boolean on, System.Boolean hasKeyboardFocus)
    // Offset: 0xFFECF0
    void Internal_Draw(::UnityEngine::Rect screenRect, ::UnityEngine::GUIContent* content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
    // private System.Void Internal_Draw2(UnityEngine.Rect position, UnityEngine.GUIContent content, System.Int32 controlID, System.Boolean on)
    // Offset: 0xFFEE10
    void Internal_Draw2(::UnityEngine::Rect position, ::UnityEngine::GUIContent* content, int controlID, bool on);
    // static System.Void SetDefaultFont(UnityEngine.Font font)
    // Offset: 0xFFD370
    static void SetDefaultFont(::UnityEngine::Font* font);
    // public System.Void Draw(UnityEngine.Rect position, UnityEngine.GUIContent content, System.Int32 controlID, System.Boolean on, System.Boolean hover)
    // Offset: 0xFF769C
    void Draw(::UnityEngine::Rect position, ::UnityEngine::GUIContent* content, int controlID, bool on, bool hover);
    // private System.Void Draw(UnityEngine.Rect position, UnityEngine.GUIContent content, System.Int32 controlId, System.Boolean isHover, System.Boolean isActive, System.Boolean on, System.Boolean hasKeyboardFocus)
    // Offset: 0xFFF148
    void Draw(::UnityEngine::Rect position, ::UnityEngine::GUIContent* content, int controlId, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
    // private System.Void Internal_Draw_Injected(ref UnityEngine.Rect screenRect, UnityEngine.GUIContent content, System.Boolean isHover, System.Boolean isActive, System.Boolean on, System.Boolean hasKeyboardFocus)
    // Offset: 0xFFED88
    void Internal_Draw_Injected(ByRef<::UnityEngine::Rect> screenRect, ::UnityEngine::GUIContent* content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
    // private System.Void Internal_Draw2_Injected(ref UnityEngine.Rect position, UnityEngine.GUIContent content, System.Int32 controlID, System.Boolean on)
    // Offset: 0xFFEE90
    void Internal_Draw2_Injected(ByRef<::UnityEngine::Rect> position, ::UnityEngine::GUIContent* content, int controlID, bool on);
    // public System.Void .ctor()
    // Offset: 0xFFD5FC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GUIStyle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GUIStyle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GUIStyle*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0xFFEF00
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // public override System.String ToString()
    // Offset: 0xFFF16C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.GUIStyle
  #pragma pack(pop)
  static check_size<sizeof(GUIStyle), 120 + sizeof(::StringW)> __UnityEngine_GUIStyleSizeCheck;
  static_assert(sizeof(GUIStyle) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_rawName
// Il2CppName: get_rawName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_rawName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_rawName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::set_rawName
// Il2CppName: set_rawName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::StringW)>(&UnityEngine::GUIStyle::set_rawName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "set_rawName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_fixedWidth
// Il2CppName: get_fixedWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_fixedWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_fixedWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_fixedHeight
// Il2CppName: get_fixedHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_fixedHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_fixedHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_stretchWidth
// Il2CppName: get_stretchWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_stretchWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_stretchWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_stretchHeight
// Il2CppName: get_stretchHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_stretchHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_stretchHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::set_stretchHeight
// Il2CppName: set_stretchHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(bool)>(&UnityEngine::GUIStyle::set_stretchHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "set_stretchHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::StringW)>(&UnityEngine::GUIStyle::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_normal
// Il2CppName: get_normal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GUIStyleState* (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_normal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_normal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_margin
// Il2CppName: get_margin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectOffset* (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_margin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_margin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_padding
// Il2CppName: get_padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectOffset* (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::get_padding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::get_none
// Il2CppName: get_none
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GUIStyle* (*)()>(&UnityEngine::GUIStyle::get_none)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "get_none", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::GUIStyle::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::UnityEngine::GUIStyle*)>(&UnityEngine::GUIStyle::Internal_Create)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::GUIStyle::Internal_Destroy)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::GetStyleStatePtr
// Il2CppName: GetStyleStatePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (UnityEngine::GUIStyle::*)(int)>(&UnityEngine::GUIStyle::GetStyleStatePtr)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "GetStyleStatePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::GetRectOffsetPtr
// Il2CppName: GetRectOffsetPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (UnityEngine::GUIStyle::*)(int)>(&UnityEngine::GUIStyle::GetRectOffsetPtr)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "GetRectOffsetPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Draw
// Il2CppName: Internal_Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::UnityEngine::Rect, ::UnityEngine::GUIContent*, bool, bool, bool, bool)>(&UnityEngine::GUIStyle::Internal_Draw)> {
  static const MethodInfo* get() {
    static auto* screenRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* isHover = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hasKeyboardFocus = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenRect, content, isHover, isActive, on, hasKeyboardFocus});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Draw2
// Il2CppName: Internal_Draw2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::UnityEngine::Rect, ::UnityEngine::GUIContent*, int, bool)>(&UnityEngine::GUIStyle::Internal_Draw2)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* controlID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Draw2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, content, controlID, on});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::SetDefaultFont
// Il2CppName: SetDefaultFont
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Font*)>(&UnityEngine::GUIStyle::SetDefaultFont)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "SetDefaultFont", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Draw
// Il2CppName: Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::UnityEngine::Rect, ::UnityEngine::GUIContent*, int, bool, bool)>(&UnityEngine::GUIStyle::Draw)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* controlID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hover = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, content, controlID, on, hover});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Draw
// Il2CppName: Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(::UnityEngine::Rect, ::UnityEngine::GUIContent*, int, bool, bool, bool, bool)>(&UnityEngine::GUIStyle::Draw)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* controlId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isHover = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hasKeyboardFocus = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, content, controlId, isHover, isActive, on, hasKeyboardFocus});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Draw_Injected
// Il2CppName: Internal_Draw_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(ByRef<::UnityEngine::Rect>, ::UnityEngine::GUIContent*, bool, bool, bool, bool)>(&UnityEngine::GUIStyle::Internal_Draw_Injected)> {
  static const MethodInfo* get() {
    static auto* screenRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* isHover = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isActive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hasKeyboardFocus = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Draw_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenRect, content, isHover, isActive, on, hasKeyboardFocus});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Internal_Draw2_Injected
// Il2CppName: Internal_Draw2_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)(ByRef<::UnityEngine::Rect>, ::UnityEngine::GUIContent*, int, bool)>(&UnityEngine::GUIStyle::Internal_Draw2_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIContent")->byval_arg;
    static auto* controlID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Internal_Draw2_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, content, controlID, on});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::GUIStyle::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIStyle::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::GUIStyle::*)()>(&UnityEngine::GUIStyle::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIStyle*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
