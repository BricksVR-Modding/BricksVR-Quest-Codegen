// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: AdvancedColorPicker.RGBColor
#include "AdvancedColorPicker/RGBColor.hpp"
// Including type: AdvancedColorPicker.HSVColor
#include "AdvancedColorPicker/HSVColor.hpp"
// Including type: AdvancedColorPicker.HSLColor
#include "AdvancedColorPicker/HSLColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Skipping declaration: ColorType because it is already included!
  // Forward declaring type: ColorValueType
  struct ColorValueType;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Color32
  struct Color32;
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorPicker
  class ColorPicker;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorPicker);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorPicker*, "AdvancedColorPicker", "ColorPicker");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorPicker
  // [TokenAttribute] Offset: FFFFFFFF
  class ColorPicker : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::AdvancedColorPicker::ColorPicker::ColorChangedEvent
    class ColorChangedEvent;
    public:
    // private AdvancedColorPicker.RGBColor rgbColor
    // Size: 0x18
    // Offset: 0x18
    ::AdvancedColorPicker::RGBColor rgbColor;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::RGBColor) == 0x18);
    // private AdvancedColorPicker.HSVColor hsvColor
    // Size: 0x18
    // Offset: 0x30
    ::AdvancedColorPicker::HSVColor hsvColor;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::HSVColor) == 0x18);
    // private AdvancedColorPicker.HSLColor hslColor
    // Size: 0x18
    // Offset: 0x48
    ::AdvancedColorPicker::HSLColor hslColor;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::HSLColor) == 0x18);
    // private System.Byte _alpha
    // Size: 0x1
    // Offset: 0x60
    uint8_t alpha;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: alpha and: OnColorChanged
    char __padding3[0x7] = {};
    // public AdvancedColorPicker.ColorPicker/AdvancedColorPicker.ColorChangedEvent OnColorChanged
    // Size: 0x8
    // Offset: 0x68
    ::AdvancedColorPicker::ColorPicker::ColorChangedEvent* OnColorChanged;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorPicker::ColorChangedEvent*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private AdvancedColorPicker.RGBColor rgbColor
    [[deprecated]] ::AdvancedColorPicker::RGBColor& dyn_rgbColor();
    // Get instance field reference: private AdvancedColorPicker.HSVColor hsvColor
    [[deprecated]] ::AdvancedColorPicker::HSVColor& dyn_hsvColor();
    // Get instance field reference: private AdvancedColorPicker.HSLColor hslColor
    [[deprecated]] ::AdvancedColorPicker::HSLColor& dyn_hslColor();
    // Get instance field reference: private System.Byte _alpha
    [[deprecated]] uint8_t& dyn__alpha();
    // Get instance field reference: public AdvancedColorPicker.ColorPicker/AdvancedColorPicker.ColorChangedEvent OnColorChanged
    [[deprecated]] ::AdvancedColorPicker::ColorPicker::ColorChangedEvent*& dyn_OnColorChanged();
    // public UnityEngine.Color get_CurrentColor()
    // Offset: 0x5AC820
    ::UnityEngine::Color get_CurrentColor();
    // public System.Void set_CurrentColor(UnityEngine.Color value)
    // Offset: 0x5AC980
    void set_CurrentColor(::UnityEngine::Color value);
    // public AdvancedColorPicker.RGBColor get_rgb()
    // Offset: 0x5AC8A0
    ::AdvancedColorPicker::RGBColor get_rgb();
    // public System.Void set_rgb(AdvancedColorPicker.RGBColor value)
    // Offset: 0x5ACD40
    void set_rgb(::AdvancedColorPicker::RGBColor value);
    // public AdvancedColorPicker.HSVColor get_hsv()
    // Offset: 0x5AC880
    ::AdvancedColorPicker::HSVColor get_hsv();
    // public System.Void set_hsv(AdvancedColorPicker.HSVColor value)
    // Offset: 0x5ACBF0
    void set_hsv(::AdvancedColorPicker::HSVColor value);
    // public AdvancedColorPicker.HSLColor get_hsl()
    // Offset: 0x5AC860
    ::AdvancedColorPicker::HSLColor get_hsl();
    // public System.Void set_hsl(AdvancedColorPicker.HSLColor value)
    // Offset: 0x5ACAA0
    void set_hsl(::AdvancedColorPicker::HSLColor value);
    // public System.Byte get_Alpha()
    // Offset: 0x285420
    uint8_t get_Alpha();
    // public System.Void set_Alpha(System.Byte value)
    // Offset: 0x5AC970
    void set_Alpha(uint8_t value);
    // public System.Single get_AlphaNormalized()
    // Offset: 0x5AC800
    float get_AlphaNormalized();
    // public System.Void set_AlphaNormalized(System.Single value)
    // Offset: 0x5AC8C0
    void set_AlphaNormalized(float value);
    // private System.Void RGBChanged()
    // Offset: 0x5AC200
    void RGBChanged();
    // private System.Void HSVChanged()
    // Offset: 0x5AC110
    void HSVChanged();
    // private System.Void HSLChanged()
    // Offset: 0x5AC020
    void HSLChanged();
    // private System.Void SendChangedEvent()
    // Offset: 0x5AC2B0
    void SendChangedEvent();
    // public System.Single GetValueNormalized(AdvancedColorPicker.ColorType type)
    // Offset: 0x5AB9D0
    float GetValueNormalized(::AdvancedColorPicker::ColorType type);
    // public System.Single GetValueNormalized(AdvancedColorPicker.ColorValueType type)
    // Offset: 0x5AB9E0
    float GetValueNormalized(::AdvancedColorPicker::ColorValueType type);
    // public System.Void SetValueNormalized(AdvancedColorPicker.ColorType type, System.Single value)
    // Offset: 0x5AC740
    void SetValueNormalized(::AdvancedColorPicker::ColorType type, float value);
    // public System.Void SetValueNormalized(AdvancedColorPicker.ColorValueType type, System.Single value)
    // Offset: 0x5AC330
    void SetValueNormalized(::AdvancedColorPicker::ColorValueType type, float value);
    // static public UnityEngine.Color32 GetValue(AdvancedColorPicker.ColorType type1, System.Single value1, AdvancedColorPicker.ColorType type2, System.Single value2, AdvancedColorPicker.ColorType type3, System.Single value3, System.Byte alphaValue)
    // Offset: 0x5ABB90
    static ::UnityEngine::Color32 GetValue(::AdvancedColorPicker::ColorType type1, float value1, ::AdvancedColorPicker::ColorType type2, float value2, ::AdvancedColorPicker::ColorType type3, float value3, uint8_t alphaValue);
    // public System.Void .ctor()
    // Offset: 0x5AC750
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorPicker* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorPicker::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorPicker*, creationType>()));
    }
  }; // AdvancedColorPicker.ColorPicker
  #pragma pack(pop)
  static check_size<sizeof(ColorPicker), 104 + sizeof(::AdvancedColorPicker::ColorPicker::ColorChangedEvent*)> __AdvancedColorPicker_ColorPickerSizeCheck;
  static_assert(sizeof(ColorPicker) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_CurrentColor
// Il2CppName: get_CurrentColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_CurrentColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_CurrentColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_CurrentColor
// Il2CppName: set_CurrentColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::UnityEngine::Color)>(&AdvancedColorPicker::ColorPicker::set_CurrentColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_CurrentColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_rgb
// Il2CppName: get_rgb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::RGBColor (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_rgb)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_rgb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_rgb
// Il2CppName: set_rgb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::RGBColor)>(&AdvancedColorPicker::ColorPicker::set_rgb)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "RGBColor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_rgb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_hsv
// Il2CppName: get_hsv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::HSVColor (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_hsv)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_hsv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_hsv
// Il2CppName: set_hsv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::HSVColor)>(&AdvancedColorPicker::ColorPicker::set_hsv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "HSVColor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_hsv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_hsl
// Il2CppName: get_hsl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::HSLColor (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_hsl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_hsl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_hsl
// Il2CppName: set_hsl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::HSLColor)>(&AdvancedColorPicker::ColorPicker::set_hsl)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "HSLColor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_hsl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_Alpha
// Il2CppName: get_Alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_Alpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_Alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_Alpha
// Il2CppName: set_Alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(uint8_t)>(&AdvancedColorPicker::ColorPicker::set_Alpha)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_Alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::get_AlphaNormalized
// Il2CppName: get_AlphaNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::get_AlphaNormalized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "get_AlphaNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::set_AlphaNormalized
// Il2CppName: set_AlphaNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(float)>(&AdvancedColorPicker::ColorPicker::set_AlphaNormalized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "set_AlphaNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::RGBChanged
// Il2CppName: RGBChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::RGBChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "RGBChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::HSVChanged
// Il2CppName: HSVChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::HSVChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "HSVChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::HSLChanged
// Il2CppName: HSLChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::HSLChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "HSLChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::SendChangedEvent
// Il2CppName: SendChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)()>(&AdvancedColorPicker::ColorPicker::SendChangedEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "SendChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::GetValueNormalized
// Il2CppName: GetValueNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::ColorType)>(&AdvancedColorPicker::ColorPicker::GetValueNormalized)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "GetValueNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::GetValueNormalized
// Il2CppName: GetValueNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::ColorValueType)>(&AdvancedColorPicker::ColorPicker::GetValueNormalized)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorValueType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "GetValueNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::SetValueNormalized
// Il2CppName: SetValueNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::ColorType, float)>(&AdvancedColorPicker::ColorPicker::SetValueNormalized)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "SetValueNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::SetValueNormalized
// Il2CppName: SetValueNormalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorPicker::*)(::AdvancedColorPicker::ColorValueType, float)>(&AdvancedColorPicker::ColorPicker::SetValueNormalized)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorValueType")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "SetValueNormalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (*)(::AdvancedColorPicker::ColorType, float, ::AdvancedColorPicker::ColorType, float, ::AdvancedColorPicker::ColorType, float, uint8_t)>(&AdvancedColorPicker::ColorPicker::GetValue)> {
  static const MethodInfo* get() {
    static auto* type1 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    static auto* value1 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* type2 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    static auto* value2 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* type3 = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorType")->byval_arg;
    static auto* value3 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* alphaValue = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorPicker*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type1, value1, type2, value2, type3, value3, alphaValue});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorPicker::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
